<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="805.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="86556"><g><title>___pthread_cond_timedwait64 (32 samples, 0.04%)</title><rect x="0.0092%" y="661" width="0.0370%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="32"/><text x="0.2592%" y="671.50"></text></g><g><title>__pthread_cond_wait_common (32 samples, 0.04%)</title><rect x="0.0092%" y="645" width="0.0370%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="32"/><text x="0.2592%" y="655.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (32 samples, 0.04%)</title><rect x="0.0092%" y="629" width="0.0370%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="32"/><text x="0.2592%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (32 samples, 0.04%)</title><rect x="0.0092%" y="613" width="0.0370%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="32"/><text x="0.2592%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common64 (32 samples, 0.04%)</title><rect x="0.0092%" y="597" width="0.0370%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="32"/><text x="0.2592%" y="607.50"></text></g><g><title>[unknown] (31 samples, 0.04%)</title><rect x="0.0104%" y="581" width="0.0358%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="31"/><text x="0.2604%" y="591.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="0.0116%" y="565" width="0.0347%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="30"/><text x="0.2616%" y="575.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="0.0116%" y="549" width="0.0347%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="30"/><text x="0.2616%" y="559.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="0.0127%" y="533" width="0.0335%" height="15" fill="rgb(218,30,26)" fg:x="11" fg:w="29"/><text x="0.2627%" y="543.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="0.0127%" y="517" width="0.0335%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="29"/><text x="0.2627%" y="527.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="0.0162%" y="501" width="0.0300%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="26"/><text x="0.2662%" y="511.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="0.0162%" y="485" width="0.0300%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="26"/><text x="0.2662%" y="495.50"></text></g><g><title>[unknown] (24 samples, 0.03%)</title><rect x="0.0185%" y="469" width="0.0277%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="24"/><text x="0.2685%" y="479.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="0.0196%" y="453" width="0.0266%" height="15" fill="rgb(206,188,39)" fg:x="17" fg:w="23"/><text x="0.2696%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.0243%" y="437" width="0.0220%" height="15" fill="rgb(217,207,13)" fg:x="21" fg:w="19"/><text x="0.2743%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.0243%" y="421" width="0.0220%" height="15" fill="rgb(231,73,38)" fg:x="21" fg:w="19"/><text x="0.2743%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0266%" y="405" width="0.0196%" height="15" fill="rgb(225,20,46)" fg:x="23" fg:w="17"/><text x="0.2766%" y="415.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0266%" y="389" width="0.0196%" height="15" fill="rgb(210,31,41)" fg:x="23" fg:w="17"/><text x="0.2766%" y="399.50"></text></g><g><title>[vkrt]_Analysis (37 samples, 0.04%)</title><rect x="0.0069%" y="757" width="0.0427%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="37"/><text x="0.2569%" y="767.50"></text></g><g><title>__clone3 (36 samples, 0.04%)</title><rect x="0.0081%" y="741" width="0.0416%" height="15" fill="rgb(226,26,5)" fg:x="7" fg:w="36"/><text x="0.2581%" y="751.50"></text></g><g><title>start_thread (36 samples, 0.04%)</title><rect x="0.0081%" y="725" width="0.0416%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="36"/><text x="0.2581%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.04%)</title><rect x="0.0081%" y="709" width="0.0416%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="36"/><text x="0.2581%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.04%)</title><rect x="0.0081%" y="693" width="0.0416%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="36"/><text x="0.2581%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.04%)</title><rect x="0.0081%" y="677" width="0.0416%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="36"/><text x="0.2581%" y="687.50"></text></g><g><title>[anon] (13 samples, 0.02%)</title><rect x="0.0543%" y="741" width="0.0150%" height="15" fill="rgb(241,131,45)" fg:x="47" fg:w="13"/><text x="0.3043%" y="751.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.0728%" y="741" width="0.0220%" height="15" fill="rgb(249,31,29)" fg:x="63" fg:w="19"/><text x="0.3228%" y="751.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (13 samples, 0.02%)</title><rect x="0.1005%" y="485" width="0.0150%" height="15" fill="rgb(225,111,53)" fg:x="87" fg:w="13"/><text x="0.3505%" y="495.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (12 samples, 0.01%)</title><rect x="0.1017%" y="469" width="0.0139%" height="15" fill="rgb(238,160,17)" fg:x="88" fg:w="12"/><text x="0.3517%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (12 samples, 0.01%)</title><rect x="0.1017%" y="453" width="0.0139%" height="15" fill="rgb(214,148,48)" fg:x="88" fg:w="12"/><text x="0.3517%" y="463.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (11 samples, 0.01%)</title><rect x="0.1028%" y="437" width="0.0127%" height="15" fill="rgb(232,36,49)" fg:x="89" fg:w="11"/><text x="0.3528%" y="447.50"></text></g><g><title>alsa::pcm::PCM::status (15 samples, 0.02%)</title><rect x="0.1213%" y="485" width="0.0173%" height="15" fill="rgb(209,103,24)" fg:x="105" fg:w="15"/><text x="0.3713%" y="495.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (15 samples, 0.02%)</title><rect x="0.1213%" y="469" width="0.0173%" height="15" fill="rgb(229,88,8)" fg:x="105" fg:w="15"/><text x="0.3713%" y="479.50"></text></g><g><title>snd_pcm_status (15 samples, 0.02%)</title><rect x="0.1213%" y="453" width="0.0173%" height="15" fill="rgb(213,181,19)" fg:x="105" fg:w="15"/><text x="0.3713%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (15 samples, 0.02%)</title><rect x="0.1213%" y="437" width="0.0173%" height="15" fill="rgb(254,191,54)" fg:x="105" fg:w="15"/><text x="0.3713%" y="447.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (88 samples, 0.10%)</title><rect x="0.0959%" y="501" width="0.1017%" height="15" fill="rgb(241,83,37)" fg:x="83" fg:w="88"/><text x="0.3459%" y="511.50"></text></g><g><title>alsa::poll::poll (51 samples, 0.06%)</title><rect x="0.1386%" y="485" width="0.0589%" height="15" fill="rgb(233,36,39)" fg:x="120" fg:w="51"/><text x="0.3886%" y="495.50"></text></g><g><title>__GI___poll (50 samples, 0.06%)</title><rect x="0.1398%" y="469" width="0.0578%" height="15" fill="rgb(226,3,54)" fg:x="121" fg:w="50"/><text x="0.3898%" y="479.50"></text></g><g><title>[unknown] (50 samples, 0.06%)</title><rect x="0.1398%" y="453" width="0.0578%" height="15" fill="rgb(245,192,40)" fg:x="121" fg:w="50"/><text x="0.3898%" y="463.50"></text></g><g><title>[unknown] (48 samples, 0.06%)</title><rect x="0.1421%" y="437" width="0.0555%" height="15" fill="rgb(238,167,29)" fg:x="123" fg:w="48"/><text x="0.3921%" y="447.50"></text></g><g><title>[unknown] (48 samples, 0.06%)</title><rect x="0.1421%" y="421" width="0.0555%" height="15" fill="rgb(232,182,51)" fg:x="123" fg:w="48"/><text x="0.3921%" y="431.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="0.1444%" y="405" width="0.0531%" height="15" fill="rgb(231,60,39)" fg:x="125" fg:w="46"/><text x="0.3944%" y="415.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="0.1444%" y="389" width="0.0531%" height="15" fill="rgb(208,69,12)" fg:x="125" fg:w="46"/><text x="0.3944%" y="399.50"></text></g><g><title>[unknown] (45 samples, 0.05%)</title><rect x="0.1456%" y="373" width="0.0520%" height="15" fill="rgb(235,93,37)" fg:x="126" fg:w="45"/><text x="0.3956%" y="383.50"></text></g><g><title>[unknown] (44 samples, 0.05%)</title><rect x="0.1467%" y="357" width="0.0508%" height="15" fill="rgb(213,116,39)" fg:x="127" fg:w="44"/><text x="0.3967%" y="367.50"></text></g><g><title>[unknown] (39 samples, 0.05%)</title><rect x="0.1525%" y="341" width="0.0451%" height="15" fill="rgb(222,207,29)" fg:x="132" fg:w="39"/><text x="0.4025%" y="351.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="0.1583%" y="325" width="0.0393%" height="15" fill="rgb(206,96,30)" fg:x="137" fg:w="34"/><text x="0.4083%" y="335.50"></text></g><g><title>[unknown] (33 samples, 0.04%)</title><rect x="0.1594%" y="309" width="0.0381%" height="15" fill="rgb(218,138,4)" fg:x="138" fg:w="33"/><text x="0.4094%" y="319.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="0.1629%" y="293" width="0.0347%" height="15" fill="rgb(250,191,14)" fg:x="141" fg:w="30"/><text x="0.4129%" y="303.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="0.1664%" y="277" width="0.0312%" height="15" fill="rgb(239,60,40)" fg:x="144" fg:w="27"/><text x="0.4164%" y="287.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="0.1675%" y="261" width="0.0300%" height="15" fill="rgb(206,27,48)" fg:x="145" fg:w="26"/><text x="0.4175%" y="271.50"></text></g><g><title>[unknown] (25 samples, 0.03%)</title><rect x="0.1687%" y="245" width="0.0289%" height="15" fill="rgb(225,35,8)" fg:x="146" fg:w="25"/><text x="0.4187%" y="255.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (9 samples, 0.01%)</title><rect x="0.2022%" y="405" width="0.0104%" height="15" fill="rgb(250,213,24)" fg:x="175" fg:w="9"/><text x="0.4522%" y="415.50"></text></g><g><title>[libpulse.so.0.24.1] (17 samples, 0.02%)</title><rect x="0.2172%" y="373" width="0.0196%" height="15" fill="rgb(247,123,22)" fg:x="188" fg:w="17"/><text x="0.4672%" y="383.50"></text></g><g><title>pa_mainloop_wakeup (17 samples, 0.02%)</title><rect x="0.2172%" y="357" width="0.0196%" height="15" fill="rgb(231,138,38)" fg:x="188" fg:w="17"/><text x="0.4672%" y="367.50"></text></g><g><title>pa_write (16 samples, 0.02%)</title><rect x="0.2184%" y="341" width="0.0185%" height="15" fill="rgb(231,145,46)" fg:x="189" fg:w="16"/><text x="0.4684%" y="351.50"></text></g><g><title>__GI___libc_write (16 samples, 0.02%)</title><rect x="0.2184%" y="325" width="0.0185%" height="15" fill="rgb(251,118,11)" fg:x="189" fg:w="16"/><text x="0.4684%" y="335.50"></text></g><g><title>__GI___libc_write (16 samples, 0.02%)</title><rect x="0.2184%" y="309" width="0.0185%" height="15" fill="rgb(217,147,25)" fg:x="189" fg:w="16"/><text x="0.4684%" y="319.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="0.2184%" y="293" width="0.0185%" height="15" fill="rgb(247,81,37)" fg:x="189" fg:w="16"/><text x="0.4684%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="0.2218%" y="277" width="0.0150%" height="15" fill="rgb(209,12,38)" fg:x="192" fg:w="13"/><text x="0.4718%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="0.2218%" y="261" width="0.0150%" height="15" fill="rgb(227,1,9)" fg:x="192" fg:w="13"/><text x="0.4718%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="0.2241%" y="245" width="0.0127%" height="15" fill="rgb(248,47,43)" fg:x="194" fg:w="11"/><text x="0.4741%" y="255.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="0.2241%" y="229" width="0.0127%" height="15" fill="rgb(221,10,30)" fg:x="194" fg:w="11"/><text x="0.4741%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="0.2253%" y="213" width="0.0116%" height="15" fill="rgb(210,229,1)" fg:x="195" fg:w="10"/><text x="0.4753%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="0.2264%" y="197" width="0.0104%" height="15" fill="rgb(222,148,37)" fg:x="196" fg:w="9"/><text x="0.4764%" y="207.50"></text></g><g><title>pa_stream_write (26 samples, 0.03%)</title><rect x="0.2149%" y="405" width="0.0300%" height="15" fill="rgb(234,67,33)" fg:x="186" fg:w="26"/><text x="0.4649%" y="415.50"></text></g><g><title>pa_stream_write_ext_free (26 samples, 0.03%)</title><rect x="0.2149%" y="389" width="0.0300%" height="15" fill="rgb(247,98,35)" fg:x="186" fg:w="26"/><text x="0.4649%" y="399.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (47 samples, 0.05%)</title><rect x="0.1976%" y="485" width="0.0543%" height="15" fill="rgb(247,138,52)" fg:x="171" fg:w="47"/><text x="0.4476%" y="495.50"></text></g><g><title>[libasound.so.2.0.0] (47 samples, 0.05%)</title><rect x="0.1976%" y="469" width="0.0543%" height="15" fill="rgb(213,79,30)" fg:x="171" fg:w="47"/><text x="0.4476%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (46 samples, 0.05%)</title><rect x="0.1987%" y="453" width="0.0531%" height="15" fill="rgb(246,177,23)" fg:x="172" fg:w="46"/><text x="0.4487%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (46 samples, 0.05%)</title><rect x="0.1987%" y="437" width="0.0531%" height="15" fill="rgb(230,62,27)" fg:x="172" fg:w="46"/><text x="0.4487%" y="447.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (43 samples, 0.05%)</title><rect x="0.2022%" y="421" width="0.0497%" height="15" fill="rgb(216,154,8)" fg:x="175" fg:w="43"/><text x="0.4522%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (13 samples, 0.02%)</title><rect x="0.2623%" y="389" width="0.0150%" height="15" fill="rgb(244,35,45)" fg:x="227" fg:w="13"/><text x="0.5123%" y="399.50"></text></g><g><title>core::ptr::read (13 samples, 0.02%)</title><rect x="0.2773%" y="357" width="0.0150%" height="15" fill="rgb(251,115,12)" fg:x="240" fg:w="13"/><text x="0.5273%" y="367.50"></text></g><g><title>core::mem::swap (21 samples, 0.02%)</title><rect x="0.2773%" y="389" width="0.0243%" height="15" fill="rgb(240,54,50)" fg:x="240" fg:w="21"/><text x="0.5273%" y="399.50"></text></g><g><title>core::mem::swap_simple (21 samples, 0.02%)</title><rect x="0.2773%" y="373" width="0.0243%" height="15" fill="rgb(233,84,52)" fg:x="240" fg:w="21"/><text x="0.5273%" y="383.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="0.2542%" y="421" width="0.0531%" height="15" fill="rgb(207,117,47)" fg:x="220" fg:w="46"/><text x="0.5042%" y="431.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (40 samples, 0.05%)</title><rect x="0.2611%" y="405" width="0.0462%" height="15" fill="rgb(249,43,39)" fg:x="226" fg:w="40"/><text x="0.5111%" y="415.50"></text></g><g><title>__clone3 (185 samples, 0.21%)</title><rect x="0.0947%" y="741" width="0.2137%" height="15" fill="rgb(209,38,44)" fg:x="82" fg:w="185"/><text x="0.3447%" y="751.50"></text></g><g><title>start_thread (185 samples, 0.21%)</title><rect x="0.0947%" y="725" width="0.2137%" height="15" fill="rgb(236,212,23)" fg:x="82" fg:w="185"/><text x="0.3447%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (185 samples, 0.21%)</title><rect x="0.0947%" y="709" width="0.2137%" height="15" fill="rgb(242,79,21)" fg:x="82" fg:w="185"/><text x="0.3447%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (185 samples, 0.21%)</title><rect x="0.0947%" y="693" width="0.2137%" height="15" fill="rgb(211,96,35)" fg:x="82" fg:w="185"/><text x="0.3447%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (185 samples, 0.21%)</title><rect x="0.0947%" y="677" width="0.2137%" height="15" fill="rgb(253,215,40)" fg:x="82" fg:w="185"/><text x="0.3447%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (185 samples, 0.21%)</title><rect x="0.0947%" y="661" width="0.2137%" height="15" fill="rgb(211,81,21)" fg:x="82" fg:w="185"/><text x="0.3447%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (185 samples, 0.21%)</title><rect x="0.0947%" y="645" width="0.2137%" height="15" fill="rgb(208,190,38)" fg:x="82" fg:w="185"/><text x="0.3447%" y="655.50"></text></g><g><title>std::panic::catch_unwind (185 samples, 0.21%)</title><rect x="0.0947%" y="629" width="0.2137%" height="15" fill="rgb(235,213,38)" fg:x="82" fg:w="185"/><text x="0.3447%" y="639.50"></text></g><g><title>std::panicking::try (185 samples, 0.21%)</title><rect x="0.0947%" y="613" width="0.2137%" height="15" fill="rgb(237,122,38)" fg:x="82" fg:w="185"/><text x="0.3447%" y="623.50"></text></g><g><title>std::panicking::try::do_call (185 samples, 0.21%)</title><rect x="0.0947%" y="597" width="0.2137%" height="15" fill="rgb(244,218,35)" fg:x="82" fg:w="185"/><text x="0.3447%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (185 samples, 0.21%)</title><rect x="0.0947%" y="581" width="0.2137%" height="15" fill="rgb(240,68,47)" fg:x="82" fg:w="185"/><text x="0.3447%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (185 samples, 0.21%)</title><rect x="0.0947%" y="565" width="0.2137%" height="15" fill="rgb(210,16,53)" fg:x="82" fg:w="185"/><text x="0.3447%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (185 samples, 0.21%)</title><rect x="0.0947%" y="549" width="0.2137%" height="15" fill="rgb(235,124,12)" fg:x="82" fg:w="185"/><text x="0.3447%" y="559.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (185 samples, 0.21%)</title><rect x="0.0947%" y="533" width="0.2137%" height="15" fill="rgb(224,169,11)" fg:x="82" fg:w="185"/><text x="0.3447%" y="543.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (185 samples, 0.21%)</title><rect x="0.0947%" y="517" width="0.2137%" height="15" fill="rgb(250,166,2)" fg:x="82" fg:w="185"/><text x="0.3447%" y="527.50"></text></g><g><title>cpal::host::alsa::process_output (96 samples, 0.11%)</title><rect x="0.1976%" y="501" width="0.1109%" height="15" fill="rgb(242,216,29)" fg:x="171" fg:w="96"/><text x="0.4476%" y="511.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (48 samples, 0.06%)</title><rect x="0.2530%" y="485" width="0.0555%" height="15" fill="rgb(230,116,27)" fg:x="219" fg:w="48"/><text x="0.5030%" y="495.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (48 samples, 0.06%)</title><rect x="0.2530%" y="469" width="0.0555%" height="15" fill="rgb(228,99,48)" fg:x="219" fg:w="48"/><text x="0.5030%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (48 samples, 0.06%)</title><rect x="0.2530%" y="453" width="0.0555%" height="15" fill="rgb(253,11,6)" fg:x="219" fg:w="48"/><text x="0.5030%" y="463.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (48 samples, 0.06%)</title><rect x="0.2530%" y="437" width="0.0555%" height="15" fill="rgb(247,143,39)" fg:x="219" fg:w="48"/><text x="0.5030%" y="447.50"></text></g><g><title>cpal_alsa_out (226 samples, 0.26%)</title><rect x="0.0497%" y="757" width="0.2611%" height="15" fill="rgb(236,97,10)" fg:x="43" fg:w="226"/><text x="0.2997%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (34 samples, 0.04%)</title><rect x="0.3316%" y="725" width="0.0393%" height="15" fill="rgb(233,208,19)" fg:x="287" fg:w="34"/><text x="0.5816%" y="735.50"></text></g><g><title>[[heap]] (82 samples, 0.09%)</title><rect x="0.3189%" y="741" width="0.0947%" height="15" fill="rgb(216,164,2)" fg:x="276" fg:w="82"/><text x="0.5689%" y="751.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.08%)</title><rect x="0.4171%" y="677" width="0.0763%" height="15" fill="rgb(220,129,5)" fg:x="361" fg:w="66"/><text x="0.6671%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (31 samples, 0.04%)</title><rect x="0.4575%" y="661" width="0.0358%" height="15" fill="rgb(242,17,10)" fg:x="396" fg:w="31"/><text x="0.7075%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 0.08%)</title><rect x="0.4171%" y="725" width="0.0843%" height="15" fill="rgb(242,107,0)" fg:x="361" fg:w="73"/><text x="0.6671%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (73 samples, 0.08%)</title><rect x="0.4171%" y="709" width="0.0843%" height="15" fill="rgb(251,28,31)" fg:x="361" fg:w="73"/><text x="0.6671%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.08%)</title><rect x="0.4171%" y="693" width="0.0843%" height="15" fill="rgb(233,223,10)" fg:x="361" fg:w="73"/><text x="0.6671%" y="703.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (424 samples, 0.49%)</title><rect x="0.5026%" y="677" width="0.4899%" height="15" fill="rgb(215,21,27)" fg:x="435" fg:w="424"/><text x="0.7526%" y="687.50"></text></g><g><title>neuralang::World::check_collisions (528 samples, 0.61%)</title><rect x="0.5026%" y="693" width="0.6100%" height="15" fill="rgb(232,23,21)" fg:x="435" fg:w="528"/><text x="0.7526%" y="703.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (104 samples, 0.12%)</title><rect x="0.9924%" y="677" width="0.1202%" height="15" fill="rgb(244,5,23)" fg:x="859" fg:w="104"/><text x="1.2424%" y="687.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="1.1126%" y="645" width="0.0531%" height="15" fill="rgb(226,81,46)" fg:x="963" fg:w="46"/><text x="1.3626%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.02%)</title><rect x="1.1507%" y="629" width="0.0150%" height="15" fill="rgb(247,70,30)" fg:x="996" fg:w="13"/><text x="1.4007%" y="639.50"></text></g><g><title>neuralang::World::move_beings (75 samples, 0.09%)</title><rect x="1.1126%" y="693" width="0.0866%" height="15" fill="rgb(212,68,19)" fg:x="963" fg:w="75"/><text x="1.3626%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (75 samples, 0.09%)</title><rect x="1.1126%" y="677" width="0.0866%" height="15" fill="rgb(240,187,13)" fg:x="963" fg:w="75"/><text x="1.3626%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (75 samples, 0.09%)</title><rect x="1.1126%" y="661" width="0.0866%" height="15" fill="rgb(223,113,26)" fg:x="963" fg:w="75"/><text x="1.3626%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (29 samples, 0.03%)</title><rect x="1.1657%" y="645" width="0.0335%" height="15" fill="rgb(206,192,2)" fg:x="1009" fg:w="29"/><text x="1.4157%" y="655.50"></text></g><g><title>neuralang::World::move_beings::{{closure}} (29 samples, 0.03%)</title><rect x="1.1657%" y="629" width="0.0335%" height="15" fill="rgb(241,108,4)" fg:x="1009" fg:w="29"/><text x="1.4157%" y="639.50"></text></g><g><title>neuralang::dir_from_theta (29 samples, 0.03%)</title><rect x="1.1657%" y="613" width="0.0335%" height="15" fill="rgb(247,173,49)" fg:x="1009" fg:w="29"/><text x="1.4157%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (29 samples, 0.03%)</title><rect x="1.1657%" y="597" width="0.0335%" height="15" fill="rgb(224,114,35)" fg:x="1009" fg:w="29"/><text x="1.4157%" y="607.50"></text></g><g><title>neuralang::World::tire_beings (89 samples, 0.10%)</title><rect x="1.1992%" y="693" width="0.1028%" height="15" fill="rgb(245,159,27)" fg:x="1038" fg:w="89"/><text x="1.4492%" y="703.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (89 samples, 0.10%)</title><rect x="1.1992%" y="677" width="0.1028%" height="15" fill="rgb(245,172,44)" fg:x="1038" fg:w="89"/><text x="1.4492%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (50 samples, 0.06%)</title><rect x="1.2443%" y="661" width="0.0578%" height="15" fill="rgb(236,23,11)" fg:x="1077" fg:w="50"/><text x="1.4943%" y="671.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.14%)</title><rect x="1.3020%" y="677" width="0.1409%" height="15" fill="rgb(205,117,38)" fg:x="1127" fg:w="122"/><text x="1.5520%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (77 samples, 0.09%)</title><rect x="1.3540%" y="661" width="0.0890%" height="15" fill="rgb(237,72,25)" fg:x="1172" fg:w="77"/><text x="1.6040%" y="671.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (876 samples, 1.01%)</title><rect x="0.5026%" y="725" width="1.0121%" height="15" fill="rgb(244,70,9)" fg:x="435" fg:w="876"/><text x="0.7526%" y="735.50"></text></g><g><title>neuralang::World::step (876 samples, 1.01%)</title><rect x="0.5026%" y="709" width="1.0121%" height="15" fill="rgb(217,125,39)" fg:x="435" fg:w="876"/><text x="0.7526%" y="719.50"></text></g><g><title>neuralang::World::update_cells (184 samples, 0.21%)</title><rect x="1.3020%" y="693" width="0.2126%" height="15" fill="rgb(235,36,10)" fg:x="1127" fg:w="184"/><text x="1.5520%" y="703.50"></text></g><g><title>neuralang::pos_to_cell (62 samples, 0.07%)</title><rect x="1.4430%" y="677" width="0.0716%" height="15" fill="rgb(251,123,47)" fg:x="1249" fg:w="62"/><text x="1.6930%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="1.5343%" y="725" width="0.0139%" height="15" fill="rgb(221,13,13)" fg:x="1328" fg:w="12"/><text x="1.7843%" y="735.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (85 samples, 0.10%)</title><rect x="1.5735%" y="725" width="0.0982%" height="15" fill="rgb(238,131,9)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (85 samples, 0.10%)</title><rect x="1.5735%" y="709" width="0.0982%" height="15" fill="rgb(211,50,8)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (85 samples, 0.10%)</title><rect x="1.5735%" y="693" width="0.0982%" height="15" fill="rgb(245,182,24)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (85 samples, 0.10%)</title><rect x="1.5735%" y="677" width="0.0982%" height="15" fill="rgb(242,14,37)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (85 samples, 0.10%)</title><rect x="1.5735%" y="661" width="0.0982%" height="15" fill="rgb(246,228,12)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (85 samples, 0.10%)</title><rect x="1.5735%" y="645" width="0.0982%" height="15" fill="rgb(213,55,15)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (85 samples, 0.10%)</title><rect x="1.5735%" y="629" width="0.0982%" height="15" fill="rgb(209,9,3)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (85 samples, 0.10%)</title><rect x="1.5735%" y="613" width="0.0982%" height="15" fill="rgb(230,59,30)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="623.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (85 samples, 0.10%)</title><rect x="1.5735%" y="597" width="0.0982%" height="15" fill="rgb(209,121,21)" fg:x="1362" fg:w="85"/><text x="1.8235%" y="607.50"></text></g><g><title>[[stack]] (1,115 samples, 1.29%)</title><rect x="0.4136%" y="741" width="1.2882%" height="15" fill="rgb(220,109,13)" fg:x="358" fg:w="1115"/><text x="0.6636%" y="751.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (100 samples, 0.12%)</title><rect x="1.7827%" y="709" width="0.1155%" height="15" fill="rgb(232,18,1)" fg:x="1543" fg:w="100"/><text x="2.0327%" y="719.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (100 samples, 0.12%)</title><rect x="1.7827%" y="693" width="0.1155%" height="15" fill="rgb(215,41,42)" fg:x="1543" fg:w="100"/><text x="2.0327%" y="703.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (100 samples, 0.12%)</title><rect x="1.7827%" y="677" width="0.1155%" height="15" fill="rgb(224,123,36)" fg:x="1543" fg:w="100"/><text x="2.0327%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.03%)</title><rect x="1.8982%" y="693" width="0.0312%" height="15" fill="rgb(240,125,3)" fg:x="1643" fg:w="27"/><text x="2.1482%" y="703.50"></text></g><g><title>[anon] (204 samples, 0.24%)</title><rect x="1.7018%" y="741" width="0.2357%" height="15" fill="rgb(205,98,50)" fg:x="1473" fg:w="204"/><text x="1.9518%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (196 samples, 0.23%)</title><rect x="1.7110%" y="725" width="0.2264%" height="15" fill="rgb(205,185,37)" fg:x="1481" fg:w="196"/><text x="1.9610%" y="735.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (34 samples, 0.04%)</title><rect x="1.8982%" y="709" width="0.0393%" height="15" fill="rgb(238,207,15)" fg:x="1643" fg:w="34"/><text x="2.1482%" y="719.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (112 samples, 0.13%)</title><rect x="1.9802%" y="725" width="0.1294%" height="15" fill="rgb(213,199,42)" fg:x="1714" fg:w="112"/><text x="2.2302%" y="735.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (272 samples, 0.31%)</title><rect x="2.1096%" y="725" width="0.3142%" height="15" fill="rgb(235,201,11)" fg:x="1826" fg:w="272"/><text x="2.3596%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (28 samples, 0.03%)</title><rect x="2.4331%" y="725" width="0.0323%" height="15" fill="rgb(207,46,11)" fg:x="2106" fg:w="28"/><text x="2.6831%" y="735.50"></text></g><g><title>[unknown] (64 samples, 0.07%)</title><rect x="2.4666%" y="725" width="0.0739%" height="15" fill="rgb(241,35,35)" fg:x="2135" fg:w="64"/><text x="2.7166%" y="735.50"></text></g><g><title>[unknown] (62 samples, 0.07%)</title><rect x="2.4689%" y="709" width="0.0716%" height="15" fill="rgb(243,32,47)" fg:x="2137" fg:w="62"/><text x="2.7189%" y="719.50"></text></g><g><title>[unknown] (59 samples, 0.07%)</title><rect x="2.4724%" y="693" width="0.0682%" height="15" fill="rgb(247,202,23)" fg:x="2140" fg:w="59"/><text x="2.7224%" y="703.50"></text></g><g><title>[unknown] (58 samples, 0.07%)</title><rect x="2.4735%" y="677" width="0.0670%" height="15" fill="rgb(219,102,11)" fg:x="2141" fg:w="58"/><text x="2.7235%" y="687.50"></text></g><g><title>[unknown] (58 samples, 0.07%)</title><rect x="2.4735%" y="661" width="0.0670%" height="15" fill="rgb(243,110,44)" fg:x="2141" fg:w="58"/><text x="2.7235%" y="671.50"></text></g><g><title>[unknown] (57 samples, 0.07%)</title><rect x="2.4747%" y="645" width="0.0659%" height="15" fill="rgb(222,74,54)" fg:x="2142" fg:w="57"/><text x="2.7247%" y="655.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="2.5105%" y="629" width="0.0300%" height="15" fill="rgb(216,99,12)" fg:x="2173" fg:w="26"/><text x="2.7605%" y="639.50"></text></g><g><title>[unknown] (25 samples, 0.03%)</title><rect x="2.5117%" y="613" width="0.0289%" height="15" fill="rgb(226,22,26)" fg:x="2174" fg:w="25"/><text x="2.7617%" y="623.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="2.5209%" y="597" width="0.0196%" height="15" fill="rgb(217,163,10)" fg:x="2182" fg:w="17"/><text x="2.7709%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="2.5290%" y="581" width="0.0116%" height="15" fill="rgb(213,25,53)" fg:x="2189" fg:w="10"/><text x="2.7790%" y="591.50"></text></g><g><title>__ieee754_fmodf (148 samples, 0.17%)</title><rect x="2.5429%" y="725" width="0.1710%" height="15" fill="rgb(252,105,26)" fg:x="2201" fg:w="148"/><text x="2.7929%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (14 samples, 0.02%)</title><rect x="2.9276%" y="693" width="0.0162%" height="15" fill="rgb(220,39,43)" fg:x="2534" fg:w="14"/><text x="3.1776%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.01%)</title><rect x="2.9334%" y="677" width="0.0104%" height="15" fill="rgb(229,68,48)" fg:x="2539" fg:w="9"/><text x="3.1834%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (230 samples, 0.27%)</title><rect x="2.7289%" y="725" width="0.2657%" height="15" fill="rgb(252,8,32)" fg:x="2362" fg:w="230"/><text x="2.9789%" y="735.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (101 samples, 0.12%)</title><rect x="2.8779%" y="709" width="0.1167%" height="15" fill="rgb(223,20,43)" fg:x="2491" fg:w="101"/><text x="3.1279%" y="719.50"></text></g><g><title>ggez::graphics::draw::DrawParam::scale (44 samples, 0.05%)</title><rect x="2.9438%" y="693" width="0.0508%" height="15" fill="rgb(229,81,49)" fg:x="2548" fg:w="44"/><text x="3.1938%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (44 samples, 0.05%)</title><rect x="2.9438%" y="677" width="0.0508%" height="15" fill="rgb(236,28,36)" fg:x="2548" fg:w="44"/><text x="3.1938%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="3.0177%" y="517" width="0.0196%" height="15" fill="rgb(249,185,26)" fg:x="2612" fg:w="17"/><text x="3.2677%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="3.0189%" y="501" width="0.0185%" height="15" fill="rgb(249,174,33)" fg:x="2613" fg:w="16"/><text x="3.2689%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.02%)</title><rect x="3.0223%" y="485" width="0.0150%" height="15" fill="rgb(233,201,37)" fg:x="2616" fg:w="13"/><text x="3.2723%" y="495.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (19 samples, 0.02%)</title><rect x="3.0165%" y="549" width="0.0220%" height="15" fill="rgb(221,78,26)" fg:x="2611" fg:w="19"/><text x="3.2665%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="3.0165%" y="533" width="0.0220%" height="15" fill="rgb(250,127,30)" fg:x="2611" fg:w="19"/><text x="3.2665%" y="543.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (29 samples, 0.03%)</title><rect x="3.0119%" y="725" width="0.0335%" height="15" fill="rgb(230,49,44)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="735.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (29 samples, 0.03%)</title><rect x="3.0119%" y="709" width="0.0335%" height="15" fill="rgb(229,67,23)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (29 samples, 0.03%)</title><rect x="3.0119%" y="693" width="0.0335%" height="15" fill="rgb(249,83,47)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (29 samples, 0.03%)</title><rect x="3.0119%" y="677" width="0.0335%" height="15" fill="rgb(215,43,3)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="687.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="3.0119%" y="661" width="0.0335%" height="15" fill="rgb(238,154,13)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (29 samples, 0.03%)</title><rect x="3.0119%" y="645" width="0.0335%" height="15" fill="rgb(219,56,2)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (29 samples, 0.03%)</title><rect x="3.0119%" y="629" width="0.0335%" height="15" fill="rgb(233,0,4)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="639.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (29 samples, 0.03%)</title><rect x="3.0119%" y="613" width="0.0335%" height="15" fill="rgb(235,30,7)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (29 samples, 0.03%)</title><rect x="3.0119%" y="597" width="0.0335%" height="15" fill="rgb(250,79,13)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="607.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (29 samples, 0.03%)</title><rect x="3.0119%" y="581" width="0.0335%" height="15" fill="rgb(211,146,34)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (29 samples, 0.03%)</title><rect x="3.0119%" y="565" width="0.0335%" height="15" fill="rgb(228,22,38)" fg:x="2607" fg:w="29"/><text x="3.2619%" y="575.50"></text></g><g><title>wgpu::Instance::request_adapter (19 samples, 0.02%)</title><rect x="3.0524%" y="693" width="0.0220%" height="15" fill="rgb(235,168,5)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (19 samples, 0.02%)</title><rect x="3.0524%" y="677" width="0.0220%" height="15" fill="rgb(221,155,16)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (19 samples, 0.02%)</title><rect x="3.0524%" y="661" width="0.0220%" height="15" fill="rgb(215,215,53)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="671.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (19 samples, 0.02%)</title><rect x="3.0524%" y="645" width="0.0220%" height="15" fill="rgb(223,4,10)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="655.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (19 samples, 0.02%)</title><rect x="3.0524%" y="629" width="0.0220%" height="15" fill="rgb(234,103,6)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (19 samples, 0.02%)</title><rect x="3.0524%" y="613" width="0.0220%" height="15" fill="rgb(227,97,0)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (19 samples, 0.02%)</title><rect x="3.0524%" y="597" width="0.0220%" height="15" fill="rgb(234,150,53)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (19 samples, 0.02%)</title><rect x="3.0524%" y="581" width="0.0220%" height="15" fill="rgb(228,201,54)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (19 samples, 0.02%)</title><rect x="3.0524%" y="565" width="0.0220%" height="15" fill="rgb(222,22,37)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="575.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (19 samples, 0.02%)</title><rect x="3.0524%" y="549" width="0.0220%" height="15" fill="rgb(237,53,32)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (19 samples, 0.02%)</title><rect x="3.0524%" y="533" width="0.0220%" height="15" fill="rgb(233,25,53)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="543.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (19 samples, 0.02%)</title><rect x="3.0524%" y="517" width="0.0220%" height="15" fill="rgb(210,40,34)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="3.0524%" y="501" width="0.0220%" height="15" fill="rgb(241,220,44)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="3.0524%" y="485" width="0.0220%" height="15" fill="rgb(235,28,35)" fg:x="2642" fg:w="19"/><text x="3.3024%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="3.0547%" y="469" width="0.0196%" height="15" fill="rgb(210,56,17)" fg:x="2644" fg:w="17"/><text x="3.3047%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (17 samples, 0.02%)</title><rect x="3.0547%" y="453" width="0.0196%" height="15" fill="rgb(224,130,29)" fg:x="2644" fg:w="17"/><text x="3.3047%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (17 samples, 0.02%)</title><rect x="3.0547%" y="437" width="0.0196%" height="15" fill="rgb(235,212,8)" fg:x="2644" fg:w="17"/><text x="3.3047%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.0639%" y="421" width="0.0104%" height="15" fill="rgb(223,33,50)" fg:x="2652" fg:w="9"/><text x="3.3139%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.0639%" y="405" width="0.0104%" height="15" fill="rgb(219,149,13)" fg:x="2652" fg:w="9"/><text x="3.3139%" y="415.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (26 samples, 0.03%)</title><rect x="3.0477%" y="725" width="0.0300%" height="15" fill="rgb(250,156,29)" fg:x="2638" fg:w="26"/><text x="3.2977%" y="735.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (22 samples, 0.03%)</title><rect x="3.0524%" y="709" width="0.0254%" height="15" fill="rgb(216,193,19)" fg:x="2642" fg:w="22"/><text x="3.3024%" y="719.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (12 samples, 0.01%)</title><rect x="3.0847%" y="725" width="0.0139%" height="15" fill="rgb(216,135,14)" fg:x="2670" fg:w="12"/><text x="3.3347%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (31 samples, 0.04%)</title><rect x="3.1032%" y="725" width="0.0358%" height="15" fill="rgb(241,47,5)" fg:x="2686" fg:w="31"/><text x="3.3532%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (67 samples, 0.08%)</title><rect x="3.1390%" y="725" width="0.0774%" height="15" fill="rgb(233,42,35)" fg:x="2717" fg:w="67"/><text x="3.3890%" y="735.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (22 samples, 0.03%)</title><rect x="3.2199%" y="725" width="0.0254%" height="15" fill="rgb(231,13,6)" fg:x="2787" fg:w="22"/><text x="3.4699%" y="735.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (155 samples, 0.18%)</title><rect x="3.2453%" y="725" width="0.1791%" height="15" fill="rgb(207,181,40)" fg:x="2809" fg:w="155"/><text x="3.4953%" y="735.50"></text></g><g><title>[libudev.so.1.7.2] (9 samples, 0.01%)</title><rect x="3.4405%" y="437" width="0.0104%" height="15" fill="rgb(254,173,49)" fg:x="2978" fg:w="9"/><text x="3.6905%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (15 samples, 0.02%)</title><rect x="3.4394%" y="453" width="0.0173%" height="15" fill="rgb(221,1,38)" fg:x="2977" fg:w="15"/><text x="3.6894%" y="463.50"></text></g><g><title>__GI___close (13 samples, 0.02%)</title><rect x="3.4567%" y="453" width="0.0150%" height="15" fill="rgb(206,124,46)" fg:x="2992" fg:w="13"/><text x="3.7067%" y="463.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="3.4567%" y="437" width="0.0150%" height="15" fill="rgb(249,21,11)" fg:x="2992" fg:w="13"/><text x="3.7067%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4613%" y="421" width="0.0104%" height="15" fill="rgb(222,201,40)" fg:x="2996" fg:w="9"/><text x="3.7113%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4613%" y="405" width="0.0104%" height="15" fill="rgb(235,61,29)" fg:x="2996" fg:w="9"/><text x="3.7113%" y="415.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4613%" y="389" width="0.0104%" height="15" fill="rgb(219,207,3)" fg:x="2996" fg:w="9"/><text x="3.7113%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4613%" y="373" width="0.0104%" height="15" fill="rgb(222,56,46)" fg:x="2996" fg:w="9"/><text x="3.7113%" y="383.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4613%" y="357" width="0.0104%" height="15" fill="rgb(239,76,54)" fg:x="2996" fg:w="9"/><text x="3.7113%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4613%" y="341" width="0.0104%" height="15" fill="rgb(231,124,27)" fg:x="2996" fg:w="9"/><text x="3.7113%" y="351.50"></text></g><g><title>[libudev.so.1.7.2] (41 samples, 0.05%)</title><rect x="3.4382%" y="469" width="0.0474%" height="15" fill="rgb(249,195,6)" fg:x="2976" fg:w="41"/><text x="3.6882%" y="479.50"></text></g><g><title>__GI___fstatat64 (11 samples, 0.01%)</title><rect x="3.4868%" y="469" width="0.0127%" height="15" fill="rgb(237,174,47)" fg:x="3018" fg:w="11"/><text x="3.7368%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="3.4868%" y="453" width="0.0127%" height="15" fill="rgb(206,201,31)" fg:x="3018" fg:w="11"/><text x="3.7368%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4891%" y="437" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="3020" fg:w="9"/><text x="3.7391%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.4891%" y="421" width="0.0104%" height="15" fill="rgb(248,177,22)" fg:x="3020" fg:w="9"/><text x="3.7391%" y="431.50"></text></g><g><title>[libudev.so.1.7.2] (67 samples, 0.08%)</title><rect x="3.4371%" y="485" width="0.0774%" height="15" fill="rgb(215,211,37)" fg:x="2975" fg:w="67"/><text x="3.6871%" y="495.50"></text></g><g><title>__libc_openat64 (11 samples, 0.01%)</title><rect x="3.5018%" y="469" width="0.0127%" height="15" fill="rgb(241,128,51)" fg:x="3031" fg:w="11"/><text x="3.7518%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="3.5018%" y="453" width="0.0127%" height="15" fill="rgb(227,165,31)" fg:x="3031" fg:w="11"/><text x="3.7518%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="3.5018%" y="437" width="0.0127%" height="15" fill="rgb(228,167,24)" fg:x="3031" fg:w="11"/><text x="3.7518%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="3.5018%" y="421" width="0.0127%" height="15" fill="rgb(228,143,12)" fg:x="3031" fg:w="11"/><text x="3.7518%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="3.5029%" y="405" width="0.0116%" height="15" fill="rgb(249,149,8)" fg:x="3032" fg:w="10"/><text x="3.7529%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="3.5029%" y="389" width="0.0116%" height="15" fill="rgb(243,35,44)" fg:x="3032" fg:w="10"/><text x="3.7529%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="3.5029%" y="373" width="0.0116%" height="15" fill="rgb(246,89,9)" fg:x="3032" fg:w="10"/><text x="3.7529%" y="383.50"></text></g><g><title>[libudev.so.1.7.2] (74 samples, 0.09%)</title><rect x="3.4371%" y="501" width="0.0855%" height="15" fill="rgb(233,213,13)" fg:x="2975" fg:w="74"/><text x="3.6871%" y="511.50"></text></g><g><title>[libudev.so.1.7.2] (77 samples, 0.09%)</title><rect x="3.4371%" y="517" width="0.0890%" height="15" fill="rgb(233,141,41)" fg:x="2975" fg:w="77"/><text x="3.6871%" y="527.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (80 samples, 0.09%)</title><rect x="3.4371%" y="581" width="0.0924%" height="15" fill="rgb(239,167,4)" fg:x="2975" fg:w="80"/><text x="3.6871%" y="591.50"></text></g><g><title>udev_enumerate_scan_devices (80 samples, 0.09%)</title><rect x="3.4371%" y="565" width="0.0924%" height="15" fill="rgb(209,217,16)" fg:x="2975" fg:w="80"/><text x="3.6871%" y="575.50"></text></g><g><title>[libudev.so.1.7.2] (80 samples, 0.09%)</title><rect x="3.4371%" y="549" width="0.0924%" height="15" fill="rgb(219,88,35)" fg:x="2975" fg:w="80"/><text x="3.6871%" y="559.50"></text></g><g><title>[libudev.so.1.7.2] (80 samples, 0.09%)</title><rect x="3.4371%" y="533" width="0.0924%" height="15" fill="rgb(220,193,23)" fg:x="2975" fg:w="80"/><text x="3.6871%" y="543.50"></text></g><g><title>ggez::context::ContextBuilder::build (88 samples, 0.10%)</title><rect x="3.4290%" y="693" width="0.1017%" height="15" fill="rgb(230,90,52)" fg:x="2968" fg:w="88"/><text x="3.6790%" y="703.50"></text></g><g><title>ggez::context::Context::from_conf (88 samples, 0.10%)</title><rect x="3.4290%" y="677" width="0.1017%" height="15" fill="rgb(252,106,19)" fg:x="2968" fg:w="88"/><text x="3.6790%" y="687.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (81 samples, 0.09%)</title><rect x="3.4371%" y="661" width="0.0936%" height="15" fill="rgb(206,74,20)" fg:x="2975" fg:w="81"/><text x="3.6871%" y="671.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (81 samples, 0.09%)</title><rect x="3.4371%" y="645" width="0.0936%" height="15" fill="rgb(230,138,44)" fg:x="2975" fg:w="81"/><text x="3.6871%" y="655.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (81 samples, 0.09%)</title><rect x="3.4371%" y="629" width="0.0936%" height="15" fill="rgb(235,182,43)" fg:x="2975" fg:w="81"/><text x="3.6871%" y="639.50"></text></g><g><title>gilrs_core::Gilrs::new (81 samples, 0.09%)</title><rect x="3.4371%" y="613" width="0.0936%" height="15" fill="rgb(242,16,51)" fg:x="2975" fg:w="81"/><text x="3.6871%" y="623.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (81 samples, 0.09%)</title><rect x="3.4371%" y="597" width="0.0936%" height="15" fill="rgb(248,9,4)" fg:x="2975" fg:w="81"/><text x="3.6871%" y="607.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (11 samples, 0.01%)</title><rect x="3.5307%" y="597" width="0.0127%" height="15" fill="rgb(210,31,22)" fg:x="3056" fg:w="11"/><text x="3.7807%" y="607.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (25 samples, 0.03%)</title><rect x="3.5792%" y="421" width="0.0289%" height="15" fill="rgb(239,54,39)" fg:x="3098" fg:w="25"/><text x="3.8292%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (13 samples, 0.02%)</title><rect x="3.5930%" y="405" width="0.0150%" height="15" fill="rgb(230,99,41)" fg:x="3110" fg:w="13"/><text x="3.8430%" y="415.50"></text></g><g><title>wgpu::Device::create_bind_group (32 samples, 0.04%)</title><rect x="3.5746%" y="485" width="0.0370%" height="15" fill="rgb(253,106,12)" fg:x="3094" fg:w="32"/><text x="3.8246%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (32 samples, 0.04%)</title><rect x="3.5746%" y="469" width="0.0370%" height="15" fill="rgb(213,46,41)" fg:x="3094" fg:w="32"/><text x="3.8246%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (32 samples, 0.04%)</title><rect x="3.5746%" y="453" width="0.0370%" height="15" fill="rgb(215,133,35)" fg:x="3094" fg:w="32"/><text x="3.8246%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (29 samples, 0.03%)</title><rect x="3.5780%" y="437" width="0.0335%" height="15" fill="rgb(213,28,5)" fg:x="3097" fg:w="29"/><text x="3.8280%" y="447.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (16 samples, 0.02%)</title><rect x="3.6196%" y="389" width="0.0185%" height="15" fill="rgb(215,77,49)" fg:x="3133" fg:w="16"/><text x="3.8696%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (16 samples, 0.02%)</title><rect x="3.6196%" y="373" width="0.0185%" height="15" fill="rgb(248,100,22)" fg:x="3133" fg:w="16"/><text x="3.8696%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (30 samples, 0.03%)</title><rect x="3.6185%" y="405" width="0.0347%" height="15" fill="rgb(208,67,9)" fg:x="3132" fg:w="30"/><text x="3.8685%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (35 samples, 0.04%)</title><rect x="3.6138%" y="421" width="0.0404%" height="15" fill="rgb(219,133,21)" fg:x="3128" fg:w="35"/><text x="3.8638%" y="431.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (40 samples, 0.05%)</title><rect x="3.6115%" y="469" width="0.0462%" height="15" fill="rgb(246,46,29)" fg:x="3126" fg:w="40"/><text x="3.8615%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (40 samples, 0.05%)</title><rect x="3.6115%" y="453" width="0.0462%" height="15" fill="rgb(246,185,52)" fg:x="3126" fg:w="40"/><text x="3.8615%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (39 samples, 0.05%)</title><rect x="3.6127%" y="437" width="0.0451%" height="15" fill="rgb(252,136,11)" fg:x="3127" fg:w="39"/><text x="3.8627%" y="447.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (82 samples, 0.09%)</title><rect x="3.5665%" y="501" width="0.0947%" height="15" fill="rgb(219,138,53)" fg:x="3087" fg:w="82"/><text x="3.8165%" y="511.50"></text></g><g><title>wgpu::Device::create_buffer (43 samples, 0.05%)</title><rect x="3.6115%" y="485" width="0.0497%" height="15" fill="rgb(211,51,23)" fg:x="3126" fg:w="43"/><text x="3.8615%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,282 samples, 2.64%)</title><rect x="3.6624%" y="437" width="2.6364%" height="15" fill="rgb(247,221,28)" fg:x="3170" fg:w="2282"/><text x="3.9124%" y="447.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (2,282 samples, 2.64%)</title><rect x="3.6624%" y="421" width="2.6364%" height="15" fill="rgb(251,222,45)" fg:x="3170" fg:w="2282"/><text x="3.9124%" y="431.50">__..</text></g><g><title>ash::device::Device::begin_command_buffer (16 samples, 0.02%)</title><rect x="6.3023%" y="389" width="0.0185%" height="15" fill="rgb(217,162,53)" fg:x="5455" fg:w="16"/><text x="6.5523%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="6.3023%" y="373" width="0.0185%" height="15" fill="rgb(229,93,14)" fg:x="5455" fg:w="16"/><text x="6.5523%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.02%)</title><rect x="6.3046%" y="357" width="0.0162%" height="15" fill="rgb(209,67,49)" fg:x="5457" fg:w="14"/><text x="6.5546%" y="367.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (22 samples, 0.03%)</title><rect x="6.2988%" y="421" width="0.0254%" height="15" fill="rgb(213,87,29)" fg:x="5452" fg:w="22"/><text x="6.5488%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (21 samples, 0.02%)</title><rect x="6.3000%" y="405" width="0.0243%" height="15" fill="rgb(205,151,52)" fg:x="5453" fg:w="21"/><text x="6.5500%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (13 samples, 0.02%)</title><rect x="6.3254%" y="421" width="0.0150%" height="15" fill="rgb(253,215,39)" fg:x="5475" fg:w="13"/><text x="6.5754%" y="431.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (13 samples, 0.02%)</title><rect x="6.3254%" y="405" width="0.0150%" height="15" fill="rgb(221,220,41)" fg:x="5475" fg:w="13"/><text x="6.5754%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.02%)</title><rect x="6.3254%" y="389" width="0.0150%" height="15" fill="rgb(218,133,21)" fg:x="5475" fg:w="13"/><text x="6.5754%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.02%)</title><rect x="6.3254%" y="373" width="0.0150%" height="15" fill="rgb(221,193,43)" fg:x="5475" fg:w="13"/><text x="6.5754%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.02%)</title><rect x="6.3254%" y="357" width="0.0150%" height="15" fill="rgb(240,128,52)" fg:x="5475" fg:w="13"/><text x="6.5754%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.02%)</title><rect x="6.3254%" y="341" width="0.0150%" height="15" fill="rgb(253,114,12)" fg:x="5475" fg:w="13"/><text x="6.5754%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="6.3300%" y="325" width="0.0104%" height="15" fill="rgb(215,223,47)" fg:x="5479" fg:w="9"/><text x="6.5800%" y="335.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (46 samples, 0.05%)</title><rect x="6.2988%" y="437" width="0.0531%" height="15" fill="rgb(248,225,23)" fg:x="5452" fg:w="46"/><text x="6.5488%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (10 samples, 0.01%)</title><rect x="6.3404%" y="421" width="0.0116%" height="15" fill="rgb(250,108,0)" fg:x="5488" fg:w="10"/><text x="6.5904%" y="431.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (10 samples, 0.01%)</title><rect x="6.3404%" y="405" width="0.0116%" height="15" fill="rgb(228,208,7)" fg:x="5488" fg:w="10"/><text x="6.5904%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="6.3404%" y="389" width="0.0116%" height="15" fill="rgb(244,45,10)" fg:x="5488" fg:w="10"/><text x="6.5904%" y="399.50"></text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (2,442 samples, 2.82%)</title><rect x="3.5468%" y="533" width="2.8213%" height="15" fill="rgb(207,125,25)" fg:x="3070" fg:w="2442"/><text x="3.7968%" y="543.50">&lt;g..</text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (2,438 samples, 2.82%)</title><rect x="3.5515%" y="517" width="2.8167%" height="15" fill="rgb(210,195,18)" fg:x="3074" fg:w="2438"/><text x="3.8015%" y="527.50">gg..</text></g><g><title>wgpu::Queue::write_buffer (2,343 samples, 2.71%)</title><rect x="3.6612%" y="501" width="2.7069%" height="15" fill="rgb(249,80,12)" fg:x="3169" fg:w="2343"/><text x="3.9112%" y="511.50">wg..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2,343 samples, 2.71%)</title><rect x="3.6612%" y="485" width="2.7069%" height="15" fill="rgb(221,65,9)" fg:x="3169" fg:w="2343"/><text x="3.9112%" y="495.50">&lt;T..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2,343 samples, 2.71%)</title><rect x="3.6612%" y="469" width="2.7069%" height="15" fill="rgb(235,49,36)" fg:x="3169" fg:w="2343"/><text x="3.9112%" y="479.50">&lt;w..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (2,342 samples, 2.71%)</title><rect x="3.6624%" y="453" width="2.7058%" height="15" fill="rgb(225,32,20)" fg:x="3170" fg:w="2342"/><text x="3.9124%" y="463.50">wg..</text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (11 samples, 0.01%)</title><rect x="6.3554%" y="437" width="0.0127%" height="15" fill="rgb(215,141,46)" fg:x="5501" fg:w="11"/><text x="6.6054%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.01%)</title><rect x="6.3554%" y="421" width="0.0127%" height="15" fill="rgb(250,160,47)" fg:x="5501" fg:w="11"/><text x="6.6054%" y="431.50"></text></g><g><title>ggez::graphics::canvas::Canvas::draw (2,443 samples, 2.82%)</title><rect x="3.5468%" y="549" width="2.8225%" height="15" fill="rgb(216,222,40)" fg:x="3070" fg:w="2443"/><text x="3.7968%" y="559.50">gg..</text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (18 samples, 0.02%)</title><rect x="6.3855%" y="501" width="0.0208%" height="15" fill="rgb(234,217,39)" fg:x="5527" fg:w="18"/><text x="6.6355%" y="511.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (35 samples, 0.04%)</title><rect x="6.3751%" y="517" width="0.0404%" height="15" fill="rgb(207,178,40)" fg:x="5518" fg:w="35"/><text x="6.6251%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="6.4224%" y="389" width="0.0116%" height="15" fill="rgb(221,136,13)" fg:x="5559" fg:w="10"/><text x="6.6724%" y="399.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (70 samples, 0.08%)</title><rect x="6.4155%" y="469" width="0.0809%" height="15" fill="rgb(249,199,10)" fg:x="5553" fg:w="70"/><text x="6.6655%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (70 samples, 0.08%)</title><rect x="6.4155%" y="453" width="0.0809%" height="15" fill="rgb(249,222,13)" fg:x="5553" fg:w="70"/><text x="6.6655%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (70 samples, 0.08%)</title><rect x="6.4155%" y="437" width="0.0809%" height="15" fill="rgb(244,185,38)" fg:x="5553" fg:w="70"/><text x="6.6655%" y="447.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (70 samples, 0.08%)</title><rect x="6.4155%" y="421" width="0.0809%" height="15" fill="rgb(236,202,9)" fg:x="5553" fg:w="70"/><text x="6.6655%" y="431.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (70 samples, 0.08%)</title><rect x="6.4155%" y="405" width="0.0809%" height="15" fill="rgb(250,229,37)" fg:x="5553" fg:w="70"/><text x="6.6655%" y="415.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (72 samples, 0.08%)</title><rect x="6.4155%" y="517" width="0.0832%" height="15" fill="rgb(206,174,23)" fg:x="5553" fg:w="72"/><text x="6.6655%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (72 samples, 0.08%)</title><rect x="6.4155%" y="501" width="0.0832%" height="15" fill="rgb(211,33,43)" fg:x="5553" fg:w="72"/><text x="6.6655%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (72 samples, 0.08%)</title><rect x="6.4155%" y="485" width="0.0832%" height="15" fill="rgb(245,58,50)" fg:x="5553" fg:w="72"/><text x="6.6655%" y="495.50"></text></g><g><title>[libX11.so.6.4.0] (12 samples, 0.01%)</title><rect x="6.5033%" y="357" width="0.0139%" height="15" fill="rgb(244,68,36)" fg:x="5629" fg:w="12"/><text x="6.7533%" y="367.50"></text></g><g><title>[libX11.so.6.4.0] (11 samples, 0.01%)</title><rect x="6.5045%" y="341" width="0.0127%" height="15" fill="rgb(232,229,15)" fg:x="5630" fg:w="11"/><text x="6.7545%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (10 samples, 0.01%)</title><rect x="6.5056%" y="325" width="0.0116%" height="15" fill="rgb(254,30,23)" fg:x="5631" fg:w="10"/><text x="6.7556%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (10 samples, 0.01%)</title><rect x="6.5056%" y="309" width="0.0116%" height="15" fill="rgb(235,160,14)" fg:x="5631" fg:w="10"/><text x="6.7556%" y="319.50"></text></g><g><title>__libc_recvmsg (10 samples, 0.01%)</title><rect x="6.5056%" y="293" width="0.0116%" height="15" fill="rgb(212,155,44)" fg:x="5631" fg:w="10"/><text x="6.7556%" y="303.50"></text></g><g><title>__recvmsg_syscall (10 samples, 0.01%)</title><rect x="6.5056%" y="277" width="0.0116%" height="15" fill="rgb(226,2,50)" fg:x="5631" fg:w="10"/><text x="6.7556%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="6.5068%" y="261" width="0.0104%" height="15" fill="rgb(234,177,6)" fg:x="5632" fg:w="9"/><text x="6.7568%" y="271.50"></text></g><g><title>_XSend (22 samples, 0.03%)</title><rect x="6.5172%" y="357" width="0.0254%" height="15" fill="rgb(217,24,9)" fg:x="5641" fg:w="22"/><text x="6.7672%" y="367.50"></text></g><g><title>xcb_writev (22 samples, 0.03%)</title><rect x="6.5172%" y="341" width="0.0254%" height="15" fill="rgb(220,13,46)" fg:x="5641" fg:w="22"/><text x="6.7672%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (22 samples, 0.03%)</title><rect x="6.5172%" y="325" width="0.0254%" height="15" fill="rgb(239,221,27)" fg:x="5641" fg:w="22"/><text x="6.7672%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (21 samples, 0.02%)</title><rect x="6.5183%" y="309" width="0.0243%" height="15" fill="rgb(222,198,25)" fg:x="5642" fg:w="21"/><text x="6.7683%" y="319.50"></text></g><g><title>__GI___writev (17 samples, 0.02%)</title><rect x="6.5229%" y="293" width="0.0196%" height="15" fill="rgb(211,99,13)" fg:x="5646" fg:w="17"/><text x="6.7729%" y="303.50"></text></g><g><title>__GI___writev (16 samples, 0.02%)</title><rect x="6.5241%" y="277" width="0.0185%" height="15" fill="rgb(232,111,31)" fg:x="5647" fg:w="16"/><text x="6.7741%" y="287.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="6.5241%" y="261" width="0.0185%" height="15" fill="rgb(245,82,37)" fg:x="5647" fg:w="16"/><text x="6.7741%" y="271.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="6.5241%" y="245" width="0.0185%" height="15" fill="rgb(227,149,46)" fg:x="5647" fg:w="16"/><text x="6.7741%" y="255.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="6.5241%" y="229" width="0.0185%" height="15" fill="rgb(218,36,50)" fg:x="5647" fg:w="16"/><text x="6.7741%" y="239.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="6.5276%" y="213" width="0.0150%" height="15" fill="rgb(226,80,48)" fg:x="5650" fg:w="13"/><text x="6.7776%" y="223.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="6.5276%" y="197" width="0.0150%" height="15" fill="rgb(238,224,15)" fg:x="5650" fg:w="13"/><text x="6.7776%" y="207.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="6.5276%" y="181" width="0.0150%" height="15" fill="rgb(241,136,10)" fg:x="5650" fg:w="13"/><text x="6.7776%" y="191.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.5287%" y="165" width="0.0139%" height="15" fill="rgb(208,32,45)" fg:x="5651" fg:w="12"/><text x="6.7787%" y="175.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.5287%" y="149" width="0.0139%" height="15" fill="rgb(207,135,9)" fg:x="5651" fg:w="12"/><text x="6.7787%" y="159.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.5287%" y="133" width="0.0139%" height="15" fill="rgb(206,86,44)" fg:x="5651" fg:w="12"/><text x="6.7787%" y="143.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.5287%" y="117" width="0.0139%" height="15" fill="rgb(245,177,15)" fg:x="5651" fg:w="12"/><text x="6.7787%" y="127.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5310%" y="101" width="0.0116%" height="15" fill="rgb(206,64,50)" fg:x="5653" fg:w="10"/><text x="6.7810%" y="111.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5310%" y="85" width="0.0116%" height="15" fill="rgb(234,36,40)" fg:x="5653" fg:w="10"/><text x="6.7810%" y="95.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5310%" y="69" width="0.0116%" height="15" fill="rgb(213,64,8)" fg:x="5653" fg:w="10"/><text x="6.7810%" y="79.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5310%" y="53" width="0.0116%" height="15" fill="rgb(210,75,36)" fg:x="5653" fg:w="10"/><text x="6.7810%" y="63.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5310%" y="37" width="0.0116%" height="15" fill="rgb(229,88,21)" fg:x="5653" fg:w="10"/><text x="6.7810%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (14 samples, 0.02%)</title><rect x="6.5449%" y="309" width="0.0162%" height="15" fill="rgb(252,204,47)" fg:x="5665" fg:w="14"/><text x="6.7949%" y="319.50"></text></g><g><title>__libc_recvmsg (12 samples, 0.01%)</title><rect x="6.5472%" y="293" width="0.0139%" height="15" fill="rgb(208,77,27)" fg:x="5667" fg:w="12"/><text x="6.7972%" y="303.50"></text></g><g><title>__recvmsg_syscall (12 samples, 0.01%)</title><rect x="6.5472%" y="277" width="0.0139%" height="15" fill="rgb(221,76,26)" fg:x="5667" fg:w="12"/><text x="6.7972%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.5472%" y="261" width="0.0139%" height="15" fill="rgb(225,139,18)" fg:x="5667" fg:w="12"/><text x="6.7972%" y="271.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.5472%" y="245" width="0.0139%" height="15" fill="rgb(230,137,11)" fg:x="5667" fg:w="12"/><text x="6.7972%" y="255.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="6.5484%" y="229" width="0.0127%" height="15" fill="rgb(212,28,1)" fg:x="5668" fg:w="11"/><text x="6.7984%" y="239.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="6.5484%" y="213" width="0.0127%" height="15" fill="rgb(248,164,17)" fg:x="5668" fg:w="11"/><text x="6.7984%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="6.5484%" y="197" width="0.0127%" height="15" fill="rgb(222,171,42)" fg:x="5668" fg:w="11"/><text x="6.7984%" y="207.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5495%" y="181" width="0.0116%" height="15" fill="rgb(243,84,45)" fg:x="5669" fg:w="10"/><text x="6.7995%" y="191.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="6.5507%" y="165" width="0.0104%" height="15" fill="rgb(252,49,23)" fg:x="5670" fg:w="9"/><text x="6.8007%" y="175.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="6.5507%" y="149" width="0.0104%" height="15" fill="rgb(215,19,7)" fg:x="5670" fg:w="9"/><text x="6.8007%" y="159.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="6.5507%" y="133" width="0.0104%" height="15" fill="rgb(238,81,41)" fg:x="5670" fg:w="9"/><text x="6.8007%" y="143.50"></text></g><g><title>_XReply (65 samples, 0.08%)</title><rect x="6.5021%" y="373" width="0.0751%" height="15" fill="rgb(210,199,37)" fg:x="5628" fg:w="65"/><text x="6.7521%" y="383.50"></text></g><g><title>xcb_wait_for_reply64 (30 samples, 0.03%)</title><rect x="6.5426%" y="357" width="0.0347%" height="15" fill="rgb(244,192,49)" fg:x="5663" fg:w="30"/><text x="6.7926%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (30 samples, 0.03%)</title><rect x="6.5426%" y="341" width="0.0347%" height="15" fill="rgb(226,211,11)" fg:x="5663" fg:w="30"/><text x="6.7926%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (29 samples, 0.03%)</title><rect x="6.5437%" y="325" width="0.0335%" height="15" fill="rgb(236,162,54)" fg:x="5664" fg:w="29"/><text x="6.7937%" y="335.50"></text></g><g><title>__GI___poll (14 samples, 0.02%)</title><rect x="6.5611%" y="309" width="0.0162%" height="15" fill="rgb(220,229,9)" fg:x="5679" fg:w="14"/><text x="6.8111%" y="319.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="6.5622%" y="293" width="0.0150%" height="15" fill="rgb(250,87,22)" fg:x="5680" fg:w="13"/><text x="6.8122%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="6.5622%" y="277" width="0.0150%" height="15" fill="rgb(239,43,17)" fg:x="5680" fg:w="13"/><text x="6.8122%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="6.5622%" y="261" width="0.0150%" height="15" fill="rgb(231,177,25)" fg:x="5680" fg:w="13"/><text x="6.8122%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="6.5645%" y="245" width="0.0127%" height="15" fill="rgb(219,179,1)" fg:x="5682" fg:w="11"/><text x="6.8145%" y="255.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="6.5657%" y="229" width="0.0116%" height="15" fill="rgb(238,219,53)" fg:x="5683" fg:w="10"/><text x="6.8157%" y="239.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (69 samples, 0.08%)</title><rect x="6.4987%" y="485" width="0.0797%" height="15" fill="rgb(232,167,36)" fg:x="5625" fg:w="69"/><text x="6.7487%" y="495.50"></text></g><g><title>winit::window::Window::inner_size (69 samples, 0.08%)</title><rect x="6.4987%" y="469" width="0.0797%" height="15" fill="rgb(244,19,51)" fg:x="5625" fg:w="69"/><text x="6.7487%" y="479.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (69 samples, 0.08%)</title><rect x="6.4987%" y="453" width="0.0797%" height="15" fill="rgb(224,6,22)" fg:x="5625" fg:w="69"/><text x="6.7487%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (69 samples, 0.08%)</title><rect x="6.4987%" y="437" width="0.0797%" height="15" fill="rgb(224,145,5)" fg:x="5625" fg:w="69"/><text x="6.7487%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (67 samples, 0.08%)</title><rect x="6.5010%" y="421" width="0.0774%" height="15" fill="rgb(234,130,49)" fg:x="5627" fg:w="67"/><text x="6.7510%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (67 samples, 0.08%)</title><rect x="6.5010%" y="405" width="0.0774%" height="15" fill="rgb(254,6,2)" fg:x="5627" fg:w="67"/><text x="6.7510%" y="415.50"></text></g><g><title>XGetGeometry (67 samples, 0.08%)</title><rect x="6.5010%" y="389" width="0.0774%" height="15" fill="rgb(208,96,46)" fg:x="5627" fg:w="67"/><text x="6.7510%" y="399.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (10 samples, 0.01%)</title><rect x="6.5819%" y="389" width="0.0116%" height="15" fill="rgb(239,3,39)" fg:x="5697" fg:w="10"/><text x="6.8319%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (10 samples, 0.01%)</title><rect x="6.5819%" y="373" width="0.0116%" height="15" fill="rgb(233,210,1)" fg:x="5697" fg:w="10"/><text x="6.8319%" y="383.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (87 samples, 0.10%)</title><rect x="6.4987%" y="517" width="0.1005%" height="15" fill="rgb(244,137,37)" fg:x="5625" fg:w="87"/><text x="6.7487%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (87 samples, 0.10%)</title><rect x="6.4987%" y="501" width="0.1005%" height="15" fill="rgb(240,136,2)" fg:x="5625" fg:w="87"/><text x="6.7487%" y="511.50"></text></g><g><title>wgpu::Queue::write_buffer (17 samples, 0.02%)</title><rect x="6.5796%" y="485" width="0.0196%" height="15" fill="rgb(239,18,37)" fg:x="5695" fg:w="17"/><text x="6.8296%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (17 samples, 0.02%)</title><rect x="6.5796%" y="469" width="0.0196%" height="15" fill="rgb(218,185,22)" fg:x="5695" fg:w="17"/><text x="6.8296%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (17 samples, 0.02%)</title><rect x="6.5796%" y="453" width="0.0196%" height="15" fill="rgb(225,218,4)" fg:x="5695" fg:w="17"/><text x="6.8296%" y="463.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (17 samples, 0.02%)</title><rect x="6.5796%" y="437" width="0.0196%" height="15" fill="rgb(230,182,32)" fg:x="5695" fg:w="17"/><text x="6.8296%" y="447.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (15 samples, 0.02%)</title><rect x="6.5819%" y="421" width="0.0173%" height="15" fill="rgb(242,56,43)" fg:x="5697" fg:w="15"/><text x="6.8319%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (15 samples, 0.02%)</title><rect x="6.5819%" y="405" width="0.0173%" height="15" fill="rgb(233,99,24)" fg:x="5697" fg:w="15"/><text x="6.8319%" y="415.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (207 samples, 0.24%)</title><rect x="6.3693%" y="549" width="0.2392%" height="15" fill="rgb(234,209,42)" fg:x="5513" fg:w="207"/><text x="6.6193%" y="559.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (203 samples, 0.23%)</title><rect x="6.3739%" y="533" width="0.2345%" height="15" fill="rgb(227,7,12)" fg:x="5517" fg:w="203"/><text x="6.6239%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (31 samples, 0.04%)</title><rect x="6.6373%" y="485" width="0.0358%" height="15" fill="rgb(245,203,43)" fg:x="5745" fg:w="31"/><text x="6.8873%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (61 samples, 0.07%)</title><rect x="6.7505%" y="453" width="0.0705%" height="15" fill="rgb(238,205,33)" fg:x="5843" fg:w="61"/><text x="7.0005%" y="463.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (59 samples, 0.07%)</title><rect x="6.7529%" y="437" width="0.0682%" height="15" fill="rgb(231,56,7)" fg:x="5845" fg:w="59"/><text x="7.0029%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.05%)</title><rect x="6.8210%" y="453" width="0.0520%" height="15" fill="rgb(244,186,29)" fg:x="5904" fg:w="45"/><text x="7.0710%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.05%)</title><rect x="6.8256%" y="437" width="0.0474%" height="15" fill="rgb(234,111,31)" fg:x="5908" fg:w="41"/><text x="7.0756%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (37 samples, 0.04%)</title><rect x="6.8303%" y="421" width="0.0427%" height="15" fill="rgb(241,149,10)" fg:x="5912" fg:w="37"/><text x="7.0803%" y="431.50"></text></g><g><title>slotmap::KeyData::new (32 samples, 0.04%)</title><rect x="6.8730%" y="453" width="0.0370%" height="15" fill="rgb(249,206,44)" fg:x="5949" fg:w="32"/><text x="7.1230%" y="463.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (602 samples, 0.70%)</title><rect x="6.6731%" y="469" width="0.6955%" height="15" fill="rgb(251,153,30)" fg:x="5776" fg:w="602"/><text x="6.9231%" y="479.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::get (397 samples, 0.46%)</title><rect x="6.9100%" y="453" width="0.4587%" height="15" fill="rgb(239,152,38)" fg:x="5981" fg:w="397"/><text x="7.1600%" y="463.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::occupied (397 samples, 0.46%)</title><rect x="6.9100%" y="437" width="0.4587%" height="15" fill="rgb(249,139,47)" fg:x="5981" fg:w="397"/><text x="7.1600%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (25 samples, 0.03%)</title><rect x="10.1946%" y="405" width="0.0289%" height="15" fill="rgb(244,64,35)" fg:x="8824" fg:w="25"/><text x="10.4446%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (1,465 samples, 1.69%)</title><rect x="8.5875%" y="421" width="1.6925%" height="15" fill="rgb(216,46,15)" fg:x="7433" fg:w="1465"/><text x="8.8375%" y="431.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (38 samples, 0.04%)</title><rect x="10.2361%" y="405" width="0.0439%" height="15" fill="rgb(250,74,19)" fg:x="8860" fg:w="38"/><text x="10.4861%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (152 samples, 0.18%)</title><rect x="10.2800%" y="421" width="0.1756%" height="15" fill="rgb(249,42,33)" fg:x="8898" fg:w="152"/><text x="10.5300%" y="431.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (130 samples, 0.15%)</title><rect x="10.3055%" y="405" width="0.1502%" height="15" fill="rgb(242,149,17)" fg:x="8920" fg:w="130"/><text x="10.5555%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (1,006 samples, 1.16%)</title><rect x="10.4557%" y="421" width="1.1623%" height="15" fill="rgb(244,29,21)" fg:x="9050" fg:w="1006"/><text x="10.7057%" y="431.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (2,944 samples, 3.40%)</title><rect x="8.4650%" y="437" width="3.4013%" height="15" fill="rgb(220,130,37)" fg:x="7327" fg:w="2944"/><text x="8.7150%" y="447.50">&lt;ne..</text></g><g><title>ggez::graphics::draw::DrawParam::scale (215 samples, 0.25%)</title><rect x="11.6179%" y="421" width="0.2484%" height="15" fill="rgb(211,67,2)" fg:x="10056" fg:w="215"/><text x="11.8679%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,542 samples, 5.25%)</title><rect x="6.6731%" y="485" width="5.2475%" height="15" fill="rgb(235,68,52)" fg:x="5776" fg:w="4542"/><text x="6.9231%" y="495.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,940 samples, 4.55%)</title><rect x="7.3686%" y="469" width="4.5520%" height="15" fill="rgb(246,142,3)" fg:x="6378" fg:w="3940"/><text x="7.6186%" y="479.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,050 samples, 3.52%)</title><rect x="8.3969%" y="453" width="3.5237%" height="15" fill="rgb(241,25,7)" fg:x="7268" fg:w="3050"/><text x="8.6469%" y="463.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (46 samples, 0.05%)</title><rect x="11.8675%" y="437" width="0.0531%" height="15" fill="rgb(242,119,39)" fg:x="10272" fg:w="46"/><text x="12.1175%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (40 samples, 0.05%)</title><rect x="11.9218%" y="485" width="0.0462%" height="15" fill="rgb(241,98,45)" fg:x="10319" fg:w="40"/><text x="12.1718%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (40 samples, 0.05%)</title><rect x="11.9749%" y="485" width="0.0462%" height="15" fill="rgb(254,28,30)" fg:x="10365" fg:w="40"/><text x="12.2249%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,830 samples, 5.58%)</title><rect x="6.6177%" y="501" width="5.5802%" height="15" fill="rgb(241,142,54)" fg:x="5728" fg:w="4830"/><text x="6.8677%" y="511.50">alloc::..</text></g><g><title>core::ptr::write (153 samples, 0.18%)</title><rect x="12.0211%" y="485" width="0.1768%" height="15" fill="rgb(222,85,15)" fg:x="10405" fg:w="153"/><text x="12.2711%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="12.1979%" y="437" width="0.0416%" height="15" fill="rgb(210,85,47)" fg:x="10558" fg:w="36"/><text x="12.4479%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (300 samples, 0.35%)</title><rect x="12.2395%" y="421" width="0.3466%" height="15" fill="rgb(224,206,25)" fg:x="10594" fg:w="300"/><text x="12.4895%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (300 samples, 0.35%)</title><rect x="12.2395%" y="405" width="0.3466%" height="15" fill="rgb(243,201,19)" fg:x="10594" fg:w="300"/><text x="12.4895%" y="415.50"></text></g><g><title>core::ptr::write (300 samples, 0.35%)</title><rect x="12.2395%" y="389" width="0.3466%" height="15" fill="rgb(236,59,4)" fg:x="10594" fg:w="300"/><text x="12.4895%" y="399.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (118 samples, 0.14%)</title><rect x="13.0112%" y="389" width="0.1363%" height="15" fill="rgb(254,179,45)" fg:x="11262" fg:w="118"/><text x="13.2612%" y="399.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (118 samples, 0.14%)</title><rect x="13.0112%" y="373" width="0.1363%" height="15" fill="rgb(226,14,10)" fg:x="11262" fg:w="118"/><text x="13.2612%" y="383.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (118 samples, 0.14%)</title><rect x="13.0112%" y="357" width="0.1363%" height="15" fill="rgb(244,27,41)" fg:x="11262" fg:w="118"/><text x="13.2612%" y="367.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (965 samples, 1.11%)</title><rect x="12.6542%" y="405" width="1.1149%" height="15" fill="rgb(235,35,32)" fg:x="10953" fg:w="965"/><text x="12.9042%" y="415.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (538 samples, 0.62%)</title><rect x="13.1476%" y="389" width="0.6216%" height="15" fill="rgb(218,68,31)" fg:x="11380" fg:w="538"/><text x="13.3976%" y="399.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (538 samples, 0.62%)</title><rect x="13.1476%" y="373" width="0.6216%" height="15" fill="rgb(207,120,37)" fg:x="11380" fg:w="538"/><text x="13.3976%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (120 samples, 0.14%)</title><rect x="15.2641%" y="357" width="0.1386%" height="15" fill="rgb(227,98,0)" fg:x="13212" fg:w="120"/><text x="15.5141%" y="367.50"></text></g><g><title>asuint (99 samples, 0.11%)</title><rect x="16.5719%" y="325" width="0.1144%" height="15" fill="rgb(207,7,3)" fg:x="14344" fg:w="99"/><text x="16.8219%" y="335.50"></text></g><g><title>exp2_inline (1,763 samples, 2.04%)</title><rect x="16.6863%" y="325" width="2.0368%" height="15" fill="rgb(206,98,19)" fg:x="14443" fg:w="1763"/><text x="16.9363%" y="335.50">e..</text></g><g><title>asuint64 (68 samples, 0.08%)</title><rect x="18.6446%" y="309" width="0.0786%" height="15" fill="rgb(217,5,26)" fg:x="16138" fg:w="68"/><text x="18.8946%" y="319.50"></text></g><g><title>log2_inline (951 samples, 1.10%)</title><rect x="18.7231%" y="325" width="1.0987%" height="15" fill="rgb(235,190,38)" fg:x="16206" fg:w="951"/><text x="18.9731%" y="335.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (4,260 samples, 4.92%)</title><rect x="14.9579%" y="373" width="4.9217%" height="15" fill="rgb(247,86,24)" fg:x="12947" fg:w="4260"/><text x="15.2079%" y="383.50">&lt;ggez:..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (3,875 samples, 4.48%)</title><rect x="15.4027%" y="357" width="4.4769%" height="15" fill="rgb(205,101,16)" fg:x="13332" fg:w="3875"/><text x="15.6527%" y="367.50">std::..</text></g><g><title>__powf_fma (3,858 samples, 4.46%)</title><rect x="15.4224%" y="341" width="4.4572%" height="15" fill="rgb(246,168,33)" fg:x="13349" fg:w="3858"/><text x="15.6724%" y="351.50">__pow..</text></g><g><title>zeroinfnan (50 samples, 0.06%)</title><rect x="19.8218%" y="325" width="0.0578%" height="15" fill="rgb(231,114,1)" fg:x="17157" fg:w="50"/><text x="20.0718%" y="335.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (4,287 samples, 4.95%)</title><rect x="14.9579%" y="389" width="4.9529%" height="15" fill="rgb(207,184,53)" fg:x="12947" fg:w="4287"/><text x="15.2079%" y="399.50">&lt;ggez:..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (27 samples, 0.03%)</title><rect x="19.8796%" y="373" width="0.0312%" height="15" fill="rgb(224,95,51)" fg:x="17207" fg:w="27"/><text x="20.1296%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (74 samples, 0.09%)</title><rect x="19.9108%" y="389" width="0.0855%" height="15" fill="rgb(212,188,45)" fg:x="17234" fg:w="74"/><text x="20.1608%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (126 samples, 0.15%)</title><rect x="21.0650%" y="373" width="0.1456%" height="15" fill="rgb(223,154,38)" fg:x="18233" fg:w="126"/><text x="21.3150%" y="383.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (83 samples, 0.10%)</title><rect x="21.1147%" y="357" width="0.0959%" height="15" fill="rgb(251,22,52)" fg:x="18276" fg:w="83"/><text x="21.3647%" y="367.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::transpose (121 samples, 0.14%)</title><rect x="21.2140%" y="373" width="0.1398%" height="15" fill="rgb(229,209,22)" fg:x="18362" fg:w="121"/><text x="21.4640%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (79 samples, 0.09%)</title><rect x="21.2625%" y="357" width="0.0913%" height="15" fill="rgb(234,138,34)" fg:x="18404" fg:w="79"/><text x="21.5125%" y="367.50"></text></g><g><title>abstop12 (47 samples, 0.05%)</title><rect x="21.5652%" y="325" width="0.0543%" height="15" fill="rgb(212,95,11)" fg:x="18666" fg:w="47"/><text x="21.8152%" y="335.50"></text></g><g><title>reduce_fast (89 samples, 0.10%)</title><rect x="21.6195%" y="325" width="0.1028%" height="15" fill="rgb(240,179,47)" fg:x="18713" fg:w="89"/><text x="21.8695%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,573 samples, 9.90%)</title><rect x="12.1979%" y="453" width="9.9046%" height="15" fill="rgb(240,163,11)" fg:x="10558" fg:w="8573"/><text x="12.4479%" y="463.50">core::iter::tr..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,537 samples, 9.86%)</title><rect x="12.2395%" y="437" width="9.8630%" height="15" fill="rgb(236,37,12)" fg:x="10594" fg:w="8537"/><text x="12.4895%" y="447.50">core::iter::ad..</text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (8,237 samples, 9.52%)</title><rect x="12.5861%" y="421" width="9.5164%" height="15" fill="rgb(232,164,16)" fg:x="10894" fg:w="8237"/><text x="12.8361%" y="431.50">ggez::graphics..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (7,213 samples, 8.33%)</title><rect x="13.7691%" y="405" width="8.3333%" height="15" fill="rgb(244,205,15)" fg:x="11918" fg:w="7213"/><text x="14.0191%" y="415.50">ggez::graphi..</text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (1,823 samples, 2.11%)</title><rect x="19.9963%" y="389" width="2.1062%" height="15" fill="rgb(223,117,47)" fg:x="17308" fg:w="1823"/><text x="20.2463%" y="399.50">g..</text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (648 samples, 0.75%)</title><rect x="21.3538%" y="373" width="0.7486%" height="15" fill="rgb(244,107,35)" fg:x="18483" fg:w="648"/><text x="21.6038%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (648 samples, 0.75%)</title><rect x="21.3538%" y="357" width="0.7486%" height="15" fill="rgb(205,140,8)" fg:x="18483" fg:w="648"/><text x="21.6038%" y="367.50"></text></g><g><title>__sincosf_fma (648 samples, 0.75%)</title><rect x="21.3538%" y="341" width="0.7486%" height="15" fill="rgb(228,84,46)" fg:x="18483" fg:w="648"/><text x="21.6038%" y="351.50"></text></g><g><title>sincosf_poly (329 samples, 0.38%)</title><rect x="21.7224%" y="325" width="0.3801%" height="15" fill="rgb(254,188,9)" fg:x="18802" fg:w="329"/><text x="21.9724%" y="335.50"></text></g><g><title>v2df_to_sf (116 samples, 0.13%)</title><rect x="21.9684%" y="309" width="0.1340%" height="15" fill="rgb(206,112,54)" fg:x="19015" fg:w="116"/><text x="22.2184%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13,406 samples, 15.49%)</title><rect x="6.6165%" y="533" width="15.4882%" height="15" fill="rgb(216,84,49)" fg:x="5727" fg:w="13406"/><text x="6.8665%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13,406 samples, 15.49%)</title><rect x="6.6165%" y="517" width="15.4882%" height="15" fill="rgb(214,194,35)" fg:x="5727" fg:w="13406"/><text x="6.8665%" y="527.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (8,575 samples, 9.91%)</title><rect x="12.1979%" y="501" width="9.9069%" height="15" fill="rgb(249,28,3)" fg:x="10558" fg:w="8575"/><text x="12.4479%" y="511.50">alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8,575 samples, 9.91%)</title><rect x="12.1979%" y="485" width="9.9069%" height="15" fill="rgb(222,56,52)" fg:x="10558" fg:w="8575"/><text x="12.4479%" y="495.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,575 samples, 9.91%)</title><rect x="12.1979%" y="469" width="9.9069%" height="15" fill="rgb(245,217,50)" fg:x="10558" fg:w="8575"/><text x="12.4479%" y="479.50">&lt;core::iter::a..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (16,064 samples, 18.56%)</title><rect x="3.5468%" y="565" width="18.5591%" height="15" fill="rgb(213,201,24)" fg:x="3070" fg:w="16064"/><text x="3.7968%" y="575.50">&lt;neuralang::MainState as ggez..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (13,407 samples, 15.49%)</title><rect x="6.6165%" y="549" width="15.4894%" height="15" fill="rgb(248,116,28)" fg:x="5727" fg:w="13407"/><text x="6.8665%" y="559.50">ggez::graphics::instance..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (4,398 samples, 5.08%)</title><rect x="22.1071%" y="533" width="5.0811%" height="15" fill="rgb(219,72,43)" fg:x="19135" fg:w="4398"/><text x="22.3571%" y="543.50">&lt;neura..</text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="27.1547%" y="517" width="0.0335%" height="15" fill="rgb(209,138,14)" fg:x="23504" fg:w="29"/><text x="27.4047%" y="527.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="27.1616%" y="501" width="0.0266%" height="15" fill="rgb(222,18,33)" fg:x="23510" fg:w="23"/><text x="27.4116%" y="511.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="27.1616%" y="485" width="0.0266%" height="15" fill="rgb(213,199,7)" fg:x="23510" fg:w="23"/><text x="27.4116%" y="495.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="27.1651%" y="469" width="0.0231%" height="15" fill="rgb(250,110,10)" fg:x="23513" fg:w="20"/><text x="27.4151%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="27.1674%" y="453" width="0.0208%" height="15" fill="rgb(248,123,6)" fg:x="23515" fg:w="18"/><text x="27.4174%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="27.1697%" y="437" width="0.0185%" height="15" fill="rgb(206,91,31)" fg:x="23517" fg:w="16"/><text x="27.4197%" y="447.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="27.1697%" y="421" width="0.0185%" height="15" fill="rgb(211,154,13)" fg:x="23517" fg:w="16"/><text x="27.4197%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="27.1720%" y="405" width="0.0162%" height="15" fill="rgb(225,148,7)" fg:x="23519" fg:w="14"/><text x="27.4220%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="27.1755%" y="389" width="0.0127%" height="15" fill="rgb(220,160,43)" fg:x="23522" fg:w="11"/><text x="27.4255%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="27.1778%" y="373" width="0.0104%" height="15" fill="rgb(213,52,39)" fg:x="23524" fg:w="9"/><text x="27.4278%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,391 samples, 1.61%)</title><rect x="32.1075%" y="501" width="1.6071%" height="15" fill="rgb(243,137,7)" fg:x="27791" fg:w="1391"/><text x="32.3575%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,615 samples, 1.87%)</title><rect x="32.1075%" y="517" width="1.8658%" height="15" fill="rgb(230,79,13)" fg:x="27791" fg:w="1615"/><text x="32.3575%" y="527.50">&lt;..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (224 samples, 0.26%)</title><rect x="33.7146%" y="501" width="0.2588%" height="15" fill="rgb(247,105,23)" fg:x="29182" fg:w="224"/><text x="33.9646%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (84 samples, 0.10%)</title><rect x="33.9734%" y="485" width="0.0970%" height="15" fill="rgb(223,179,41)" fg:x="29406" fg:w="84"/><text x="34.2234%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (369 samples, 0.43%)</title><rect x="33.9734%" y="517" width="0.4263%" height="15" fill="rgb(218,9,34)" fg:x="29406" fg:w="369"/><text x="34.2234%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (369 samples, 0.43%)</title><rect x="33.9734%" y="501" width="0.4263%" height="15" fill="rgb(222,106,8)" fg:x="29406" fg:w="369"/><text x="34.2234%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (285 samples, 0.33%)</title><rect x="34.0704%" y="485" width="0.3293%" height="15" fill="rgb(211,220,0)" fg:x="29490" fg:w="285"/><text x="34.3204%" y="495.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (603 samples, 0.70%)</title><rect x="34.3997%" y="501" width="0.6967%" height="15" fill="rgb(229,52,16)" fg:x="29775" fg:w="603"/><text x="34.6497%" y="511.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (343 samples, 0.40%)</title><rect x="34.7001%" y="485" width="0.3963%" height="15" fill="rgb(212,155,18)" fg:x="30035" fg:w="343"/><text x="34.9501%" y="495.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (106 samples, 0.12%)</title><rect x="35.0964%" y="437" width="0.1225%" height="15" fill="rgb(242,21,14)" fg:x="30378" fg:w="106"/><text x="35.3464%" y="447.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (891 samples, 1.03%)</title><rect x="34.3997%" y="517" width="1.0294%" height="15" fill="rgb(222,19,48)" fg:x="29775" fg:w="891"/><text x="34.6497%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (288 samples, 0.33%)</title><rect x="35.0964%" y="501" width="0.3327%" height="15" fill="rgb(232,45,27)" fg:x="30378" fg:w="288"/><text x="35.3464%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (288 samples, 0.33%)</title><rect x="35.0964%" y="485" width="0.3327%" height="15" fill="rgb(249,103,42)" fg:x="30378" fg:w="288"/><text x="35.3464%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (288 samples, 0.33%)</title><rect x="35.0964%" y="469" width="0.3327%" height="15" fill="rgb(246,81,33)" fg:x="30378" fg:w="288"/><text x="35.3464%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (288 samples, 0.33%)</title><rect x="35.0964%" y="453" width="0.3327%" height="15" fill="rgb(252,33,42)" fg:x="30378" fg:w="288"/><text x="35.3464%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (182 samples, 0.21%)</title><rect x="35.2188%" y="437" width="0.2103%" height="15" fill="rgb(209,212,41)" fg:x="30484" fg:w="182"/><text x="35.4688%" y="447.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (39 samples, 0.05%)</title><rect x="36.5971%" y="469" width="0.0451%" height="15" fill="rgb(207,154,6)" fg:x="31677" fg:w="39"/><text x="36.8471%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,102 samples, 1.27%)</title><rect x="35.4291%" y="517" width="1.2732%" height="15" fill="rgb(223,64,47)" fg:x="30666" fg:w="1102"/><text x="35.6791%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (91 samples, 0.11%)</title><rect x="36.5971%" y="501" width="0.1051%" height="15" fill="rgb(211,161,38)" fg:x="31677" fg:w="91"/><text x="36.8471%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (91 samples, 0.11%)</title><rect x="36.5971%" y="485" width="0.1051%" height="15" fill="rgb(219,138,40)" fg:x="31677" fg:w="91"/><text x="36.8471%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (52 samples, 0.06%)</title><rect x="36.6422%" y="469" width="0.0601%" height="15" fill="rgb(241,228,46)" fg:x="31716" fg:w="52"/><text x="36.8922%" y="479.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (1,563 samples, 1.81%)</title><rect x="36.7023%" y="517" width="1.8058%" height="15" fill="rgb(223,209,38)" fg:x="31768" fg:w="1563"/><text x="36.9523%" y="527.50">&lt;..</text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (1,563 samples, 1.81%)</title><rect x="36.7023%" y="501" width="1.8058%" height="15" fill="rgb(236,164,45)" fg:x="31768" fg:w="1563"/><text x="36.9523%" y="511.50">&lt;..</text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::SubAssign&gt;::sub_assign (103 samples, 0.12%)</title><rect x="38.5080%" y="517" width="0.1190%" height="15" fill="rgb(231,15,5)" fg:x="33331" fg:w="103"/><text x="38.7580%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::SubAssign&gt;::sub_assign (103 samples, 0.12%)</title><rect x="38.5080%" y="501" width="0.1190%" height="15" fill="rgb(252,35,15)" fg:x="33331" fg:w="103"/><text x="38.7580%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (596 samples, 0.69%)</title><rect x="38.6270%" y="517" width="0.6886%" height="15" fill="rgb(248,181,18)" fg:x="33434" fg:w="596"/><text x="38.8770%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="39.3156%" y="517" width="0.0127%" height="15" fill="rgb(233,39,42)" fg:x="34030" fg:w="11"/><text x="39.5656%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8,251 samples, 9.53%)</title><rect x="39.3283%" y="517" width="9.5326%" height="15" fill="rgb(238,110,33)" fg:x="34041" fg:w="8251"/><text x="39.5783%" y="527.50">core::cmp::imp..</text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (8,251 samples, 9.53%)</title><rect x="39.3283%" y="501" width="9.5326%" height="15" fill="rgb(233,195,10)" fg:x="34041" fg:w="8251"/><text x="39.5783%" y="511.50">&lt;slotmap::Defa..</text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (8,251 samples, 9.53%)</title><rect x="39.3283%" y="485" width="9.5326%" height="15" fill="rgb(254,105,3)" fg:x="34041" fg:w="8251"/><text x="39.5783%" y="495.50">&lt;slotmap::KeyD..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (73 samples, 0.08%)</title><rect x="48.8609%" y="517" width="0.0843%" height="15" fill="rgb(221,225,9)" fg:x="42292" fg:w="73"/><text x="49.1109%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (73 samples, 0.08%)</title><rect x="48.8609%" y="501" width="0.0843%" height="15" fill="rgb(224,227,45)" fg:x="42292" fg:w="73"/><text x="49.1109%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (52 samples, 0.06%)</title><rect x="48.8851%" y="485" width="0.0601%" height="15" fill="rgb(229,198,43)" fg:x="42313" fg:w="52"/><text x="49.1351%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (817 samples, 0.94%)</title><rect x="48.9452%" y="501" width="0.9439%" height="15" fill="rgb(206,209,35)" fg:x="42365" fg:w="817"/><text x="49.1952%" y="511.50"></text></g><g><title>glam::f32::vec2::&lt;impl core::ops::arith::Mul&lt;glam::f32::vec2::Vec2&gt; for f32&gt;::mul (821 samples, 0.95%)</title><rect x="48.9452%" y="517" width="0.9485%" height="15" fill="rgb(245,195,53)" fg:x="42365" fg:w="821"/><text x="49.1952%" y="527.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (825 samples, 0.95%)</title><rect x="53.2014%" y="501" width="0.9531%" height="15" fill="rgb(240,92,26)" fg:x="46049" fg:w="825"/><text x="53.4514%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (825 samples, 0.95%)</title><rect x="53.2014%" y="485" width="0.9531%" height="15" fill="rgb(207,40,23)" fg:x="46049" fg:w="825"/><text x="53.4514%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="54.1545%" y="501" width="0.0139%" height="15" fill="rgb(223,111,35)" fg:x="46874" fg:w="12"/><text x="54.4045%" y="511.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="54.1568%" y="485" width="0.0116%" height="15" fill="rgb(229,147,28)" fg:x="46876" fg:w="10"/><text x="54.4068%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="54.1568%" y="469" width="0.0116%" height="15" fill="rgb(211,29,28)" fg:x="46876" fg:w="10"/><text x="54.4068%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="54.1568%" y="453" width="0.0116%" height="15" fill="rgb(228,72,33)" fg:x="46876" fg:w="10"/><text x="54.4068%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="54.1580%" y="437" width="0.0104%" height="15" fill="rgb(205,214,31)" fg:x="46877" fg:w="9"/><text x="54.4080%" y="447.50"></text></g><g><title>glam::f32::math::std_math::sqrt (2,640 samples, 3.05%)</title><rect x="54.1684%" y="485" width="3.0500%" height="15" fill="rgb(224,111,15)" fg:x="46886" fg:w="2640"/><text x="54.4184%" y="495.50">gla..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2,640 samples, 3.05%)</title><rect x="54.1684%" y="469" width="3.0500%" height="15" fill="rgb(253,21,26)" fg:x="46886" fg:w="2640"/><text x="54.4184%" y="479.50">std..</text></g><g><title>neuralang::b_collides_b (8,404 samples, 9.71%)</title><rect x="49.8937%" y="517" width="9.7093%" height="15" fill="rgb(245,139,43)" fg:x="43186" fg:w="8404"/><text x="50.1437%" y="527.50">neuralang::b_c..</text></g><g><title>glam::f32::vec2::Vec2::length (4,704 samples, 5.43%)</title><rect x="54.1684%" y="501" width="5.4346%" height="15" fill="rgb(252,170,7)" fg:x="46886" fg:w="4704"/><text x="54.4184%" y="511.50">glam::f..</text></g><g><title>glam::f32::vec2::Vec2::dot (2,064 samples, 2.38%)</title><rect x="57.2184%" y="485" width="2.3846%" height="15" fill="rgb(231,118,14)" fg:x="49526" fg:w="2064"/><text x="57.4684%" y="495.50">gl..</text></g><g><title>neuralang::oob (283 samples, 0.33%)</title><rect x="59.6030%" y="517" width="0.3270%" height="15" fill="rgb(238,83,0)" fg:x="51590" fg:w="283"/><text x="59.8530%" y="527.50"></text></g><g><title>neuralang::two_to_one (284 samples, 0.33%)</title><rect x="59.9300%" y="517" width="0.3281%" height="15" fill="rgb(221,39,39)" fg:x="51873" fg:w="284"/><text x="60.1800%" y="527.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (1,237 samples, 1.43%)</title><rect x="60.7572%" y="501" width="1.4291%" height="15" fill="rgb(222,119,46)" fg:x="52589" fg:w="1237"/><text x="61.0072%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (10,651 samples, 12.31%)</title><rect x="62.1863%" y="501" width="12.3053%" height="15" fill="rgb(222,165,49)" fg:x="53826" fg:w="10651"/><text x="62.4363%" y="511.50">core::option::Opti..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get::{{closure}} (10,364 samples, 11.97%)</title><rect x="62.5179%" y="485" width="11.9738%" height="15" fill="rgb(219,113,52)" fg:x="54113" fg:w="10364"/><text x="62.7679%" y="495.50">slotmap::basic::Sl..</text></g><g><title>core::option::Option&lt;T&gt;::map (307 samples, 0.35%)</title><rect x="74.4917%" y="501" width="0.3547%" height="15" fill="rgb(214,7,15)" fg:x="64477" fg:w="307"/><text x="74.7417%" y="511.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="74.8128%" y="485" width="0.0335%" height="15" fill="rgb(235,32,4)" fg:x="64755" fg:w="29"/><text x="75.0628%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="74.8198%" y="469" width="0.0266%" height="15" fill="rgb(238,90,54)" fg:x="64761" fg:w="23"/><text x="75.0698%" y="479.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="74.8198%" y="453" width="0.0266%" height="15" fill="rgb(213,208,19)" fg:x="64761" fg:w="23"/><text x="75.0698%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="74.8198%" y="437" width="0.0266%" height="15" fill="rgb(233,156,4)" fg:x="64761" fg:w="23"/><text x="75.0698%" y="447.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="74.8198%" y="421" width="0.0266%" height="15" fill="rgb(207,194,5)" fg:x="64761" fg:w="23"/><text x="75.0698%" y="431.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="74.8221%" y="405" width="0.0243%" height="15" fill="rgb(206,111,30)" fg:x="64763" fg:w="21"/><text x="75.0721%" y="415.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="74.8244%" y="389" width="0.0220%" height="15" fill="rgb(243,70,54)" fg:x="64765" fg:w="19"/><text x="75.0744%" y="399.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="74.8279%" y="373" width="0.0185%" height="15" fill="rgb(242,28,8)" fg:x="64768" fg:w="16"/><text x="75.0779%" y="383.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="74.8290%" y="357" width="0.0173%" height="15" fill="rgb(219,106,18)" fg:x="64769" fg:w="15"/><text x="75.0790%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="74.8313%" y="341" width="0.0150%" height="15" fill="rgb(244,222,10)" fg:x="64771" fg:w="13"/><text x="75.0813%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="74.8348%" y="325" width="0.0116%" height="15" fill="rgb(236,179,52)" fg:x="64774" fg:w="10"/><text x="75.0848%" y="335.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (13,256 samples, 15.31%)</title><rect x="60.2581%" y="517" width="15.3149%" height="15" fill="rgb(213,23,39)" fg:x="52157" fg:w="13256"/><text x="60.5081%" y="527.50">slotmap::basic::SlotMap..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (629 samples, 0.73%)</title><rect x="74.8463%" y="501" width="0.7267%" height="15" fill="rgb(238,48,10)" fg:x="64784" fg:w="629"/><text x="75.0963%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (629 samples, 0.73%)</title><rect x="74.8463%" y="485" width="0.7267%" height="15" fill="rgb(251,196,23)" fg:x="64784" fg:w="629"/><text x="75.0963%" y="495.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (250 samples, 0.29%)</title><rect x="75.5788%" y="501" width="0.2888%" height="15" fill="rgb(250,152,24)" fg:x="65418" fg:w="250"/><text x="75.8288%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (470 samples, 0.54%)</title><rect x="75.8676%" y="501" width="0.5430%" height="15" fill="rgb(209,150,17)" fg:x="65668" fg:w="470"/><text x="76.1176%" y="511.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut::{{closure}} (406 samples, 0.47%)</title><rect x="75.9416%" y="485" width="0.4691%" height="15" fill="rgb(234,202,34)" fg:x="65732" fg:w="406"/><text x="76.1916%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (124 samples, 0.14%)</title><rect x="76.4106%" y="501" width="0.1433%" height="15" fill="rgb(253,148,53)" fg:x="66138" fg:w="124"/><text x="76.6606%" y="511.50"></text></g><g><title>neuralang::World::check_collisions (42,936 samples, 49.60%)</title><rect x="27.1882%" y="533" width="49.6049%" height="15" fill="rgb(218,129,16)" fg:x="23533" fg:w="42936"/><text x="27.4382%" y="543.50">neuralang::World::check_collisions</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (1,056 samples, 1.22%)</title><rect x="75.5730%" y="517" width="1.2200%" height="15" fill="rgb(216,85,19)" fg:x="65413" fg:w="1056"/><text x="75.8230%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (207 samples, 0.24%)</title><rect x="76.5539%" y="501" width="0.2392%" height="15" fill="rgb(235,228,7)" fg:x="66262" fg:w="207"/><text x="76.8039%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (207 samples, 0.24%)</title><rect x="76.5539%" y="485" width="0.2392%" height="15" fill="rgb(245,175,0)" fg:x="66262" fg:w="207"/><text x="76.8039%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (95 samples, 0.11%)</title><rect x="77.4539%" y="469" width="0.1098%" height="15" fill="rgb(208,168,36)" fg:x="67041" fg:w="95"/><text x="77.7039%" y="479.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (52 samples, 0.06%)</title><rect x="77.5036%" y="453" width="0.0601%" height="15" fill="rgb(246,171,24)" fg:x="67084" fg:w="52"/><text x="77.7536%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.05%)</title><rect x="77.5637%" y="469" width="0.0462%" height="15" fill="rgb(215,142,24)" fg:x="67136" fg:w="40"/><text x="77.8137%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.05%)</title><rect x="77.5637%" y="453" width="0.0462%" height="15" fill="rgb(250,187,7)" fg:x="67136" fg:w="40"/><text x="77.8137%" y="463.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (741 samples, 0.86%)</title><rect x="76.8058%" y="485" width="0.8561%" height="15" fill="rgb(228,66,33)" fg:x="66480" fg:w="741"/><text x="77.0558%" y="495.50"></text></g><g><title>slotmap::KeyData::new (43 samples, 0.05%)</title><rect x="77.6122%" y="469" width="0.0497%" height="15" fill="rgb(234,215,21)" fg:x="67178" fg:w="43"/><text x="77.8622%" y="479.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (508 samples, 0.59%)</title><rect x="77.8051%" y="453" width="0.5869%" height="15" fill="rgb(222,191,20)" fg:x="67345" fg:w="508"/><text x="78.0551%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (508 samples, 0.59%)</title><rect x="77.8051%" y="437" width="0.5869%" height="15" fill="rgb(245,79,54)" fg:x="67345" fg:w="508"/><text x="78.0551%" y="447.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (254 samples, 0.29%)</title><rect x="78.3920%" y="453" width="0.2935%" height="15" fill="rgb(240,10,37)" fg:x="67853" fg:w="254"/><text x="78.6420%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (254 samples, 0.29%)</title><rect x="78.3920%" y="437" width="0.2935%" height="15" fill="rgb(214,192,32)" fg:x="67853" fg:w="254"/><text x="78.6420%" y="447.50"></text></g><g><title>abstop12 (77 samples, 0.09%)</title><rect x="78.9004%" y="405" width="0.0890%" height="15" fill="rgb(209,36,54)" fg:x="68293" fg:w="77"/><text x="79.1504%" y="415.50"></text></g><g><title>reduce_fast (147 samples, 0.17%)</title><rect x="78.9893%" y="405" width="0.1698%" height="15" fill="rgb(220,10,11)" fg:x="68370" fg:w="147"/><text x="79.2393%" y="415.50"></text></g><g><title>neuralang::dir_from_theta (904 samples, 1.04%)</title><rect x="78.6855%" y="453" width="1.0444%" height="15" fill="rgb(221,106,17)" fg:x="68107" fg:w="904"/><text x="78.9355%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (904 samples, 1.04%)</title><rect x="78.6855%" y="437" width="1.0444%" height="15" fill="rgb(251,142,44)" fg:x="68107" fg:w="904"/><text x="78.9355%" y="447.50"></text></g><g><title>__sincosf_fma (901 samples, 1.04%)</title><rect x="78.6889%" y="421" width="1.0409%" height="15" fill="rgb(238,13,15)" fg:x="68110" fg:w="901"/><text x="78.9389%" y="431.50"></text></g><g><title>sincosf_poly (494 samples, 0.57%)</title><rect x="79.1592%" y="405" width="0.5707%" height="15" fill="rgb(208,107,27)" fg:x="68517" fg:w="494"/><text x="79.4092%" y="415.50"></text></g><g><title>v2df_to_sf (184 samples, 0.21%)</title><rect x="79.5173%" y="389" width="0.2126%" height="15" fill="rgb(205,136,37)" fg:x="68827" fg:w="184"/><text x="79.7673%" y="399.50"></text></g><g><title>neuralang::oob (100 samples, 0.12%)</title><rect x="79.7299%" y="453" width="0.1155%" height="15" fill="rgb(250,205,27)" fg:x="69011" fg:w="100"/><text x="79.9799%" y="463.50"></text></g><g><title>neuralang::World::move_beings (2,645 samples, 3.06%)</title><rect x="76.7931%" y="533" width="3.0558%" height="15" fill="rgb(210,80,43)" fg:x="66469" fg:w="2645"/><text x="77.0431%" y="543.50">neu..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,645 samples, 3.06%)</title><rect x="76.7931%" y="517" width="3.0558%" height="15" fill="rgb(247,160,36)" fg:x="66469" fg:w="2645"/><text x="77.0431%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,644 samples, 3.05%)</title><rect x="76.7942%" y="501" width="3.0547%" height="15" fill="rgb(234,13,49)" fg:x="66470" fg:w="2644"/><text x="77.0442%" y="511.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,893 samples, 2.19%)</title><rect x="77.6619%" y="485" width="2.1870%" height="15" fill="rgb(234,122,0)" fg:x="67221" fg:w="1893"/><text x="77.9119%" y="495.50">c..</text></g><g><title>neuralang::World::move_beings::{{closure}} (1,893 samples, 2.19%)</title><rect x="77.6619%" y="469" width="2.1870%" height="15" fill="rgb(207,146,38)" fg:x="67221" fg:w="1893"/><text x="77.9119%" y="479.50">n..</text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (45 samples, 0.05%)</title><rect x="80.6518%" y="485" width="0.0520%" height="15" fill="rgb(207,177,25)" fg:x="69809" fg:w="45"/><text x="80.9018%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (60 samples, 0.07%)</title><rect x="80.6357%" y="501" width="0.0693%" height="15" fill="rgb(211,178,42)" fg:x="69795" fg:w="60"/><text x="80.8857%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="80.7050%" y="501" width="0.0335%" height="15" fill="rgb(230,69,54)" fg:x="69855" fg:w="29"/><text x="80.9550%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="80.7050%" y="485" width="0.0335%" height="15" fill="rgb(214,135,41)" fg:x="69855" fg:w="29"/><text x="80.9550%" y="495.50"></text></g><g><title>neuralang::World::tire_beings (830 samples, 0.96%)</title><rect x="79.8489%" y="533" width="0.9589%" height="15" fill="rgb(237,67,25)" fg:x="69114" fg:w="830"/><text x="80.0989%" y="543.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (726 samples, 0.84%)</title><rect x="79.9690%" y="517" width="0.8388%" height="15" fill="rgb(222,189,50)" fg:x="69218" fg:w="726"/><text x="80.2190%" y="527.50"></text></g><g><title>slotmap::KeyData::new (57 samples, 0.07%)</title><rect x="80.7419%" y="501" width="0.0659%" height="15" fill="rgb(245,148,34)" fg:x="69887" fg:w="57"/><text x="80.9919%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (21 samples, 0.02%)</title><rect x="81.1371%" y="517" width="0.0243%" height="15" fill="rgb(222,29,6)" fg:x="70229" fg:w="21"/><text x="81.3871%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (21 samples, 0.02%)</title><rect x="81.1371%" y="501" width="0.0243%" height="15" fill="rgb(221,189,43)" fg:x="70229" fg:w="21"/><text x="81.3871%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (21 samples, 0.02%)</title><rect x="81.1371%" y="485" width="0.0243%" height="15" fill="rgb(207,36,27)" fg:x="70229" fg:w="21"/><text x="81.3871%" y="495.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (55 samples, 0.06%)</title><rect x="81.1613%" y="517" width="0.0635%" height="15" fill="rgb(217,90,24)" fg:x="70250" fg:w="55"/><text x="81.4113%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (55 samples, 0.06%)</title><rect x="81.1613%" y="501" width="0.0635%" height="15" fill="rgb(224,66,35)" fg:x="70250" fg:w="55"/><text x="81.4113%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (636 samples, 0.73%)</title><rect x="81.2249%" y="517" width="0.7348%" height="15" fill="rgb(221,13,50)" fg:x="70305" fg:w="636"/><text x="81.4749%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (74 samples, 0.09%)</title><rect x="82.2589%" y="501" width="0.0855%" height="15" fill="rgb(236,68,49)" fg:x="71200" fg:w="74"/><text x="82.5089%" y="511.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (73 samples, 0.08%)</title><rect x="82.2600%" y="485" width="0.0843%" height="15" fill="rgb(229,146,28)" fg:x="71201" fg:w="73"/><text x="82.5100%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="82.3444%" y="501" width="0.0127%" height="15" fill="rgb(225,31,38)" fg:x="71274" fg:w="11"/><text x="82.5944%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="82.3444%" y="485" width="0.0127%" height="15" fill="rgb(250,208,3)" fg:x="71274" fg:w="11"/><text x="82.5944%" y="495.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (400 samples, 0.46%)</title><rect x="81.9597%" y="517" width="0.4621%" height="15" fill="rgb(246,54,23)" fg:x="70941" fg:w="400"/><text x="82.2097%" y="527.50"></text></g><g><title>slotmap::KeyData::new (56 samples, 0.06%)</title><rect x="82.3571%" y="501" width="0.0647%" height="15" fill="rgb(243,76,11)" fg:x="71285" fg:w="56"/><text x="82.6071%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (103 samples, 0.12%)</title><rect x="82.4241%" y="517" width="0.1190%" height="15" fill="rgb(245,21,50)" fg:x="71343" fg:w="103"/><text x="82.6741%" y="527.50"></text></g><g><title>core::ptr::write (25 samples, 0.03%)</title><rect x="82.5142%" y="501" width="0.0289%" height="15" fill="rgb(228,9,43)" fg:x="71421" fg:w="25"/><text x="82.7642%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (934 samples, 1.08%)</title><rect x="82.5442%" y="485" width="1.0791%" height="15" fill="rgb(208,100,47)" fg:x="71447" fg:w="934"/><text x="82.7942%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (44 samples, 0.05%)</title><rect x="83.6233%" y="485" width="0.0508%" height="15" fill="rgb(232,26,8)" fg:x="72381" fg:w="44"/><text x="83.8733%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (974 samples, 1.13%)</title><rect x="83.6742%" y="485" width="1.1253%" height="15" fill="rgb(216,166,38)" fg:x="72425" fg:w="974"/><text x="83.9242%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (926 samples, 1.07%)</title><rect x="83.7296%" y="469" width="1.0698%" height="15" fill="rgb(251,202,51)" fg:x="72473" fg:w="926"/><text x="83.9796%" y="479.50"></text></g><g><title>neuralang::World::update_cells::{{closure}} (926 samples, 1.07%)</title><rect x="83.7296%" y="453" width="1.0698%" height="15" fill="rgb(254,216,34)" fg:x="72473" fg:w="926"/><text x="83.9796%" y="463.50"></text></g><g><title>core::cmp::PartialEq::ne (926 samples, 1.07%)</title><rect x="83.7296%" y="437" width="1.0698%" height="15" fill="rgb(251,32,27)" fg:x="72473" fg:w="926"/><text x="83.9796%" y="447.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (926 samples, 1.07%)</title><rect x="83.7296%" y="421" width="1.0698%" height="15" fill="rgb(208,127,28)" fg:x="72473" fg:w="926"/><text x="83.9796%" y="431.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (926 samples, 1.07%)</title><rect x="83.7296%" y="405" width="1.0698%" height="15" fill="rgb(224,137,22)" fg:x="72473" fg:w="926"/><text x="83.9796%" y="415.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (33 samples, 0.04%)</title><rect x="84.7613%" y="389" width="0.0381%" height="15" fill="rgb(254,70,32)" fg:x="73366" fg:w="33"/><text x="85.0113%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1,957 samples, 2.26%)</title><rect x="82.5431%" y="517" width="2.2610%" height="15" fill="rgb(229,75,37)" fg:x="71446" fg:w="1957"/><text x="82.7931%" y="527.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (1,956 samples, 2.26%)</title><rect x="82.5442%" y="501" width="2.2598%" height="15" fill="rgb(252,64,23)" fg:x="71447" fg:w="1956"/><text x="82.7942%" y="511.50">a..</text></g><g><title>neuralang::oob (42 samples, 0.05%)</title><rect x="84.8041%" y="517" width="0.0485%" height="15" fill="rgb(232,162,48)" fg:x="73403" fg:w="42"/><text x="85.0541%" y="527.50"></text></g><g><title>__fmodf (678 samples, 0.78%)</title><rect x="86.1639%" y="501" width="0.7833%" height="15" fill="rgb(246,160,12)" fg:x="74580" fg:w="678"/><text x="86.4139%" y="511.50"></text></g><g><title>neuralang::pos_to_cell (10,398 samples, 12.01%)</title><rect x="84.8526%" y="517" width="12.0130%" height="15" fill="rgb(247,166,0)" fg:x="73445" fg:w="10398"/><text x="85.1026%" y="527.50">neuralang::pos_to_..</text></g><g><title>__ieee754_fmodf (8,585 samples, 9.92%)</title><rect x="86.9472%" y="501" width="9.9184%" height="15" fill="rgb(249,219,21)" fg:x="75258" fg:w="8585"/><text x="87.1972%" y="511.50">__ieee754_fmodf</text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="96.8437%" y="485" width="0.0220%" height="15" fill="rgb(205,209,3)" fg:x="83824" fg:w="19"/><text x="97.0937%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="96.8448%" y="469" width="0.0208%" height="15" fill="rgb(243,44,1)" fg:x="83825" fg:w="18"/><text x="97.0948%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="96.8448%" y="453" width="0.0208%" height="15" fill="rgb(206,159,16)" fg:x="83825" fg:w="18"/><text x="97.0948%" y="463.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="96.8460%" y="437" width="0.0196%" height="15" fill="rgb(244,77,30)" fg:x="83826" fg:w="17"/><text x="97.0960%" y="447.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="96.8471%" y="421" width="0.0185%" height="15" fill="rgb(218,69,12)" fg:x="83827" fg:w="16"/><text x="97.0971%" y="431.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="96.8483%" y="405" width="0.0173%" height="15" fill="rgb(212,87,7)" fg:x="83828" fg:w="15"/><text x="97.0983%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.8517%" y="389" width="0.0139%" height="15" fill="rgb(245,114,25)" fg:x="83831" fg:w="12"/><text x="97.1017%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.8529%" y="373" width="0.0127%" height="15" fill="rgb(210,61,42)" fg:x="83832" fg:w="11"/><text x="97.1029%" y="383.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="96.8552%" y="357" width="0.0104%" height="15" fill="rgb(211,52,33)" fg:x="83834" fg:w="9"/><text x="97.1052%" y="367.50"></text></g><g><title>neuralang::World::step (64,740 samples, 74.80%)</title><rect x="22.1071%" y="549" width="74.7955%" height="15" fill="rgb(234,58,33)" fg:x="19135" fg:w="64740"/><text x="22.3571%" y="559.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (13,931 samples, 16.09%)</title><rect x="80.8078%" y="533" width="16.0948%" height="15" fill="rgb(220,115,36)" fg:x="69944" fg:w="13931"/><text x="81.0578%" y="543.50">neuralang::World::update_..</text></g><g><title>neuralang::same_partition_index (32 samples, 0.04%)</title><rect x="96.8656%" y="517" width="0.0370%" height="15" fill="rgb(243,153,54)" fg:x="83843" fg:w="32"/><text x="97.1156%" y="527.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (64,742 samples, 74.80%)</title><rect x="22.1059%" y="565" width="74.7978%" height="15" fill="rgb(251,47,18)" fg:x="19134" fg:w="64742"/><text x="22.3559%" y="575.50">&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (12 samples, 0.01%)</title><rect x="96.9188%" y="485" width="0.0139%" height="15" fill="rgb(242,102,42)" fg:x="83889" fg:w="12"/><text x="97.1688%" y="495.50"></text></g><g><title>wgpu::Surface::get_current_texture (45 samples, 0.05%)</title><rect x="96.9107%" y="549" width="0.0520%" height="15" fill="rgb(234,31,38)" fg:x="83882" fg:w="45"/><text x="97.1607%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (45 samples, 0.05%)</title><rect x="96.9107%" y="533" width="0.0520%" height="15" fill="rgb(221,117,51)" fg:x="83882" fg:w="45"/><text x="97.1607%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (45 samples, 0.05%)</title><rect x="96.9107%" y="517" width="0.0520%" height="15" fill="rgb(212,20,18)" fg:x="83882" fg:w="45"/><text x="97.1607%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (45 samples, 0.05%)</title><rect x="96.9107%" y="501" width="0.0520%" height="15" fill="rgb(245,133,36)" fg:x="83882" fg:w="45"/><text x="97.1607%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (26 samples, 0.03%)</title><rect x="96.9326%" y="485" width="0.0300%" height="15" fill="rgb(212,6,19)" fg:x="83901" fg:w="26"/><text x="97.1826%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (18 samples, 0.02%)</title><rect x="96.9419%" y="469" width="0.0208%" height="15" fill="rgb(218,1,36)" fg:x="83909" fg:w="18"/><text x="97.1919%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (18 samples, 0.02%)</title><rect x="96.9419%" y="453" width="0.0208%" height="15" fill="rgb(246,84,54)" fg:x="83909" fg:w="18"/><text x="97.1919%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="96.9511%" y="437" width="0.0116%" height="15" fill="rgb(242,110,6)" fg:x="83917" fg:w="10"/><text x="97.2011%" y="447.50"></text></g><g><title>[libX11.so.6.4.0] (11 samples, 0.01%)</title><rect x="96.9731%" y="437" width="0.0127%" height="15" fill="rgb(214,47,5)" fg:x="83936" fg:w="11"/><text x="97.2231%" y="447.50"></text></g><g><title>_XSend (34 samples, 0.04%)</title><rect x="96.9858%" y="437" width="0.0393%" height="15" fill="rgb(218,159,25)" fg:x="83947" fg:w="34"/><text x="97.2358%" y="447.50"></text></g><g><title>xcb_writev (34 samples, 0.04%)</title><rect x="96.9858%" y="421" width="0.0393%" height="15" fill="rgb(215,211,28)" fg:x="83947" fg:w="34"/><text x="97.2358%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (33 samples, 0.04%)</title><rect x="96.9869%" y="405" width="0.0381%" height="15" fill="rgb(238,59,32)" fg:x="83948" fg:w="33"/><text x="97.2369%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (30 samples, 0.03%)</title><rect x="96.9904%" y="389" width="0.0347%" height="15" fill="rgb(226,82,3)" fg:x="83951" fg:w="30"/><text x="97.2404%" y="399.50"></text></g><g><title>__GI___writev (21 samples, 0.02%)</title><rect x="97.0008%" y="373" width="0.0243%" height="15" fill="rgb(240,164,32)" fg:x="83960" fg:w="21"/><text x="97.2508%" y="383.50"></text></g><g><title>__GI___writev (21 samples, 0.02%)</title><rect x="97.0008%" y="357" width="0.0243%" height="15" fill="rgb(232,46,7)" fg:x="83960" fg:w="21"/><text x="97.2508%" y="367.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="97.0008%" y="341" width="0.0243%" height="15" fill="rgb(229,129,53)" fg:x="83960" fg:w="21"/><text x="97.2508%" y="351.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="97.0019%" y="325" width="0.0231%" height="15" fill="rgb(234,188,29)" fg:x="83961" fg:w="20"/><text x="97.2519%" y="335.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="97.0019%" y="309" width="0.0231%" height="15" fill="rgb(246,141,4)" fg:x="83961" fg:w="20"/><text x="97.2519%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="97.0019%" y="293" width="0.0231%" height="15" fill="rgb(229,23,39)" fg:x="83961" fg:w="20"/><text x="97.2519%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="97.0019%" y="277" width="0.0231%" height="15" fill="rgb(206,12,3)" fg:x="83961" fg:w="20"/><text x="97.2519%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="97.0031%" y="261" width="0.0220%" height="15" fill="rgb(252,226,20)" fg:x="83962" fg:w="19"/><text x="97.2531%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="97.0031%" y="245" width="0.0220%" height="15" fill="rgb(216,123,35)" fg:x="83962" fg:w="19"/><text x="97.2531%" y="255.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="97.0031%" y="229" width="0.0220%" height="15" fill="rgb(212,68,40)" fg:x="83962" fg:w="19"/><text x="97.2531%" y="239.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="97.0043%" y="213" width="0.0208%" height="15" fill="rgb(254,125,32)" fg:x="83963" fg:w="18"/><text x="97.2543%" y="223.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="97.0043%" y="197" width="0.0208%" height="15" fill="rgb(253,97,22)" fg:x="83963" fg:w="18"/><text x="97.2543%" y="207.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="97.0077%" y="181" width="0.0173%" height="15" fill="rgb(241,101,14)" fg:x="83966" fg:w="15"/><text x="97.2577%" y="191.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0089%" y="165" width="0.0162%" height="15" fill="rgb(238,103,29)" fg:x="83967" fg:w="14"/><text x="97.2589%" y="175.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0089%" y="149" width="0.0162%" height="15" fill="rgb(233,195,47)" fg:x="83967" fg:w="14"/><text x="97.2589%" y="159.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="97.0100%" y="133" width="0.0150%" height="15" fill="rgb(246,218,30)" fg:x="83968" fg:w="13"/><text x="97.2600%" y="143.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="97.0112%" y="117" width="0.0139%" height="15" fill="rgb(219,145,47)" fg:x="83969" fg:w="12"/><text x="97.2612%" y="127.50"></text></g><g><title>[libxcb.so.1.1.0] (17 samples, 0.02%)</title><rect x="97.0274%" y="389" width="0.0196%" height="15" fill="rgb(243,12,26)" fg:x="83983" fg:w="17"/><text x="97.2774%" y="399.50"></text></g><g><title>__libc_recvmsg (16 samples, 0.02%)</title><rect x="97.0285%" y="373" width="0.0185%" height="15" fill="rgb(214,87,16)" fg:x="83984" fg:w="16"/><text x="97.2785%" y="383.50"></text></g><g><title>__recvmsg_syscall (16 samples, 0.02%)</title><rect x="97.0285%" y="357" width="0.0185%" height="15" fill="rgb(208,99,42)" fg:x="83984" fg:w="16"/><text x="97.2785%" y="367.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="97.0297%" y="341" width="0.0173%" height="15" fill="rgb(253,99,2)" fg:x="83985" fg:w="15"/><text x="97.2797%" y="351.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0308%" y="325" width="0.0162%" height="15" fill="rgb(220,168,23)" fg:x="83986" fg:w="14"/><text x="97.2808%" y="335.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0308%" y="309" width="0.0162%" height="15" fill="rgb(242,38,24)" fg:x="83986" fg:w="14"/><text x="97.2808%" y="319.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0308%" y="293" width="0.0162%" height="15" fill="rgb(225,182,9)" fg:x="83986" fg:w="14"/><text x="97.2808%" y="303.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0308%" y="277" width="0.0162%" height="15" fill="rgb(243,178,37)" fg:x="83986" fg:w="14"/><text x="97.2808%" y="287.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0308%" y="261" width="0.0162%" height="15" fill="rgb(232,139,19)" fg:x="83986" fg:w="14"/><text x="97.2808%" y="271.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0308%" y="245" width="0.0162%" height="15" fill="rgb(225,201,24)" fg:x="83986" fg:w="14"/><text x="97.2808%" y="255.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="97.0320%" y="229" width="0.0150%" height="15" fill="rgb(221,47,46)" fg:x="83987" fg:w="13"/><text x="97.2820%" y="239.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="97.0320%" y="213" width="0.0150%" height="15" fill="rgb(249,23,13)" fg:x="83987" fg:w="13"/><text x="97.2820%" y="223.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="97.0354%" y="197" width="0.0116%" height="15" fill="rgb(219,9,5)" fg:x="83990" fg:w="10"/><text x="97.2854%" y="207.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (141 samples, 0.16%)</title><rect x="96.9037%" y="565" width="0.1629%" height="15" fill="rgb(254,171,16)" fg:x="83876" fg:w="141"/><text x="97.1537%" y="575.50"></text></g><g><title>winit::window::Window::inner_size (85 samples, 0.10%)</title><rect x="96.9684%" y="549" width="0.0982%" height="15" fill="rgb(230,171,20)" fg:x="83932" fg:w="85"/><text x="97.2184%" y="559.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (85 samples, 0.10%)</title><rect x="96.9684%" y="533" width="0.0982%" height="15" fill="rgb(210,71,41)" fg:x="83932" fg:w="85"/><text x="97.2184%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (85 samples, 0.10%)</title><rect x="96.9684%" y="517" width="0.0982%" height="15" fill="rgb(206,173,20)" fg:x="83932" fg:w="85"/><text x="97.2184%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (84 samples, 0.10%)</title><rect x="96.9696%" y="501" width="0.0970%" height="15" fill="rgb(233,88,34)" fg:x="83933" fg:w="84"/><text x="97.2196%" y="511.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (84 samples, 0.10%)</title><rect x="96.9696%" y="485" width="0.0970%" height="15" fill="rgb(223,209,46)" fg:x="83933" fg:w="84"/><text x="97.2196%" y="495.50"></text></g><g><title>XGetGeometry (84 samples, 0.10%)</title><rect x="96.9696%" y="469" width="0.0970%" height="15" fill="rgb(250,43,18)" fg:x="83933" fg:w="84"/><text x="97.2196%" y="479.50"></text></g><g><title>_XReply (81 samples, 0.09%)</title><rect x="96.9731%" y="453" width="0.0936%" height="15" fill="rgb(208,13,10)" fg:x="83936" fg:w="81"/><text x="97.2231%" y="463.50"></text></g><g><title>xcb_wait_for_reply64 (36 samples, 0.04%)</title><rect x="97.0250%" y="437" width="0.0416%" height="15" fill="rgb(212,200,36)" fg:x="83981" fg:w="36"/><text x="97.2750%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (36 samples, 0.04%)</title><rect x="97.0250%" y="421" width="0.0416%" height="15" fill="rgb(225,90,30)" fg:x="83981" fg:w="36"/><text x="97.2750%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.04%)</title><rect x="97.0262%" y="405" width="0.0404%" height="15" fill="rgb(236,182,39)" fg:x="83982" fg:w="35"/><text x="97.2762%" y="415.50"></text></g><g><title>__GI___poll (17 samples, 0.02%)</title><rect x="97.0470%" y="389" width="0.0196%" height="15" fill="rgb(212,144,35)" fg:x="84000" fg:w="17"/><text x="97.2970%" y="399.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="97.0470%" y="373" width="0.0196%" height="15" fill="rgb(228,63,44)" fg:x="84000" fg:w="17"/><text x="97.2970%" y="383.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="97.0482%" y="357" width="0.0185%" height="15" fill="rgb(228,109,6)" fg:x="84001" fg:w="16"/><text x="97.2982%" y="367.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="97.0482%" y="341" width="0.0185%" height="15" fill="rgb(238,117,24)" fg:x="84001" fg:w="16"/><text x="97.2982%" y="351.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="97.0493%" y="325" width="0.0173%" height="15" fill="rgb(242,26,26)" fg:x="84002" fg:w="15"/><text x="97.2993%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="97.0493%" y="309" width="0.0173%" height="15" fill="rgb(221,92,48)" fg:x="84002" fg:w="15"/><text x="97.2993%" y="319.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0505%" y="293" width="0.0162%" height="15" fill="rgb(209,209,32)" fg:x="84003" fg:w="14"/><text x="97.3005%" y="303.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0505%" y="277" width="0.0162%" height="15" fill="rgb(221,70,22)" fg:x="84003" fg:w="14"/><text x="97.3005%" y="287.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0505%" y="261" width="0.0162%" height="15" fill="rgb(248,145,5)" fg:x="84003" fg:w="14"/><text x="97.3005%" y="271.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="97.0516%" y="245" width="0.0150%" height="15" fill="rgb(226,116,26)" fg:x="84004" fg:w="13"/><text x="97.3016%" y="255.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="97.0516%" y="229" width="0.0150%" height="15" fill="rgb(244,5,17)" fg:x="84004" fg:w="13"/><text x="97.3016%" y="239.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="97.0528%" y="213" width="0.0139%" height="15" fill="rgb(252,159,33)" fg:x="84005" fg:w="12"/><text x="97.3028%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.0539%" y="197" width="0.0127%" height="15" fill="rgb(206,71,0)" fg:x="84006" fg:w="11"/><text x="97.3039%" y="207.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (10 samples, 0.01%)</title><rect x="97.0713%" y="437" width="0.0116%" height="15" fill="rgb(233,118,54)" fg:x="84021" fg:w="10"/><text x="97.3213%" y="447.50"></text></g><g><title>core::mem::drop (28 samples, 0.03%)</title><rect x="97.0666%" y="549" width="0.0323%" height="15" fill="rgb(234,83,48)" fg:x="84017" fg:w="28"/><text x="97.3166%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (28 samples, 0.03%)</title><rect x="97.0666%" y="533" width="0.0323%" height="15" fill="rgb(228,3,54)" fg:x="84017" fg:w="28"/><text x="97.3166%" y="543.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="97.0678%" y="517" width="0.0312%" height="15" fill="rgb(226,155,13)" fg:x="84018" fg:w="27"/><text x="97.3178%" y="527.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (27 samples, 0.03%)</title><rect x="97.0678%" y="501" width="0.0312%" height="15" fill="rgb(241,28,37)" fg:x="84018" fg:w="27"/><text x="97.3178%" y="511.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (27 samples, 0.03%)</title><rect x="97.0678%" y="485" width="0.0312%" height="15" fill="rgb(233,93,10)" fg:x="84018" fg:w="27"/><text x="97.3178%" y="495.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (27 samples, 0.03%)</title><rect x="97.0678%" y="469" width="0.0312%" height="15" fill="rgb(225,113,19)" fg:x="84018" fg:w="27"/><text x="97.3178%" y="479.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (27 samples, 0.03%)</title><rect x="97.0678%" y="453" width="0.0312%" height="15" fill="rgb(241,2,18)" fg:x="84018" fg:w="27"/><text x="97.3178%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.02%)</title><rect x="97.1637%" y="277" width="0.0150%" height="15" fill="rgb(228,207,21)" fg:x="84101" fg:w="13"/><text x="97.4137%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.02%)</title><rect x="97.1568%" y="309" width="0.0231%" height="15" fill="rgb(213,211,35)" fg:x="84095" fg:w="20"/><text x="97.4068%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.02%)</title><rect x="97.1591%" y="293" width="0.0208%" height="15" fill="rgb(209,83,10)" fg:x="84097" fg:w="18"/><text x="97.4091%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (27 samples, 0.03%)</title><rect x="97.1498%" y="325" width="0.0312%" height="15" fill="rgb(209,164,1)" fg:x="84089" fg:w="27"/><text x="97.3998%" y="335.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (50 samples, 0.06%)</title><rect x="97.1244%" y="485" width="0.0578%" height="15" fill="rgb(213,184,43)" fg:x="84067" fg:w="50"/><text x="97.3744%" y="495.50"></text></g><g><title>ash::device::Device::queue_submit (50 samples, 0.06%)</title><rect x="97.1244%" y="469" width="0.0578%" height="15" fill="rgb(231,61,34)" fg:x="84067" fg:w="50"/><text x="97.3744%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (50 samples, 0.06%)</title><rect x="97.1244%" y="453" width="0.0578%" height="15" fill="rgb(235,75,3)" fg:x="84067" fg:w="50"/><text x="97.3744%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (48 samples, 0.06%)</title><rect x="97.1267%" y="437" width="0.0555%" height="15" fill="rgb(220,106,47)" fg:x="84069" fg:w="48"/><text x="97.3767%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (47 samples, 0.05%)</title><rect x="97.1279%" y="421" width="0.0543%" height="15" fill="rgb(210,196,33)" fg:x="84070" fg:w="47"/><text x="97.3779%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (47 samples, 0.05%)</title><rect x="97.1279%" y="405" width="0.0543%" height="15" fill="rgb(229,154,42)" fg:x="84070" fg:w="47"/><text x="97.3779%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.05%)</title><rect x="97.1313%" y="389" width="0.0508%" height="15" fill="rgb(228,114,26)" fg:x="84073" fg:w="44"/><text x="97.3813%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (37 samples, 0.04%)</title><rect x="97.1394%" y="373" width="0.0427%" height="15" fill="rgb(208,144,1)" fg:x="84080" fg:w="37"/><text x="97.3894%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (33 samples, 0.04%)</title><rect x="97.1440%" y="357" width="0.0381%" height="15" fill="rgb(239,112,37)" fg:x="84084" fg:w="33"/><text x="97.3940%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (30 samples, 0.03%)</title><rect x="97.1475%" y="341" width="0.0347%" height="15" fill="rgb(210,96,50)" fg:x="84087" fg:w="30"/><text x="97.3975%" y="351.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (12 samples, 0.01%)</title><rect x="97.2030%" y="469" width="0.0139%" height="15" fill="rgb(222,178,2)" fg:x="84135" fg:w="12"/><text x="97.4530%" y="479.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (12 samples, 0.01%)</title><rect x="97.2030%" y="453" width="0.0139%" height="15" fill="rgb(226,74,18)" fg:x="84135" fg:w="12"/><text x="97.4530%" y="463.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (23 samples, 0.03%)</title><rect x="97.2168%" y="469" width="0.0266%" height="15" fill="rgb(225,67,54)" fg:x="84147" fg:w="23"/><text x="97.4668%" y="479.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (16 samples, 0.02%)</title><rect x="97.2249%" y="453" width="0.0185%" height="15" fill="rgb(251,92,32)" fg:x="84154" fg:w="16"/><text x="97.4749%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (16 samples, 0.02%)</title><rect x="97.2249%" y="437" width="0.0185%" height="15" fill="rgb(228,149,22)" fg:x="84154" fg:w="16"/><text x="97.4749%" y="447.50"></text></g><g><title>ash::device::Device::reset_command_pool (15 samples, 0.02%)</title><rect x="97.2261%" y="421" width="0.0173%" height="15" fill="rgb(243,54,13)" fg:x="84155" fg:w="15"/><text x="97.4761%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="97.2261%" y="405" width="0.0173%" height="15" fill="rgb(243,180,28)" fg:x="84155" fg:w="15"/><text x="97.4761%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="97.2261%" y="389" width="0.0173%" height="15" fill="rgb(208,167,24)" fg:x="84155" fg:w="15"/><text x="97.4761%" y="399.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (10 samples, 0.01%)</title><rect x="97.2434%" y="469" width="0.0116%" height="15" fill="rgb(245,73,45)" fg:x="84170" fg:w="10"/><text x="97.4934%" y="479.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (48 samples, 0.06%)</title><rect x="97.2030%" y="485" width="0.0555%" height="15" fill="rgb(237,203,48)" fg:x="84135" fg:w="48"/><text x="97.4530%" y="495.50"></text></g><g><title>wgpu::Queue::submit (139 samples, 0.16%)</title><rect x="97.1163%" y="549" width="0.1606%" height="15" fill="rgb(211,197,16)" fg:x="84060" fg:w="139"/><text x="97.3663%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (139 samples, 0.16%)</title><rect x="97.1163%" y="533" width="0.1606%" height="15" fill="rgb(243,99,51)" fg:x="84060" fg:w="139"/><text x="97.3663%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (139 samples, 0.16%)</title><rect x="97.1163%" y="517" width="0.1606%" height="15" fill="rgb(215,123,29)" fg:x="84060" fg:w="139"/><text x="97.3663%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (139 samples, 0.16%)</title><rect x="97.1163%" y="501" width="0.1606%" height="15" fill="rgb(239,186,37)" fg:x="84060" fg:w="139"/><text x="97.3663%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (9 samples, 0.01%)</title><rect x="97.2665%" y="485" width="0.0104%" height="15" fill="rgb(252,136,39)" fg:x="84190" fg:w="9"/><text x="97.5165%" y="495.50"></text></g><g><title>ash::device::Device::begin_command_buffer (9 samples, 0.01%)</title><rect x="97.2665%" y="469" width="0.0104%" height="15" fill="rgb(223,213,32)" fg:x="84190" fg:w="9"/><text x="97.5165%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="97.2665%" y="453" width="0.0104%" height="15" fill="rgb(233,115,5)" fg:x="84190" fg:w="9"/><text x="97.5165%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (10 samples, 0.01%)</title><rect x="97.3116%" y="341" width="0.0116%" height="15" fill="rgb(207,226,44)" fg:x="84229" fg:w="10"/><text x="97.5616%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="97.3116%" y="325" width="0.0116%" height="15" fill="rgb(208,126,0)" fg:x="84229" fg:w="10"/><text x="97.5616%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="97.3127%" y="309" width="0.0104%" height="15" fill="rgb(244,66,21)" fg:x="84230" fg:w="9"/><text x="97.5627%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.02%)</title><rect x="97.4306%" y="213" width="0.0243%" height="15" fill="rgb(222,97,12)" fg:x="84332" fg:w="21"/><text x="97.6806%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="97.4433%" y="197" width="0.0116%" height="15" fill="rgb(219,213,19)" fg:x="84343" fg:w="10"/><text x="97.6933%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (42 samples, 0.05%)</title><rect x="97.4075%" y="245" width="0.0485%" height="15" fill="rgb(252,169,30)" fg:x="84312" fg:w="42"/><text x="97.6575%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.04%)</title><rect x="97.4144%" y="229" width="0.0416%" height="15" fill="rgb(206,32,51)" fg:x="84318" fg:w="36"/><text x="97.6644%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (92 samples, 0.11%)</title><rect x="97.3566%" y="261" width="0.1063%" height="15" fill="rgb(250,172,42)" fg:x="84268" fg:w="92"/><text x="97.6066%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (103 samples, 0.12%)</title><rect x="97.3462%" y="277" width="0.1190%" height="15" fill="rgb(209,34,43)" fg:x="84259" fg:w="103"/><text x="97.5962%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (107 samples, 0.12%)</title><rect x="97.3439%" y="293" width="0.1236%" height="15" fill="rgb(223,11,35)" fg:x="84257" fg:w="107"/><text x="97.5939%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (707 samples, 0.82%)</title><rect x="97.3405%" y="309" width="0.8168%" height="15" fill="rgb(251,219,26)" fg:x="84254" fg:w="707"/><text x="97.5905%" y="319.50"></text></g><g><title>__GI___ioctl (597 samples, 0.69%)</title><rect x="97.4675%" y="293" width="0.6897%" height="15" fill="rgb(231,119,3)" fg:x="84364" fg:w="597"/><text x="97.7175%" y="303.50"></text></g><g><title>[unknown] (597 samples, 0.69%)</title><rect x="97.4675%" y="277" width="0.6897%" height="15" fill="rgb(216,97,11)" fg:x="84364" fg:w="597"/><text x="97.7175%" y="287.50"></text></g><g><title>[unknown] (78 samples, 0.09%)</title><rect x="98.0671%" y="261" width="0.0901%" height="15" fill="rgb(223,59,9)" fg:x="84883" fg:w="78"/><text x="98.3171%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.04%)</title><rect x="98.1203%" y="245" width="0.0370%" height="15" fill="rgb(233,93,31)" fg:x="84929" fg:w="32"/><text x="98.3703%" y="255.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="98.1342%" y="229" width="0.0231%" height="15" fill="rgb(239,81,33)" fg:x="84941" fg:w="20"/><text x="98.3842%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (751 samples, 0.87%)</title><rect x="97.2919%" y="373" width="0.8676%" height="15" fill="rgb(213,120,34)" fg:x="84212" fg:w="751"/><text x="97.5419%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (741 samples, 0.86%)</title><rect x="97.3035%" y="357" width="0.8561%" height="15" fill="rgb(243,49,53)" fg:x="84222" fg:w="741"/><text x="97.5535%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (724 samples, 0.84%)</title><rect x="97.3231%" y="341" width="0.8365%" height="15" fill="rgb(247,216,33)" fg:x="84239" fg:w="724"/><text x="97.5731%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (712 samples, 0.82%)</title><rect x="97.3370%" y="325" width="0.8226%" height="15" fill="rgb(226,26,14)" fg:x="84251" fg:w="712"/><text x="97.5870%" y="335.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (770 samples, 0.89%)</title><rect x="97.2804%" y="485" width="0.8896%" height="15" fill="rgb(215,49,53)" fg:x="84202" fg:w="770"/><text x="97.5304%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (770 samples, 0.89%)</title><rect x="97.2804%" y="469" width="0.8896%" height="15" fill="rgb(245,162,40)" fg:x="84202" fg:w="770"/><text x="97.5304%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (770 samples, 0.89%)</title><rect x="97.2804%" y="453" width="0.8896%" height="15" fill="rgb(229,68,17)" fg:x="84202" fg:w="770"/><text x="97.5304%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (768 samples, 0.89%)</title><rect x="97.2827%" y="437" width="0.8873%" height="15" fill="rgb(213,182,10)" fg:x="84204" fg:w="768"/><text x="97.5327%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (766 samples, 0.88%)</title><rect x="97.2850%" y="421" width="0.8850%" height="15" fill="rgb(245,125,30)" fg:x="84206" fg:w="766"/><text x="97.5350%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (765 samples, 0.88%)</title><rect x="97.2862%" y="405" width="0.8838%" height="15" fill="rgb(232,202,2)" fg:x="84207" fg:w="765"/><text x="97.5362%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (763 samples, 0.88%)</title><rect x="97.2885%" y="389" width="0.8815%" height="15" fill="rgb(237,140,51)" fg:x="84209" fg:w="763"/><text x="97.5385%" y="399.50"></text></g><g><title>wgpu::SurfaceTexture::present (775 samples, 0.90%)</title><rect x="97.2781%" y="549" width="0.8954%" height="15" fill="rgb(236,157,25)" fg:x="84200" fg:w="775"/><text x="97.5281%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (775 samples, 0.90%)</title><rect x="97.2781%" y="533" width="0.8954%" height="15" fill="rgb(219,209,0)" fg:x="84200" fg:w="775"/><text x="97.5281%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (774 samples, 0.89%)</title><rect x="97.2792%" y="517" width="0.8942%" height="15" fill="rgb(240,116,54)" fg:x="84201" fg:w="774"/><text x="97.5292%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (773 samples, 0.89%)</title><rect x="97.2804%" y="501" width="0.8931%" height="15" fill="rgb(216,10,36)" fg:x="84202" fg:w="773"/><text x="97.5304%" y="511.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (959 samples, 1.11%)</title><rect x="97.0666%" y="565" width="1.1080%" height="15" fill="rgb(222,72,44)" fg:x="84017" fg:w="959"/><text x="97.3166%" y="575.50"></text></g><g><title>ggez::event::run (81,934 samples, 94.66%)</title><rect x="3.5307%" y="693" width="94.6601%" height="15" fill="rgb(232,159,9)" fg:x="3056" fg:w="81934"/><text x="3.7807%" y="703.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (81,934 samples, 94.66%)</title><rect x="3.5307%" y="677" width="94.6601%" height="15" fill="rgb(210,39,32)" fg:x="3056" fg:w="81934"/><text x="3.7807%" y="687.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (81,934 samples, 94.66%)</title><rect x="3.5307%" y="661" width="94.6601%" height="15" fill="rgb(216,194,45)" fg:x="3056" fg:w="81934"/><text x="3.7807%" y="671.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (81,934 samples, 94.66%)</title><rect x="3.5307%" y="645" width="94.6601%" height="15" fill="rgb(218,18,35)" fg:x="3056" fg:w="81934"/><text x="3.7807%" y="655.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (81,934 samples, 94.66%)</title><rect x="3.5307%" y="629" width="94.6601%" height="15" fill="rgb(207,83,51)" fg:x="3056" fg:w="81934"/><text x="3.7807%" y="639.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (81,934 samples, 94.66%)</title><rect x="3.5307%" y="613" width="94.6601%" height="15" fill="rgb(225,63,43)" fg:x="3056" fg:w="81934"/><text x="3.7807%" y="623.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (81,923 samples, 94.65%)</title><rect x="3.5434%" y="597" width="94.6474%" height="15" fill="rgb(207,57,36)" fg:x="3067" fg:w="81923"/><text x="3.7934%" y="607.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (81,923 samples, 94.65%)</title><rect x="3.5434%" y="581" width="94.6474%" height="15" fill="rgb(216,99,33)" fg:x="3067" fg:w="81923"/><text x="3.7934%" y="591.50">ggez::event::run::{{closure}}</text></g><g><title>neuralang::main (82,023 samples, 94.76%)</title><rect x="3.4290%" y="725" width="94.7629%" height="15" fill="rgb(225,42,16)" fg:x="2968" fg:w="82023"/><text x="3.6790%" y="735.50">neuralang::main</text></g><g><title>neuralang::run (82,023 samples, 94.76%)</title><rect x="3.4290%" y="709" width="94.7629%" height="15" fill="rgb(220,201,45)" fg:x="2968" fg:w="82023"/><text x="3.6790%" y="719.50">neuralang::run</text></g><g><title>slotmap::KeyData::new (85 samples, 0.10%)</title><rect x="98.1919%" y="725" width="0.0982%" height="15" fill="rgb(225,33,4)" fg:x="84991" fg:w="85"/><text x="98.4419%" y="735.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="549" width="0.0116%" height="15" fill="rgb(224,33,50)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="533" width="0.0116%" height="15" fill="rgb(246,198,51)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="517" width="0.0116%" height="15" fill="rgb(205,22,4)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="501" width="0.0116%" height="15" fill="rgb(206,3,8)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="485" width="0.0116%" height="15" fill="rgb(251,23,15)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="469" width="0.0116%" height="15" fill="rgb(252,88,28)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="453" width="0.0116%" height="15" fill="rgb(212,127,14)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.3005%" y="437" width="0.0116%" height="15" fill="rgb(247,145,37)" fg:x="85085" fg:w="10"/><text x="98.5505%" y="447.50"></text></g><g><title>ash::entry::Entry::create_instance (12 samples, 0.01%)</title><rect x="98.3005%" y="629" width="0.0139%" height="15" fill="rgb(209,117,53)" fg:x="85085" fg:w="12"/><text x="98.5505%" y="639.50"></text></g><g><title>vkCreateInstance (12 samples, 0.01%)</title><rect x="98.3005%" y="613" width="0.0139%" height="15" fill="rgb(212,90,42)" fg:x="85085" fg:w="12"/><text x="98.5505%" y="623.50"></text></g><g><title>[libvulkan.so.1.3.204] (12 samples, 0.01%)</title><rect x="98.3005%" y="597" width="0.0139%" height="15" fill="rgb(218,164,37)" fg:x="85085" fg:w="12"/><text x="98.5505%" y="607.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (12 samples, 0.01%)</title><rect x="98.3005%" y="581" width="0.0139%" height="15" fill="rgb(246,65,34)" fg:x="85085" fg:w="12"/><text x="98.5505%" y="591.50"></text></g><g><title>[libvulkan.so.1.3.204] (12 samples, 0.01%)</title><rect x="98.3005%" y="565" width="0.0139%" height="15" fill="rgb(231,100,33)" fg:x="85085" fg:w="12"/><text x="98.5505%" y="575.50"></text></g><g><title>__GI__dl_catch_exception (13 samples, 0.02%)</title><rect x="98.3155%" y="373" width="0.0150%" height="15" fill="rgb(228,126,14)" fg:x="85098" fg:w="13"/><text x="98.5655%" y="383.50"></text></g><g><title>dl_open_worker_begin (13 samples, 0.02%)</title><rect x="98.3155%" y="357" width="0.0150%" height="15" fill="rgb(215,173,21)" fg:x="85098" fg:w="13"/><text x="98.5655%" y="367.50"></text></g><g><title>_dl_relocate_object (12 samples, 0.01%)</title><rect x="98.3167%" y="341" width="0.0139%" height="15" fill="rgb(210,6,40)" fg:x="85099" fg:w="12"/><text x="98.5667%" y="351.50"></text></g><g><title>elf_dynamic_do_Rela (12 samples, 0.01%)</title><rect x="98.3167%" y="325" width="0.0139%" height="15" fill="rgb(212,48,18)" fg:x="85099" fg:w="12"/><text x="98.5667%" y="335.50"></text></g><g><title>___dlopen (16 samples, 0.02%)</title><rect x="98.3155%" y="517" width="0.0185%" height="15" fill="rgb(230,214,11)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="527.50"></text></g><g><title>dlopen_implementation (16 samples, 0.02%)</title><rect x="98.3155%" y="501" width="0.0185%" height="15" fill="rgb(254,105,39)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="511.50"></text></g><g><title>_dlerror_run (16 samples, 0.02%)</title><rect x="98.3155%" y="485" width="0.0185%" height="15" fill="rgb(245,158,5)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="495.50"></text></g><g><title>__GI__dl_catch_error (16 samples, 0.02%)</title><rect x="98.3155%" y="469" width="0.0185%" height="15" fill="rgb(249,208,11)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="479.50"></text></g><g><title>__GI__dl_catch_exception (16 samples, 0.02%)</title><rect x="98.3155%" y="453" width="0.0185%" height="15" fill="rgb(210,39,28)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="463.50"></text></g><g><title>dlopen_doit (16 samples, 0.02%)</title><rect x="98.3155%" y="437" width="0.0185%" height="15" fill="rgb(211,56,53)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="447.50"></text></g><g><title>_dl_open (16 samples, 0.02%)</title><rect x="98.3155%" y="421" width="0.0185%" height="15" fill="rgb(226,201,30)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="431.50"></text></g><g><title>__GI__dl_catch_exception (16 samples, 0.02%)</title><rect x="98.3155%" y="405" width="0.0185%" height="15" fill="rgb(239,101,34)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="415.50"></text></g><g><title>dl_open_worker (16 samples, 0.02%)</title><rect x="98.3155%" y="389" width="0.0185%" height="15" fill="rgb(226,209,5)" fg:x="85098" fg:w="16"/><text x="98.5655%" y="399.50"></text></g><g><title>wgpu::Instance::new (30 samples, 0.03%)</title><rect x="98.3005%" y="725" width="0.0347%" height="15" fill="rgb(250,105,47)" fg:x="85085" fg:w="30"/><text x="98.5505%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (30 samples, 0.03%)</title><rect x="98.3005%" y="709" width="0.0347%" height="15" fill="rgb(230,72,3)" fg:x="85085" fg:w="30"/><text x="98.5505%" y="719.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (30 samples, 0.03%)</title><rect x="98.3005%" y="693" width="0.0347%" height="15" fill="rgb(232,218,39)" fg:x="85085" fg:w="30"/><text x="98.5505%" y="703.50"></text></g><g><title>wgpu_core::instance::Instance::new (30 samples, 0.03%)</title><rect x="98.3005%" y="677" width="0.0347%" height="15" fill="rgb(248,166,6)" fg:x="85085" fg:w="30"/><text x="98.5505%" y="687.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (30 samples, 0.03%)</title><rect x="98.3005%" y="661" width="0.0347%" height="15" fill="rgb(247,89,20)" fg:x="85085" fg:w="30"/><text x="98.5505%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (30 samples, 0.03%)</title><rect x="98.3005%" y="645" width="0.0347%" height="15" fill="rgb(248,130,54)" fg:x="85085" fg:w="30"/><text x="98.5505%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (17 samples, 0.02%)</title><rect x="98.3155%" y="629" width="0.0196%" height="15" fill="rgb(234,196,4)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="639.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (17 samples, 0.02%)</title><rect x="98.3155%" y="613" width="0.0196%" height="15" fill="rgb(250,143,31)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="623.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (17 samples, 0.02%)</title><rect x="98.3155%" y="597" width="0.0196%" height="15" fill="rgb(211,110,34)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="607.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (17 samples, 0.02%)</title><rect x="98.3155%" y="581" width="0.0196%" height="15" fill="rgb(215,124,48)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="591.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (17 samples, 0.02%)</title><rect x="98.3155%" y="565" width="0.0196%" height="15" fill="rgb(216,46,13)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (17 samples, 0.02%)</title><rect x="98.3155%" y="549" width="0.0196%" height="15" fill="rgb(205,184,25)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="559.50"></text></g><g><title>[libvulkan.so.1.3.204] (17 samples, 0.02%)</title><rect x="98.3155%" y="533" width="0.0196%" height="15" fill="rgb(228,1,10)" fg:x="85098" fg:w="17"/><text x="98.5655%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="98.3571%" y="469" width="0.0104%" height="15" fill="rgb(213,116,27)" fg:x="85134" fg:w="9"/><text x="98.6071%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="98.3571%" y="453" width="0.0104%" height="15" fill="rgb(241,95,50)" fg:x="85134" fg:w="9"/><text x="98.6071%" y="463.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (29 samples, 0.03%)</title><rect x="98.3571%" y="725" width="0.0335%" height="15" fill="rgb(238,48,32)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (29 samples, 0.03%)</title><rect x="98.3571%" y="709" width="0.0335%" height="15" fill="rgb(235,113,49)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="719.50"></text></g><g><title>ash::instance::Instance::create_device (29 samples, 0.03%)</title><rect x="98.3571%" y="693" width="0.0335%" height="15" fill="rgb(205,127,43)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="703.50"></text></g><g><title>vkCreateDevice (29 samples, 0.03%)</title><rect x="98.3571%" y="677" width="0.0335%" height="15" fill="rgb(250,162,2)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (29 samples, 0.03%)</title><rect x="98.3571%" y="661" width="0.0335%" height="15" fill="rgb(220,13,41)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="671.50"></text></g><g><title>[libvulkan.so.1.3.204] (29 samples, 0.03%)</title><rect x="98.3571%" y="645" width="0.0335%" height="15" fill="rgb(249,221,25)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="655.50"></text></g><g><title>[libvulkan.so.1.3.204] (29 samples, 0.03%)</title><rect x="98.3571%" y="629" width="0.0335%" height="15" fill="rgb(215,208,19)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="613" width="0.0335%" height="15" fill="rgb(236,175,2)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="597" width="0.0335%" height="15" fill="rgb(241,52,2)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="581" width="0.0335%" height="15" fill="rgb(248,140,14)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="565" width="0.0335%" height="15" fill="rgb(253,22,42)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="549" width="0.0335%" height="15" fill="rgb(234,61,47)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="533" width="0.0335%" height="15" fill="rgb(208,226,15)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="517" width="0.0335%" height="15" fill="rgb(217,221,4)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="501" width="0.0335%" height="15" fill="rgb(212,174,34)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.3571%" y="485" width="0.0335%" height="15" fill="rgb(253,83,4)" fg:x="85134" fg:w="29"/><text x="98.6071%" y="495.50"></text></g><g><title>__GI___ioctl (20 samples, 0.02%)</title><rect x="98.3675%" y="469" width="0.0231%" height="15" fill="rgb(250,195,49)" fg:x="85143" fg:w="20"/><text x="98.6175%" y="479.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="98.3675%" y="453" width="0.0231%" height="15" fill="rgb(241,192,25)" fg:x="85143" fg:w="20"/><text x="98.6175%" y="463.50"></text></g><g><title>[unknown] (83,484 samples, 96.45%)</title><rect x="1.9548%" y="741" width="96.4509%" height="15" fill="rgb(208,124,10)" fg:x="1692" fg:w="83484"/><text x="2.2048%" y="751.50">[unknown]</text></g><g><title>[unknown] (40 samples, 0.05%)</title><rect x="98.4542%" y="565" width="0.0462%" height="15" fill="rgb(222,33,0)" fg:x="85218" fg:w="40"/><text x="98.7042%" y="575.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="98.4600%" y="549" width="0.0404%" height="15" fill="rgb(234,209,28)" fg:x="85223" fg:w="35"/><text x="98.7100%" y="559.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="98.4600%" y="533" width="0.0404%" height="15" fill="rgb(224,11,23)" fg:x="85223" fg:w="35"/><text x="98.7100%" y="543.50"></text></g><g><title>[unknown] (33 samples, 0.04%)</title><rect x="98.4623%" y="517" width="0.0381%" height="15" fill="rgb(232,99,1)" fg:x="85225" fg:w="33"/><text x="98.7123%" y="527.50"></text></g><g><title>[unknown] (32 samples, 0.04%)</title><rect x="98.4634%" y="501" width="0.0370%" height="15" fill="rgb(237,95,45)" fg:x="85226" fg:w="32"/><text x="98.7134%" y="511.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="98.4657%" y="485" width="0.0347%" height="15" fill="rgb(208,109,11)" fg:x="85228" fg:w="30"/><text x="98.7157%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="98.4669%" y="469" width="0.0335%" height="15" fill="rgb(216,190,48)" fg:x="85229" fg:w="29"/><text x="98.7169%" y="479.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="98.4692%" y="453" width="0.0312%" height="15" fill="rgb(251,171,36)" fg:x="85231" fg:w="27"/><text x="98.7192%" y="463.50"></text></g><g><title>[unknown] (24 samples, 0.03%)</title><rect x="98.4727%" y="437" width="0.0277%" height="15" fill="rgb(230,62,22)" fg:x="85234" fg:w="24"/><text x="98.7227%" y="447.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="98.4738%" y="421" width="0.0266%" height="15" fill="rgb(225,114,35)" fg:x="85235" fg:w="23"/><text x="98.7238%" y="431.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="98.4796%" y="405" width="0.0208%" height="15" fill="rgb(215,118,42)" fg:x="85240" fg:w="18"/><text x="98.7296%" y="415.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="98.4819%" y="389" width="0.0185%" height="15" fill="rgb(243,119,21)" fg:x="85242" fg:w="16"/><text x="98.7319%" y="399.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="98.4842%" y="373" width="0.0162%" height="15" fill="rgb(252,177,53)" fg:x="85244" fg:w="14"/><text x="98.7342%" y="383.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (43 samples, 0.05%)</title><rect x="98.4542%" y="613" width="0.0497%" height="15" fill="rgb(237,209,29)" fg:x="85218" fg:w="43"/><text x="98.7042%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common (43 samples, 0.05%)</title><rect x="98.4542%" y="597" width="0.0497%" height="15" fill="rgb(212,65,23)" fg:x="85218" fg:w="43"/><text x="98.7042%" y="607.50"></text></g><g><title>__futex_abstimed_wait_common64 (43 samples, 0.05%)</title><rect x="98.4542%" y="581" width="0.0497%" height="15" fill="rgb(230,222,46)" fg:x="85218" fg:w="43"/><text x="98.7042%" y="591.50"></text></g><g><title>___pthread_cond_timedwait64 (49 samples, 0.06%)</title><rect x="98.4530%" y="645" width="0.0566%" height="15" fill="rgb(215,135,32)" fg:x="85217" fg:w="49"/><text x="98.7030%" y="655.50"></text></g><g><title>__pthread_cond_wait_common (48 samples, 0.06%)</title><rect x="98.4542%" y="629" width="0.0555%" height="15" fill="rgb(246,101,22)" fg:x="85218" fg:w="48"/><text x="98.7042%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (85 samples, 0.10%)</title><rect x="98.4218%" y="661" width="0.0982%" height="15" fill="rgb(206,107,13)" fg:x="85190" fg:w="85"/><text x="98.6718%" y="671.50"></text></g><g><title>__GI___close (53 samples, 0.06%)</title><rect x="98.5200%" y="661" width="0.0612%" height="15" fill="rgb(250,100,44)" fg:x="85275" fg:w="53"/><text x="98.7700%" y="671.50"></text></g><g><title>[unknown] (50 samples, 0.06%)</title><rect x="98.5235%" y="645" width="0.0578%" height="15" fill="rgb(231,147,38)" fg:x="85278" fg:w="50"/><text x="98.7735%" y="655.50"></text></g><g><title>[unknown] (48 samples, 0.06%)</title><rect x="98.5258%" y="629" width="0.0555%" height="15" fill="rgb(229,8,40)" fg:x="85280" fg:w="48"/><text x="98.7758%" y="639.50"></text></g><g><title>[unknown] (44 samples, 0.05%)</title><rect x="98.5304%" y="613" width="0.0508%" height="15" fill="rgb(221,135,30)" fg:x="85284" fg:w="44"/><text x="98.7804%" y="623.50"></text></g><g><title>[unknown] (40 samples, 0.05%)</title><rect x="98.5351%" y="597" width="0.0462%" height="15" fill="rgb(249,193,18)" fg:x="85288" fg:w="40"/><text x="98.7851%" y="607.50"></text></g><g><title>[unknown] (37 samples, 0.04%)</title><rect x="98.5385%" y="581" width="0.0427%" height="15" fill="rgb(209,133,39)" fg:x="85291" fg:w="37"/><text x="98.7885%" y="591.50"></text></g><g><title>[unknown] (33 samples, 0.04%)</title><rect x="98.5431%" y="565" width="0.0381%" height="15" fill="rgb(232,100,14)" fg:x="85295" fg:w="33"/><text x="98.7931%" y="575.50"></text></g><g><title>[unknown] (28 samples, 0.03%)</title><rect x="98.5489%" y="549" width="0.0323%" height="15" fill="rgb(224,185,1)" fg:x="85300" fg:w="28"/><text x="98.7989%" y="559.50"></text></g><g><title>[unknown] (28 samples, 0.03%)</title><rect x="98.5489%" y="533" width="0.0323%" height="15" fill="rgb(223,139,8)" fg:x="85300" fg:w="28"/><text x="98.7989%" y="543.50"></text></g><g><title>[unknown] (22 samples, 0.03%)</title><rect x="98.5558%" y="517" width="0.0254%" height="15" fill="rgb(232,213,38)" fg:x="85306" fg:w="22"/><text x="98.8058%" y="527.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="98.5651%" y="501" width="0.0162%" height="15" fill="rgb(207,94,22)" fg:x="85314" fg:w="14"/><text x="98.8151%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="98.5674%" y="485" width="0.0139%" height="15" fill="rgb(219,183,54)" fg:x="85316" fg:w="12"/><text x="98.8174%" y="495.50"></text></g><g><title>[unknown] (345 samples, 0.40%)</title><rect x="98.5824%" y="629" width="0.3986%" height="15" fill="rgb(216,185,54)" fg:x="85329" fg:w="345"/><text x="98.8324%" y="639.50"></text></g><g><title>[unknown] (337 samples, 0.39%)</title><rect x="98.5917%" y="613" width="0.3893%" height="15" fill="rgb(254,217,39)" fg:x="85337" fg:w="337"/><text x="98.8417%" y="623.50"></text></g><g><title>[unknown] (337 samples, 0.39%)</title><rect x="98.5917%" y="597" width="0.3893%" height="15" fill="rgb(240,178,23)" fg:x="85337" fg:w="337"/><text x="98.8417%" y="607.50"></text></g><g><title>[unknown] (334 samples, 0.39%)</title><rect x="98.5951%" y="581" width="0.3859%" height="15" fill="rgb(218,11,47)" fg:x="85340" fg:w="334"/><text x="98.8451%" y="591.50"></text></g><g><title>[unknown] (332 samples, 0.38%)</title><rect x="98.5974%" y="565" width="0.3836%" height="15" fill="rgb(218,51,51)" fg:x="85342" fg:w="332"/><text x="98.8474%" y="575.50"></text></g><g><title>[unknown] (328 samples, 0.38%)</title><rect x="98.6021%" y="549" width="0.3789%" height="15" fill="rgb(238,126,27)" fg:x="85346" fg:w="328"/><text x="98.8521%" y="559.50"></text></g><g><title>[unknown] (327 samples, 0.38%)</title><rect x="98.6032%" y="533" width="0.3778%" height="15" fill="rgb(249,202,22)" fg:x="85347" fg:w="327"/><text x="98.8532%" y="543.50"></text></g><g><title>[unknown] (324 samples, 0.37%)</title><rect x="98.6067%" y="517" width="0.3743%" height="15" fill="rgb(254,195,49)" fg:x="85350" fg:w="324"/><text x="98.8567%" y="527.50"></text></g><g><title>[unknown] (317 samples, 0.37%)</title><rect x="98.6148%" y="501" width="0.3662%" height="15" fill="rgb(208,123,14)" fg:x="85357" fg:w="317"/><text x="98.8648%" y="511.50"></text></g><g><title>[unknown] (278 samples, 0.32%)</title><rect x="98.6598%" y="485" width="0.3212%" height="15" fill="rgb(224,200,8)" fg:x="85396" fg:w="278"/><text x="98.9098%" y="495.50"></text></g><g><title>[unknown] (131 samples, 0.15%)</title><rect x="98.8297%" y="469" width="0.1513%" height="15" fill="rgb(217,61,36)" fg:x="85543" fg:w="131"/><text x="99.0797%" y="479.50"></text></g><g><title>[unknown] (93 samples, 0.11%)</title><rect x="98.8736%" y="453" width="0.1074%" height="15" fill="rgb(206,35,45)" fg:x="85581" fg:w="93"/><text x="99.1236%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="98.9625%" y="437" width="0.0185%" height="15" fill="rgb(217,65,33)" fg:x="85658" fg:w="16"/><text x="99.2125%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.02%)</title><rect x="98.9660%" y="421" width="0.0150%" height="15" fill="rgb(222,158,48)" fg:x="85661" fg:w="13"/><text x="99.2160%" y="431.50"></text></g><g><title>__GI___libc_read (347 samples, 0.40%)</title><rect x="98.5813%" y="661" width="0.4009%" height="15" fill="rgb(254,2,54)" fg:x="85328" fg:w="347"/><text x="98.8313%" y="671.50"></text></g><g><title>__GI___libc_read (346 samples, 0.40%)</title><rect x="98.5824%" y="645" width="0.3997%" height="15" fill="rgb(250,143,38)" fg:x="85329" fg:w="346"/><text x="98.8324%" y="655.50"></text></g><g><title>[unknown] (105 samples, 0.12%)</title><rect x="98.9856%" y="629" width="0.1213%" height="15" fill="rgb(248,25,0)" fg:x="85678" fg:w="105"/><text x="99.2356%" y="639.50"></text></g><g><title>[unknown] (96 samples, 0.11%)</title><rect x="98.9960%" y="613" width="0.1109%" height="15" fill="rgb(206,152,27)" fg:x="85687" fg:w="96"/><text x="99.2460%" y="623.50"></text></g><g><title>[unknown] (92 samples, 0.11%)</title><rect x="99.0006%" y="597" width="0.1063%" height="15" fill="rgb(240,77,30)" fg:x="85691" fg:w="92"/><text x="99.2506%" y="607.50"></text></g><g><title>[unknown] (79 samples, 0.09%)</title><rect x="99.0157%" y="581" width="0.0913%" height="15" fill="rgb(231,5,3)" fg:x="85704" fg:w="79"/><text x="99.2657%" y="591.50"></text></g><g><title>[unknown] (76 samples, 0.09%)</title><rect x="99.0191%" y="565" width="0.0878%" height="15" fill="rgb(207,226,32)" fg:x="85707" fg:w="76"/><text x="99.2691%" y="575.50"></text></g><g><title>[unknown] (68 samples, 0.08%)</title><rect x="99.0284%" y="549" width="0.0786%" height="15" fill="rgb(222,207,47)" fg:x="85715" fg:w="68"/><text x="99.2784%" y="559.50"></text></g><g><title>[unknown] (60 samples, 0.07%)</title><rect x="99.0376%" y="533" width="0.0693%" height="15" fill="rgb(229,115,45)" fg:x="85723" fg:w="60"/><text x="99.2876%" y="543.50"></text></g><g><title>[unknown] (59 samples, 0.07%)</title><rect x="99.0388%" y="517" width="0.0682%" height="15" fill="rgb(224,191,6)" fg:x="85724" fg:w="59"/><text x="99.2888%" y="527.50"></text></g><g><title>[unknown] (53 samples, 0.06%)</title><rect x="99.0457%" y="501" width="0.0612%" height="15" fill="rgb(230,227,24)" fg:x="85730" fg:w="53"/><text x="99.2957%" y="511.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="99.0538%" y="485" width="0.0531%" height="15" fill="rgb(228,80,19)" fg:x="85737" fg:w="46"/><text x="99.3038%" y="495.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="99.0769%" y="469" width="0.0300%" height="15" fill="rgb(247,229,0)" fg:x="85757" fg:w="26"/><text x="99.3269%" y="479.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.0838%" y="453" width="0.0231%" height="15" fill="rgb(237,194,15)" fg:x="85763" fg:w="20"/><text x="99.3338%" y="463.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.0873%" y="437" width="0.0196%" height="15" fill="rgb(219,203,20)" fg:x="85766" fg:w="17"/><text x="99.3373%" y="447.50"></text></g><g><title>__GI___nanosleep (113 samples, 0.13%)</title><rect x="98.9822%" y="661" width="0.1306%" height="15" fill="rgb(234,128,8)" fg:x="85675" fg:w="113"/><text x="99.2322%" y="671.50"></text></g><g><title>__GI___clock_nanosleep (113 samples, 0.13%)</title><rect x="98.9822%" y="645" width="0.1306%" height="15" fill="rgb(248,202,8)" fg:x="85675" fg:w="113"/><text x="99.2322%" y="655.50"></text></g><g><title>[unknown] (252 samples, 0.29%)</title><rect x="99.1162%" y="645" width="0.2911%" height="15" fill="rgb(206,104,37)" fg:x="85791" fg:w="252"/><text x="99.3662%" y="655.50"></text></g><g><title>[unknown] (245 samples, 0.28%)</title><rect x="99.1243%" y="629" width="0.2831%" height="15" fill="rgb(223,8,27)" fg:x="85798" fg:w="245"/><text x="99.3743%" y="639.50"></text></g><g><title>[unknown] (243 samples, 0.28%)</title><rect x="99.1266%" y="613" width="0.2807%" height="15" fill="rgb(216,217,28)" fg:x="85800" fg:w="243"/><text x="99.3766%" y="623.50"></text></g><g><title>[unknown] (241 samples, 0.28%)</title><rect x="99.1289%" y="597" width="0.2784%" height="15" fill="rgb(249,199,1)" fg:x="85802" fg:w="241"/><text x="99.3789%" y="607.50"></text></g><g><title>[unknown] (233 samples, 0.27%)</title><rect x="99.1381%" y="581" width="0.2692%" height="15" fill="rgb(240,85,17)" fg:x="85810" fg:w="233"/><text x="99.3881%" y="591.50"></text></g><g><title>[unknown] (229 samples, 0.26%)</title><rect x="99.1428%" y="565" width="0.2646%" height="15" fill="rgb(206,108,45)" fg:x="85814" fg:w="229"/><text x="99.3928%" y="575.50"></text></g><g><title>[unknown] (218 samples, 0.25%)</title><rect x="99.1555%" y="549" width="0.2519%" height="15" fill="rgb(245,210,41)" fg:x="85825" fg:w="218"/><text x="99.4055%" y="559.50"></text></g><g><title>[unknown] (190 samples, 0.22%)</title><rect x="99.1878%" y="533" width="0.2195%" height="15" fill="rgb(206,13,37)" fg:x="85853" fg:w="190"/><text x="99.4378%" y="543.50"></text></g><g><title>[unknown] (167 samples, 0.19%)</title><rect x="99.2144%" y="517" width="0.1929%" height="15" fill="rgb(250,61,18)" fg:x="85876" fg:w="167"/><text x="99.4644%" y="527.50"></text></g><g><title>[unknown] (129 samples, 0.15%)</title><rect x="99.2583%" y="501" width="0.1490%" height="15" fill="rgb(235,172,48)" fg:x="85914" fg:w="129"/><text x="99.5083%" y="511.50"></text></g><g><title>[unknown] (82 samples, 0.09%)</title><rect x="99.3126%" y="485" width="0.0947%" height="15" fill="rgb(249,201,17)" fg:x="85961" fg:w="82"/><text x="99.5626%" y="495.50"></text></g><g><title>[unknown] (71 samples, 0.08%)</title><rect x="99.3253%" y="469" width="0.0820%" height="15" fill="rgb(219,208,6)" fg:x="85972" fg:w="71"/><text x="99.5753%" y="479.50"></text></g><g><title>[unknown] (61 samples, 0.07%)</title><rect x="99.3368%" y="453" width="0.0705%" height="15" fill="rgb(248,31,23)" fg:x="85982" fg:w="61"/><text x="99.5868%" y="463.50"></text></g><g><title>[unknown] (59 samples, 0.07%)</title><rect x="99.3392%" y="437" width="0.0682%" height="15" fill="rgb(245,15,42)" fg:x="85984" fg:w="59"/><text x="99.5892%" y="447.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.3657%" y="421" width="0.0416%" height="15" fill="rgb(222,217,39)" fg:x="86007" fg:w="36"/><text x="99.6157%" y="431.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.3865%" y="405" width="0.0208%" height="15" fill="rgb(210,219,27)" fg:x="86025" fg:w="18"/><text x="99.6365%" y="415.50"></text></g><g><title>__libc_open64 (258 samples, 0.30%)</title><rect x="99.1127%" y="661" width="0.2981%" height="15" fill="rgb(252,166,36)" fg:x="85788" fg:w="258"/><text x="99.3627%" y="671.50"></text></g><g><title>_IO_strfile_read (12 samples, 0.01%)</title><rect x="99.4166%" y="645" width="0.0139%" height="15" fill="rgb(245,132,34)" fg:x="86051" fg:w="12"/><text x="99.6666%" y="655.50"></text></g><g><title>__sscanf (64 samples, 0.07%)</title><rect x="99.4108%" y="661" width="0.0739%" height="15" fill="rgb(236,54,3)" fg:x="86046" fg:w="64"/><text x="99.6608%" y="671.50"></text></g><g><title>__vfscanf_internal (47 samples, 0.05%)</title><rect x="99.4304%" y="645" width="0.0543%" height="15" fill="rgb(241,173,43)" fg:x="86063" fg:w="47"/><text x="99.6804%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (947 samples, 1.09%)</title><rect x="98.4068%" y="709" width="1.0941%" height="15" fill="rgb(215,190,9)" fg:x="85177" fg:w="947"/><text x="98.6568%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (947 samples, 1.09%)</title><rect x="98.4068%" y="693" width="1.0941%" height="15" fill="rgb(242,101,16)" fg:x="85177" fg:w="947"/><text x="98.6568%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (939 samples, 1.08%)</title><rect x="98.4161%" y="677" width="1.0848%" height="15" fill="rgb(223,190,21)" fg:x="85185" fg:w="939"/><text x="98.6661%" y="687.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (11 samples, 0.01%)</title><rect x="99.5021%" y="533" width="0.0127%" height="15" fill="rgb(215,228,25)" fg:x="86125" fg:w="11"/><text x="99.7521%" y="543.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (11 samples, 0.01%)</title><rect x="99.5021%" y="517" width="0.0127%" height="15" fill="rgb(225,36,22)" fg:x="86125" fg:w="11"/><text x="99.7521%" y="527.50"></text></g><g><title>rayon_core::registry::main_loop (11 samples, 0.01%)</title><rect x="99.5021%" y="501" width="0.0127%" height="15" fill="rgb(251,106,46)" fg:x="86125" fg:w="11"/><text x="99.7521%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 0.01%)</title><rect x="99.5021%" y="485" width="0.0127%" height="15" fill="rgb(208,90,1)" fg:x="86125" fg:w="11"/><text x="99.7521%" y="495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.01%)</title><rect x="99.5021%" y="469" width="0.0127%" height="15" fill="rgb(243,10,4)" fg:x="86125" fg:w="11"/><text x="99.7521%" y="479.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (10 samples, 0.01%)</title><rect x="99.5032%" y="453" width="0.0116%" height="15" fill="rgb(212,137,27)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="463.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (10 samples, 0.01%)</title><rect x="99.5032%" y="437" width="0.0116%" height="15" fill="rgb(231,220,49)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="447.50"></text></g><g><title>std::sync::condvar::Condvar::wait (10 samples, 0.01%)</title><rect x="99.5032%" y="421" width="0.0116%" height="15" fill="rgb(237,96,20)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (10 samples, 0.01%)</title><rect x="99.5032%" y="405" width="0.0116%" height="15" fill="rgb(239,229,30)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="415.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (10 samples, 0.01%)</title><rect x="99.5032%" y="389" width="0.0116%" height="15" fill="rgb(219,65,33)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="399.50"></text></g><g><title>std::sys::unix::futex::futex_wait (10 samples, 0.01%)</title><rect x="99.5032%" y="373" width="0.0116%" height="15" fill="rgb(243,134,7)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="383.50"></text></g><g><title>syscall (10 samples, 0.01%)</title><rect x="99.5032%" y="357" width="0.0116%" height="15" fill="rgb(216,177,54)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="341" width="0.0116%" height="15" fill="rgb(211,160,20)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="325" width="0.0116%" height="15" fill="rgb(239,85,39)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="309" width="0.0116%" height="15" fill="rgb(232,125,22)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="319.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="293" width="0.0116%" height="15" fill="rgb(244,57,34)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="303.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="277" width="0.0116%" height="15" fill="rgb(214,203,32)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="287.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="261" width="0.0116%" height="15" fill="rgb(207,58,43)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="271.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="245" width="0.0116%" height="15" fill="rgb(215,193,15)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="255.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="229" width="0.0116%" height="15" fill="rgb(232,15,44)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5032%" y="213" width="0.0116%" height="15" fill="rgb(212,3,48)" fg:x="86126" fg:w="10"/><text x="99.7532%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.5044%" y="197" width="0.0104%" height="15" fill="rgb(218,128,7)" fg:x="86127" fg:w="9"/><text x="99.7544%" y="207.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.5044%" y="181" width="0.0104%" height="15" fill="rgb(226,216,39)" fg:x="86127" fg:w="9"/><text x="99.7544%" y="191.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.5044%" y="165" width="0.0104%" height="15" fill="rgb(243,47,51)" fg:x="86127" fg:w="9"/><text x="99.7544%" y="175.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.5044%" y="149" width="0.0104%" height="15" fill="rgb(241,183,40)" fg:x="86127" fg:w="9"/><text x="99.7544%" y="159.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.03%)</title><rect x="99.5021%" y="629" width="0.0254%" height="15" fill="rgb(231,217,32)" fg:x="86125" fg:w="22"/><text x="99.7521%" y="639.50"></text></g><g><title>std::panicking::try (22 samples, 0.03%)</title><rect x="99.5021%" y="613" width="0.0254%" height="15" fill="rgb(229,61,38)" fg:x="86125" fg:w="22"/><text x="99.7521%" y="623.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.03%)</title><rect x="99.5021%" y="597" width="0.0254%" height="15" fill="rgb(225,210,5)" fg:x="86125" fg:w="22"/><text x="99.7521%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.03%)</title><rect x="99.5021%" y="581" width="0.0254%" height="15" fill="rgb(231,79,45)" fg:x="86125" fg:w="22"/><text x="99.7521%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (22 samples, 0.03%)</title><rect x="99.5021%" y="565" width="0.0254%" height="15" fill="rgb(224,100,7)" fg:x="86125" fg:w="22"/><text x="99.7521%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 0.03%)</title><rect x="99.5021%" y="549" width="0.0254%" height="15" fill="rgb(241,198,18)" fg:x="86125" fg:w="22"/><text x="99.7521%" y="559.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (11 samples, 0.01%)</title><rect x="99.5148%" y="533" width="0.0127%" height="15" fill="rgb(252,97,53)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="543.50"></text></g><g><title>gilrs::ff::server::run (11 samples, 0.01%)</title><rect x="99.5148%" y="517" width="0.0127%" height="15" fill="rgb(220,88,7)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="527.50"></text></g><g><title>std::thread::sleep (11 samples, 0.01%)</title><rect x="99.5148%" y="501" width="0.0127%" height="15" fill="rgb(213,176,14)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="511.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (11 samples, 0.01%)</title><rect x="99.5148%" y="485" width="0.0127%" height="15" fill="rgb(246,73,7)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="495.50"></text></g><g><title>__GI___nanosleep (11 samples, 0.01%)</title><rect x="99.5148%" y="469" width="0.0127%" height="15" fill="rgb(245,64,36)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="479.50"></text></g><g><title>__GI___clock_nanosleep (11 samples, 0.01%)</title><rect x="99.5148%" y="453" width="0.0127%" height="15" fill="rgb(245,80,10)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.5148%" y="437" width="0.0127%" height="15" fill="rgb(232,107,50)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.5148%" y="421" width="0.0127%" height="15" fill="rgb(253,3,0)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.5148%" y="405" width="0.0127%" height="15" fill="rgb(212,99,53)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.5148%" y="389" width="0.0127%" height="15" fill="rgb(249,111,54)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.5148%" y="373" width="0.0127%" height="15" fill="rgb(249,55,30)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.5148%" y="357" width="0.0127%" height="15" fill="rgb(237,47,42)" fg:x="86136" fg:w="11"/><text x="99.7648%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5159%" y="341" width="0.0116%" height="15" fill="rgb(211,20,18)" fg:x="86137" fg:w="10"/><text x="99.7659%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5159%" y="325" width="0.0116%" height="15" fill="rgb(231,203,46)" fg:x="86137" fg:w="10"/><text x="99.7659%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5159%" y="309" width="0.0116%" height="15" fill="rgb(237,142,3)" fg:x="86137" fg:w="10"/><text x="99.7659%" y="319.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.5159%" y="293" width="0.0116%" height="15" fill="rgb(241,107,1)" fg:x="86137" fg:w="10"/><text x="99.7659%" y="303.50"></text></g><g><title>__clone3 (977 samples, 1.13%)</title><rect x="98.4057%" y="741" width="1.1287%" height="15" fill="rgb(229,83,13)" fg:x="85176" fg:w="977"/><text x="98.6557%" y="751.50"></text></g><g><title>start_thread (976 samples, 1.13%)</title><rect x="98.4068%" y="725" width="1.1276%" height="15" fill="rgb(241,91,40)" fg:x="85177" fg:w="976"/><text x="98.6568%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (28 samples, 0.03%)</title><rect x="99.5021%" y="709" width="0.0323%" height="15" fill="rgb(225,3,45)" fg:x="86125" fg:w="28"/><text x="99.7521%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.03%)</title><rect x="99.5021%" y="693" width="0.0323%" height="15" fill="rgb(244,223,14)" fg:x="86125" fg:w="28"/><text x="99.7521%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.03%)</title><rect x="99.5021%" y="677" width="0.0323%" height="15" fill="rgb(224,124,37)" fg:x="86125" fg:w="28"/><text x="99.7521%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (28 samples, 0.03%)</title><rect x="99.5021%" y="661" width="0.0323%" height="15" fill="rgb(251,171,30)" fg:x="86125" fg:w="28"/><text x="99.7521%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (28 samples, 0.03%)</title><rect x="99.5021%" y="645" width="0.0323%" height="15" fill="rgb(236,46,54)" fg:x="86125" fg:w="28"/><text x="99.7521%" y="655.50"></text></g><g><title>ggez::event::run (10 samples, 0.01%)</title><rect x="99.5344%" y="453" width="0.0116%" height="15" fill="rgb(245,213,5)" fg:x="86153" fg:w="10"/><text x="99.7844%" y="463.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (10 samples, 0.01%)</title><rect x="99.5344%" y="437" width="0.0116%" height="15" fill="rgb(230,144,27)" fg:x="86153" fg:w="10"/><text x="99.7844%" y="447.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (10 samples, 0.01%)</title><rect x="99.5344%" y="421" width="0.0116%" height="15" fill="rgb(220,86,6)" fg:x="86153" fg:w="10"/><text x="99.7844%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (10 samples, 0.01%)</title><rect x="99.5344%" y="405" width="0.0116%" height="15" fill="rgb(240,20,13)" fg:x="86153" fg:w="10"/><text x="99.7844%" y="415.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (10 samples, 0.01%)</title><rect x="99.5344%" y="389" width="0.0116%" height="15" fill="rgb(217,89,34)" fg:x="86153" fg:w="10"/><text x="99.7844%" y="399.50"></text></g><g><title>__libc_start_main_impl (13 samples, 0.02%)</title><rect x="99.5344%" y="725" width="0.0150%" height="15" fill="rgb(229,13,5)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="735.50"></text></g><g><title>__libc_start_call_main (13 samples, 0.02%)</title><rect x="99.5344%" y="709" width="0.0150%" height="15" fill="rgb(244,67,35)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="719.50"></text></g><g><title>main (13 samples, 0.02%)</title><rect x="99.5344%" y="693" width="0.0150%" height="15" fill="rgb(221,40,2)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="703.50"></text></g><g><title>std::rt::lang_start_internal (13 samples, 0.02%)</title><rect x="99.5344%" y="677" width="0.0150%" height="15" fill="rgb(237,157,21)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="687.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="99.5344%" y="661" width="0.0150%" height="15" fill="rgb(222,94,11)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="671.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="99.5344%" y="645" width="0.0150%" height="15" fill="rgb(249,113,6)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="655.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="99.5344%" y="629" width="0.0150%" height="15" fill="rgb(238,137,36)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (13 samples, 0.02%)</title><rect x="99.5344%" y="613" width="0.0150%" height="15" fill="rgb(210,102,26)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="623.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.02%)</title><rect x="99.5344%" y="597" width="0.0150%" height="15" fill="rgb(218,30,30)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="607.50"></text></g><g><title>std::panicking::try (13 samples, 0.02%)</title><rect x="99.5344%" y="581" width="0.0150%" height="15" fill="rgb(214,67,26)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="591.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.02%)</title><rect x="99.5344%" y="565" width="0.0150%" height="15" fill="rgb(251,9,53)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (13 samples, 0.02%)</title><rect x="99.5344%" y="549" width="0.0150%" height="15" fill="rgb(228,204,25)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}} (13 samples, 0.02%)</title><rect x="99.5344%" y="533" width="0.0150%" height="15" fill="rgb(207,153,8)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.02%)</title><rect x="99.5344%" y="517" width="0.0150%" height="15" fill="rgb(242,9,16)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="99.5344%" y="501" width="0.0150%" height="15" fill="rgb(217,211,10)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="511.50"></text></g><g><title>neuralang::main (13 samples, 0.02%)</title><rect x="99.5344%" y="485" width="0.0150%" height="15" fill="rgb(219,228,52)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="495.50"></text></g><g><title>neuralang::run (13 samples, 0.02%)</title><rect x="99.5344%" y="469" width="0.0150%" height="15" fill="rgb(231,92,29)" fg:x="86153" fg:w="13"/><text x="99.7844%" y="479.50"></text></g><g><title>_start (14 samples, 0.02%)</title><rect x="99.5344%" y="741" width="0.0162%" height="15" fill="rgb(232,8,23)" fg:x="86153" fg:w="14"/><text x="99.7844%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (73 samples, 0.08%)</title><rect x="99.5517%" y="741" width="0.0843%" height="15" fill="rgb(216,211,34)" fg:x="86168" fg:w="73"/><text x="99.8017%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (69 samples, 0.08%)</title><rect x="99.6361%" y="741" width="0.0797%" height="15" fill="rgb(236,151,0)" fg:x="86241" fg:w="69"/><text x="99.8861%" y="751.50"></text></g><g><title>neuralang (86,047 samples, 99.41%)</title><rect x="0.3177%" y="757" width="99.4119%" height="15" fill="rgb(209,168,3)" fg:x="275" fg:w="86047"/><text x="0.5677%" y="767.50">neuralang</text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="99.7424%" y="741" width="0.0162%" height="15" fill="rgb(208,129,28)" fg:x="86333" fg:w="14"/><text x="99.9924%" y="751.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (15 samples, 0.02%)</title><rect x="99.7724%" y="517" width="0.0173%" height="15" fill="rgb(229,78,22)" fg:x="86359" fg:w="15"/><text x="100.0224%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (20 samples, 0.02%)</title><rect x="99.7701%" y="533" width="0.0231%" height="15" fill="rgb(228,187,13)" fg:x="86357" fg:w="20"/><text x="100.0201%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (24 samples, 0.03%)</title><rect x="99.7678%" y="565" width="0.0277%" height="15" fill="rgb(240,119,24)" fg:x="86355" fg:w="24"/><text x="100.0178%" y="575.50"></text></g><g><title>pa_pdispatch_run (23 samples, 0.03%)</title><rect x="99.7689%" y="549" width="0.0266%" height="15" fill="rgb(209,194,42)" fg:x="86356" fg:w="23"/><text x="100.0189%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (32 samples, 0.04%)</title><rect x="99.7666%" y="597" width="0.0370%" height="15" fill="rgb(247,200,46)" fg:x="86354" fg:w="32"/><text x="100.0166%" y="607.50"></text></g><g><title>[libpulsecommon-15.99.so] (32 samples, 0.04%)</title><rect x="99.7666%" y="581" width="0.0370%" height="15" fill="rgb(218,76,16)" fg:x="86354" fg:w="32"/><text x="100.0166%" y="591.50"></text></g><g><title>[libpulsecommon-15.99.so] (36 samples, 0.04%)</title><rect x="99.7666%" y="613" width="0.0416%" height="15" fill="rgb(225,21,48)" fg:x="86354" fg:w="36"/><text x="100.0166%" y="623.50"></text></g><g><title>pa_fdsem_after_poll (9 samples, 0.01%)</title><rect x="99.8082%" y="613" width="0.0104%" height="15" fill="rgb(239,223,50)" fg:x="86390" fg:w="9"/><text x="100.0582%" y="623.50"></text></g><g><title>[libpulsecommon-15.99.so] (47 samples, 0.05%)</title><rect x="99.7655%" y="629" width="0.0543%" height="15" fill="rgb(244,45,21)" fg:x="86353" fg:w="47"/><text x="100.0155%" y="639.50"></text></g><g><title>pa_mainloop_dispatch (59 samples, 0.07%)</title><rect x="99.7597%" y="645" width="0.0682%" height="15" fill="rgb(232,33,43)" fg:x="86348" fg:w="59"/><text x="100.0097%" y="655.50"></text></g><g><title>[unknown] (110 samples, 0.13%)</title><rect x="99.8348%" y="597" width="0.1271%" height="15" fill="rgb(209,8,3)" fg:x="86413" fg:w="110"/><text x="100.0848%" y="607.50"></text></g><g><title>[unknown] (107 samples, 0.12%)</title><rect x="99.8383%" y="581" width="0.1236%" height="15" fill="rgb(214,25,53)" fg:x="86416" fg:w="107"/><text x="100.0883%" y="591.50"></text></g><g><title>[unknown] (107 samples, 0.12%)</title><rect x="99.8383%" y="565" width="0.1236%" height="15" fill="rgb(254,186,54)" fg:x="86416" fg:w="107"/><text x="100.0883%" y="575.50"></text></g><g><title>[unknown] (105 samples, 0.12%)</title><rect x="99.8406%" y="549" width="0.1213%" height="15" fill="rgb(208,174,49)" fg:x="86418" fg:w="105"/><text x="100.0906%" y="559.50"></text></g><g><title>[unknown] (101 samples, 0.12%)</title><rect x="99.8452%" y="533" width="0.1167%" height="15" fill="rgb(233,191,51)" fg:x="86422" fg:w="101"/><text x="100.0952%" y="543.50"></text></g><g><title>[unknown] (95 samples, 0.11%)</title><rect x="99.8521%" y="517" width="0.1098%" height="15" fill="rgb(222,134,10)" fg:x="86428" fg:w="95"/><text x="100.1021%" y="527.50"></text></g><g><title>[unknown] (85 samples, 0.10%)</title><rect x="99.8637%" y="501" width="0.0982%" height="15" fill="rgb(230,226,20)" fg:x="86438" fg:w="85"/><text x="100.1137%" y="511.50"></text></g><g><title>[unknown] (79 samples, 0.09%)</title><rect x="99.8706%" y="485" width="0.0913%" height="15" fill="rgb(251,111,25)" fg:x="86444" fg:w="79"/><text x="100.1206%" y="495.50"></text></g><g><title>[unknown] (72 samples, 0.08%)</title><rect x="99.8787%" y="469" width="0.0832%" height="15" fill="rgb(224,40,46)" fg:x="86451" fg:w="72"/><text x="100.1287%" y="479.50"></text></g><g><title>[unknown] (68 samples, 0.08%)</title><rect x="99.8833%" y="453" width="0.0786%" height="15" fill="rgb(236,108,47)" fg:x="86455" fg:w="68"/><text x="100.1333%" y="463.50"></text></g><g><title>[unknown] (64 samples, 0.07%)</title><rect x="99.8879%" y="437" width="0.0739%" height="15" fill="rgb(234,93,0)" fg:x="86459" fg:w="64"/><text x="100.1379%" y="447.50"></text></g><g><title>[unknown] (58 samples, 0.07%)</title><rect x="99.8949%" y="421" width="0.0670%" height="15" fill="rgb(224,213,32)" fg:x="86465" fg:w="58"/><text x="100.1449%" y="431.50"></text></g><g><title>[unknown] (54 samples, 0.06%)</title><rect x="99.8995%" y="405" width="0.0624%" height="15" fill="rgb(251,11,48)" fg:x="86469" fg:w="54"/><text x="100.1495%" y="415.50"></text></g><g><title>[unknown] (53 samples, 0.06%)</title><rect x="99.9006%" y="389" width="0.0612%" height="15" fill="rgb(236,173,5)" fg:x="86470" fg:w="53"/><text x="100.1506%" y="399.50"></text></g><g><title>__GI___poll (115 samples, 0.13%)</title><rect x="99.8325%" y="613" width="0.1329%" height="15" fill="rgb(230,95,12)" fg:x="86411" fg:w="115"/><text x="100.0825%" y="623.50"></text></g><g><title>pa_mutex_lock (11 samples, 0.01%)</title><rect x="99.9677%" y="613" width="0.0127%" height="15" fill="rgb(232,209,1)" fg:x="86528" fg:w="11"/><text x="100.2177%" y="623.50"></text></g><g><title>pa_mainloop_poll (134 samples, 0.15%)</title><rect x="99.8279%" y="645" width="0.1548%" height="15" fill="rgb(232,6,1)" fg:x="86407" fg:w="134"/><text x="100.0779%" y="655.50"></text></g><g><title>[libpulse.so.0.24.1] (133 samples, 0.15%)</title><rect x="99.8290%" y="629" width="0.1537%" height="15" fill="rgb(210,224,50)" fg:x="86408" fg:w="133"/><text x="100.0790%" y="639.50"></text></g><g><title>all (86,556 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(228,127,35)" fg:x="0" fg:w="86556"/><text x="0.2500%" y="783.50"></text></g><g><title>threaded-ml (229 samples, 0.26%)</title><rect x="99.7354%" y="757" width="0.2646%" height="15" fill="rgb(245,102,45)" fg:x="86327" fg:w="229"/><text x="99.9854%" y="767.50"></text></g><g><title>__clone3 (209 samples, 0.24%)</title><rect x="99.7585%" y="741" width="0.2415%" height="15" fill="rgb(214,1,49)" fg:x="86347" fg:w="209"/><text x="100.0085%" y="751.50"></text></g><g><title>start_thread (209 samples, 0.24%)</title><rect x="99.7585%" y="725" width="0.2415%" height="15" fill="rgb(226,163,40)" fg:x="86347" fg:w="209"/><text x="100.0085%" y="735.50"></text></g><g><title>[libpulsecommon-15.99.so] (209 samples, 0.24%)</title><rect x="99.7585%" y="709" width="0.2415%" height="15" fill="rgb(239,212,28)" fg:x="86347" fg:w="209"/><text x="100.0085%" y="719.50"></text></g><g><title>[libpulse.so.0.24.1] (209 samples, 0.24%)</title><rect x="99.7585%" y="693" width="0.2415%" height="15" fill="rgb(220,20,13)" fg:x="86347" fg:w="209"/><text x="100.0085%" y="703.50"></text></g><g><title>pa_mainloop_run (209 samples, 0.24%)</title><rect x="99.7585%" y="677" width="0.2415%" height="15" fill="rgb(210,164,35)" fg:x="86347" fg:w="209"/><text x="100.0085%" y="687.50"></text></g><g><title>pa_mainloop_iterate (209 samples, 0.24%)</title><rect x="99.7585%" y="661" width="0.2415%" height="15" fill="rgb(248,109,41)" fg:x="86347" fg:w="209"/><text x="100.0085%" y="671.50"></text></g><g><title>pa_mainloop_prepare (15 samples, 0.02%)</title><rect x="99.9827%" y="645" width="0.0173%" height="15" fill="rgb(238,23,50)" fg:x="86541" fg:w="15"/><text x="100.2327%" y="655.50"></text></g><g><title>pa_read (12 samples, 0.01%)</title><rect x="99.9861%" y="629" width="0.0139%" height="15" fill="rgb(211,48,49)" fg:x="86544" fg:w="12"/><text x="100.2361%" y="639.50"></text></g><g><title>__GI___libc_read (12 samples, 0.01%)</title><rect x="99.9861%" y="613" width="0.0139%" height="15" fill="rgb(223,36,21)" fg:x="86544" fg:w="12"/><text x="100.2361%" y="623.50"></text></g><g><title>__GI___libc_read (11 samples, 0.01%)</title><rect x="99.9873%" y="597" width="0.0127%" height="15" fill="rgb(207,123,46)" fg:x="86545" fg:w="11"/><text x="100.2373%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.9873%" y="581" width="0.0127%" height="15" fill="rgb(240,218,32)" fg:x="86545" fg:w="11"/><text x="100.2373%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.9884%" y="565" width="0.0116%" height="15" fill="rgb(252,5,43)" fg:x="86546" fg:w="10"/><text x="100.2384%" y="575.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.9884%" y="549" width="0.0116%" height="15" fill="rgb(252,84,19)" fg:x="86546" fg:w="10"/><text x="100.2384%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.9896%" y="533" width="0.0104%" height="15" fill="rgb(243,152,39)" fg:x="86547" fg:w="9"/><text x="100.2396%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="99.9896%" y="517" width="0.0104%" height="15" fill="rgb(234,160,15)" fg:x="86547" fg:w="9"/><text x="100.2396%" y="527.50"></text></g></svg></svg>