<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="101169"><g><title>__GI___futex_abstimed_wait_cancelable64 (22 samples, 0.02%)</title><rect x="0.0049%" y="549" width="0.0217%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="22"/><text x="0.2549%" y="559.50"></text></g><g><title>__futex_abstimed_wait_common (22 samples, 0.02%)</title><rect x="0.0049%" y="533" width="0.0217%" height="15" fill="rgb(217,0,24)" fg:x="5" fg:w="22"/><text x="0.2549%" y="543.50"></text></g><g><title>__futex_abstimed_wait_common64 (22 samples, 0.02%)</title><rect x="0.0049%" y="517" width="0.0217%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="22"/><text x="0.2549%" y="527.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="0.0059%" y="501" width="0.0208%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="21"/><text x="0.2559%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="0.0069%" y="485" width="0.0198%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="20"/><text x="0.2569%" y="495.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="0.0069%" y="469" width="0.0198%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="20"/><text x="0.2569%" y="479.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.0079%" y="453" width="0.0188%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="19"/><text x="0.2579%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.0079%" y="437" width="0.0188%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="19"/><text x="0.2579%" y="447.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0089%" y="421" width="0.0178%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="18"/><text x="0.2589%" y="431.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0089%" y="405" width="0.0178%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="18"/><text x="0.2589%" y="415.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="0.0119%" y="389" width="0.0148%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="15"/><text x="0.2619%" y="399.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="0.0128%" y="373" width="0.0138%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="14"/><text x="0.2628%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="0.0148%" y="357" width="0.0119%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="12"/><text x="0.2648%" y="367.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="0.0148%" y="341" width="0.0119%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="12"/><text x="0.2648%" y="351.50"></text></g><g><title>___pthread_cond_timedwait64 (24 samples, 0.02%)</title><rect x="0.0049%" y="581" width="0.0237%" height="15" fill="rgb(217,207,13)" fg:x="5" fg:w="24"/><text x="0.2549%" y="591.50"></text></g><g><title>__pthread_cond_wait_common (24 samples, 0.02%)</title><rect x="0.0049%" y="565" width="0.0237%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="24"/><text x="0.2549%" y="575.50"></text></g><g><title>[vkrt]_Analysis (32 samples, 0.03%)</title><rect x="0.0000%" y="677" width="0.0316%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="32"/><text x="0.2500%" y="687.50"></text></g><g><title>__clone3 (28 samples, 0.03%)</title><rect x="0.0040%" y="661" width="0.0277%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="28"/><text x="0.2540%" y="671.50"></text></g><g><title>start_thread (28 samples, 0.03%)</title><rect x="0.0040%" y="645" width="0.0277%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="28"/><text x="0.2540%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (28 samples, 0.03%)</title><rect x="0.0040%" y="629" width="0.0277%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="28"/><text x="0.2540%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (28 samples, 0.03%)</title><rect x="0.0040%" y="613" width="0.0277%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="28"/><text x="0.2540%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (27 samples, 0.03%)</title><rect x="0.0049%" y="597" width="0.0267%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="27"/><text x="0.2549%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="0.0514%" y="645" width="0.0138%" height="15" fill="rgb(221,5,38)" fg:x="52" fg:w="14"/><text x="0.3014%" y="655.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="0.0494%" y="661" width="0.0237%" height="15" fill="rgb(247,18,42)" fg:x="50" fg:w="24"/><text x="0.2994%" y="671.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (18 samples, 0.02%)</title><rect x="0.0761%" y="405" width="0.0178%" height="15" fill="rgb(241,131,45)" fg:x="77" fg:w="18"/><text x="0.3261%" y="415.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (18 samples, 0.02%)</title><rect x="0.0761%" y="389" width="0.0178%" height="15" fill="rgb(249,31,29)" fg:x="77" fg:w="18"/><text x="0.3261%" y="399.50"></text></g><g><title>[libasound.so.2.0.0] (16 samples, 0.02%)</title><rect x="0.0781%" y="373" width="0.0158%" height="15" fill="rgb(225,111,53)" fg:x="79" fg:w="16"/><text x="0.3281%" y="383.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (15 samples, 0.01%)</title><rect x="0.0791%" y="357" width="0.0148%" height="15" fill="rgb(238,160,17)" fg:x="80" fg:w="15"/><text x="0.3291%" y="367.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (14 samples, 0.01%)</title><rect x="0.0969%" y="389" width="0.0138%" height="15" fill="rgb(214,148,48)" fg:x="98" fg:w="14"/><text x="0.3469%" y="399.50"></text></g><g><title>snd_pcm_status (13 samples, 0.01%)</title><rect x="0.0979%" y="373" width="0.0128%" height="15" fill="rgb(232,36,49)" fg:x="99" fg:w="13"/><text x="0.3479%" y="383.50"></text></g><g><title>[libasound.so.2.0.0] (12 samples, 0.01%)</title><rect x="0.0988%" y="357" width="0.0119%" height="15" fill="rgb(209,103,24)" fg:x="100" fg:w="12"/><text x="0.3488%" y="367.50"></text></g><g><title>alsa::pcm::PCM::status (16 samples, 0.02%)</title><rect x="0.0969%" y="405" width="0.0158%" height="15" fill="rgb(229,88,8)" fg:x="98" fg:w="16"/><text x="0.3469%" y="415.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (89 samples, 0.09%)</title><rect x="0.0731%" y="421" width="0.0880%" height="15" fill="rgb(213,181,19)" fg:x="74" fg:w="89"/><text x="0.3231%" y="431.50"></text></g><g><title>alsa::poll::poll (48 samples, 0.05%)</title><rect x="0.1137%" y="405" width="0.0474%" height="15" fill="rgb(254,191,54)" fg:x="115" fg:w="48"/><text x="0.3637%" y="415.50"></text></g><g><title>__GI___poll (46 samples, 0.05%)</title><rect x="0.1156%" y="389" width="0.0455%" height="15" fill="rgb(241,83,37)" fg:x="117" fg:w="46"/><text x="0.3656%" y="399.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="0.1156%" y="373" width="0.0455%" height="15" fill="rgb(233,36,39)" fg:x="117" fg:w="46"/><text x="0.3656%" y="383.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="0.1166%" y="357" width="0.0445%" height="15" fill="rgb(226,3,54)" fg:x="118" fg:w="45"/><text x="0.3666%" y="367.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="0.1166%" y="341" width="0.0445%" height="15" fill="rgb(245,192,40)" fg:x="118" fg:w="45"/><text x="0.3666%" y="351.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="0.1166%" y="325" width="0.0445%" height="15" fill="rgb(238,167,29)" fg:x="118" fg:w="45"/><text x="0.3666%" y="335.50"></text></g><g><title>[unknown] (44 samples, 0.04%)</title><rect x="0.1176%" y="309" width="0.0435%" height="15" fill="rgb(232,182,51)" fg:x="119" fg:w="44"/><text x="0.3676%" y="319.50"></text></g><g><title>[unknown] (40 samples, 0.04%)</title><rect x="0.1216%" y="293" width="0.0395%" height="15" fill="rgb(231,60,39)" fg:x="123" fg:w="40"/><text x="0.3716%" y="303.50"></text></g><g><title>[unknown] (39 samples, 0.04%)</title><rect x="0.1226%" y="277" width="0.0385%" height="15" fill="rgb(208,69,12)" fg:x="124" fg:w="39"/><text x="0.3726%" y="287.50"></text></g><g><title>[unknown] (38 samples, 0.04%)</title><rect x="0.1236%" y="261" width="0.0376%" height="15" fill="rgb(235,93,37)" fg:x="125" fg:w="38"/><text x="0.3736%" y="271.50"></text></g><g><title>[unknown] (35 samples, 0.03%)</title><rect x="0.1265%" y="245" width="0.0346%" height="15" fill="rgb(213,116,39)" fg:x="128" fg:w="35"/><text x="0.3765%" y="255.50"></text></g><g><title>[unknown] (35 samples, 0.03%)</title><rect x="0.1265%" y="229" width="0.0346%" height="15" fill="rgb(222,207,29)" fg:x="128" fg:w="35"/><text x="0.3765%" y="239.50"></text></g><g><title>[unknown] (32 samples, 0.03%)</title><rect x="0.1295%" y="213" width="0.0316%" height="15" fill="rgb(206,96,30)" fg:x="131" fg:w="32"/><text x="0.3795%" y="223.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="0.1325%" y="197" width="0.0287%" height="15" fill="rgb(218,138,4)" fg:x="134" fg:w="29"/><text x="0.3825%" y="207.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="0.1344%" y="181" width="0.0267%" height="15" fill="rgb(250,191,14)" fg:x="136" fg:w="27"/><text x="0.3844%" y="191.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="0.1344%" y="165" width="0.0267%" height="15" fill="rgb(239,60,40)" fg:x="136" fg:w="27"/><text x="0.3844%" y="175.50"></text></g><g><title>[libasound.so.2.0.0] (35 samples, 0.03%)</title><rect x="0.1621%" y="357" width="0.0346%" height="15" fill="rgb(206,27,48)" fg:x="164" fg:w="35"/><text x="0.4121%" y="367.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (34 samples, 0.03%)</title><rect x="0.1631%" y="341" width="0.0336%" height="15" fill="rgb(225,35,8)" fg:x="165" fg:w="34"/><text x="0.4131%" y="351.50"></text></g><g><title>pa_stream_write (21 samples, 0.02%)</title><rect x="0.1759%" y="325" width="0.0208%" height="15" fill="rgb(250,213,24)" fg:x="178" fg:w="21"/><text x="0.4259%" y="335.50"></text></g><g><title>pa_stream_write_ext_free (21 samples, 0.02%)</title><rect x="0.1759%" y="309" width="0.0208%" height="15" fill="rgb(247,123,22)" fg:x="178" fg:w="21"/><text x="0.4259%" y="319.50"></text></g><g><title>[libasound.so.2.0.0] (37 samples, 0.04%)</title><rect x="0.1611%" y="389" width="0.0366%" height="15" fill="rgb(231,138,38)" fg:x="163" fg:w="37"/><text x="0.4111%" y="399.50"></text></g><g><title>[libasound.so.2.0.0] (37 samples, 0.04%)</title><rect x="0.1611%" y="373" width="0.0366%" height="15" fill="rgb(231,145,46)" fg:x="163" fg:w="37"/><text x="0.4111%" y="383.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (38 samples, 0.04%)</title><rect x="0.1611%" y="405" width="0.0376%" height="15" fill="rgb(251,118,11)" fg:x="163" fg:w="38"/><text x="0.4111%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (11 samples, 0.01%)</title><rect x="0.2096%" y="309" width="0.0109%" height="15" fill="rgb(217,147,25)" fg:x="212" fg:w="11"/><text x="0.4596%" y="319.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="0.2204%" y="277" width="0.0119%" height="15" fill="rgb(247,81,37)" fg:x="223" fg:w="12"/><text x="0.4704%" y="287.50"></text></g><g><title>core::mem::swap (24 samples, 0.02%)</title><rect x="0.2204%" y="309" width="0.0237%" height="15" fill="rgb(209,12,38)" fg:x="223" fg:w="24"/><text x="0.4704%" y="319.50"></text></g><g><title>core::mem::swap_simple (24 samples, 0.02%)</title><rect x="0.2204%" y="293" width="0.0237%" height="15" fill="rgb(227,1,9)" fg:x="223" fg:w="24"/><text x="0.4704%" y="303.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="0.2323%" y="277" width="0.0119%" height="15" fill="rgb(248,47,43)" fg:x="235" fg:w="12"/><text x="0.4823%" y="287.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.05%)</title><rect x="0.2007%" y="341" width="0.0494%" height="15" fill="rgb(221,10,30)" fg:x="203" fg:w="50"/><text x="0.4507%" y="351.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (42 samples, 0.04%)</title><rect x="0.2086%" y="325" width="0.0415%" height="15" fill="rgb(210,229,1)" fg:x="211" fg:w="42"/><text x="0.4586%" y="335.50"></text></g><g><title>cpal_alsa_out (222 samples, 0.22%)</title><rect x="0.0316%" y="677" width="0.2194%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="222"/><text x="0.2816%" y="687.50"></text></g><g><title>__clone3 (180 samples, 0.18%)</title><rect x="0.0731%" y="661" width="0.1779%" height="15" fill="rgb(234,67,33)" fg:x="74" fg:w="180"/><text x="0.3231%" y="671.50"></text></g><g><title>start_thread (180 samples, 0.18%)</title><rect x="0.0731%" y="645" width="0.1779%" height="15" fill="rgb(247,98,35)" fg:x="74" fg:w="180"/><text x="0.3231%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (180 samples, 0.18%)</title><rect x="0.0731%" y="629" width="0.1779%" height="15" fill="rgb(247,138,52)" fg:x="74" fg:w="180"/><text x="0.3231%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (180 samples, 0.18%)</title><rect x="0.0731%" y="613" width="0.1779%" height="15" fill="rgb(213,79,30)" fg:x="74" fg:w="180"/><text x="0.3231%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (180 samples, 0.18%)</title><rect x="0.0731%" y="597" width="0.1779%" height="15" fill="rgb(246,177,23)" fg:x="74" fg:w="180"/><text x="0.3231%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (180 samples, 0.18%)</title><rect x="0.0731%" y="581" width="0.1779%" height="15" fill="rgb(230,62,27)" fg:x="74" fg:w="180"/><text x="0.3231%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (180 samples, 0.18%)</title><rect x="0.0731%" y="565" width="0.1779%" height="15" fill="rgb(216,154,8)" fg:x="74" fg:w="180"/><text x="0.3231%" y="575.50"></text></g><g><title>std::panic::catch_unwind (180 samples, 0.18%)</title><rect x="0.0731%" y="549" width="0.1779%" height="15" fill="rgb(244,35,45)" fg:x="74" fg:w="180"/><text x="0.3231%" y="559.50"></text></g><g><title>std::panicking::try (180 samples, 0.18%)</title><rect x="0.0731%" y="533" width="0.1779%" height="15" fill="rgb(251,115,12)" fg:x="74" fg:w="180"/><text x="0.3231%" y="543.50"></text></g><g><title>std::panicking::try::do_call (180 samples, 0.18%)</title><rect x="0.0731%" y="517" width="0.1779%" height="15" fill="rgb(240,54,50)" fg:x="74" fg:w="180"/><text x="0.3231%" y="527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (180 samples, 0.18%)</title><rect x="0.0731%" y="501" width="0.1779%" height="15" fill="rgb(233,84,52)" fg:x="74" fg:w="180"/><text x="0.3231%" y="511.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (180 samples, 0.18%)</title><rect x="0.0731%" y="485" width="0.1779%" height="15" fill="rgb(207,117,47)" fg:x="74" fg:w="180"/><text x="0.3231%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (180 samples, 0.18%)</title><rect x="0.0731%" y="469" width="0.1779%" height="15" fill="rgb(249,43,39)" fg:x="74" fg:w="180"/><text x="0.3231%" y="479.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (180 samples, 0.18%)</title><rect x="0.0731%" y="453" width="0.1779%" height="15" fill="rgb(209,38,44)" fg:x="74" fg:w="180"/><text x="0.3231%" y="463.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (180 samples, 0.18%)</title><rect x="0.0731%" y="437" width="0.1779%" height="15" fill="rgb(236,212,23)" fg:x="74" fg:w="180"/><text x="0.3231%" y="447.50"></text></g><g><title>cpal::host::alsa::process_output (91 samples, 0.09%)</title><rect x="0.1611%" y="421" width="0.0899%" height="15" fill="rgb(242,79,21)" fg:x="163" fg:w="91"/><text x="0.4111%" y="431.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (52 samples, 0.05%)</title><rect x="0.1997%" y="405" width="0.0514%" height="15" fill="rgb(211,96,35)" fg:x="202" fg:w="52"/><text x="0.4497%" y="415.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (52 samples, 0.05%)</title><rect x="0.1997%" y="389" width="0.0514%" height="15" fill="rgb(253,215,40)" fg:x="202" fg:w="52"/><text x="0.4497%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (52 samples, 0.05%)</title><rect x="0.1997%" y="373" width="0.0514%" height="15" fill="rgb(211,81,21)" fg:x="202" fg:w="52"/><text x="0.4497%" y="383.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (51 samples, 0.05%)</title><rect x="0.2007%" y="357" width="0.0504%" height="15" fill="rgb(208,190,38)" fg:x="203" fg:w="51"/><text x="0.4507%" y="367.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (288 samples, 0.28%)</title><rect x="0.2639%" y="645" width="0.2847%" height="15" fill="rgb(235,213,38)" fg:x="267" fg:w="288"/><text x="0.5139%" y="655.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (898 samples, 0.89%)</title><rect x="0.5486%" y="645" width="0.8876%" height="15" fill="rgb(237,122,38)" fg:x="555" fg:w="898"/><text x="0.7986%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (28 samples, 0.03%)</title><rect x="1.4421%" y="645" width="0.0277%" height="15" fill="rgb(244,218,35)" fg:x="1459" fg:w="28"/><text x="1.6921%" y="655.50"></text></g><g><title>[[heap]] (1,275 samples, 1.26%)</title><rect x="0.2590%" y="661" width="1.2603%" height="15" fill="rgb(240,68,47)" fg:x="262" fg:w="1275"/><text x="0.5090%" y="671.50"></text></g><g><title>neuralang::World::age_obstructs (12 samples, 0.01%)</title><rect x="1.5321%" y="613" width="0.0119%" height="15" fill="rgb(210,16,53)" fg:x="1550" fg:w="12"/><text x="1.7821%" y="623.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="1.5321%" y="597" width="0.0119%" height="15" fill="rgb(235,124,12)" fg:x="1550" fg:w="12"/><text x="1.7821%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (289 samples, 0.29%)</title><rect x="2.0589%" y="581" width="0.2857%" height="15" fill="rgb(224,169,11)" fg:x="2083" fg:w="289"/><text x="2.3089%" y="591.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_disjoint_mut (1,055 samples, 1.04%)</title><rect x="1.5440%" y="597" width="1.0428%" height="15" fill="rgb(250,166,2)" fg:x="1562" fg:w="1055"/><text x="1.7940%" y="607.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key (245 samples, 0.24%)</title><rect x="2.3446%" y="581" width="0.2422%" height="15" fill="rgb(242,216,29)" fg:x="2372" fg:w="245"/><text x="2.5946%" y="591.50"></text></g><g><title>neuralang::World::check_collisions (1,064 samples, 1.05%)</title><rect x="1.5440%" y="613" width="1.0517%" height="15" fill="rgb(230,116,27)" fg:x="1562" fg:w="1064"/><text x="1.7940%" y="623.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.05%)</title><rect x="2.5957%" y="565" width="0.0514%" height="15" fill="rgb(228,99,48)" fg:x="2626" fg:w="52"/><text x="2.8457%" y="575.50"></text></g><g><title>neuralang::World::move_beings (90 samples, 0.09%)</title><rect x="2.5957%" y="613" width="0.0890%" height="15" fill="rgb(253,11,6)" fg:x="2626" fg:w="90"/><text x="2.8457%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (90 samples, 0.09%)</title><rect x="2.5957%" y="597" width="0.0890%" height="15" fill="rgb(247,143,39)" fg:x="2626" fg:w="90"/><text x="2.8457%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (90 samples, 0.09%)</title><rect x="2.5957%" y="581" width="0.0890%" height="15" fill="rgb(236,97,10)" fg:x="2626" fg:w="90"/><text x="2.8457%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (38 samples, 0.04%)</title><rect x="2.6471%" y="565" width="0.0376%" height="15" fill="rgb(233,208,19)" fg:x="2678" fg:w="38"/><text x="2.8971%" y="575.50"></text></g><g><title>neuralang::World::move_beings::{{closure}} (38 samples, 0.04%)</title><rect x="2.6471%" y="549" width="0.0376%" height="15" fill="rgb(216,164,2)" fg:x="2678" fg:w="38"/><text x="2.8971%" y="559.50"></text></g><g><title>neuralang::dir_from_theta (38 samples, 0.04%)</title><rect x="2.6471%" y="533" width="0.0376%" height="15" fill="rgb(220,129,5)" fg:x="2678" fg:w="38"/><text x="2.8971%" y="543.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (38 samples, 0.04%)</title><rect x="2.6471%" y="517" width="0.0376%" height="15" fill="rgb(242,17,10)" fg:x="2678" fg:w="38"/><text x="2.8971%" y="527.50"></text></g><g><title>neuralang::World::tire_beings (82 samples, 0.08%)</title><rect x="2.6846%" y="613" width="0.0811%" height="15" fill="rgb(242,107,0)" fg:x="2716" fg:w="82"/><text x="2.9346%" y="623.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.08%)</title><rect x="2.6846%" y="597" width="0.0811%" height="15" fill="rgb(251,28,31)" fg:x="2716" fg:w="82"/><text x="2.9346%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (48 samples, 0.05%)</title><rect x="2.7182%" y="581" width="0.0474%" height="15" fill="rgb(233,223,10)" fg:x="2750" fg:w="48"/><text x="2.9682%" y="591.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.08%)</title><rect x="2.7904%" y="597" width="0.0811%" height="15" fill="rgb(215,21,27)" fg:x="2823" fg:w="82"/><text x="3.0404%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (49 samples, 0.05%)</title><rect x="2.8230%" y="581" width="0.0484%" height="15" fill="rgb(232,23,21)" fg:x="2856" fg:w="49"/><text x="3.0730%" y="591.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (1,446 samples, 1.43%)</title><rect x="1.5321%" y="645" width="1.4293%" height="15" fill="rgb(244,5,23)" fg:x="1550" fg:w="1446"/><text x="1.7821%" y="655.50"></text></g><g><title>neuralang::World::step (1,446 samples, 1.43%)</title><rect x="1.5321%" y="629" width="1.4293%" height="15" fill="rgb(226,81,46)" fg:x="1550" fg:w="1446"/><text x="1.7821%" y="639.50"></text></g><g><title>neuralang::World::update_cells (198 samples, 0.20%)</title><rect x="2.7657%" y="613" width="0.1957%" height="15" fill="rgb(247,70,30)" fg:x="2798" fg:w="198"/><text x="3.0157%" y="623.50"></text></g><g><title>neuralang::pos_to_cell (91 samples, 0.09%)</title><rect x="2.8714%" y="597" width="0.0899%" height="15" fill="rgb(212,68,19)" fg:x="2905" fg:w="91"/><text x="3.1214%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="2.9663%" y="645" width="0.0128%" height="15" fill="rgb(240,187,13)" fg:x="3001" fg:w="13"/><text x="3.2163%" y="655.50"></text></g><g><title>[[stack]] (1,508 samples, 1.49%)</title><rect x="1.5192%" y="661" width="1.4906%" height="15" fill="rgb(223,113,26)" fg:x="1537" fg:w="1508"/><text x="1.7692%" y="671.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (134 samples, 0.13%)</title><rect x="3.0246%" y="629" width="0.1325%" height="15" fill="rgb(206,192,2)" fg:x="3060" fg:w="134"/><text x="3.2746%" y="639.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (134 samples, 0.13%)</title><rect x="3.0246%" y="613" width="0.1325%" height="15" fill="rgb(241,108,4)" fg:x="3060" fg:w="134"/><text x="3.2746%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (134 samples, 0.13%)</title><rect x="3.0246%" y="597" width="0.1325%" height="15" fill="rgb(247,173,49)" fg:x="3060" fg:w="134"/><text x="3.2746%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (45 samples, 0.04%)</title><rect x="3.1571%" y="613" width="0.0445%" height="15" fill="rgb(224,114,35)" fg:x="3194" fg:w="45"/><text x="3.4071%" y="623.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (194 samples, 0.19%)</title><rect x="3.0167%" y="645" width="0.1918%" height="15" fill="rgb(245,159,27)" fg:x="3052" fg:w="194"/><text x="3.2667%" y="655.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (52 samples, 0.05%)</title><rect x="3.1571%" y="629" width="0.0514%" height="15" fill="rgb(245,172,44)" fg:x="3194" fg:w="52"/><text x="3.4071%" y="639.50"></text></g><g><title>[anon] (202 samples, 0.20%)</title><rect x="3.0098%" y="661" width="0.1997%" height="15" fill="rgb(236,23,11)" fg:x="3045" fg:w="202"/><text x="3.2598%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="3.2164%" y="661" width="0.0158%" height="15" fill="rgb(205,117,38)" fg:x="3254" fg:w="16"/><text x="3.4664%" y="671.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.09%)</title><rect x="3.2520%" y="597" width="0.0870%" height="15" fill="rgb(237,72,25)" fg:x="3290" fg:w="88"/><text x="3.5020%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (45 samples, 0.04%)</title><rect x="3.2945%" y="581" width="0.0445%" height="15" fill="rgb(244,70,9)" fg:x="3333" fg:w="45"/><text x="3.5445%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (95 samples, 0.09%)</title><rect x="3.2520%" y="645" width="0.0939%" height="15" fill="rgb(217,125,39)" fg:x="3290" fg:w="95"/><text x="3.5020%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (95 samples, 0.09%)</title><rect x="3.2520%" y="629" width="0.0939%" height="15" fill="rgb(235,36,10)" fg:x="3290" fg:w="95"/><text x="3.5020%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.09%)</title><rect x="3.2520%" y="613" width="0.0939%" height="15" fill="rgb(251,123,47)" fg:x="3290" fg:w="95"/><text x="3.5020%" y="623.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (123 samples, 0.12%)</title><rect x="3.3489%" y="645" width="0.1216%" height="15" fill="rgb(221,13,13)" fg:x="3388" fg:w="123"/><text x="3.5989%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.02%)</title><rect x="3.4862%" y="645" width="0.0208%" height="15" fill="rgb(238,131,9)" fg:x="3527" fg:w="21"/><text x="3.7362%" y="655.50"></text></g><g><title>[unknown] (51 samples, 0.05%)</title><rect x="3.5080%" y="645" width="0.0504%" height="15" fill="rgb(211,50,8)" fg:x="3549" fg:w="51"/><text x="3.7580%" y="655.50"></text></g><g><title>[unknown] (51 samples, 0.05%)</title><rect x="3.5080%" y="629" width="0.0504%" height="15" fill="rgb(245,182,24)" fg:x="3549" fg:w="51"/><text x="3.7580%" y="639.50"></text></g><g><title>[unknown] (50 samples, 0.05%)</title><rect x="3.5090%" y="613" width="0.0494%" height="15" fill="rgb(242,14,37)" fg:x="3550" fg:w="50"/><text x="3.7590%" y="623.50"></text></g><g><title>[unknown] (49 samples, 0.05%)</title><rect x="3.5100%" y="597" width="0.0484%" height="15" fill="rgb(246,228,12)" fg:x="3551" fg:w="49"/><text x="3.7600%" y="607.50"></text></g><g><title>[unknown] (49 samples, 0.05%)</title><rect x="3.5100%" y="581" width="0.0484%" height="15" fill="rgb(213,55,15)" fg:x="3551" fg:w="49"/><text x="3.7600%" y="591.50"></text></g><g><title>[unknown] (48 samples, 0.05%)</title><rect x="3.5110%" y="565" width="0.0474%" height="15" fill="rgb(209,9,3)" fg:x="3552" fg:w="48"/><text x="3.7610%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="3.5367%" y="549" width="0.0217%" height="15" fill="rgb(230,59,30)" fg:x="3578" fg:w="22"/><text x="3.7867%" y="559.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="3.5376%" y="533" width="0.0208%" height="15" fill="rgb(209,121,21)" fg:x="3579" fg:w="21"/><text x="3.7876%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="3.5396%" y="517" width="0.0188%" height="15" fill="rgb(220,109,13)" fg:x="3581" fg:w="19"/><text x="3.7896%" y="527.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="3.5436%" y="501" width="0.0148%" height="15" fill="rgb(232,18,1)" fg:x="3585" fg:w="15"/><text x="3.7936%" y="511.50"></text></g><g><title>__ieee754_fmodf (156 samples, 0.15%)</title><rect x="3.5633%" y="645" width="0.1542%" height="15" fill="rgb(215,41,42)" fg:x="3605" fg:w="156"/><text x="3.8133%" y="655.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (29 samples, 0.03%)</title><rect x="3.9261%" y="613" width="0.0287%" height="15" fill="rgb(224,123,36)" fg:x="3972" fg:w="29"/><text x="4.1761%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 0.03%)</title><rect x="3.9271%" y="597" width="0.0277%" height="15" fill="rgb(240,125,3)" fg:x="3973" fg:w="28"/><text x="4.1771%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (257 samples, 0.25%)</title><rect x="3.7413%" y="645" width="0.2540%" height="15" fill="rgb(205,98,50)" fg:x="3785" fg:w="257"/><text x="3.9913%" y="655.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (105 samples, 0.10%)</title><rect x="3.8915%" y="629" width="0.1038%" height="15" fill="rgb(205,185,37)" fg:x="3937" fg:w="105"/><text x="4.1415%" y="639.50"></text></g><g><title>ggez::graphics::draw::DrawParam::scale (41 samples, 0.04%)</title><rect x="3.9548%" y="613" width="0.0405%" height="15" fill="rgb(238,207,15)" fg:x="4001" fg:w="41"/><text x="4.2048%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 0.04%)</title><rect x="3.9548%" y="597" width="0.0405%" height="15" fill="rgb(213,199,42)" fg:x="4001" fg:w="41"/><text x="4.2048%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="4.0052%" y="341" width="0.0128%" height="15" fill="rgb(235,201,11)" fg:x="4052" fg:w="13"/><text x="4.2552%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="4.0052%" y="325" width="0.0128%" height="15" fill="rgb(207,46,11)" fg:x="4052" fg:w="13"/><text x="4.2552%" y="335.50"></text></g><g><title>ggez::context::ContextBuilder::build (23 samples, 0.02%)</title><rect x="3.9973%" y="645" width="0.0227%" height="15" fill="rgb(241,35,35)" fg:x="4044" fg:w="23"/><text x="4.2473%" y="655.50"></text></g><g><title>ggez::context::Context::from_conf (23 samples, 0.02%)</title><rect x="3.9973%" y="629" width="0.0227%" height="15" fill="rgb(243,32,47)" fg:x="4044" fg:w="23"/><text x="4.2473%" y="639.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (22 samples, 0.02%)</title><rect x="3.9983%" y="613" width="0.0217%" height="15" fill="rgb(247,202,23)" fg:x="4045" fg:w="22"/><text x="4.2483%" y="623.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (22 samples, 0.02%)</title><rect x="3.9983%" y="597" width="0.0217%" height="15" fill="rgb(219,102,11)" fg:x="4045" fg:w="22"/><text x="4.2483%" y="607.50"></text></g><g><title>wgpu::Surface::configure (16 samples, 0.02%)</title><rect x="4.0042%" y="581" width="0.0158%" height="15" fill="rgb(243,110,44)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="591.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (16 samples, 0.02%)</title><rect x="4.0042%" y="565" width="0.0158%" height="15" fill="rgb(222,74,54)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (16 samples, 0.02%)</title><rect x="4.0042%" y="549" width="0.0158%" height="15" fill="rgb(216,99,12)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="559.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (16 samples, 0.02%)</title><rect x="4.0042%" y="533" width="0.0158%" height="15" fill="rgb(226,22,26)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (16 samples, 0.02%)</title><rect x="4.0042%" y="517" width="0.0158%" height="15" fill="rgb(217,163,10)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (16 samples, 0.02%)</title><rect x="4.0042%" y="501" width="0.0158%" height="15" fill="rgb(213,25,53)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="511.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (16 samples, 0.02%)</title><rect x="4.0042%" y="485" width="0.0158%" height="15" fill="rgb(252,105,26)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="495.50"></text></g><g><title>[libvulkan.so.1.3.204] (16 samples, 0.02%)</title><rect x="4.0042%" y="469" width="0.0158%" height="15" fill="rgb(220,39,43)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="453" width="0.0158%" height="15" fill="rgb(229,68,48)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="437" width="0.0158%" height="15" fill="rgb(252,8,32)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="421" width="0.0158%" height="15" fill="rgb(223,20,43)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="405" width="0.0158%" height="15" fill="rgb(229,81,49)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="389" width="0.0158%" height="15" fill="rgb(236,28,36)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="373" width="0.0158%" height="15" fill="rgb(249,185,26)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="4.0042%" y="357" width="0.0158%" height="15" fill="rgb(249,174,33)" fg:x="4051" fg:w="16"/><text x="4.2542%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.01%)</title><rect x="4.0240%" y="437" width="0.0148%" height="15" fill="rgb(233,201,37)" fg:x="4071" fg:w="15"/><text x="4.2740%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.01%)</title><rect x="4.0249%" y="421" width="0.0138%" height="15" fill="rgb(221,78,26)" fg:x="4072" fg:w="14"/><text x="4.2749%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="4.0269%" y="405" width="0.0119%" height="15" fill="rgb(250,127,30)" fg:x="4074" fg:w="12"/><text x="4.2769%" y="415.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (17 samples, 0.02%)</title><rect x="4.0230%" y="469" width="0.0168%" height="15" fill="rgb(230,49,44)" fg:x="4070" fg:w="17"/><text x="4.2730%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="4.0230%" y="453" width="0.0168%" height="15" fill="rgb(229,67,23)" fg:x="4070" fg:w="17"/><text x="4.2730%" y="463.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (36 samples, 0.04%)</title><rect x="4.0210%" y="645" width="0.0356%" height="15" fill="rgb(249,83,47)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="655.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (36 samples, 0.04%)</title><rect x="4.0210%" y="629" width="0.0356%" height="15" fill="rgb(215,43,3)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (36 samples, 0.04%)</title><rect x="4.0210%" y="613" width="0.0356%" height="15" fill="rgb(238,154,13)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (36 samples, 0.04%)</title><rect x="4.0210%" y="597" width="0.0356%" height="15" fill="rgb(219,56,2)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="607.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="4.0210%" y="581" width="0.0356%" height="15" fill="rgb(233,0,4)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="591.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (36 samples, 0.04%)</title><rect x="4.0210%" y="565" width="0.0356%" height="15" fill="rgb(235,30,7)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (36 samples, 0.04%)</title><rect x="4.0210%" y="549" width="0.0356%" height="15" fill="rgb(250,79,13)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="559.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (36 samples, 0.04%)</title><rect x="4.0210%" y="533" width="0.0356%" height="15" fill="rgb(211,146,34)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="543.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (36 samples, 0.04%)</title><rect x="4.0210%" y="517" width="0.0356%" height="15" fill="rgb(228,22,38)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="527.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (36 samples, 0.04%)</title><rect x="4.0210%" y="501" width="0.0356%" height="15" fill="rgb(235,168,5)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (36 samples, 0.04%)</title><rect x="4.0210%" y="485" width="0.0356%" height="15" fill="rgb(221,155,16)" fg:x="4068" fg:w="36"/><text x="4.2710%" y="495.50"></text></g><g><title>wgpu::Instance::request_adapter (20 samples, 0.02%)</title><rect x="4.0635%" y="613" width="0.0198%" height="15" fill="rgb(215,215,53)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="623.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (20 samples, 0.02%)</title><rect x="4.0635%" y="597" width="0.0198%" height="15" fill="rgb(223,4,10)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (20 samples, 0.02%)</title><rect x="4.0635%" y="581" width="0.0198%" height="15" fill="rgb(234,103,6)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="591.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (20 samples, 0.02%)</title><rect x="4.0635%" y="565" width="0.0198%" height="15" fill="rgb(227,97,0)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="575.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (20 samples, 0.02%)</title><rect x="4.0635%" y="549" width="0.0198%" height="15" fill="rgb(234,150,53)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (20 samples, 0.02%)</title><rect x="4.0635%" y="533" width="0.0198%" height="15" fill="rgb(228,201,54)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (20 samples, 0.02%)</title><rect x="4.0635%" y="517" width="0.0198%" height="15" fill="rgb(222,22,37)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (20 samples, 0.02%)</title><rect x="4.0635%" y="501" width="0.0198%" height="15" fill="rgb(237,53,32)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (20 samples, 0.02%)</title><rect x="4.0635%" y="485" width="0.0198%" height="15" fill="rgb(233,25,53)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="495.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (20 samples, 0.02%)</title><rect x="4.0635%" y="469" width="0.0198%" height="15" fill="rgb(210,40,34)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (20 samples, 0.02%)</title><rect x="4.0635%" y="453" width="0.0198%" height="15" fill="rgb(241,220,44)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="463.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (20 samples, 0.02%)</title><rect x="4.0635%" y="437" width="0.0198%" height="15" fill="rgb(235,28,35)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.02%)</title><rect x="4.0635%" y="421" width="0.0198%" height="15" fill="rgb(210,56,17)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.02%)</title><rect x="4.0635%" y="405" width="0.0198%" height="15" fill="rgb(224,130,29)" fg:x="4111" fg:w="20"/><text x="4.3135%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="4.0704%" y="389" width="0.0128%" height="15" fill="rgb(235,212,8)" fg:x="4118" fg:w="13"/><text x="4.3204%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (13 samples, 0.01%)</title><rect x="4.0704%" y="373" width="0.0128%" height="15" fill="rgb(223,33,50)" fg:x="4118" fg:w="13"/><text x="4.3204%" y="383.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (13 samples, 0.01%)</title><rect x="4.0704%" y="357" width="0.0128%" height="15" fill="rgb(219,149,13)" fg:x="4118" fg:w="13"/><text x="4.3204%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="4.0724%" y="341" width="0.0109%" height="15" fill="rgb(250,156,29)" fg:x="4120" fg:w="11"/><text x="4.3224%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="4.0724%" y="325" width="0.0109%" height="15" fill="rgb(216,193,19)" fg:x="4120" fg:w="11"/><text x="4.3224%" y="335.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (27 samples, 0.03%)</title><rect x="4.0576%" y="645" width="0.0267%" height="15" fill="rgb(216,135,14)" fg:x="4105" fg:w="27"/><text x="4.3076%" y="655.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (24 samples, 0.02%)</title><rect x="4.0605%" y="629" width="0.0237%" height="15" fill="rgb(241,47,5)" fg:x="4108" fg:w="24"/><text x="4.3105%" y="639.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (57 samples, 0.06%)</title><rect x="4.0872%" y="645" width="0.0563%" height="15" fill="rgb(233,42,35)" fg:x="4135" fg:w="57"/><text x="4.3372%" y="655.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (13 samples, 0.01%)</title><rect x="4.1436%" y="645" width="0.0128%" height="15" fill="rgb(231,13,6)" fg:x="4192" fg:w="13"/><text x="4.3936%" y="655.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (109 samples, 0.11%)</title><rect x="4.1564%" y="645" width="0.1077%" height="15" fill="rgb(207,181,40)" fg:x="4205" fg:w="109"/><text x="4.4064%" y="655.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (93 samples, 0.09%)</title><rect x="4.2642%" y="645" width="0.0919%" height="15" fill="rgb(254,173,49)" fg:x="4314" fg:w="93"/><text x="4.5142%" y="655.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (89 samples, 0.09%)</title><rect x="4.3561%" y="645" width="0.0880%" height="15" fill="rgb(221,1,38)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (89 samples, 0.09%)</title><rect x="4.3561%" y="629" width="0.0880%" height="15" fill="rgb(206,124,46)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (89 samples, 0.09%)</title><rect x="4.3561%" y="613" width="0.0880%" height="15" fill="rgb(249,21,11)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (89 samples, 0.09%)</title><rect x="4.3561%" y="597" width="0.0880%" height="15" fill="rgb(222,201,40)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89 samples, 0.09%)</title><rect x="4.3561%" y="581" width="0.0880%" height="15" fill="rgb(235,61,29)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (89 samples, 0.09%)</title><rect x="4.3561%" y="565" width="0.0880%" height="15" fill="rgb(219,207,3)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (89 samples, 0.09%)</title><rect x="4.3561%" y="549" width="0.0880%" height="15" fill="rgb(222,56,46)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (89 samples, 0.09%)</title><rect x="4.3561%" y="533" width="0.0880%" height="15" fill="rgb(239,76,54)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="543.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (89 samples, 0.09%)</title><rect x="4.3561%" y="517" width="0.0880%" height="15" fill="rgb(231,124,27)" fg:x="4407" fg:w="89"/><text x="4.6061%" y="527.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (38 samples, 0.04%)</title><rect x="4.4450%" y="645" width="0.0376%" height="15" fill="rgb(249,195,6)" fg:x="4497" fg:w="38"/><text x="4.6950%" y="655.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (93 samples, 0.09%)</title><rect x="4.4826%" y="645" width="0.0919%" height="15" fill="rgb(237,174,47)" fg:x="4535" fg:w="93"/><text x="4.7326%" y="655.50"></text></g><g><title>[libudev.so.1.7.2] (11 samples, 0.01%)</title><rect x="4.5854%" y="373" width="0.0109%" height="15" fill="rgb(206,201,31)" fg:x="4639" fg:w="11"/><text x="4.8354%" y="383.50"></text></g><g><title>[libudev.so.1.7.2] (33 samples, 0.03%)</title><rect x="4.5854%" y="389" width="0.0326%" height="15" fill="rgb(231,57,52)" fg:x="4639" fg:w="33"/><text x="4.8354%" y="399.50"></text></g><g><title>__GI___fstatat64 (11 samples, 0.01%)</title><rect x="4.6200%" y="389" width="0.0109%" height="15" fill="rgb(248,177,22)" fg:x="4674" fg:w="11"/><text x="4.8700%" y="399.50"></text></g><g><title>[libudev.so.1.7.2] (70 samples, 0.07%)</title><rect x="4.5854%" y="405" width="0.0692%" height="15" fill="rgb(215,211,37)" fg:x="4639" fg:w="70"/><text x="4.8354%" y="415.50"></text></g><g><title>__libc_openat64 (22 samples, 0.02%)</title><rect x="4.6328%" y="389" width="0.0217%" height="15" fill="rgb(241,128,51)" fg:x="4687" fg:w="22"/><text x="4.8828%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="4.6328%" y="373" width="0.0217%" height="15" fill="rgb(227,165,31)" fg:x="4687" fg:w="22"/><text x="4.8828%" y="383.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="4.6388%" y="357" width="0.0158%" height="15" fill="rgb(228,167,24)" fg:x="4693" fg:w="16"/><text x="4.8888%" y="367.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="4.6388%" y="341" width="0.0158%" height="15" fill="rgb(228,143,12)" fg:x="4693" fg:w="16"/><text x="4.8888%" y="351.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="4.6398%" y="325" width="0.0148%" height="15" fill="rgb(249,149,8)" fg:x="4694" fg:w="15"/><text x="4.8898%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="4.6398%" y="309" width="0.0148%" height="15" fill="rgb(243,35,44)" fg:x="4694" fg:w="15"/><text x="4.8898%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="4.6398%" y="293" width="0.0148%" height="15" fill="rgb(246,89,9)" fg:x="4694" fg:w="15"/><text x="4.8898%" y="303.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="4.6407%" y="277" width="0.0138%" height="15" fill="rgb(233,213,13)" fg:x="4695" fg:w="14"/><text x="4.8907%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="4.6427%" y="261" width="0.0119%" height="15" fill="rgb(233,141,41)" fg:x="4697" fg:w="12"/><text x="4.8927%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="4.6437%" y="245" width="0.0109%" height="15" fill="rgb(239,167,4)" fg:x="4698" fg:w="11"/><text x="4.8937%" y="255.50"></text></g><g><title>[libudev.so.1.7.2] (81 samples, 0.08%)</title><rect x="4.5854%" y="421" width="0.0801%" height="15" fill="rgb(209,217,16)" fg:x="4639" fg:w="81"/><text x="4.8354%" y="431.50"></text></g><g><title>[libudev.so.1.7.2] (83 samples, 0.08%)</title><rect x="4.5854%" y="437" width="0.0820%" height="15" fill="rgb(219,88,35)" fg:x="4639" fg:w="83"/><text x="4.8354%" y="447.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (84 samples, 0.08%)</title><rect x="4.5854%" y="581" width="0.0830%" height="15" fill="rgb(220,193,23)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="591.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (84 samples, 0.08%)</title><rect x="4.5854%" y="565" width="0.0830%" height="15" fill="rgb(230,90,52)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="575.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (84 samples, 0.08%)</title><rect x="4.5854%" y="549" width="0.0830%" height="15" fill="rgb(252,106,19)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="559.50"></text></g><g><title>gilrs_core::Gilrs::new (84 samples, 0.08%)</title><rect x="4.5854%" y="533" width="0.0830%" height="15" fill="rgb(206,74,20)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="543.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (84 samples, 0.08%)</title><rect x="4.5854%" y="517" width="0.0830%" height="15" fill="rgb(230,138,44)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="527.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (84 samples, 0.08%)</title><rect x="4.5854%" y="501" width="0.0830%" height="15" fill="rgb(235,182,43)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="511.50"></text></g><g><title>udev_enumerate_scan_devices (84 samples, 0.08%)</title><rect x="4.5854%" y="485" width="0.0830%" height="15" fill="rgb(242,16,51)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="495.50"></text></g><g><title>[libudev.so.1.7.2] (84 samples, 0.08%)</title><rect x="4.5854%" y="469" width="0.0830%" height="15" fill="rgb(248,9,4)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="479.50"></text></g><g><title>[libudev.so.1.7.2] (84 samples, 0.08%)</title><rect x="4.5854%" y="453" width="0.0830%" height="15" fill="rgb(210,31,22)" fg:x="4639" fg:w="84"/><text x="4.8354%" y="463.50"></text></g><g><title>ggez::context::ContextBuilder::build (97 samples, 0.10%)</title><rect x="4.5785%" y="613" width="0.0959%" height="15" fill="rgb(239,54,39)" fg:x="4632" fg:w="97"/><text x="4.8285%" y="623.50"></text></g><g><title>ggez::context::Context::from_conf (97 samples, 0.10%)</title><rect x="4.5785%" y="597" width="0.0959%" height="15" fill="rgb(230,99,41)" fg:x="4632" fg:w="97"/><text x="4.8285%" y="607.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (12 samples, 0.01%)</title><rect x="4.6744%" y="517" width="0.0119%" height="15" fill="rgb(253,106,12)" fg:x="4729" fg:w="12"/><text x="4.9244%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (12 samples, 0.01%)</title><rect x="4.6744%" y="501" width="0.0119%" height="15" fill="rgb(213,46,41)" fg:x="4729" fg:w="12"/><text x="4.9244%" y="511.50"></text></g><g><title>XCheckIfEvent (12 samples, 0.01%)</title><rect x="4.6744%" y="485" width="0.0119%" height="15" fill="rgb(215,133,35)" fg:x="4729" fg:w="12"/><text x="4.9244%" y="495.50"></text></g><g><title>_XEventsQueued (12 samples, 0.01%)</title><rect x="4.6744%" y="469" width="0.0119%" height="15" fill="rgb(213,28,5)" fg:x="4729" fg:w="12"/><text x="4.9244%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (12 samples, 0.01%)</title><rect x="4.6744%" y="453" width="0.0119%" height="15" fill="rgb(215,77,49)" fg:x="4729" fg:w="12"/><text x="4.9244%" y="463.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (20 samples, 0.02%)</title><rect x="4.7169%" y="341" width="0.0198%" height="15" fill="rgb(248,100,22)" fg:x="4772" fg:w="20"/><text x="4.9669%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (13 samples, 0.01%)</title><rect x="4.7238%" y="325" width="0.0128%" height="15" fill="rgb(208,67,9)" fg:x="4779" fg:w="13"/><text x="4.9738%" y="335.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (30 samples, 0.03%)</title><rect x="4.7129%" y="389" width="0.0297%" height="15" fill="rgb(219,133,21)" fg:x="4768" fg:w="30"/><text x="4.9629%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (30 samples, 0.03%)</title><rect x="4.7129%" y="373" width="0.0297%" height="15" fill="rgb(246,46,29)" fg:x="4768" fg:w="30"/><text x="4.9629%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (27 samples, 0.03%)</title><rect x="4.7159%" y="357" width="0.0267%" height="15" fill="rgb(246,185,52)" fg:x="4771" fg:w="27"/><text x="4.9659%" y="367.50"></text></g><g><title>wgpu::Device::create_bind_group (31 samples, 0.03%)</title><rect x="4.7129%" y="405" width="0.0306%" height="15" fill="rgb(252,136,11)" fg:x="4768" fg:w="31"/><text x="4.9629%" y="415.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (12 samples, 0.01%)</title><rect x="4.7524%" y="309" width="0.0119%" height="15" fill="rgb(219,138,53)" fg:x="4808" fg:w="12"/><text x="5.0024%" y="319.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (12 samples, 0.01%)</title><rect x="4.7524%" y="293" width="0.0119%" height="15" fill="rgb(211,51,23)" fg:x="4808" fg:w="12"/><text x="5.0024%" y="303.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (24 samples, 0.02%)</title><rect x="4.7524%" y="325" width="0.0237%" height="15" fill="rgb(247,221,28)" fg:x="4808" fg:w="24"/><text x="5.0024%" y="335.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (34 samples, 0.03%)</title><rect x="4.7435%" y="341" width="0.0336%" height="15" fill="rgb(251,222,45)" fg:x="4799" fg:w="34"/><text x="4.9935%" y="351.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (75 samples, 0.07%)</title><rect x="4.7040%" y="421" width="0.0741%" height="15" fill="rgb(217,162,53)" fg:x="4759" fg:w="75"/><text x="4.9540%" y="431.50"></text></g><g><title>wgpu::Device::create_buffer (35 samples, 0.03%)</title><rect x="4.7435%" y="405" width="0.0346%" height="15" fill="rgb(229,93,14)" fg:x="4799" fg:w="35"/><text x="4.9935%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (35 samples, 0.03%)</title><rect x="4.7435%" y="389" width="0.0346%" height="15" fill="rgb(209,67,49)" fg:x="4799" fg:w="35"/><text x="4.9935%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (35 samples, 0.03%)</title><rect x="4.7435%" y="373" width="0.0346%" height="15" fill="rgb(213,87,29)" fg:x="4799" fg:w="35"/><text x="4.9935%" y="383.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (35 samples, 0.03%)</title><rect x="4.7435%" y="357" width="0.0346%" height="15" fill="rgb(205,151,52)" fg:x="4799" fg:w="35"/><text x="4.9935%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,422 samples, 2.39%)</title><rect x="4.7791%" y="357" width="2.3940%" height="15" fill="rgb(253,215,39)" fg:x="4835" fg:w="2422"/><text x="5.0291%" y="367.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (2,422 samples, 2.39%)</title><rect x="4.7791%" y="341" width="2.3940%" height="15" fill="rgb(221,220,41)" fg:x="4835" fg:w="2422"/><text x="5.0291%" y="351.50">__..</text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (15 samples, 0.01%)</title><rect x="7.1781%" y="341" width="0.0148%" height="15" fill="rgb(218,133,21)" fg:x="7262" fg:w="15"/><text x="7.4281%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (15 samples, 0.01%)</title><rect x="7.1781%" y="325" width="0.0148%" height="15" fill="rgb(221,193,43)" fg:x="7262" fg:w="15"/><text x="7.4281%" y="335.50"></text></g><g><title>ash::device::Device::begin_command_buffer (15 samples, 0.01%)</title><rect x="7.1781%" y="309" width="0.0148%" height="15" fill="rgb(240,128,52)" fg:x="7262" fg:w="15"/><text x="7.4281%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.01%)</title><rect x="7.1781%" y="293" width="0.0148%" height="15" fill="rgb(253,114,12)" fg:x="7262" fg:w="15"/><text x="7.4281%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="7.1801%" y="277" width="0.0128%" height="15" fill="rgb(215,223,47)" fg:x="7264" fg:w="13"/><text x="7.4301%" y="287.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (11 samples, 0.01%)</title><rect x="7.1939%" y="341" width="0.0109%" height="15" fill="rgb(248,225,23)" fg:x="7278" fg:w="11"/><text x="7.4439%" y="351.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (42 samples, 0.04%)</title><rect x="7.1731%" y="357" width="0.0415%" height="15" fill="rgb(250,108,0)" fg:x="7257" fg:w="42"/><text x="7.4231%" y="367.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (2,563 samples, 2.53%)</title><rect x="4.6902%" y="437" width="2.5334%" height="15" fill="rgb(228,208,7)" fg:x="4745" fg:w="2563"/><text x="4.9402%" y="447.50">gg..</text></g><g><title>wgpu::Queue::write_buffer (2,474 samples, 2.45%)</title><rect x="4.7781%" y="421" width="2.4454%" height="15" fill="rgb(244,45,10)" fg:x="4834" fg:w="2474"/><text x="5.0281%" y="431.50">wg..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2,474 samples, 2.45%)</title><rect x="4.7781%" y="405" width="2.4454%" height="15" fill="rgb(207,125,25)" fg:x="4834" fg:w="2474"/><text x="5.0281%" y="415.50">&lt;T..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2,474 samples, 2.45%)</title><rect x="4.7781%" y="389" width="2.4454%" height="15" fill="rgb(210,195,18)" fg:x="4834" fg:w="2474"/><text x="5.0281%" y="399.50">&lt;w..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (2,474 samples, 2.45%)</title><rect x="4.7781%" y="373" width="2.4454%" height="15" fill="rgb(249,80,12)" fg:x="4834" fg:w="2474"/><text x="5.0281%" y="383.50">wg..</text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (2,567 samples, 2.54%)</title><rect x="4.6872%" y="453" width="2.5373%" height="15" fill="rgb(221,65,9)" fg:x="4742" fg:w="2567"/><text x="4.9372%" y="463.50">&lt;g..</text></g><g><title>ggez::graphics::canvas::Canvas::draw (2,568 samples, 2.54%)</title><rect x="4.6872%" y="469" width="2.5383%" height="15" fill="rgb(235,49,36)" fg:x="4742" fg:w="2568"/><text x="4.9372%" y="479.50">gg..</text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (12 samples, 0.01%)</title><rect x="7.2423%" y="405" width="0.0119%" height="15" fill="rgb(225,32,20)" fg:x="7327" fg:w="12"/><text x="7.4923%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12 samples, 0.01%)</title><rect x="7.2423%" y="389" width="0.0119%" height="15" fill="rgb(215,141,46)" fg:x="7327" fg:w="12"/><text x="7.4923%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 0.01%)</title><rect x="7.2423%" y="373" width="0.0119%" height="15" fill="rgb(250,160,47)" fg:x="7327" fg:w="12"/><text x="7.4923%" y="383.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (24 samples, 0.02%)</title><rect x="7.2394%" y="421" width="0.0237%" height="15" fill="rgb(216,222,40)" fg:x="7324" fg:w="24"/><text x="7.4894%" y="431.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (40 samples, 0.04%)</title><rect x="7.2325%" y="437" width="0.0395%" height="15" fill="rgb(234,217,39)" fg:x="7317" fg:w="40"/><text x="7.4825%" y="447.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (12 samples, 0.01%)</title><rect x="7.3244%" y="309" width="0.0119%" height="15" fill="rgb(207,178,40)" fg:x="7410" fg:w="12"/><text x="7.5744%" y="319.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (72 samples, 0.07%)</title><rect x="7.2730%" y="389" width="0.0712%" height="15" fill="rgb(221,136,13)" fg:x="7358" fg:w="72"/><text x="7.5230%" y="399.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (72 samples, 0.07%)</title><rect x="7.2730%" y="373" width="0.0712%" height="15" fill="rgb(249,199,10)" fg:x="7358" fg:w="72"/><text x="7.5230%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (72 samples, 0.07%)</title><rect x="7.2730%" y="357" width="0.0712%" height="15" fill="rgb(249,222,13)" fg:x="7358" fg:w="72"/><text x="7.5230%" y="367.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (72 samples, 0.07%)</title><rect x="7.2730%" y="341" width="0.0712%" height="15" fill="rgb(244,185,38)" fg:x="7358" fg:w="72"/><text x="7.5230%" y="351.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (72 samples, 0.07%)</title><rect x="7.2730%" y="325" width="0.0712%" height="15" fill="rgb(236,202,9)" fg:x="7358" fg:w="72"/><text x="7.5230%" y="335.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (75 samples, 0.07%)</title><rect x="7.2720%" y="437" width="0.0741%" height="15" fill="rgb(250,229,37)" fg:x="7357" fg:w="75"/><text x="7.5220%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (75 samples, 0.07%)</title><rect x="7.2720%" y="421" width="0.0741%" height="15" fill="rgb(206,174,23)" fg:x="7357" fg:w="75"/><text x="7.5220%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (74 samples, 0.07%)</title><rect x="7.2730%" y="405" width="0.0731%" height="15" fill="rgb(211,33,43)" fg:x="7358" fg:w="74"/><text x="7.5230%" y="415.50"></text></g><g><title>[libX11.so.6.4.0] (11 samples, 0.01%)</title><rect x="7.3530%" y="277" width="0.0109%" height="15" fill="rgb(245,58,50)" fg:x="7439" fg:w="11"/><text x="7.6030%" y="287.50"></text></g><g><title>[libxcb.so.1.1.0] (22 samples, 0.02%)</title><rect x="7.3649%" y="229" width="0.0217%" height="15" fill="rgb(244,68,36)" fg:x="7451" fg:w="22"/><text x="7.6149%" y="239.50"></text></g><g><title>__GI___writev (15 samples, 0.01%)</title><rect x="7.3718%" y="213" width="0.0148%" height="15" fill="rgb(232,229,15)" fg:x="7458" fg:w="15"/><text x="7.6218%" y="223.50"></text></g><g><title>__GI___writev (15 samples, 0.01%)</title><rect x="7.3718%" y="197" width="0.0148%" height="15" fill="rgb(254,30,23)" fg:x="7458" fg:w="15"/><text x="7.6218%" y="207.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="7.3718%" y="181" width="0.0148%" height="15" fill="rgb(235,160,14)" fg:x="7458" fg:w="15"/><text x="7.6218%" y="191.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.3728%" y="165" width="0.0138%" height="15" fill="rgb(212,155,44)" fg:x="7459" fg:w="14"/><text x="7.6228%" y="175.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.3728%" y="149" width="0.0138%" height="15" fill="rgb(226,2,50)" fg:x="7459" fg:w="14"/><text x="7.6228%" y="159.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.3728%" y="133" width="0.0138%" height="15" fill="rgb(234,177,6)" fg:x="7459" fg:w="14"/><text x="7.6228%" y="143.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="7.3738%" y="117" width="0.0128%" height="15" fill="rgb(217,24,9)" fg:x="7460" fg:w="13"/><text x="7.6238%" y="127.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="7.3738%" y="101" width="0.0128%" height="15" fill="rgb(220,13,46)" fg:x="7460" fg:w="13"/><text x="7.6238%" y="111.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="7.3758%" y="85" width="0.0109%" height="15" fill="rgb(239,221,27)" fg:x="7462" fg:w="11"/><text x="7.6258%" y="95.50"></text></g><g><title>_XSend (24 samples, 0.02%)</title><rect x="7.3639%" y="277" width="0.0237%" height="15" fill="rgb(222,198,25)" fg:x="7450" fg:w="24"/><text x="7.6139%" y="287.50"></text></g><g><title>xcb_writev (24 samples, 0.02%)</title><rect x="7.3639%" y="261" width="0.0237%" height="15" fill="rgb(211,99,13)" fg:x="7450" fg:w="24"/><text x="7.6139%" y="271.50"></text></g><g><title>[libxcb.so.1.1.0] (23 samples, 0.02%)</title><rect x="7.3649%" y="245" width="0.0227%" height="15" fill="rgb(232,111,31)" fg:x="7451" fg:w="23"/><text x="7.6149%" y="255.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (73 samples, 0.07%)</title><rect x="7.3471%" y="405" width="0.0722%" height="15" fill="rgb(245,82,37)" fg:x="7433" fg:w="73"/><text x="7.5971%" y="415.50"></text></g><g><title>winit::window::Window::inner_size (73 samples, 0.07%)</title><rect x="7.3471%" y="389" width="0.0722%" height="15" fill="rgb(227,149,46)" fg:x="7433" fg:w="73"/><text x="7.5971%" y="399.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (73 samples, 0.07%)</title><rect x="7.3471%" y="373" width="0.0722%" height="15" fill="rgb(218,36,50)" fg:x="7433" fg:w="73"/><text x="7.5971%" y="383.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (72 samples, 0.07%)</title><rect x="7.3481%" y="357" width="0.0712%" height="15" fill="rgb(226,80,48)" fg:x="7434" fg:w="72"/><text x="7.5981%" y="367.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (72 samples, 0.07%)</title><rect x="7.3481%" y="341" width="0.0712%" height="15" fill="rgb(238,224,15)" fg:x="7434" fg:w="72"/><text x="7.5981%" y="351.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (71 samples, 0.07%)</title><rect x="7.3491%" y="325" width="0.0702%" height="15" fill="rgb(241,136,10)" fg:x="7435" fg:w="71"/><text x="7.5991%" y="335.50"></text></g><g><title>XGetGeometry (70 samples, 0.07%)</title><rect x="7.3501%" y="309" width="0.0692%" height="15" fill="rgb(208,32,45)" fg:x="7436" fg:w="70"/><text x="7.6001%" y="319.50"></text></g><g><title>_XReply (67 samples, 0.07%)</title><rect x="7.3530%" y="293" width="0.0662%" height="15" fill="rgb(207,135,9)" fg:x="7439" fg:w="67"/><text x="7.6030%" y="303.50"></text></g><g><title>xcb_wait_for_reply64 (30 samples, 0.03%)</title><rect x="7.3896%" y="277" width="0.0297%" height="15" fill="rgb(206,86,44)" fg:x="7476" fg:w="30"/><text x="7.6396%" y="287.50"></text></g><g><title>[libxcb.so.1.1.0] (30 samples, 0.03%)</title><rect x="7.3896%" y="261" width="0.0297%" height="15" fill="rgb(245,177,15)" fg:x="7476" fg:w="30"/><text x="7.6396%" y="271.50"></text></g><g><title>[libxcb.so.1.1.0] (29 samples, 0.03%)</title><rect x="7.3906%" y="245" width="0.0287%" height="15" fill="rgb(206,64,50)" fg:x="7477" fg:w="29"/><text x="7.6406%" y="255.50"></text></g><g><title>__GI___poll (18 samples, 0.02%)</title><rect x="7.4015%" y="229" width="0.0178%" height="15" fill="rgb(234,36,40)" fg:x="7488" fg:w="18"/><text x="7.6515%" y="239.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="7.4015%" y="213" width="0.0178%" height="15" fill="rgb(213,64,8)" fg:x="7488" fg:w="18"/><text x="7.6515%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="7.4035%" y="197" width="0.0158%" height="15" fill="rgb(210,75,36)" fg:x="7490" fg:w="16"/><text x="7.6535%" y="207.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="7.4035%" y="181" width="0.0158%" height="15" fill="rgb(229,88,21)" fg:x="7490" fg:w="16"/><text x="7.6535%" y="191.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.4054%" y="165" width="0.0138%" height="15" fill="rgb(252,204,47)" fg:x="7492" fg:w="14"/><text x="7.6554%" y="175.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.4054%" y="149" width="0.0138%" height="15" fill="rgb(208,77,27)" fg:x="7492" fg:w="14"/><text x="7.6554%" y="159.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.4054%" y="133" width="0.0138%" height="15" fill="rgb(221,76,26)" fg:x="7492" fg:w="14"/><text x="7.6554%" y="143.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="7.4054%" y="117" width="0.0138%" height="15" fill="rgb(225,139,18)" fg:x="7492" fg:w="14"/><text x="7.6554%" y="127.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="7.4064%" y="101" width="0.0128%" height="15" fill="rgb(230,137,11)" fg:x="7493" fg:w="13"/><text x="7.6564%" y="111.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="7.4064%" y="85" width="0.0128%" height="15" fill="rgb(212,28,1)" fg:x="7493" fg:w="13"/><text x="7.6564%" y="95.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="7.4074%" y="69" width="0.0119%" height="15" fill="rgb(248,164,17)" fg:x="7494" fg:w="12"/><text x="7.6574%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="7.4084%" y="53" width="0.0109%" height="15" fill="rgb(222,171,42)" fg:x="7495" fg:w="11"/><text x="7.6584%" y="63.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (90 samples, 0.09%)</title><rect x="7.3461%" y="437" width="0.0890%" height="15" fill="rgb(243,84,45)" fg:x="7432" fg:w="90"/><text x="7.5961%" y="447.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (89 samples, 0.09%)</title><rect x="7.3471%" y="421" width="0.0880%" height="15" fill="rgb(252,49,23)" fg:x="7433" fg:w="89"/><text x="7.5971%" y="431.50"></text></g><g><title>wgpu::Queue::write_buffer (13 samples, 0.01%)</title><rect x="7.4222%" y="405" width="0.0128%" height="15" fill="rgb(215,19,7)" fg:x="7509" fg:w="13"/><text x="7.6722%" y="415.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="7.4222%" y="389" width="0.0128%" height="15" fill="rgb(238,81,41)" fg:x="7509" fg:w="13"/><text x="7.6722%" y="399.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="7.4222%" y="373" width="0.0128%" height="15" fill="rgb(210,199,37)" fg:x="7509" fg:w="13"/><text x="7.6722%" y="383.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.01%)</title><rect x="7.4222%" y="357" width="0.0128%" height="15" fill="rgb(244,192,49)" fg:x="7509" fg:w="13"/><text x="7.6722%" y="367.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (220 samples, 0.22%)</title><rect x="7.2255%" y="469" width="0.2175%" height="15" fill="rgb(226,211,11)" fg:x="7310" fg:w="220"/><text x="7.4755%" y="479.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (216 samples, 0.21%)</title><rect x="7.2295%" y="453" width="0.2135%" height="15" fill="rgb(236,162,54)" fg:x="7314" fg:w="216"/><text x="7.4795%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (39 samples, 0.04%)</title><rect x="7.4489%" y="421" width="0.0385%" height="15" fill="rgb(220,229,9)" fg:x="7536" fg:w="39"/><text x="7.6989%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="7.5201%" y="405" width="0.0109%" height="15" fill="rgb(250,87,22)" fg:x="7608" fg:w="11"/><text x="7.7701%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (55 samples, 0.05%)</title><rect x="7.5646%" y="373" width="0.0544%" height="15" fill="rgb(239,43,17)" fg:x="7653" fg:w="55"/><text x="7.8146%" y="383.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (17 samples, 0.02%)</title><rect x="7.6021%" y="357" width="0.0168%" height="15" fill="rgb(231,177,25)" fg:x="7691" fg:w="17"/><text x="7.8521%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.07%)</title><rect x="7.6189%" y="373" width="0.0722%" height="15" fill="rgb(219,179,1)" fg:x="7708" fg:w="73"/><text x="7.8689%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="7.6506%" y="357" width="0.0405%" height="15" fill="rgb(238,219,53)" fg:x="7740" fg:w="41"/><text x="7.9006%" y="367.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 0.01%)</title><rect x="7.6802%" y="341" width="0.0109%" height="15" fill="rgb(232,167,36)" fg:x="7770" fg:w="11"/><text x="7.9302%" y="351.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (410 samples, 0.41%)</title><rect x="7.5310%" y="389" width="0.4053%" height="15" fill="rgb(244,19,51)" fg:x="7619" fg:w="410"/><text x="7.7810%" y="399.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::get (239 samples, 0.24%)</title><rect x="7.7000%" y="373" width="0.2362%" height="15" fill="rgb(224,6,22)" fg:x="7790" fg:w="239"/><text x="7.9500%" y="383.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::occupied (239 samples, 0.24%)</title><rect x="7.7000%" y="357" width="0.2362%" height="15" fill="rgb(224,145,5)" fg:x="7790" fg:w="239"/><text x="7.9500%" y="367.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (1,770 samples, 1.75%)</title><rect x="9.0057%" y="341" width="1.7495%" height="15" fill="rgb(234,130,49)" fg:x="9111" fg:w="1770"/><text x="9.2557%" y="351.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (53 samples, 0.05%)</title><rect x="10.7029%" y="325" width="0.0524%" height="15" fill="rgb(254,6,2)" fg:x="10828" fg:w="53"/><text x="10.9529%" y="335.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (118 samples, 0.12%)</title><rect x="10.7553%" y="341" width="0.1166%" height="15" fill="rgb(208,96,46)" fg:x="10881" fg:w="118"/><text x="11.0053%" y="351.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (101 samples, 0.10%)</title><rect x="10.7721%" y="325" width="0.0998%" height="15" fill="rgb(239,3,39)" fg:x="10898" fg:w="101"/><text x="11.0221%" y="335.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (1,274 samples, 1.26%)</title><rect x="10.8719%" y="341" width="1.2593%" height="15" fill="rgb(233,210,1)" fg:x="10999" fg:w="1274"/><text x="11.1219%" y="351.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (3,474 samples, 3.43%)</title><rect x="8.9296%" y="357" width="3.4339%" height="15" fill="rgb(244,137,37)" fg:x="9034" fg:w="3474"/><text x="9.1796%" y="367.50">&lt;ne..</text></g><g><title>ggez::graphics::draw::DrawParam::scale (235 samples, 0.23%)</title><rect x="12.1312%" y="341" width="0.2323%" height="15" fill="rgb(240,136,2)" fg:x="12273" fg:w="235"/><text x="12.3812%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,936 samples, 4.88%)</title><rect x="7.5310%" y="405" width="4.8790%" height="15" fill="rgb(239,18,37)" fg:x="7619" fg:w="4936"/><text x="7.7810%" y="415.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (4,526 samples, 4.47%)</title><rect x="7.9362%" y="389" width="4.4737%" height="15" fill="rgb(218,185,22)" fg:x="8029" fg:w="4526"/><text x="8.1862%" y="399.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,561 samples, 3.52%)</title><rect x="8.8901%" y="373" width="3.5199%" height="15" fill="rgb(225,218,4)" fg:x="8994" fg:w="3561"/><text x="9.1401%" y="383.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (46 samples, 0.05%)</title><rect x="12.3645%" y="357" width="0.0455%" height="15" fill="rgb(230,182,32)" fg:x="12509" fg:w="46"/><text x="12.6145%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (21 samples, 0.02%)</title><rect x="12.4159%" y="405" width="0.0208%" height="15" fill="rgb(242,56,43)" fg:x="12561" fg:w="21"/><text x="12.6659%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5,193 samples, 5.13%)</title><rect x="7.4875%" y="421" width="5.1330%" height="15" fill="rgb(233,99,24)" fg:x="7575" fg:w="5193"/><text x="7.7375%" y="431.50">alloc:..</text></g><g><title>core::ptr::write (180 samples, 0.18%)</title><rect x="12.4425%" y="405" width="0.1779%" height="15" fill="rgb(234,209,42)" fg:x="12588" fg:w="180"/><text x="12.6925%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.04%)</title><rect x="12.6205%" y="357" width="0.0445%" height="15" fill="rgb(227,7,12)" fg:x="12768" fg:w="45"/><text x="12.8705%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (337 samples, 0.33%)</title><rect x="12.6649%" y="341" width="0.3331%" height="15" fill="rgb(245,203,43)" fg:x="12813" fg:w="337"/><text x="12.9149%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (337 samples, 0.33%)</title><rect x="12.6649%" y="325" width="0.3331%" height="15" fill="rgb(238,205,33)" fg:x="12813" fg:w="337"/><text x="12.9149%" y="335.50"></text></g><g><title>core::ptr::write (337 samples, 0.33%)</title><rect x="12.6649%" y="309" width="0.3331%" height="15" fill="rgb(231,56,7)" fg:x="12813" fg:w="337"/><text x="12.9149%" y="319.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (152 samples, 0.15%)</title><rect x="13.3351%" y="309" width="0.1502%" height="15" fill="rgb(244,186,29)" fg:x="13491" fg:w="152"/><text x="13.5851%" y="319.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (152 samples, 0.15%)</title><rect x="13.3351%" y="293" width="0.1502%" height="15" fill="rgb(234,111,31)" fg:x="13491" fg:w="152"/><text x="13.5851%" y="303.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (152 samples, 0.15%)</title><rect x="13.3351%" y="277" width="0.1502%" height="15" fill="rgb(241,149,10)" fg:x="13491" fg:w="152"/><text x="13.5851%" y="287.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (1,087 samples, 1.07%)</title><rect x="13.0623%" y="325" width="1.0744%" height="15" fill="rgb(249,206,44)" fg:x="13215" fg:w="1087"/><text x="13.3123%" y="335.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (659 samples, 0.65%)</title><rect x="13.4854%" y="309" width="0.6514%" height="15" fill="rgb(251,153,30)" fg:x="13643" fg:w="659"/><text x="13.7354%" y="319.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (659 samples, 0.65%)</title><rect x="13.4854%" y="293" width="0.6514%" height="15" fill="rgb(239,152,38)" fg:x="13643" fg:w="659"/><text x="13.7354%" y="303.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (112 samples, 0.11%)</title><rect x="15.4543%" y="277" width="0.1107%" height="15" fill="rgb(249,139,47)" fg:x="15635" fg:w="112"/><text x="15.7043%" y="287.50"></text></g><g><title>asuint (121 samples, 0.12%)</title><rect x="16.6988%" y="245" width="0.1196%" height="15" fill="rgb(244,64,35)" fg:x="16894" fg:w="121"/><text x="16.9488%" y="255.50"></text></g><g><title>exp2_inline (2,036 samples, 2.01%)</title><rect x="16.8184%" y="245" width="2.0125%" height="15" fill="rgb(216,46,15)" fg:x="17015" fg:w="2036"/><text x="17.0684%" y="255.50">e..</text></g><g><title>asuint64 (67 samples, 0.07%)</title><rect x="18.7646%" y="229" width="0.0662%" height="15" fill="rgb(250,74,19)" fg:x="18984" fg:w="67"/><text x="19.0146%" y="239.50"></text></g><g><title>log2_inline (897 samples, 0.89%)</title><rect x="18.8309%" y="245" width="0.8866%" height="15" fill="rgb(249,42,33)" fg:x="19051" fg:w="897"/><text x="19.0809%" y="255.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (4,722 samples, 4.67%)</title><rect x="15.1390%" y="293" width="4.6674%" height="15" fill="rgb(242,149,17)" fg:x="15316" fg:w="4722"/><text x="15.3890%" y="303.50">&lt;ggez..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (4,291 samples, 4.24%)</title><rect x="15.5650%" y="277" width="4.2414%" height="15" fill="rgb(244,29,21)" fg:x="15747" fg:w="4291"/><text x="15.8150%" y="287.50">std::..</text></g><g><title>__powf_fma (4,282 samples, 4.23%)</title><rect x="15.5739%" y="261" width="4.2325%" height="15" fill="rgb(220,130,37)" fg:x="15756" fg:w="4282"/><text x="15.8239%" y="271.50">__pow..</text></g><g><title>zeroinfnan (90 samples, 0.09%)</title><rect x="19.7175%" y="245" width="0.0890%" height="15" fill="rgb(211,67,2)" fg:x="19948" fg:w="90"/><text x="19.9675%" y="255.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (4,746 samples, 4.69%)</title><rect x="15.1390%" y="309" width="4.6912%" height="15" fill="rgb(235,68,52)" fg:x="15316" fg:w="4746"/><text x="15.3890%" y="319.50">&lt;ggez..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (24 samples, 0.02%)</title><rect x="19.8065%" y="293" width="0.0237%" height="15" fill="rgb(246,142,3)" fg:x="20038" fg:w="24"/><text x="20.0565%" y="303.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (91 samples, 0.09%)</title><rect x="19.8322%" y="309" width="0.0899%" height="15" fill="rgb(241,25,7)" fg:x="20064" fg:w="91"/><text x="20.0822%" y="319.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (135 samples, 0.13%)</title><rect x="21.1379%" y="293" width="0.1334%" height="15" fill="rgb(242,119,39)" fg:x="21385" fg:w="135"/><text x="21.3879%" y="303.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (96 samples, 0.09%)</title><rect x="21.1764%" y="277" width="0.0949%" height="15" fill="rgb(241,98,45)" fg:x="21424" fg:w="96"/><text x="21.4264%" y="287.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::transpose (146 samples, 0.14%)</title><rect x="21.2713%" y="293" width="0.1443%" height="15" fill="rgb(254,28,30)" fg:x="21520" fg:w="146"/><text x="21.5213%" y="303.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (85 samples, 0.08%)</title><rect x="21.3316%" y="277" width="0.0840%" height="15" fill="rgb(241,142,54)" fg:x="21581" fg:w="85"/><text x="21.5816%" y="287.50"></text></g><g><title>abstop12 (51 samples, 0.05%)</title><rect x="21.5975%" y="245" width="0.0504%" height="15" fill="rgb(222,85,15)" fg:x="21850" fg:w="51"/><text x="21.8475%" y="255.50"></text></g><g><title>reduce_fast (93 samples, 0.09%)</title><rect x="21.6479%" y="245" width="0.0919%" height="15" fill="rgb(210,85,47)" fg:x="21901" fg:w="93"/><text x="21.8979%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,560 samples, 9.45%)</title><rect x="12.6205%" y="373" width="9.4495%" height="15" fill="rgb(224,206,25)" fg:x="12768" fg:w="9560"/><text x="12.8705%" y="383.50">core::iter::tr..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9,515 samples, 9.41%)</title><rect x="12.6649%" y="357" width="9.4051%" height="15" fill="rgb(243,201,19)" fg:x="12813" fg:w="9515"/><text x="12.9149%" y="367.50">core::iter::a..</text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (9,178 samples, 9.07%)</title><rect x="12.9981%" y="341" width="9.0719%" height="15" fill="rgb(236,59,4)" fg:x="13150" fg:w="9178"/><text x="13.2481%" y="351.50">ggez::graphic..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (8,026 samples, 7.93%)</title><rect x="14.1367%" y="325" width="7.9333%" height="15" fill="rgb(254,179,45)" fg:x="14302" fg:w="8026"/><text x="14.3867%" y="335.50">ggez::graph..</text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (2,173 samples, 2.15%)</title><rect x="19.9221%" y="309" width="2.1479%" height="15" fill="rgb(226,14,10)" fg:x="20155" fg:w="2173"/><text x="20.1721%" y="319.50">g..</text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (662 samples, 0.65%)</title><rect x="21.4157%" y="293" width="0.6544%" height="15" fill="rgb(244,27,41)" fg:x="21666" fg:w="662"/><text x="21.6657%" y="303.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (662 samples, 0.65%)</title><rect x="21.4157%" y="277" width="0.6544%" height="15" fill="rgb(235,35,32)" fg:x="21666" fg:w="662"/><text x="21.6657%" y="287.50"></text></g><g><title>__sincosf_fma (661 samples, 0.65%)</title><rect x="21.4166%" y="261" width="0.6534%" height="15" fill="rgb(218,68,31)" fg:x="21667" fg:w="661"/><text x="21.6666%" y="271.50"></text></g><g><title>sincosf_poly (334 samples, 0.33%)</title><rect x="21.7399%" y="245" width="0.3301%" height="15" fill="rgb(207,120,37)" fg:x="21994" fg:w="334"/><text x="21.9899%" y="255.50"></text></g><g><title>v2df_to_sf (116 samples, 0.11%)</title><rect x="21.9553%" y="229" width="0.1147%" height="15" fill="rgb(227,98,0)" fg:x="22212" fg:w="116"/><text x="22.2053%" y="239.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (17,588 samples, 17.38%)</title><rect x="4.6862%" y="485" width="17.3848%" height="15" fill="rgb(207,7,3)" fg:x="4741" fg:w="17588"/><text x="4.9362%" y="495.50">&lt;neuralang::MainState as gg..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (14,793 samples, 14.62%)</title><rect x="7.4489%" y="469" width="14.6221%" height="15" fill="rgb(206,98,19)" fg:x="7536" fg:w="14793"/><text x="7.6989%" y="479.50">ggez::graphics::instan..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14,793 samples, 14.62%)</title><rect x="7.4489%" y="453" width="14.6221%" height="15" fill="rgb(217,5,26)" fg:x="7536" fg:w="14793"/><text x="7.6989%" y="463.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14,793 samples, 14.62%)</title><rect x="7.4489%" y="437" width="14.6221%" height="15" fill="rgb(235,190,38)" fg:x="7536" fg:w="14793"/><text x="7.6989%" y="447.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (9,561 samples, 9.45%)</title><rect x="12.6205%" y="421" width="9.4505%" height="15" fill="rgb(247,86,24)" fg:x="12768" fg:w="9561"/><text x="12.8705%" y="431.50">alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9,561 samples, 9.45%)</title><rect x="12.6205%" y="405" width="9.4505%" height="15" fill="rgb(205,101,16)" fg:x="12768" fg:w="9561"/><text x="12.8705%" y="415.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,561 samples, 9.45%)</title><rect x="12.6205%" y="389" width="9.4505%" height="15" fill="rgb(246,168,33)" fg:x="12768" fg:w="9561"/><text x="12.8705%" y="399.50">&lt;core::iter::a..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (13,078 samples, 12.93%)</title><rect x="22.0710%" y="453" width="12.9269%" height="15" fill="rgb(231,114,1)" fg:x="22329" fg:w="13078"/><text x="22.3210%" y="463.50">&lt;neuralang::MainSta..</text></g><g><title>neuralang::World::age_foods (24 samples, 0.02%)</title><rect x="34.9979%" y="453" width="0.0237%" height="15" fill="rgb(207,184,53)" fg:x="35407" fg:w="24"/><text x="35.2479%" y="463.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="34.9979%" y="437" width="0.0237%" height="15" fill="rgb(224,95,51)" fg:x="35407" fg:w="24"/><text x="35.2479%" y="447.50"></text></g><g><title>neuralang::World::age_obstructs (31 samples, 0.03%)</title><rect x="35.0216%" y="453" width="0.0306%" height="15" fill="rgb(212,188,45)" fg:x="35431" fg:w="31"/><text x="35.2716%" y="463.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="35.0275%" y="437" width="0.0247%" height="15" fill="rgb(223,154,38)" fg:x="35437" fg:w="25"/><text x="35.2775%" y="447.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,177 samples, 2.15%)</title><rect x="41.3556%" y="437" width="2.1518%" height="15" fill="rgb(251,22,52)" fg:x="41839" fg:w="2177"/><text x="41.6056%" y="447.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,177 samples, 2.15%)</title><rect x="41.3556%" y="421" width="2.1518%" height="15" fill="rgb(229,209,22)" fg:x="41839" fg:w="2177"/><text x="41.6056%" y="431.50">&lt;..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (89 samples, 0.09%)</title><rect x="43.5074%" y="405" width="0.0880%" height="15" fill="rgb(234,138,34)" fg:x="44016" fg:w="89"/><text x="43.7574%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (465 samples, 0.46%)</title><rect x="43.5074%" y="437" width="0.4596%" height="15" fill="rgb(212,95,11)" fg:x="44016" fg:w="465"/><text x="43.7574%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (465 samples, 0.46%)</title><rect x="43.5074%" y="421" width="0.4596%" height="15" fill="rgb(240,179,47)" fg:x="44016" fg:w="465"/><text x="43.7574%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (376 samples, 0.37%)</title><rect x="43.5954%" y="405" width="0.3717%" height="15" fill="rgb(240,163,11)" fg:x="44105" fg:w="376"/><text x="43.8454%" y="415.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (99 samples, 0.10%)</title><rect x="44.2379%" y="405" width="0.0979%" height="15" fill="rgb(236,37,12)" fg:x="44755" fg:w="99"/><text x="44.4879%" y="415.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (99 samples, 0.10%)</title><rect x="44.2379%" y="389" width="0.0979%" height="15" fill="rgb(232,164,16)" fg:x="44755" fg:w="99"/><text x="44.4879%" y="399.50"></text></g><g><title>core::ops::index_range::IndexRange::len (99 samples, 0.10%)</title><rect x="44.2379%" y="373" width="0.0979%" height="15" fill="rgb(244,205,15)" fg:x="44755" fg:w="99"/><text x="44.4879%" y="383.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (695 samples, 0.69%)</title><rect x="43.9670%" y="421" width="0.6870%" height="15" fill="rgb(223,117,47)" fg:x="44481" fg:w="695"/><text x="44.2170%" y="431.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (322 samples, 0.32%)</title><rect x="44.3357%" y="405" width="0.3183%" height="15" fill="rgb(244,107,35)" fg:x="44854" fg:w="322"/><text x="44.5857%" y="415.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (187 samples, 0.18%)</title><rect x="44.6540%" y="357" width="0.1848%" height="15" fill="rgb(205,140,8)" fg:x="45176" fg:w="187"/><text x="44.9040%" y="367.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,088 samples, 1.08%)</title><rect x="43.9670%" y="437" width="1.0754%" height="15" fill="rgb(228,84,46)" fg:x="44481" fg:w="1088"/><text x="44.2170%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (393 samples, 0.39%)</title><rect x="44.6540%" y="421" width="0.3885%" height="15" fill="rgb(254,188,9)" fg:x="45176" fg:w="393"/><text x="44.9040%" y="431.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (393 samples, 0.39%)</title><rect x="44.6540%" y="405" width="0.3885%" height="15" fill="rgb(206,112,54)" fg:x="45176" fg:w="393"/><text x="44.9040%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (393 samples, 0.39%)</title><rect x="44.6540%" y="389" width="0.3885%" height="15" fill="rgb(216,84,49)" fg:x="45176" fg:w="393"/><text x="44.9040%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (393 samples, 0.39%)</title><rect x="44.6540%" y="373" width="0.3885%" height="15" fill="rgb(214,194,35)" fg:x="45176" fg:w="393"/><text x="44.9040%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (206 samples, 0.20%)</title><rect x="44.8388%" y="357" width="0.2036%" height="15" fill="rgb(249,28,3)" fg:x="45363" fg:w="206"/><text x="45.0888%" y="367.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (22 samples, 0.02%)</title><rect x="46.1485%" y="389" width="0.0217%" height="15" fill="rgb(222,56,52)" fg:x="46688" fg:w="22"/><text x="46.3985%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,146 samples, 1.13%)</title><rect x="45.0425%" y="437" width="1.1328%" height="15" fill="rgb(245,217,50)" fg:x="45569" fg:w="1146"/><text x="45.2925%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (27 samples, 0.03%)</title><rect x="46.1485%" y="421" width="0.0267%" height="15" fill="rgb(213,201,24)" fg:x="46688" fg:w="27"/><text x="46.3985%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (27 samples, 0.03%)</title><rect x="46.1485%" y="405" width="0.0267%" height="15" fill="rgb(248,116,28)" fg:x="46688" fg:w="27"/><text x="46.3985%" y="415.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (1,114 samples, 1.10%)</title><rect x="46.1752%" y="437" width="1.1011%" height="15" fill="rgb(219,72,43)" fg:x="46715" fg:w="1114"/><text x="46.4252%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1,114 samples, 1.10%)</title><rect x="46.1752%" y="421" width="1.1011%" height="15" fill="rgb(209,138,14)" fg:x="46715" fg:w="1114"/><text x="46.4252%" y="431.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::AddAssign&gt;::add_assign (91 samples, 0.09%)</title><rect x="47.2763%" y="437" width="0.0899%" height="15" fill="rgb(222,18,33)" fg:x="47829" fg:w="91"/><text x="47.5263%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::AddAssign&gt;::add_assign (91 samples, 0.09%)</title><rect x="47.2763%" y="421" width="0.0899%" height="15" fill="rgb(213,199,7)" fg:x="47829" fg:w="91"/><text x="47.5263%" y="431.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (322 samples, 0.32%)</title><rect x="47.3663%" y="437" width="0.3183%" height="15" fill="rgb(250,110,10)" fg:x="47920" fg:w="322"/><text x="47.6163%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (322 samples, 0.32%)</title><rect x="47.3663%" y="421" width="0.3183%" height="15" fill="rgb(248,123,6)" fg:x="47920" fg:w="322"/><text x="47.6163%" y="431.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (200 samples, 0.20%)</title><rect x="47.6846%" y="437" width="0.1977%" height="15" fill="rgb(206,91,31)" fg:x="48242" fg:w="200"/><text x="47.9346%" y="447.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (200 samples, 0.20%)</title><rect x="47.6846%" y="421" width="0.1977%" height="15" fill="rgb(211,154,13)" fg:x="48242" fg:w="200"/><text x="47.9346%" y="431.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (1,033 samples, 1.02%)</title><rect x="47.8823%" y="437" width="1.0211%" height="15" fill="rgb(225,148,7)" fg:x="48442" fg:w="1033"/><text x="48.1323%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,365 samples, 1.35%)</title><rect x="48.9112%" y="437" width="1.3492%" height="15" fill="rgb(220,160,43)" fg:x="49483" fg:w="1365"/><text x="49.1612%" y="447.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (1,365 samples, 1.35%)</title><rect x="48.9112%" y="421" width="1.3492%" height="15" fill="rgb(213,52,39)" fg:x="49483" fg:w="1365"/><text x="49.1612%" y="431.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (1,365 samples, 1.35%)</title><rect x="48.9112%" y="405" width="1.3492%" height="15" fill="rgb(243,137,7)" fg:x="49483" fg:w="1365"/><text x="49.1612%" y="415.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="50.2456%" y="389" width="0.0148%" height="15" fill="rgb(230,79,13)" fg:x="50833" fg:w="15"/><text x="50.4956%" y="399.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="50.2476%" y="373" width="0.0128%" height="15" fill="rgb(247,105,23)" fg:x="50835" fg:w="13"/><text x="50.4976%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="50.2476%" y="357" width="0.0128%" height="15" fill="rgb(223,179,41)" fg:x="50835" fg:w="13"/><text x="50.4976%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="50.2476%" y="341" width="0.0128%" height="15" fill="rgb(218,9,34)" fg:x="50835" fg:w="13"/><text x="50.4976%" y="351.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="50.2496%" y="325" width="0.0109%" height="15" fill="rgb(222,106,8)" fg:x="50837" fg:w="11"/><text x="50.4996%" y="335.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="50.2496%" y="309" width="0.0109%" height="15" fill="rgb(211,220,0)" fg:x="50837" fg:w="11"/><text x="50.4996%" y="319.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="50.2496%" y="293" width="0.0109%" height="15" fill="rgb(229,52,16)" fg:x="50837" fg:w="11"/><text x="50.4996%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (70 samples, 0.07%)</title><rect x="50.2605%" y="437" width="0.0692%" height="15" fill="rgb(212,155,18)" fg:x="50848" fg:w="70"/><text x="50.5105%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (70 samples, 0.07%)</title><rect x="50.2605%" y="421" width="0.0692%" height="15" fill="rgb(242,21,14)" fg:x="50848" fg:w="70"/><text x="50.5105%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (66 samples, 0.07%)</title><rect x="50.2644%" y="405" width="0.0652%" height="15" fill="rgb(222,19,48)" fg:x="50852" fg:w="66"/><text x="50.5144%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.02%)</title><rect x="50.3296%" y="437" width="0.0178%" height="15" fill="rgb(232,45,27)" fg:x="50918" fg:w="18"/><text x="50.5796%" y="447.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (437 samples, 0.43%)</title><rect x="53.1991%" y="405" width="0.4320%" height="15" fill="rgb(249,103,42)" fg:x="53821" fg:w="437"/><text x="53.4491%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (437 samples, 0.43%)</title><rect x="53.1991%" y="389" width="0.4320%" height="15" fill="rgb(246,81,33)" fg:x="53821" fg:w="437"/><text x="53.4491%" y="399.50"></text></g><g><title>glam::f32::math::std_math::sqrt (2,791 samples, 2.76%)</title><rect x="53.6311%" y="389" width="2.7588%" height="15" fill="rgb(252,33,42)" fg:x="54258" fg:w="2791"/><text x="53.8811%" y="399.50">gl..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2,791 samples, 2.76%)</title><rect x="53.6311%" y="373" width="2.7588%" height="15" fill="rgb(209,212,41)" fg:x="54258" fg:w="2791"/><text x="53.8811%" y="383.50">st..</text></g><g><title>neuralang::beings_collide (7,430 samples, 7.34%)</title><rect x="50.3474%" y="437" width="7.3441%" height="15" fill="rgb(207,154,6)" fg:x="50936" fg:w="7430"/><text x="50.5974%" y="447.50">neuralang:..</text></g><g><title>glam::f32::vec2::Vec2::distance (4,545 samples, 4.49%)</title><rect x="53.1991%" y="421" width="4.4925%" height="15" fill="rgb(223,64,47)" fg:x="53821" fg:w="4545"/><text x="53.4491%" y="431.50">glam:..</text></g><g><title>glam::f32::vec2::Vec2::length (4,108 samples, 4.06%)</title><rect x="53.6311%" y="405" width="4.0605%" height="15" fill="rgb(211,161,38)" fg:x="54258" fg:w="4108"/><text x="53.8811%" y="415.50">glam..</text></g><g><title>glam::f32::vec2::Vec2::dot (1,317 samples, 1.30%)</title><rect x="56.3898%" y="389" width="1.3018%" height="15" fill="rgb(219,138,40)" fg:x="57049" fg:w="1317"/><text x="56.6398%" y="399.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (157 samples, 0.16%)</title><rect x="57.9081%" y="405" width="0.1552%" height="15" fill="rgb(241,228,46)" fg:x="58585" fg:w="157"/><text x="58.1581%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (157 samples, 0.16%)</title><rect x="57.9081%" y="389" width="0.1552%" height="15" fill="rgb(223,209,38)" fg:x="58585" fg:w="157"/><text x="58.1581%" y="399.50"></text></g><g><title>glam::f32::math::std_math::sqrt (351 samples, 0.35%)</title><rect x="58.0632%" y="389" width="0.3469%" height="15" fill="rgb(236,164,45)" fg:x="58742" fg:w="351"/><text x="58.3132%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (351 samples, 0.35%)</title><rect x="58.0632%" y="373" width="0.3469%" height="15" fill="rgb(231,15,5)" fg:x="58742" fg:w="351"/><text x="58.3132%" y="383.50"></text></g><g><title>neuralang::obstruct_collide (940 samples, 0.93%)</title><rect x="57.6916%" y="437" width="0.9291%" height="15" fill="rgb(252,35,15)" fg:x="58366" fg:w="940"/><text x="57.9416%" y="447.50"></text></g><g><title>glam::f32::vec2::Vec2::distance (721 samples, 0.71%)</title><rect x="57.9081%" y="421" width="0.7127%" height="15" fill="rgb(248,181,18)" fg:x="58585" fg:w="721"/><text x="58.1581%" y="431.50"></text></g><g><title>glam::f32::vec2::Vec2::length (564 samples, 0.56%)</title><rect x="58.0632%" y="405" width="0.5575%" height="15" fill="rgb(233,39,42)" fg:x="58742" fg:w="564"/><text x="58.3132%" y="415.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (213 samples, 0.21%)</title><rect x="58.4102%" y="389" width="0.2105%" height="15" fill="rgb(238,110,33)" fg:x="59093" fg:w="213"/><text x="58.6602%" y="399.50"></text></g><g><title>neuralang::oob (105 samples, 0.10%)</title><rect x="58.6207%" y="437" width="0.1038%" height="15" fill="rgb(233,195,10)" fg:x="59306" fg:w="105"/><text x="58.8707%" y="447.50"></text></g><g><title>neuralang::two_to_one (329 samples, 0.33%)</title><rect x="58.7245%" y="437" width="0.3252%" height="15" fill="rgb(254,105,3)" fg:x="59411" fg:w="329"/><text x="58.9745%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (921 samples, 0.91%)</title><rect x="61.1768%" y="421" width="0.9104%" height="15" fill="rgb(221,225,9)" fg:x="61892" fg:w="921"/><text x="61.4268%" y="431.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (558 samples, 0.55%)</title><rect x="61.5356%" y="405" width="0.5516%" height="15" fill="rgb(224,227,45)" fg:x="62255" fg:w="558"/><text x="61.7856%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (861 samples, 0.85%)</title><rect x="62.0872%" y="421" width="0.8511%" height="15" fill="rgb(229,198,43)" fg:x="62813" fg:w="861"/><text x="62.3372%" y="431.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (426 samples, 0.42%)</title><rect x="62.5172%" y="405" width="0.4211%" height="15" fill="rgb(206,209,35)" fg:x="63248" fg:w="426"/><text x="62.7672%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (426 samples, 0.42%)</title><rect x="62.5172%" y="389" width="0.4211%" height="15" fill="rgb(245,195,53)" fg:x="63248" fg:w="426"/><text x="62.7672%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (426 samples, 0.42%)</title><rect x="62.5172%" y="373" width="0.4211%" height="15" fill="rgb(240,92,26)" fg:x="63248" fg:w="426"/><text x="62.7672%" y="383.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (868 samples, 0.86%)</title><rect x="62.9383%" y="421" width="0.8580%" height="15" fill="rgb(207,40,23)" fg:x="63674" fg:w="868"/><text x="63.1883%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="63.7962%" y="421" width="0.0168%" height="15" fill="rgb(223,111,35)" fg:x="64542" fg:w="17"/><text x="64.0462%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="63.7992%" y="405" width="0.0138%" height="15" fill="rgb(229,147,28)" fg:x="64545" fg:w="14"/><text x="64.0492%" y="415.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="63.7992%" y="389" width="0.0138%" height="15" fill="rgb(211,29,28)" fg:x="64545" fg:w="14"/><text x="64.0492%" y="399.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="63.7992%" y="373" width="0.0138%" height="15" fill="rgb(228,72,33)" fg:x="64545" fg:w="14"/><text x="64.0492%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="63.8012%" y="357" width="0.0119%" height="15" fill="rgb(205,214,31)" fg:x="64547" fg:w="12"/><text x="64.0512%" y="367.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="63.8022%" y="341" width="0.0109%" height="15" fill="rgb(224,111,15)" fg:x="64548" fg:w="11"/><text x="64.0522%" y="351.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="63.8022%" y="325" width="0.0109%" height="15" fill="rgb(253,21,26)" fg:x="64548" fg:w="11"/><text x="64.0522%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (514 samples, 0.51%)</title><rect x="64.1036%" y="405" width="0.5081%" height="15" fill="rgb(245,139,43)" fg:x="64853" fg:w="514"/><text x="64.3536%" y="415.50"></text></g><g><title>core::slice::raw::from_raw_parts (514 samples, 0.51%)</title><rect x="64.1036%" y="389" width="0.5081%" height="15" fill="rgb(252,170,7)" fg:x="64853" fg:w="514"/><text x="64.3536%" y="399.50"></text></g><g><title>core::slice::raw::from_raw_parts::runtime (514 samples, 0.51%)</title><rect x="64.1036%" y="373" width="0.5081%" height="15" fill="rgb(231,118,14)" fg:x="64853" fg:w="514"/><text x="64.3536%" y="383.50"></text></g><g><title>core::intrinsics::is_valid_allocation_size (514 samples, 0.51%)</title><rect x="64.1036%" y="357" width="0.5081%" height="15" fill="rgb(238,83,0)" fg:x="64853" fg:w="514"/><text x="64.3536%" y="367.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (555 samples, 0.55%)</title><rect x="64.6117%" y="405" width="0.5486%" height="15" fill="rgb(221,39,39)" fg:x="65367" fg:w="555"/><text x="64.8617%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (8,506 samples, 8.41%)</title><rect x="65.1603%" y="405" width="8.4077%" height="15" fill="rgb(222,119,46)" fg:x="65922" fg:w="8506"/><text x="65.4103%" y="415.50">core::option..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key::{{closure}} (8,418 samples, 8.32%)</title><rect x="65.2473%" y="389" width="8.3207%" height="15" fill="rgb(222,165,49)" fg:x="66010" fg:w="8418"/><text x="65.4973%" y="399.50">slotmap::bas..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_disjoint_mut (14,856 samples, 14.68%)</title><rect x="59.0497%" y="437" width="14.6843%" height="15" fill="rgb(219,113,52)" fg:x="59740" fg:w="14856"/><text x="59.2997%" y="447.50">slotmap::basic::SlotMa..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key (10,037 samples, 9.92%)</title><rect x="63.8130%" y="421" width="9.9210%" height="15" fill="rgb(214,7,15)" fg:x="64559" fg:w="10037"/><text x="64.0630%" y="431.50">slotmap::basic..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (168 samples, 0.17%)</title><rect x="73.5680%" y="405" width="0.1661%" height="15" fill="rgb(235,32,4)" fg:x="74428" fg:w="168"/><text x="73.8180%" y="415.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (168 samples, 0.17%)</title><rect x="73.5680%" y="389" width="0.1661%" height="15" fill="rgb(238,90,54)" fg:x="74428" fg:w="168"/><text x="73.8180%" y="399.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (217 samples, 0.21%)</title><rect x="73.7568%" y="421" width="0.2145%" height="15" fill="rgb(213,208,19)" fg:x="74619" fg:w="217"/><text x="74.0068%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (1,037 samples, 1.03%)</title><rect x="73.9713%" y="421" width="1.0250%" height="15" fill="rgb(233,156,4)" fg:x="74836" fg:w="1037"/><text x="74.2213%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (87 samples, 0.09%)</title><rect x="74.9963%" y="421" width="0.0860%" height="15" fill="rgb(207,194,5)" fg:x="75873" fg:w="87"/><text x="75.2463%" y="431.50"></text></g><g><title>neuralang::World::check_collisions (40,592 samples, 40.12%)</title><rect x="35.0522%" y="453" width="40.1230%" height="15" fill="rgb(206,111,30)" fg:x="35462" fg:w="40592"/><text x="35.3022%" y="463.50">neuralang::World::check_collisions</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (1,458 samples, 1.44%)</title><rect x="73.7340%" y="437" width="1.4412%" height="15" fill="rgb(243,70,54)" fg:x="74596" fg:w="1458"/><text x="73.9840%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (94 samples, 0.09%)</title><rect x="75.0823%" y="421" width="0.0929%" height="15" fill="rgb(242,28,8)" fg:x="75960" fg:w="94"/><text x="75.3323%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (94 samples, 0.09%)</title><rect x="75.0823%" y="405" width="0.0929%" height="15" fill="rgb(219,106,18)" fg:x="75960" fg:w="94"/><text x="75.3323%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (107 samples, 0.11%)</title><rect x="75.5152%" y="389" width="0.1058%" height="15" fill="rgb(244,222,10)" fg:x="76398" fg:w="107"/><text x="75.7652%" y="399.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (56 samples, 0.06%)</title><rect x="75.5656%" y="373" width="0.0554%" height="15" fill="rgb(236,179,52)" fg:x="76449" fg:w="56"/><text x="75.8156%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.05%)</title><rect x="75.6210%" y="389" width="0.0474%" height="15" fill="rgb(213,23,39)" fg:x="76505" fg:w="48"/><text x="75.8710%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.05%)</title><rect x="75.6210%" y="373" width="0.0474%" height="15" fill="rgb(238,48,10)" fg:x="76505" fg:w="48"/><text x="75.8710%" y="383.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (528 samples, 0.52%)</title><rect x="75.1782%" y="405" width="0.5219%" height="15" fill="rgb(251,196,23)" fg:x="76057" fg:w="528"/><text x="75.4282%" y="415.50"></text></g><g><title>slotmap::KeyData::new (32 samples, 0.03%)</title><rect x="75.6684%" y="389" width="0.0316%" height="15" fill="rgb(250,152,24)" fg:x="76553" fg:w="32"/><text x="75.9184%" y="399.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (637 samples, 0.63%)</title><rect x="75.7890%" y="373" width="0.6296%" height="15" fill="rgb(209,150,17)" fg:x="76675" fg:w="637"/><text x="76.0390%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (637 samples, 0.63%)</title><rect x="75.7890%" y="357" width="0.6296%" height="15" fill="rgb(234,202,34)" fg:x="76675" fg:w="637"/><text x="76.0390%" y="367.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (274 samples, 0.27%)</title><rect x="76.4187%" y="373" width="0.2708%" height="15" fill="rgb(253,148,53)" fg:x="77312" fg:w="274"/><text x="76.6687%" y="383.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (274 samples, 0.27%)</title><rect x="76.4187%" y="357" width="0.2708%" height="15" fill="rgb(218,129,16)" fg:x="77312" fg:w="274"/><text x="76.6687%" y="367.50"></text></g><g><title>abstop12 (49 samples, 0.05%)</title><rect x="76.8763%" y="325" width="0.0484%" height="15" fill="rgb(216,85,19)" fg:x="77775" fg:w="49"/><text x="77.1263%" y="335.50"></text></g><g><title>reduce_fast (87 samples, 0.09%)</title><rect x="76.9247%" y="325" width="0.0860%" height="15" fill="rgb(235,228,7)" fg:x="77824" fg:w="87"/><text x="77.1747%" y="335.50"></text></g><g><title>neuralang::dir_from_theta (1,016 samples, 1.00%)</title><rect x="76.6895%" y="373" width="1.0043%" height="15" fill="rgb(245,175,0)" fg:x="77586" fg:w="1016"/><text x="76.9395%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (1,016 samples, 1.00%)</title><rect x="76.6895%" y="357" width="1.0043%" height="15" fill="rgb(208,168,36)" fg:x="77586" fg:w="1016"/><text x="76.9395%" y="367.50"></text></g><g><title>__sincosf_fma (1,014 samples, 1.00%)</title><rect x="76.6915%" y="341" width="1.0023%" height="15" fill="rgb(246,171,24)" fg:x="77588" fg:w="1014"/><text x="76.9415%" y="351.50"></text></g><g><title>sincosf_poly (691 samples, 0.68%)</title><rect x="77.0107%" y="325" width="0.6830%" height="15" fill="rgb(215,142,24)" fg:x="77911" fg:w="691"/><text x="77.2607%" y="335.50"></text></g><g><title>v2df_to_sf (222 samples, 0.22%)</title><rect x="77.4743%" y="309" width="0.2194%" height="15" fill="rgb(250,187,7)" fg:x="78380" fg:w="222"/><text x="77.7243%" y="319.50"></text></g><g><title>neuralang::oob (85 samples, 0.08%)</title><rect x="77.6938%" y="373" width="0.0840%" height="15" fill="rgb(228,66,33)" fg:x="78602" fg:w="85"/><text x="77.9438%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,634 samples, 2.60%)</title><rect x="75.1752%" y="437" width="2.6036%" height="15" fill="rgb(234,215,21)" fg:x="76054" fg:w="2634"/><text x="75.4252%" y="447.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,633 samples, 2.60%)</title><rect x="75.1762%" y="421" width="2.6026%" height="15" fill="rgb(222,191,20)" fg:x="76055" fg:w="2633"/><text x="75.4262%" y="431.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2,103 samples, 2.08%)</title><rect x="75.7001%" y="405" width="2.0787%" height="15" fill="rgb(245,79,54)" fg:x="76585" fg:w="2103"/><text x="75.9501%" y="415.50">c..</text></g><g><title>neuralang::World::move_beings::{{closure}} (2,103 samples, 2.08%)</title><rect x="75.7001%" y="389" width="2.0787%" height="15" fill="rgb(240,10,37)" fg:x="76585" fg:w="2103"/><text x="75.9501%" y="399.50">n..</text></g><g><title>neuralang::World::move_beings (2,635 samples, 2.60%)</title><rect x="75.1752%" y="453" width="2.6046%" height="15" fill="rgb(214,192,32)" fg:x="76054" fg:w="2635"/><text x="75.4252%" y="463.50">ne..</text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.03%)</title><rect x="78.3718%" y="421" width="0.0267%" height="15" fill="rgb(209,36,54)" fg:x="79288" fg:w="27"/><text x="78.6218%" y="431.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (19 samples, 0.02%)</title><rect x="78.3797%" y="405" width="0.0188%" height="15" fill="rgb(220,10,11)" fg:x="79296" fg:w="19"/><text x="78.6297%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="78.3985%" y="421" width="0.0158%" height="15" fill="rgb(221,106,17)" fg:x="79315" fg:w="16"/><text x="78.6485%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="78.3985%" y="405" width="0.0158%" height="15" fill="rgb(251,142,44)" fg:x="79315" fg:w="16"/><text x="78.6485%" y="415.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (612 samples, 0.60%)</title><rect x="77.8420%" y="437" width="0.6049%" height="15" fill="rgb(238,13,15)" fg:x="78752" fg:w="612"/><text x="78.0920%" y="447.50"></text></g><g><title>slotmap::KeyData::new (31 samples, 0.03%)</title><rect x="78.4163%" y="421" width="0.0306%" height="15" fill="rgb(208,107,27)" fg:x="79333" fg:w="31"/><text x="78.6663%" y="431.50"></text></g><g><title>neuralang::World::tire_beings (676 samples, 0.67%)</title><rect x="77.7798%" y="453" width="0.6682%" height="15" fill="rgb(205,136,37)" fg:x="78689" fg:w="676"/><text x="78.0298%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (69 samples, 0.07%)</title><rect x="79.0114%" y="437" width="0.0682%" height="15" fill="rgb(250,205,27)" fg:x="79935" fg:w="69"/><text x="79.2614%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (69 samples, 0.07%)</title><rect x="79.0114%" y="421" width="0.0682%" height="15" fill="rgb(210,80,43)" fg:x="79935" fg:w="69"/><text x="79.2614%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (69 samples, 0.07%)</title><rect x="79.0114%" y="405" width="0.0682%" height="15" fill="rgb(247,160,36)" fg:x="79935" fg:w="69"/><text x="79.2614%" y="415.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (22 samples, 0.02%)</title><rect x="79.0796%" y="421" width="0.0217%" height="15" fill="rgb(234,13,49)" fg:x="80004" fg:w="22"/><text x="79.3296%" y="431.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (227 samples, 0.22%)</title><rect x="79.0796%" y="437" width="0.2244%" height="15" fill="rgb(234,122,0)" fg:x="80004" fg:w="227"/><text x="79.3296%" y="447.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (205 samples, 0.20%)</title><rect x="79.1013%" y="421" width="0.2026%" height="15" fill="rgb(207,146,38)" fg:x="80026" fg:w="205"/><text x="79.3513%" y="431.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (678 samples, 0.67%)</title><rect x="79.3039%" y="437" width="0.6702%" height="15" fill="rgb(207,177,25)" fg:x="80231" fg:w="678"/><text x="79.5539%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (55 samples, 0.05%)</title><rect x="80.1925%" y="421" width="0.0544%" height="15" fill="rgb(211,178,42)" fg:x="81130" fg:w="55"/><text x="80.4425%" y="431.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (44 samples, 0.04%)</title><rect x="80.2034%" y="405" width="0.0435%" height="15" fill="rgb(230,69,54)" fg:x="81141" fg:w="44"/><text x="80.4534%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="80.2469%" y="421" width="0.0217%" height="15" fill="rgb(214,135,41)" fg:x="81185" fg:w="22"/><text x="80.4969%" y="431.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="80.2469%" y="405" width="0.0217%" height="15" fill="rgb(237,67,25)" fg:x="81185" fg:w="22"/><text x="80.4969%" y="415.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (334 samples, 0.33%)</title><rect x="79.9741%" y="437" width="0.3301%" height="15" fill="rgb(222,189,50)" fg:x="80909" fg:w="334"/><text x="80.2241%" y="447.50"></text></g><g><title>slotmap::KeyData::new (35 samples, 0.03%)</title><rect x="80.2696%" y="421" width="0.0346%" height="15" fill="rgb(245,148,34)" fg:x="81208" fg:w="35"/><text x="80.5196%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (28 samples, 0.03%)</title><rect x="80.6423%" y="421" width="0.0277%" height="15" fill="rgb(222,29,6)" fg:x="81585" fg:w="28"/><text x="80.8923%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (28 samples, 0.03%)</title><rect x="80.6423%" y="405" width="0.0277%" height="15" fill="rgb(221,189,43)" fg:x="81585" fg:w="28"/><text x="80.8923%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (436 samples, 0.43%)</title><rect x="80.3062%" y="437" width="0.4310%" height="15" fill="rgb(207,36,27)" fg:x="81245" fg:w="436"/><text x="80.5562%" y="447.50"></text></g><g><title>core::ptr::write (68 samples, 0.07%)</title><rect x="80.6700%" y="421" width="0.0672%" height="15" fill="rgb(217,90,24)" fg:x="81613" fg:w="68"/><text x="80.9200%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2,101 samples, 2.08%)</title><rect x="80.7372%" y="405" width="2.0767%" height="15" fill="rgb(224,66,35)" fg:x="81681" fg:w="2101"/><text x="80.9872%" y="415.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (227 samples, 0.22%)</title><rect x="82.8139%" y="405" width="0.2244%" height="15" fill="rgb(221,13,50)" fg:x="83782" fg:w="227"/><text x="83.0639%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (2,863 samples, 2.83%)</title><rect x="83.1895%" y="389" width="2.8299%" height="15" fill="rgb(236,68,49)" fg:x="84162" fg:w="2863"/><text x="83.4395%" y="399.50">al..</text></g><g><title>neuralang::World::update_cells::{{closure}} (2,863 samples, 2.83%)</title><rect x="83.1895%" y="373" width="2.8299%" height="15" fill="rgb(229,146,28)" fg:x="84162" fg:w="2863"/><text x="83.4395%" y="383.50">ne..</text></g><g><title>core::cmp::PartialEq::ne (2,863 samples, 2.83%)</title><rect x="83.1895%" y="357" width="2.8299%" height="15" fill="rgb(225,31,38)" fg:x="84162" fg:w="2863"/><text x="83.4395%" y="367.50">co..</text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (2,863 samples, 2.83%)</title><rect x="83.1895%" y="341" width="2.8299%" height="15" fill="rgb(250,208,3)" fg:x="84162" fg:w="2863"/><text x="83.4395%" y="351.50">&lt;s..</text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (2,863 samples, 2.83%)</title><rect x="83.1895%" y="325" width="2.8299%" height="15" fill="rgb(246,54,23)" fg:x="84162" fg:w="2863"/><text x="83.4395%" y="335.50">&lt;s..</text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (63 samples, 0.06%)</title><rect x="85.9572%" y="309" width="0.0623%" height="15" fill="rgb(243,76,11)" fg:x="86962" fg:w="63"/><text x="86.2072%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (3,028 samples, 2.99%)</title><rect x="83.0383%" y="405" width="2.9930%" height="15" fill="rgb(245,21,50)" fg:x="84009" fg:w="3028"/><text x="83.2883%" y="415.50">all..</text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="86.0194%" y="389" width="0.0119%" height="15" fill="rgb(228,9,43)" fg:x="87025" fg:w="12"/><text x="86.2694%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (5,381 samples, 5.32%)</title><rect x="80.7372%" y="437" width="5.3188%" height="15" fill="rgb(208,100,47)" fg:x="81681" fg:w="5381"/><text x="80.9872%" y="447.50">alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (5,381 samples, 5.32%)</title><rect x="80.7372%" y="421" width="5.3188%" height="15" fill="rgb(232,26,8)" fg:x="81681" fg:w="5381"/><text x="80.9872%" y="431.50">alloc::..</text></g><g><title>core::mem::drop (25 samples, 0.02%)</title><rect x="86.0313%" y="405" width="0.0247%" height="15" fill="rgb(216,166,38)" fg:x="87037" fg:w="25"/><text x="86.2813%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;slotmap::DefaultKey,alloc::alloc::Global&gt;&gt; (25 samples, 0.02%)</title><rect x="86.0313%" y="389" width="0.0247%" height="15" fill="rgb(251,202,51)" fg:x="87037" fg:w="25"/><text x="86.2813%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="86.0313%" y="373" width="0.0247%" height="15" fill="rgb(254,216,34)" fg:x="87037" fg:w="25"/><text x="86.2813%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (12 samples, 0.01%)</title><rect x="86.0441%" y="357" width="0.0119%" height="15" fill="rgb(251,32,27)" fg:x="87050" fg:w="12"/><text x="86.2941%" y="367.50"></text></g><g><title>neuralang::oob (45 samples, 0.04%)</title><rect x="86.0560%" y="437" width="0.0445%" height="15" fill="rgb(208,127,28)" fg:x="87062" fg:w="45"/><text x="86.3060%" y="447.50"></text></g><g><title>__fmodf (579 samples, 0.57%)</title><rect x="87.3677%" y="421" width="0.5723%" height="15" fill="rgb(224,137,22)" fg:x="88389" fg:w="579"/><text x="87.6177%" y="431.50"></text></g><g><title>neuralang::pos_to_cell (10,814 samples, 10.69%)</title><rect x="86.1005%" y="437" width="10.6890%" height="15" fill="rgb(254,70,32)" fg:x="87107" fg:w="10814"/><text x="86.3505%" y="447.50">neuralang::pos_t..</text></g><g><title>__ieee754_fmodf (8,953 samples, 8.85%)</title><rect x="87.9400%" y="421" width="8.8495%" height="15" fill="rgb(229,75,37)" fg:x="88968" fg:w="8953"/><text x="88.1900%" y="431.50">__ieee754_fm..</text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="96.7767%" y="405" width="0.0128%" height="15" fill="rgb(252,64,23)" fg:x="97908" fg:w="13"/><text x="97.0267%" y="415.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="96.7767%" y="389" width="0.0128%" height="15" fill="rgb(232,162,48)" fg:x="97908" fg:w="13"/><text x="97.0267%" y="399.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="96.7767%" y="373" width="0.0128%" height="15" fill="rgb(246,160,12)" fg:x="97908" fg:w="13"/><text x="97.0267%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.7777%" y="357" width="0.0119%" height="15" fill="rgb(247,166,0)" fg:x="97909" fg:w="12"/><text x="97.0277%" y="367.50"></text></g><g><title>neuralang::same_index (57 samples, 0.06%)</title><rect x="96.7895%" y="437" width="0.0563%" height="15" fill="rgb(249,219,21)" fg:x="97921" fg:w="57"/><text x="97.0395%" y="447.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (75,652 samples, 74.78%)</title><rect x="22.0710%" y="485" width="74.7778%" height="15" fill="rgb(205,209,3)" fg:x="22329" fg:w="75652"/><text x="22.3210%" y="495.50">&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update</text></g><g><title>neuralang::World::step (75,652 samples, 74.78%)</title><rect x="22.0710%" y="469" width="74.7778%" height="15" fill="rgb(243,44,1)" fg:x="22329" fg:w="75652"/><text x="22.3210%" y="479.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (18,616 samples, 18.40%)</title><rect x="78.4479%" y="453" width="18.4009%" height="15" fill="rgb(206,159,16)" fg:x="79365" fg:w="18616"/><text x="78.6979%" y="463.50">neuralang::World::update_cells</text></g><g><title>ash::device::Device::create_image_view (11 samples, 0.01%)</title><rect x="96.8656%" y="389" width="0.0109%" height="15" fill="rgb(244,77,30)" fg:x="97998" fg:w="11"/><text x="97.1156%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="96.8656%" y="373" width="0.0109%" height="15" fill="rgb(218,69,12)" fg:x="97998" fg:w="11"/><text x="97.1156%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (15 samples, 0.01%)</title><rect x="96.8656%" y="405" width="0.0148%" height="15" fill="rgb(212,87,7)" fg:x="97998" fg:w="15"/><text x="97.1156%" y="415.50"></text></g><g><title>ash::device::Device::wait_for_fences (12 samples, 0.01%)</title><rect x="96.8824%" y="389" width="0.0119%" height="15" fill="rgb(245,114,25)" fg:x="98015" fg:w="12"/><text x="97.1324%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="96.8824%" y="373" width="0.0119%" height="15" fill="rgb(210,61,42)" fg:x="98015" fg:w="12"/><text x="97.1324%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="96.8824%" y="357" width="0.0119%" height="15" fill="rgb(211,52,33)" fg:x="98015" fg:w="12"/><text x="97.1324%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="96.8834%" y="341" width="0.0109%" height="15" fill="rgb(234,58,33)" fg:x="98016" fg:w="11"/><text x="97.1334%" y="351.50"></text></g><g><title>wgpu::Surface::get_current_texture (62 samples, 0.06%)</title><rect x="96.8518%" y="469" width="0.0613%" height="15" fill="rgb(220,115,36)" fg:x="97984" fg:w="62"/><text x="97.1018%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (61 samples, 0.06%)</title><rect x="96.8528%" y="453" width="0.0603%" height="15" fill="rgb(243,153,54)" fg:x="97985" fg:w="61"/><text x="97.1028%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (61 samples, 0.06%)</title><rect x="96.8528%" y="437" width="0.0603%" height="15" fill="rgb(251,47,18)" fg:x="97985" fg:w="61"/><text x="97.1028%" y="447.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (61 samples, 0.06%)</title><rect x="96.8528%" y="421" width="0.0603%" height="15" fill="rgb(242,102,42)" fg:x="97985" fg:w="61"/><text x="97.1028%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (33 samples, 0.03%)</title><rect x="96.8805%" y="405" width="0.0326%" height="15" fill="rgb(234,31,38)" fg:x="98013" fg:w="33"/><text x="97.1305%" y="415.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (19 samples, 0.02%)</title><rect x="96.8943%" y="389" width="0.0188%" height="15" fill="rgb(221,117,51)" fg:x="98027" fg:w="19"/><text x="97.1443%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (19 samples, 0.02%)</title><rect x="96.8943%" y="373" width="0.0188%" height="15" fill="rgb(212,20,18)" fg:x="98027" fg:w="19"/><text x="97.1443%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="96.8973%" y="357" width="0.0158%" height="15" fill="rgb(245,133,36)" fg:x="98030" fg:w="16"/><text x="97.1473%" y="367.50"></text></g><g><title>__GI___poll (13 samples, 0.01%)</title><rect x="96.9388%" y="293" width="0.0128%" height="15" fill="rgb(212,6,19)" fg:x="98072" fg:w="13"/><text x="97.1888%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="96.9388%" y="277" width="0.0128%" height="15" fill="rgb(218,1,36)" fg:x="98072" fg:w="13"/><text x="97.1888%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="96.9388%" y="261" width="0.0128%" height="15" fill="rgb(246,84,54)" fg:x="98072" fg:w="13"/><text x="97.1888%" y="271.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.9398%" y="245" width="0.0119%" height="15" fill="rgb(242,110,6)" fg:x="98073" fg:w="12"/><text x="97.1898%" y="255.50"></text></g><g><title>_XSend (49 samples, 0.05%)</title><rect x="96.9358%" y="357" width="0.0484%" height="15" fill="rgb(214,47,5)" fg:x="98069" fg:w="49"/><text x="97.1858%" y="367.50"></text></g><g><title>xcb_writev (49 samples, 0.05%)</title><rect x="96.9358%" y="341" width="0.0484%" height="15" fill="rgb(218,159,25)" fg:x="98069" fg:w="49"/><text x="97.1858%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (49 samples, 0.05%)</title><rect x="96.9358%" y="325" width="0.0484%" height="15" fill="rgb(215,211,28)" fg:x="98069" fg:w="49"/><text x="97.1858%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (48 samples, 0.05%)</title><rect x="96.9368%" y="309" width="0.0474%" height="15" fill="rgb(238,59,32)" fg:x="98070" fg:w="48"/><text x="97.1868%" y="319.50"></text></g><g><title>__GI___writev (33 samples, 0.03%)</title><rect x="96.9516%" y="293" width="0.0326%" height="15" fill="rgb(226,82,3)" fg:x="98085" fg:w="33"/><text x="97.2016%" y="303.50"></text></g><g><title>__GI___writev (33 samples, 0.03%)</title><rect x="96.9516%" y="277" width="0.0326%" height="15" fill="rgb(240,164,32)" fg:x="98085" fg:w="33"/><text x="97.2016%" y="287.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="96.9516%" y="261" width="0.0326%" height="15" fill="rgb(232,46,7)" fg:x="98085" fg:w="33"/><text x="97.2016%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.03%)</title><rect x="96.9526%" y="245" width="0.0316%" height="15" fill="rgb(229,129,53)" fg:x="98086" fg:w="32"/><text x="97.2026%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="96.9536%" y="229" width="0.0306%" height="15" fill="rgb(234,188,29)" fg:x="98087" fg:w="31"/><text x="97.2036%" y="239.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="96.9556%" y="213" width="0.0287%" height="15" fill="rgb(246,141,4)" fg:x="98089" fg:w="29"/><text x="97.2056%" y="223.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="96.9556%" y="197" width="0.0287%" height="15" fill="rgb(229,23,39)" fg:x="98089" fg:w="29"/><text x="97.2056%" y="207.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="96.9556%" y="181" width="0.0287%" height="15" fill="rgb(206,12,3)" fg:x="98089" fg:w="29"/><text x="97.2056%" y="191.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="96.9576%" y="165" width="0.0267%" height="15" fill="rgb(252,226,20)" fg:x="98091" fg:w="27"/><text x="97.2076%" y="175.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="96.9605%" y="149" width="0.0237%" height="15" fill="rgb(216,123,35)" fg:x="98094" fg:w="24"/><text x="97.2105%" y="159.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="96.9625%" y="133" width="0.0217%" height="15" fill="rgb(212,68,40)" fg:x="98096" fg:w="22"/><text x="97.2125%" y="143.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="96.9645%" y="117" width="0.0198%" height="15" fill="rgb(254,125,32)" fg:x="98098" fg:w="20"/><text x="97.2145%" y="127.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="96.9665%" y="101" width="0.0178%" height="15" fill="rgb(253,97,22)" fg:x="98100" fg:w="18"/><text x="97.2165%" y="111.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="96.9684%" y="85" width="0.0158%" height="15" fill="rgb(241,101,14)" fg:x="98102" fg:w="16"/><text x="97.2184%" y="95.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="96.9694%" y="69" width="0.0148%" height="15" fill="rgb(238,103,29)" fg:x="98103" fg:w="15"/><text x="97.2194%" y="79.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="96.9714%" y="53" width="0.0128%" height="15" fill="rgb(233,195,47)" fg:x="98105" fg:w="13"/><text x="97.2214%" y="63.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.9724%" y="37" width="0.0119%" height="15" fill="rgb(246,218,30)" fg:x="98106" fg:w="12"/><text x="97.2224%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (16 samples, 0.02%)</title><rect x="96.9872%" y="309" width="0.0158%" height="15" fill="rgb(219,145,47)" fg:x="98121" fg:w="16"/><text x="97.2372%" y="319.50"></text></g><g><title>__libc_recvmsg (15 samples, 0.01%)</title><rect x="96.9882%" y="293" width="0.0148%" height="15" fill="rgb(243,12,26)" fg:x="98122" fg:w="15"/><text x="97.2382%" y="303.50"></text></g><g><title>__recvmsg_syscall (14 samples, 0.01%)</title><rect x="96.9892%" y="277" width="0.0138%" height="15" fill="rgb(214,87,16)" fg:x="98123" fg:w="14"/><text x="97.2392%" y="287.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="96.9892%" y="261" width="0.0138%" height="15" fill="rgb(208,99,42)" fg:x="98123" fg:w="14"/><text x="97.2392%" y="271.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.9912%" y="245" width="0.0119%" height="15" fill="rgb(253,99,2)" fg:x="98125" fg:w="12"/><text x="97.2412%" y="255.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.9912%" y="229" width="0.0119%" height="15" fill="rgb(220,168,23)" fg:x="98125" fg:w="12"/><text x="97.2412%" y="239.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="96.9912%" y="213" width="0.0119%" height="15" fill="rgb(242,38,24)" fg:x="98125" fg:w="12"/><text x="97.2412%" y="223.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.9922%" y="197" width="0.0109%" height="15" fill="rgb(225,182,9)" fg:x="98126" fg:w="11"/><text x="97.2422%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.9922%" y="181" width="0.0109%" height="15" fill="rgb(243,178,37)" fg:x="98126" fg:w="11"/><text x="97.2422%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.9922%" y="165" width="0.0109%" height="15" fill="rgb(232,139,19)" fg:x="98126" fg:w="11"/><text x="97.2422%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.9922%" y="149" width="0.0109%" height="15" fill="rgb(225,201,24)" fg:x="98126" fg:w="11"/><text x="97.2422%" y="159.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.9922%" y="133" width="0.0109%" height="15" fill="rgb(221,47,46)" fg:x="98126" fg:w="11"/><text x="97.2422%" y="143.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="96.9922%" y="117" width="0.0109%" height="15" fill="rgb(249,23,13)" fg:x="98126" fg:w="11"/><text x="97.2422%" y="127.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (169 samples, 0.17%)</title><rect x="96.8488%" y="485" width="0.1670%" height="15" fill="rgb(219,9,5)" fg:x="97981" fg:w="169"/><text x="97.0988%" y="495.50"></text></g><g><title>winit::window::Window::inner_size (100 samples, 0.10%)</title><rect x="96.9170%" y="469" width="0.0988%" height="15" fill="rgb(254,171,16)" fg:x="98050" fg:w="100"/><text x="97.1670%" y="479.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (100 samples, 0.10%)</title><rect x="96.9170%" y="453" width="0.0988%" height="15" fill="rgb(230,171,20)" fg:x="98050" fg:w="100"/><text x="97.1670%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (100 samples, 0.10%)</title><rect x="96.9170%" y="437" width="0.0988%" height="15" fill="rgb(210,71,41)" fg:x="98050" fg:w="100"/><text x="97.1670%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (96 samples, 0.09%)</title><rect x="96.9210%" y="421" width="0.0949%" height="15" fill="rgb(206,173,20)" fg:x="98054" fg:w="96"/><text x="97.1710%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (95 samples, 0.09%)</title><rect x="96.9220%" y="405" width="0.0939%" height="15" fill="rgb(233,88,34)" fg:x="98055" fg:w="95"/><text x="97.1720%" y="415.50"></text></g><g><title>XGetGeometry (95 samples, 0.09%)</title><rect x="96.9220%" y="389" width="0.0939%" height="15" fill="rgb(223,209,46)" fg:x="98055" fg:w="95"/><text x="97.1720%" y="399.50"></text></g><g><title>_XReply (92 samples, 0.09%)</title><rect x="96.9249%" y="373" width="0.0909%" height="15" fill="rgb(250,43,18)" fg:x="98058" fg:w="92"/><text x="97.1749%" y="383.50"></text></g><g><title>xcb_wait_for_reply64 (29 samples, 0.03%)</title><rect x="96.9872%" y="357" width="0.0287%" height="15" fill="rgb(208,13,10)" fg:x="98121" fg:w="29"/><text x="97.2372%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (29 samples, 0.03%)</title><rect x="96.9872%" y="341" width="0.0287%" height="15" fill="rgb(212,200,36)" fg:x="98121" fg:w="29"/><text x="97.2372%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (29 samples, 0.03%)</title><rect x="96.9872%" y="325" width="0.0287%" height="15" fill="rgb(225,90,30)" fg:x="98121" fg:w="29"/><text x="97.2372%" y="335.50"></text></g><g><title>__GI___poll (13 samples, 0.01%)</title><rect x="97.0030%" y="309" width="0.0128%" height="15" fill="rgb(236,182,39)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="319.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0030%" y="293" width="0.0128%" height="15" fill="rgb(212,144,35)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0030%" y="277" width="0.0128%" height="15" fill="rgb(228,63,44)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0030%" y="261" width="0.0128%" height="15" fill="rgb(228,109,6)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="271.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0030%" y="245" width="0.0128%" height="15" fill="rgb(238,117,24)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="255.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0030%" y="229" width="0.0128%" height="15" fill="rgb(242,26,26)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="239.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0030%" y="213" width="0.0128%" height="15" fill="rgb(221,92,48)" fg:x="98137" fg:w="13"/><text x="97.2530%" y="223.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="97.0040%" y="197" width="0.0119%" height="15" fill="rgb(209,209,32)" fg:x="98138" fg:w="12"/><text x="97.2540%" y="207.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.0050%" y="181" width="0.0109%" height="15" fill="rgb(221,70,22)" fg:x="98139" fg:w="11"/><text x="97.2550%" y="191.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="97.0159%" y="469" width="0.0287%" height="15" fill="rgb(248,145,5)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (29 samples, 0.03%)</title><rect x="97.0159%" y="453" width="0.0287%" height="15" fill="rgb(226,116,26)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="463.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="97.0159%" y="437" width="0.0287%" height="15" fill="rgb(244,5,17)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (29 samples, 0.03%)</title><rect x="97.0159%" y="421" width="0.0287%" height="15" fill="rgb(252,159,33)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (29 samples, 0.03%)</title><rect x="97.0159%" y="405" width="0.0287%" height="15" fill="rgb(206,71,0)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="415.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (29 samples, 0.03%)</title><rect x="97.0159%" y="389" width="0.0287%" height="15" fill="rgb(233,118,54)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="399.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (29 samples, 0.03%)</title><rect x="97.0159%" y="373" width="0.0287%" height="15" fill="rgb(234,83,48)" fg:x="98150" fg:w="29"/><text x="97.2659%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (101 samples, 0.10%)</title><rect x="97.3361%" y="229" width="0.0998%" height="15" fill="rgb(228,3,54)" fg:x="98474" fg:w="101"/><text x="97.5861%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (98 samples, 0.10%)</title><rect x="97.3391%" y="213" width="0.0969%" height="15" fill="rgb(226,155,13)" fg:x="98477" fg:w="98"/><text x="97.5891%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (88 samples, 0.09%)</title><rect x="97.3490%" y="197" width="0.0870%" height="15" fill="rgb(241,28,37)" fg:x="98487" fg:w="88"/><text x="97.5990%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (359 samples, 0.35%)</title><rect x="97.0831%" y="277" width="0.3549%" height="15" fill="rgb(233,93,10)" fg:x="98218" fg:w="359"/><text x="97.3331%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (359 samples, 0.35%)</title><rect x="97.0831%" y="261" width="0.3549%" height="15" fill="rgb(225,113,19)" fg:x="98218" fg:w="359"/><text x="97.3331%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (357 samples, 0.35%)</title><rect x="97.0851%" y="245" width="0.3529%" height="15" fill="rgb(241,2,18)" fg:x="98220" fg:w="357"/><text x="97.3351%" y="255.50"></text></g><g><title>ash::device::Device::queue_submit (376 samples, 0.37%)</title><rect x="97.0673%" y="389" width="0.3717%" height="15" fill="rgb(228,207,21)" fg:x="98202" fg:w="376"/><text x="97.3173%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (376 samples, 0.37%)</title><rect x="97.0673%" y="373" width="0.3717%" height="15" fill="rgb(213,211,35)" fg:x="98202" fg:w="376"/><text x="97.3173%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (370 samples, 0.37%)</title><rect x="97.0732%" y="357" width="0.3657%" height="15" fill="rgb(209,83,10)" fg:x="98208" fg:w="370"/><text x="97.3232%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (370 samples, 0.37%)</title><rect x="97.0732%" y="341" width="0.3657%" height="15" fill="rgb(209,164,1)" fg:x="98208" fg:w="370"/><text x="97.3232%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (368 samples, 0.36%)</title><rect x="97.0752%" y="325" width="0.3637%" height="15" fill="rgb(213,184,43)" fg:x="98210" fg:w="368"/><text x="97.3252%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (367 samples, 0.36%)</title><rect x="97.0762%" y="309" width="0.3628%" height="15" fill="rgb(231,61,34)" fg:x="98211" fg:w="367"/><text x="97.3262%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (361 samples, 0.36%)</title><rect x="97.0821%" y="293" width="0.3568%" height="15" fill="rgb(235,75,3)" fg:x="98217" fg:w="361"/><text x="97.3321%" y="303.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (377 samples, 0.37%)</title><rect x="97.0673%" y="405" width="0.3726%" height="15" fill="rgb(220,106,47)" fg:x="98202" fg:w="377"/><text x="97.3173%" y="415.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (12 samples, 0.01%)</title><rect x="97.4686%" y="389" width="0.0119%" height="15" fill="rgb(210,196,33)" fg:x="98608" fg:w="12"/><text x="97.7186%" y="399.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (12 samples, 0.01%)</title><rect x="97.4686%" y="373" width="0.0119%" height="15" fill="rgb(229,154,42)" fg:x="98608" fg:w="12"/><text x="97.7186%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="97.4953%" y="293" width="0.0128%" height="15" fill="rgb(228,114,26)" fg:x="98635" fg:w="13"/><text x="97.7453%" y="303.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (29 samples, 0.03%)</title><rect x="97.4805%" y="389" width="0.0287%" height="15" fill="rgb(208,144,1)" fg:x="98620" fg:w="29"/><text x="97.7305%" y="399.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (25 samples, 0.02%)</title><rect x="97.4844%" y="373" width="0.0247%" height="15" fill="rgb(239,112,37)" fg:x="98624" fg:w="25"/><text x="97.7344%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (25 samples, 0.02%)</title><rect x="97.4844%" y="357" width="0.0247%" height="15" fill="rgb(210,96,50)" fg:x="98624" fg:w="25"/><text x="97.7344%" y="367.50"></text></g><g><title>ash::device::Device::reset_command_pool (25 samples, 0.02%)</title><rect x="97.4844%" y="341" width="0.0247%" height="15" fill="rgb(222,178,2)" fg:x="98624" fg:w="25"/><text x="97.7344%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.02%)</title><rect x="97.4844%" y="325" width="0.0247%" height="15" fill="rgb(226,74,18)" fg:x="98624" fg:w="25"/><text x="97.7344%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (22 samples, 0.02%)</title><rect x="97.4874%" y="309" width="0.0217%" height="15" fill="rgb(225,67,54)" fg:x="98627" fg:w="22"/><text x="97.7374%" y="319.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (15 samples, 0.01%)</title><rect x="97.5091%" y="389" width="0.0148%" height="15" fill="rgb(251,92,32)" fg:x="98649" fg:w="15"/><text x="97.7591%" y="399.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (57 samples, 0.06%)</title><rect x="97.4686%" y="405" width="0.0563%" height="15" fill="rgb(228,149,22)" fg:x="98608" fg:w="57"/><text x="97.7186%" y="415.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (486 samples, 0.48%)</title><rect x="97.0614%" y="437" width="0.4804%" height="15" fill="rgb(243,54,13)" fg:x="98196" fg:w="486"/><text x="97.3114%" y="447.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (486 samples, 0.48%)</title><rect x="97.0614%" y="421" width="0.4804%" height="15" fill="rgb(243,180,28)" fg:x="98196" fg:w="486"/><text x="97.3114%" y="431.50"></text></g><g><title>wgpu::Queue::submit (488 samples, 0.48%)</title><rect x="97.0614%" y="469" width="0.4824%" height="15" fill="rgb(208,167,24)" fg:x="98196" fg:w="488"/><text x="97.3114%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (488 samples, 0.48%)</title><rect x="97.0614%" y="453" width="0.4824%" height="15" fill="rgb(245,73,45)" fg:x="98196" fg:w="488"/><text x="97.3114%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (39 samples, 0.04%)</title><rect x="97.6752%" y="149" width="0.0385%" height="15" fill="rgb(237,203,48)" fg:x="98817" fg:w="39"/><text x="97.9252%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.02%)</title><rect x="97.6930%" y="133" width="0.0208%" height="15" fill="rgb(211,197,16)" fg:x="98835" fg:w="21"/><text x="97.9430%" y="143.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.04%)</title><rect x="97.6712%" y="165" width="0.0435%" height="15" fill="rgb(243,99,51)" fg:x="98813" fg:w="44"/><text x="97.9212%" y="175.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (107 samples, 0.11%)</title><rect x="97.6139%" y="197" width="0.1058%" height="15" fill="rgb(215,123,29)" fg:x="98755" fg:w="107"/><text x="97.8639%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (94 samples, 0.09%)</title><rect x="97.6267%" y="181" width="0.0929%" height="15" fill="rgb(239,186,37)" fg:x="98768" fg:w="94"/><text x="97.8767%" y="191.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (112 samples, 0.11%)</title><rect x="97.6099%" y="213" width="0.1107%" height="15" fill="rgb(252,136,39)" fg:x="98751" fg:w="112"/><text x="97.8599%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,040 samples, 1.03%)</title><rect x="97.6050%" y="229" width="1.0280%" height="15" fill="rgb(223,213,32)" fg:x="98746" fg:w="1040"/><text x="97.8550%" y="239.50"></text></g><g><title>__GI___ioctl (922 samples, 0.91%)</title><rect x="97.7216%" y="213" width="0.9113%" height="15" fill="rgb(233,115,5)" fg:x="98864" fg:w="922"/><text x="97.9716%" y="223.50"></text></g><g><title>[unknown] (922 samples, 0.91%)</title><rect x="97.7216%" y="197" width="0.9113%" height="15" fill="rgb(207,226,44)" fg:x="98864" fg:w="922"/><text x="97.9716%" y="207.50"></text></g><g><title>[unknown] (104 samples, 0.10%)</title><rect x="98.5302%" y="181" width="0.1028%" height="15" fill="rgb(208,126,0)" fg:x="99682" fg:w="104"/><text x="98.7802%" y="191.50"></text></g><g><title>[unknown] (34 samples, 0.03%)</title><rect x="98.5994%" y="165" width="0.0336%" height="15" fill="rgb(244,66,21)" fg:x="99752" fg:w="34"/><text x="98.8494%" y="175.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="98.6172%" y="149" width="0.0158%" height="15" fill="rgb(222,97,12)" fg:x="99770" fg:w="16"/><text x="98.8672%" y="159.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,091 samples, 1.08%)</title><rect x="97.5556%" y="293" width="1.0784%" height="15" fill="rgb(219,213,19)" fg:x="98696" fg:w="1091"/><text x="97.8056%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,079 samples, 1.07%)</title><rect x="97.5674%" y="277" width="1.0665%" height="15" fill="rgb(252,169,30)" fg:x="98708" fg:w="1079"/><text x="97.8174%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,061 samples, 1.05%)</title><rect x="97.5852%" y="261" width="1.0487%" height="15" fill="rgb(206,32,51)" fg:x="98726" fg:w="1061"/><text x="97.8352%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,049 samples, 1.04%)</title><rect x="97.5971%" y="245" width="1.0369%" height="15" fill="rgb(250,172,42)" fg:x="98738" fg:w="1049"/><text x="97.8471%" y="255.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1,106 samples, 1.09%)</title><rect x="97.5457%" y="405" width="1.0932%" height="15" fill="rgb(209,34,43)" fg:x="98686" fg:w="1106"/><text x="97.7957%" y="415.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1,105 samples, 1.09%)</title><rect x="97.5467%" y="389" width="1.0922%" height="15" fill="rgb(223,11,35)" fg:x="98687" fg:w="1105"/><text x="97.7967%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (1,104 samples, 1.09%)</title><rect x="97.5477%" y="373" width="1.0912%" height="15" fill="rgb(251,219,26)" fg:x="98688" fg:w="1104"/><text x="97.7977%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,102 samples, 1.09%)</title><rect x="97.5496%" y="357" width="1.0893%" height="15" fill="rgb(231,119,3)" fg:x="98690" fg:w="1102"/><text x="97.7996%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,102 samples, 1.09%)</title><rect x="97.5496%" y="341" width="1.0893%" height="15" fill="rgb(216,97,11)" fg:x="98690" fg:w="1102"/><text x="97.7996%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,100 samples, 1.09%)</title><rect x="97.5516%" y="325" width="1.0873%" height="15" fill="rgb(223,59,9)" fg:x="98692" fg:w="1100"/><text x="97.8016%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,098 samples, 1.09%)</title><rect x="97.5536%" y="309" width="1.0853%" height="15" fill="rgb(233,93,31)" fg:x="98694" fg:w="1098"/><text x="97.8036%" y="319.50"></text></g><g><title>wgpu::SurfaceTexture::present (1,112 samples, 1.10%)</title><rect x="97.5447%" y="469" width="1.0992%" height="15" fill="rgb(239,81,33)" fg:x="98685" fg:w="1112"/><text x="97.7947%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (1,112 samples, 1.10%)</title><rect x="97.5447%" y="453" width="1.0992%" height="15" fill="rgb(213,120,34)" fg:x="98685" fg:w="1112"/><text x="97.7947%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (1,112 samples, 1.10%)</title><rect x="97.5447%" y="437" width="1.0992%" height="15" fill="rgb(243,49,53)" fg:x="98685" fg:w="1112"/><text x="97.7947%" y="447.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1,112 samples, 1.10%)</title><rect x="97.5447%" y="421" width="1.0992%" height="15" fill="rgb(247,216,33)" fg:x="98685" fg:w="1112"/><text x="97.7947%" y="431.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (1,649 samples, 1.63%)</title><rect x="97.0159%" y="485" width="1.6299%" height="15" fill="rgb(226,26,14)" fg:x="98150" fg:w="1649"/><text x="97.2659%" y="495.50"></text></g><g><title>ggez::event::run (95,082 samples, 93.98%)</title><rect x="4.6744%" y="613" width="93.9833%" height="15" fill="rgb(215,49,53)" fg:x="4729" fg:w="95082"/><text x="4.9244%" y="623.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (95,082 samples, 93.98%)</title><rect x="4.6744%" y="597" width="93.9833%" height="15" fill="rgb(245,162,40)" fg:x="4729" fg:w="95082"/><text x="4.9244%" y="607.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (95,082 samples, 93.98%)</title><rect x="4.6744%" y="581" width="93.9833%" height="15" fill="rgb(229,68,17)" fg:x="4729" fg:w="95082"/><text x="4.9244%" y="591.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (95,082 samples, 93.98%)</title><rect x="4.6744%" y="565" width="93.9833%" height="15" fill="rgb(213,182,10)" fg:x="4729" fg:w="95082"/><text x="4.9244%" y="575.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (95,082 samples, 93.98%)</title><rect x="4.6744%" y="549" width="93.9833%" height="15" fill="rgb(245,125,30)" fg:x="4729" fg:w="95082"/><text x="4.9244%" y="559.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (95,082 samples, 93.98%)</title><rect x="4.6744%" y="533" width="93.9833%" height="15" fill="rgb(232,202,2)" fg:x="4729" fg:w="95082"/><text x="4.9244%" y="543.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (95,070 samples, 93.97%)</title><rect x="4.6862%" y="517" width="93.9715%" height="15" fill="rgb(237,140,51)" fg:x="4741" fg:w="95070"/><text x="4.9362%" y="527.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (95,070 samples, 93.97%)</title><rect x="4.6862%" y="501" width="93.9715%" height="15" fill="rgb(236,157,25)" fg:x="4741" fg:w="95070"/><text x="4.9362%" y="511.50">ggez::event::run::{{closure}}</text></g><g><title>neuralang::main (95,180 samples, 94.08%)</title><rect x="4.5785%" y="645" width="94.0802%" height="15" fill="rgb(219,209,0)" fg:x="4632" fg:w="95180"/><text x="4.8285%" y="655.50">neuralang::main</text></g><g><title>neuralang::run (95,180 samples, 94.08%)</title><rect x="4.5785%" y="629" width="94.0802%" height="15" fill="rgb(240,116,54)" fg:x="4632" fg:w="95180"/><text x="4.8285%" y="639.50">neuralang::run</text></g><g><title>slotmap::KeyData::new (84 samples, 0.08%)</title><rect x="98.6597%" y="645" width="0.0830%" height="15" fill="rgb(216,10,36)" fg:x="99813" fg:w="84"/><text x="98.9097%" y="655.50"></text></g><g><title>std::rt::lang_start_internal (11 samples, 0.01%)</title><rect x="98.7427%" y="645" width="0.0109%" height="15" fill="rgb(222,72,44)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="655.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.7427%" y="629" width="0.0109%" height="15" fill="rgb(232,159,9)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="639.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.7427%" y="613" width="0.0109%" height="15" fill="rgb(210,39,32)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="623.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.7427%" y="597" width="0.0109%" height="15" fill="rgb(216,194,45)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="607.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (11 samples, 0.01%)</title><rect x="98.7427%" y="581" width="0.0109%" height="15" fill="rgb(218,18,35)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="591.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="98.7427%" y="565" width="0.0109%" height="15" fill="rgb(207,83,51)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="575.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="98.7427%" y="549" width="0.0109%" height="15" fill="rgb(225,63,43)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="559.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="98.7427%" y="533" width="0.0109%" height="15" fill="rgb(207,57,36)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11 samples, 0.01%)</title><rect x="98.7427%" y="517" width="0.0109%" height="15" fill="rgb(216,99,33)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="527.50"></text></g><g><title>std::rt::lang_start::{{closure}} (11 samples, 0.01%)</title><rect x="98.7427%" y="501" width="0.0109%" height="15" fill="rgb(225,42,16)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.01%)</title><rect x="98.7427%" y="485" width="0.0109%" height="15" fill="rgb(220,201,45)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="98.7427%" y="469" width="0.0109%" height="15" fill="rgb(225,33,4)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="479.50"></text></g><g><title>neuralang::main (11 samples, 0.01%)</title><rect x="98.7427%" y="453" width="0.0109%" height="15" fill="rgb(224,33,50)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="463.50"></text></g><g><title>neuralang::run (11 samples, 0.01%)</title><rect x="98.7427%" y="437" width="0.0109%" height="15" fill="rgb(246,198,51)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="447.50"></text></g><g><title>ggez::event::run (11 samples, 0.01%)</title><rect x="98.7427%" y="421" width="0.0109%" height="15" fill="rgb(205,22,4)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="431.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (11 samples, 0.01%)</title><rect x="98.7427%" y="405" width="0.0109%" height="15" fill="rgb(206,3,8)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="415.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (11 samples, 0.01%)</title><rect x="98.7427%" y="389" width="0.0109%" height="15" fill="rgb(251,23,15)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="399.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (11 samples, 0.01%)</title><rect x="98.7427%" y="373" width="0.0109%" height="15" fill="rgb(252,88,28)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="383.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (11 samples, 0.01%)</title><rect x="98.7427%" y="357" width="0.0109%" height="15" fill="rgb(212,127,14)" fg:x="99897" fg:w="11"/><text x="98.9927%" y="367.50"></text></g><g><title>ash::entry::Entry::create_instance (12 samples, 0.01%)</title><rect x="98.7595%" y="549" width="0.0119%" height="15" fill="rgb(247,145,37)" fg:x="99914" fg:w="12"/><text x="99.0095%" y="559.50"></text></g><g><title>vkCreateInstance (12 samples, 0.01%)</title><rect x="98.7595%" y="533" width="0.0119%" height="15" fill="rgb(209,117,53)" fg:x="99914" fg:w="12"/><text x="99.0095%" y="543.50"></text></g><g><title>[libvulkan.so.1.3.204] (12 samples, 0.01%)</title><rect x="98.7595%" y="517" width="0.0119%" height="15" fill="rgb(212,90,42)" fg:x="99914" fg:w="12"/><text x="99.0095%" y="527.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (12 samples, 0.01%)</title><rect x="98.7595%" y="501" width="0.0119%" height="15" fill="rgb(218,164,37)" fg:x="99914" fg:w="12"/><text x="99.0095%" y="511.50"></text></g><g><title>[libvulkan.so.1.3.204] (12 samples, 0.01%)</title><rect x="98.7595%" y="485" width="0.0119%" height="15" fill="rgb(246,65,34)" fg:x="99914" fg:w="12"/><text x="99.0095%" y="495.50"></text></g><g><title>__GI__dl_catch_exception (12 samples, 0.01%)</title><rect x="98.7714%" y="293" width="0.0119%" height="15" fill="rgb(231,100,33)" fg:x="99926" fg:w="12"/><text x="99.0214%" y="303.50"></text></g><g><title>dl_open_worker_begin (12 samples, 0.01%)</title><rect x="98.7714%" y="277" width="0.0119%" height="15" fill="rgb(228,126,14)" fg:x="99926" fg:w="12"/><text x="99.0214%" y="287.50"></text></g><g><title>_dl_relocate_object (11 samples, 0.01%)</title><rect x="98.7724%" y="261" width="0.0109%" height="15" fill="rgb(215,173,21)" fg:x="99927" fg:w="11"/><text x="99.0224%" y="271.50"></text></g><g><title>elf_dynamic_do_Rela (11 samples, 0.01%)</title><rect x="98.7724%" y="245" width="0.0109%" height="15" fill="rgb(210,6,40)" fg:x="99927" fg:w="11"/><text x="99.0224%" y="255.50"></text></g><g><title>wgpu::Instance::new (25 samples, 0.02%)</title><rect x="98.7595%" y="645" width="0.0247%" height="15" fill="rgb(212,48,18)" fg:x="99914" fg:w="25"/><text x="99.0095%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (25 samples, 0.02%)</title><rect x="98.7595%" y="629" width="0.0247%" height="15" fill="rgb(230,214,11)" fg:x="99914" fg:w="25"/><text x="99.0095%" y="639.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (25 samples, 0.02%)</title><rect x="98.7595%" y="613" width="0.0247%" height="15" fill="rgb(254,105,39)" fg:x="99914" fg:w="25"/><text x="99.0095%" y="623.50"></text></g><g><title>wgpu_core::instance::Instance::new (25 samples, 0.02%)</title><rect x="98.7595%" y="597" width="0.0247%" height="15" fill="rgb(245,158,5)" fg:x="99914" fg:w="25"/><text x="99.0095%" y="607.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (25 samples, 0.02%)</title><rect x="98.7595%" y="581" width="0.0247%" height="15" fill="rgb(249,208,11)" fg:x="99914" fg:w="25"/><text x="99.0095%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (25 samples, 0.02%)</title><rect x="98.7595%" y="565" width="0.0247%" height="15" fill="rgb(210,39,28)" fg:x="99914" fg:w="25"/><text x="99.0095%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (13 samples, 0.01%)</title><rect x="98.7714%" y="549" width="0.0128%" height="15" fill="rgb(211,56,53)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="559.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (13 samples, 0.01%)</title><rect x="98.7714%" y="533" width="0.0128%" height="15" fill="rgb(226,201,30)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="543.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (13 samples, 0.01%)</title><rect x="98.7714%" y="517" width="0.0128%" height="15" fill="rgb(239,101,34)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="527.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (13 samples, 0.01%)</title><rect x="98.7714%" y="501" width="0.0128%" height="15" fill="rgb(226,209,5)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="511.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (13 samples, 0.01%)</title><rect x="98.7714%" y="485" width="0.0128%" height="15" fill="rgb(250,105,47)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="495.50"></text></g><g><title>[libvulkan.so.1.3.204] (13 samples, 0.01%)</title><rect x="98.7714%" y="469" width="0.0128%" height="15" fill="rgb(230,72,3)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="479.50"></text></g><g><title>[libvulkan.so.1.3.204] (13 samples, 0.01%)</title><rect x="98.7714%" y="453" width="0.0128%" height="15" fill="rgb(232,218,39)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="463.50"></text></g><g><title>___dlopen (13 samples, 0.01%)</title><rect x="98.7714%" y="437" width="0.0128%" height="15" fill="rgb(248,166,6)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="447.50"></text></g><g><title>dlopen_implementation (13 samples, 0.01%)</title><rect x="98.7714%" y="421" width="0.0128%" height="15" fill="rgb(247,89,20)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="431.50"></text></g><g><title>_dlerror_run (13 samples, 0.01%)</title><rect x="98.7714%" y="405" width="0.0128%" height="15" fill="rgb(248,130,54)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="415.50"></text></g><g><title>__GI__dl_catch_error (13 samples, 0.01%)</title><rect x="98.7714%" y="389" width="0.0128%" height="15" fill="rgb(234,196,4)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="399.50"></text></g><g><title>__GI__dl_catch_exception (13 samples, 0.01%)</title><rect x="98.7714%" y="373" width="0.0128%" height="15" fill="rgb(250,143,31)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="383.50"></text></g><g><title>dlopen_doit (13 samples, 0.01%)</title><rect x="98.7714%" y="357" width="0.0128%" height="15" fill="rgb(211,110,34)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="367.50"></text></g><g><title>_dl_open (13 samples, 0.01%)</title><rect x="98.7714%" y="341" width="0.0128%" height="15" fill="rgb(215,124,48)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="351.50"></text></g><g><title>__GI__dl_catch_exception (13 samples, 0.01%)</title><rect x="98.7714%" y="325" width="0.0128%" height="15" fill="rgb(216,46,13)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="335.50"></text></g><g><title>dl_open_worker (13 samples, 0.01%)</title><rect x="98.7714%" y="309" width="0.0128%" height="15" fill="rgb(205,184,25)" fg:x="99926" fg:w="13"/><text x="99.0214%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.8060%" y="277" width="0.0109%" height="15" fill="rgb(228,1,10)" fg:x="99961" fg:w="11"/><text x="99.0560%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="98.8060%" y="293" width="0.0119%" height="15" fill="rgb(213,116,27)" fg:x="99961" fg:w="12"/><text x="99.0560%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.01%)</title><rect x="98.8060%" y="309" width="0.0138%" height="15" fill="rgb(241,95,50)" fg:x="99961" fg:w="14"/><text x="99.0560%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.02%)</title><rect x="98.8060%" y="325" width="0.0178%" height="15" fill="rgb(238,48,32)" fg:x="99961" fg:w="18"/><text x="99.0560%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.8060%" y="341" width="0.0188%" height="15" fill="rgb(235,113,49)" fg:x="99961" fg:w="19"/><text x="99.0560%" y="351.50"></text></g><g><title>__GI___ioctl (13 samples, 0.01%)</title><rect x="98.8247%" y="341" width="0.0128%" height="15" fill="rgb(205,127,43)" fg:x="99980" fg:w="13"/><text x="99.0747%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="98.8247%" y="325" width="0.0128%" height="15" fill="rgb(250,162,2)" fg:x="99980" fg:w="13"/><text x="99.0747%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (33 samples, 0.03%)</title><rect x="98.8060%" y="357" width="0.0326%" height="15" fill="rgb(220,13,41)" fg:x="99961" fg:w="33"/><text x="99.0560%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (34 samples, 0.03%)</title><rect x="98.8060%" y="389" width="0.0336%" height="15" fill="rgb(249,221,25)" fg:x="99961" fg:w="34"/><text x="99.0560%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (34 samples, 0.03%)</title><rect x="98.8060%" y="373" width="0.0336%" height="15" fill="rgb(215,208,19)" fg:x="99961" fg:w="34"/><text x="99.0560%" y="383.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="533" width="0.0395%" height="15" fill="rgb(236,175,2)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="517" width="0.0395%" height="15" fill="rgb(241,52,2)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="501" width="0.0395%" height="15" fill="rgb(248,140,14)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="485" width="0.0395%" height="15" fill="rgb(253,22,42)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="469" width="0.0395%" height="15" fill="rgb(234,61,47)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="453" width="0.0395%" height="15" fill="rgb(208,226,15)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="437" width="0.0395%" height="15" fill="rgb(217,221,4)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.04%)</title><rect x="98.8050%" y="421" width="0.0395%" height="15" fill="rgb(212,174,34)" fg:x="99960" fg:w="40"/><text x="99.0550%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (39 samples, 0.04%)</title><rect x="98.8060%" y="405" width="0.0385%" height="15" fill="rgb(253,83,4)" fg:x="99961" fg:w="39"/><text x="99.0560%" y="415.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (41 samples, 0.04%)</title><rect x="98.8050%" y="645" width="0.0405%" height="15" fill="rgb(250,195,49)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (41 samples, 0.04%)</title><rect x="98.8050%" y="629" width="0.0405%" height="15" fill="rgb(241,192,25)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="639.50"></text></g><g><title>ash::instance::Instance::create_device (41 samples, 0.04%)</title><rect x="98.8050%" y="613" width="0.0405%" height="15" fill="rgb(208,124,10)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="623.50"></text></g><g><title>vkCreateDevice (41 samples, 0.04%)</title><rect x="98.8050%" y="597" width="0.0405%" height="15" fill="rgb(222,33,0)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="607.50"></text></g><g><title>[libvulkan.so.1.3.204] (41 samples, 0.04%)</title><rect x="98.8050%" y="581" width="0.0405%" height="15" fill="rgb(234,209,28)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="591.50"></text></g><g><title>[libvulkan.so.1.3.204] (41 samples, 0.04%)</title><rect x="98.8050%" y="565" width="0.0405%" height="15" fill="rgb(224,11,23)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (41 samples, 0.04%)</title><rect x="98.8050%" y="549" width="0.0405%" height="15" fill="rgb(232,99,1)" fg:x="99960" fg:w="41"/><text x="99.0550%" y="559.50"></text></g><g><title>[unknown] (96,749 samples, 95.63%)</title><rect x="3.2362%" y="661" width="95.6311%" height="15" fill="rgb(237,95,45)" fg:x="3274" fg:w="96749"/><text x="3.4862%" y="671.50">[unknown]</text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="98.8939%" y="565" width="0.0119%" height="15" fill="rgb(208,109,11)" fg:x="100050" fg:w="12"/><text x="99.1439%" y="575.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (55 samples, 0.05%)</title><rect x="98.9137%" y="533" width="0.0544%" height="15" fill="rgb(216,190,48)" fg:x="100070" fg:w="55"/><text x="99.1637%" y="543.50"></text></g><g><title>__futex_abstimed_wait_common (55 samples, 0.05%)</title><rect x="98.9137%" y="517" width="0.0544%" height="15" fill="rgb(251,171,36)" fg:x="100070" fg:w="55"/><text x="99.1637%" y="527.50"></text></g><g><title>__futex_abstimed_wait_common64 (55 samples, 0.05%)</title><rect x="98.9137%" y="501" width="0.0544%" height="15" fill="rgb(230,62,22)" fg:x="100070" fg:w="55"/><text x="99.1637%" y="511.50"></text></g><g><title>[unknown] (54 samples, 0.05%)</title><rect x="98.9147%" y="485" width="0.0534%" height="15" fill="rgb(225,114,35)" fg:x="100071" fg:w="54"/><text x="99.1647%" y="495.50"></text></g><g><title>[unknown] (48 samples, 0.05%)</title><rect x="98.9206%" y="469" width="0.0474%" height="15" fill="rgb(215,118,42)" fg:x="100077" fg:w="48"/><text x="99.1706%" y="479.50"></text></g><g><title>[unknown] (48 samples, 0.05%)</title><rect x="98.9206%" y="453" width="0.0474%" height="15" fill="rgb(243,119,21)" fg:x="100077" fg:w="48"/><text x="99.1706%" y="463.50"></text></g><g><title>[unknown] (47 samples, 0.05%)</title><rect x="98.9216%" y="437" width="0.0465%" height="15" fill="rgb(252,177,53)" fg:x="100078" fg:w="47"/><text x="99.1716%" y="447.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="98.9226%" y="421" width="0.0455%" height="15" fill="rgb(237,209,29)" fg:x="100079" fg:w="46"/><text x="99.1726%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="98.9236%" y="405" width="0.0445%" height="15" fill="rgb(212,65,23)" fg:x="100080" fg:w="45"/><text x="99.1736%" y="415.50"></text></g><g><title>[unknown] (39 samples, 0.04%)</title><rect x="98.9295%" y="389" width="0.0385%" height="15" fill="rgb(230,222,46)" fg:x="100086" fg:w="39"/><text x="99.1795%" y="399.50"></text></g><g><title>[unknown] (39 samples, 0.04%)</title><rect x="98.9295%" y="373" width="0.0385%" height="15" fill="rgb(215,135,32)" fg:x="100086" fg:w="39"/><text x="99.1795%" y="383.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="98.9325%" y="357" width="0.0356%" height="15" fill="rgb(246,101,22)" fg:x="100089" fg:w="36"/><text x="99.1825%" y="367.50"></text></g><g><title>[unknown] (35 samples, 0.03%)</title><rect x="98.9335%" y="341" width="0.0346%" height="15" fill="rgb(206,107,13)" fg:x="100090" fg:w="35"/><text x="99.1835%" y="351.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="98.9384%" y="325" width="0.0297%" height="15" fill="rgb(250,100,44)" fg:x="100095" fg:w="30"/><text x="99.1884%" y="335.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="98.9453%" y="309" width="0.0227%" height="15" fill="rgb(231,147,38)" fg:x="100102" fg:w="23"/><text x="99.1953%" y="319.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="98.9483%" y="293" width="0.0198%" height="15" fill="rgb(229,8,40)" fg:x="100105" fg:w="20"/><text x="99.1983%" y="303.50"></text></g><g><title>___pthread_cond_timedwait64 (63 samples, 0.06%)</title><rect x="98.9117%" y="565" width="0.0623%" height="15" fill="rgb(221,135,30)" fg:x="100068" fg:w="63"/><text x="99.1617%" y="575.50"></text></g><g><title>__pthread_cond_wait_common (63 samples, 0.06%)</title><rect x="98.9117%" y="549" width="0.0623%" height="15" fill="rgb(249,193,18)" fg:x="100068" fg:w="63"/><text x="99.1617%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (106 samples, 0.10%)</title><rect x="98.8811%" y="581" width="0.1048%" height="15" fill="rgb(209,133,39)" fg:x="100037" fg:w="106"/><text x="99.1311%" y="591.50"></text></g><g><title>__GI___close (56 samples, 0.06%)</title><rect x="98.9859%" y="581" width="0.0554%" height="15" fill="rgb(232,100,14)" fg:x="100143" fg:w="56"/><text x="99.2359%" y="591.50"></text></g><g><title>[unknown] (53 samples, 0.05%)</title><rect x="98.9888%" y="565" width="0.0524%" height="15" fill="rgb(224,185,1)" fg:x="100146" fg:w="53"/><text x="99.2388%" y="575.50"></text></g><g><title>[unknown] (47 samples, 0.05%)</title><rect x="98.9948%" y="549" width="0.0465%" height="15" fill="rgb(223,139,8)" fg:x="100152" fg:w="47"/><text x="99.2448%" y="559.50"></text></g><g><title>[unknown] (42 samples, 0.04%)</title><rect x="98.9997%" y="533" width="0.0415%" height="15" fill="rgb(232,213,38)" fg:x="100157" fg:w="42"/><text x="99.2497%" y="543.50"></text></g><g><title>[unknown] (35 samples, 0.03%)</title><rect x="99.0066%" y="517" width="0.0346%" height="15" fill="rgb(207,94,22)" fg:x="100164" fg:w="35"/><text x="99.2566%" y="527.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="99.0086%" y="501" width="0.0326%" height="15" fill="rgb(219,183,54)" fg:x="100166" fg:w="33"/><text x="99.2586%" y="511.50"></text></g><g><title>[unknown] (28 samples, 0.03%)</title><rect x="99.0135%" y="485" width="0.0277%" height="15" fill="rgb(216,185,54)" fg:x="100171" fg:w="28"/><text x="99.2635%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="99.0185%" y="469" width="0.0227%" height="15" fill="rgb(254,217,39)" fg:x="100176" fg:w="23"/><text x="99.2685%" y="479.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="99.0185%" y="453" width="0.0227%" height="15" fill="rgb(240,178,23)" fg:x="100176" fg:w="23"/><text x="99.2685%" y="463.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.0214%" y="437" width="0.0198%" height="15" fill="rgb(218,11,47)" fg:x="100179" fg:w="20"/><text x="99.2714%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="99.0293%" y="421" width="0.0119%" height="15" fill="rgb(218,51,51)" fg:x="100187" fg:w="12"/><text x="99.2793%" y="431.50"></text></g><g><title>[unknown] (388 samples, 0.38%)</title><rect x="99.0442%" y="549" width="0.3835%" height="15" fill="rgb(238,126,27)" fg:x="100202" fg:w="388"/><text x="99.2942%" y="559.50"></text></g><g><title>[unknown] (381 samples, 0.38%)</title><rect x="99.0511%" y="533" width="0.3766%" height="15" fill="rgb(249,202,22)" fg:x="100209" fg:w="381"/><text x="99.3011%" y="543.50"></text></g><g><title>[unknown] (381 samples, 0.38%)</title><rect x="99.0511%" y="517" width="0.3766%" height="15" fill="rgb(254,195,49)" fg:x="100209" fg:w="381"/><text x="99.3011%" y="527.50"></text></g><g><title>[unknown] (377 samples, 0.37%)</title><rect x="99.0550%" y="501" width="0.3726%" height="15" fill="rgb(208,123,14)" fg:x="100213" fg:w="377"/><text x="99.3050%" y="511.50"></text></g><g><title>[unknown] (376 samples, 0.37%)</title><rect x="99.0560%" y="485" width="0.3717%" height="15" fill="rgb(224,200,8)" fg:x="100214" fg:w="376"/><text x="99.3060%" y="495.50"></text></g><g><title>[unknown] (370 samples, 0.37%)</title><rect x="99.0620%" y="469" width="0.3657%" height="15" fill="rgb(217,61,36)" fg:x="100220" fg:w="370"/><text x="99.3120%" y="479.50"></text></g><g><title>[unknown] (367 samples, 0.36%)</title><rect x="99.0649%" y="453" width="0.3628%" height="15" fill="rgb(206,35,45)" fg:x="100223" fg:w="367"/><text x="99.3149%" y="463.50"></text></g><g><title>[unknown] (365 samples, 0.36%)</title><rect x="99.0669%" y="437" width="0.3608%" height="15" fill="rgb(217,65,33)" fg:x="100225" fg:w="365"/><text x="99.3169%" y="447.50"></text></g><g><title>[unknown] (357 samples, 0.35%)</title><rect x="99.0748%" y="421" width="0.3529%" height="15" fill="rgb(222,158,48)" fg:x="100233" fg:w="357"/><text x="99.3248%" y="431.50"></text></g><g><title>[unknown] (303 samples, 0.30%)</title><rect x="99.1282%" y="405" width="0.2995%" height="15" fill="rgb(254,2,54)" fg:x="100287" fg:w="303"/><text x="99.3782%" y="415.50"></text></g><g><title>[unknown] (130 samples, 0.13%)</title><rect x="99.2992%" y="389" width="0.1285%" height="15" fill="rgb(250,143,38)" fg:x="100460" fg:w="130"/><text x="99.5492%" y="399.50"></text></g><g><title>[unknown] (88 samples, 0.09%)</title><rect x="99.3407%" y="373" width="0.0870%" height="15" fill="rgb(248,25,0)" fg:x="100502" fg:w="88"/><text x="99.5907%" y="383.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.4079%" y="357" width="0.0198%" height="15" fill="rgb(206,152,27)" fg:x="100570" fg:w="20"/><text x="99.6579%" y="367.50"></text></g><g><title>[unknown] (15 samples, 0.01%)</title><rect x="99.4129%" y="341" width="0.0148%" height="15" fill="rgb(240,77,30)" fg:x="100575" fg:w="15"/><text x="99.6629%" y="351.50"></text></g><g><title>__GI___libc_read (392 samples, 0.39%)</title><rect x="99.0412%" y="581" width="0.3875%" height="15" fill="rgb(231,5,3)" fg:x="100199" fg:w="392"/><text x="99.2912%" y="591.50"></text></g><g><title>__GI___libc_read (389 samples, 0.38%)</title><rect x="99.0442%" y="565" width="0.3845%" height="15" fill="rgb(207,226,32)" fg:x="100202" fg:w="389"/><text x="99.2942%" y="575.50"></text></g><g><title>__GI___nanosleep (101 samples, 0.10%)</title><rect x="99.4287%" y="581" width="0.0998%" height="15" fill="rgb(222,207,47)" fg:x="100591" fg:w="101"/><text x="99.6787%" y="591.50"></text></g><g><title>__GI___clock_nanosleep (101 samples, 0.10%)</title><rect x="99.4287%" y="565" width="0.0998%" height="15" fill="rgb(229,115,45)" fg:x="100591" fg:w="101"/><text x="99.6787%" y="575.50"></text></g><g><title>[unknown] (98 samples, 0.10%)</title><rect x="99.4316%" y="549" width="0.0969%" height="15" fill="rgb(224,191,6)" fg:x="100594" fg:w="98"/><text x="99.6816%" y="559.50"></text></g><g><title>[unknown] (83 samples, 0.08%)</title><rect x="99.4465%" y="533" width="0.0820%" height="15" fill="rgb(230,227,24)" fg:x="100609" fg:w="83"/><text x="99.6965%" y="543.50"></text></g><g><title>[unknown] (82 samples, 0.08%)</title><rect x="99.4475%" y="517" width="0.0811%" height="15" fill="rgb(228,80,19)" fg:x="100610" fg:w="82"/><text x="99.6975%" y="527.50"></text></g><g><title>[unknown] (74 samples, 0.07%)</title><rect x="99.4554%" y="501" width="0.0731%" height="15" fill="rgb(247,229,0)" fg:x="100618" fg:w="74"/><text x="99.7054%" y="511.50"></text></g><g><title>[unknown] (69 samples, 0.07%)</title><rect x="99.4603%" y="485" width="0.0682%" height="15" fill="rgb(237,194,15)" fg:x="100623" fg:w="69"/><text x="99.7103%" y="495.50"></text></g><g><title>[unknown] (65 samples, 0.06%)</title><rect x="99.4643%" y="469" width="0.0642%" height="15" fill="rgb(219,203,20)" fg:x="100627" fg:w="65"/><text x="99.7143%" y="479.50"></text></g><g><title>[unknown] (60 samples, 0.06%)</title><rect x="99.4692%" y="453" width="0.0593%" height="15" fill="rgb(234,128,8)" fg:x="100632" fg:w="60"/><text x="99.7192%" y="463.50"></text></g><g><title>[unknown] (58 samples, 0.06%)</title><rect x="99.4712%" y="437" width="0.0573%" height="15" fill="rgb(248,202,8)" fg:x="100634" fg:w="58"/><text x="99.7212%" y="447.50"></text></g><g><title>[unknown] (50 samples, 0.05%)</title><rect x="99.4791%" y="421" width="0.0494%" height="15" fill="rgb(206,104,37)" fg:x="100642" fg:w="50"/><text x="99.7291%" y="431.50"></text></g><g><title>[unknown] (45 samples, 0.04%)</title><rect x="99.4840%" y="405" width="0.0445%" height="15" fill="rgb(223,8,27)" fg:x="100647" fg:w="45"/><text x="99.7340%" y="415.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="99.5058%" y="389" width="0.0227%" height="15" fill="rgb(216,217,28)" fg:x="100669" fg:w="23"/><text x="99.7558%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="99.5068%" y="373" width="0.0217%" height="15" fill="rgb(249,199,1)" fg:x="100670" fg:w="22"/><text x="99.7568%" y="383.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.5127%" y="357" width="0.0158%" height="15" fill="rgb(240,85,17)" fg:x="100676" fg:w="16"/><text x="99.7627%" y="367.50"></text></g><g><title>[unknown] (230 samples, 0.23%)</title><rect x="99.5305%" y="565" width="0.2273%" height="15" fill="rgb(206,108,45)" fg:x="100694" fg:w="230"/><text x="99.7805%" y="575.50"></text></g><g><title>[unknown] (225 samples, 0.22%)</title><rect x="99.5354%" y="549" width="0.2224%" height="15" fill="rgb(245,210,41)" fg:x="100699" fg:w="225"/><text x="99.7854%" y="559.50"></text></g><g><title>[unknown] (218 samples, 0.22%)</title><rect x="99.5423%" y="533" width="0.2155%" height="15" fill="rgb(206,13,37)" fg:x="100706" fg:w="218"/><text x="99.7923%" y="543.50"></text></g><g><title>[unknown] (213 samples, 0.21%)</title><rect x="99.5473%" y="517" width="0.2105%" height="15" fill="rgb(250,61,18)" fg:x="100711" fg:w="213"/><text x="99.7973%" y="527.50"></text></g><g><title>[unknown] (210 samples, 0.21%)</title><rect x="99.5503%" y="501" width="0.2076%" height="15" fill="rgb(235,172,48)" fg:x="100714" fg:w="210"/><text x="99.8003%" y="511.50"></text></g><g><title>[unknown] (205 samples, 0.20%)</title><rect x="99.5552%" y="485" width="0.2026%" height="15" fill="rgb(249,201,17)" fg:x="100719" fg:w="205"/><text x="99.8052%" y="495.50"></text></g><g><title>[unknown] (200 samples, 0.20%)</title><rect x="99.5601%" y="469" width="0.1977%" height="15" fill="rgb(219,208,6)" fg:x="100724" fg:w="200"/><text x="99.8101%" y="479.50"></text></g><g><title>[unknown] (170 samples, 0.17%)</title><rect x="99.5898%" y="453" width="0.1680%" height="15" fill="rgb(248,31,23)" fg:x="100754" fg:w="170"/><text x="99.8398%" y="463.50"></text></g><g><title>[unknown] (153 samples, 0.15%)</title><rect x="99.6066%" y="437" width="0.1512%" height="15" fill="rgb(245,15,42)" fg:x="100771" fg:w="153"/><text x="99.8566%" y="447.50"></text></g><g><title>[unknown] (111 samples, 0.11%)</title><rect x="99.6481%" y="421" width="0.1097%" height="15" fill="rgb(222,217,39)" fg:x="100813" fg:w="111"/><text x="99.8981%" y="431.50"></text></g><g><title>[unknown] (78 samples, 0.08%)</title><rect x="99.6807%" y="405" width="0.0771%" height="15" fill="rgb(210,219,27)" fg:x="100846" fg:w="78"/><text x="99.9307%" y="415.50"></text></g><g><title>[unknown] (65 samples, 0.06%)</title><rect x="99.6936%" y="389" width="0.0642%" height="15" fill="rgb(252,166,36)" fg:x="100859" fg:w="65"/><text x="99.9436%" y="399.50"></text></g><g><title>[unknown] (58 samples, 0.06%)</title><rect x="99.7005%" y="373" width="0.0573%" height="15" fill="rgb(245,132,34)" fg:x="100866" fg:w="58"/><text x="99.9505%" y="383.50"></text></g><g><title>[unknown] (56 samples, 0.06%)</title><rect x="99.7025%" y="357" width="0.0554%" height="15" fill="rgb(236,54,3)" fg:x="100868" fg:w="56"/><text x="99.9525%" y="367.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.7222%" y="341" width="0.0356%" height="15" fill="rgb(241,173,43)" fg:x="100888" fg:w="36"/><text x="99.9722%" y="351.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.7400%" y="325" width="0.0178%" height="15" fill="rgb(215,190,9)" fg:x="100906" fg:w="18"/><text x="99.9900%" y="335.50"></text></g><g><title>__libc_open64 (233 samples, 0.23%)</title><rect x="99.5285%" y="581" width="0.2303%" height="15" fill="rgb(242,101,16)" fg:x="100692" fg:w="233"/><text x="99.7785%" y="591.50"></text></g><g><title>_IO_strfile_read (16 samples, 0.02%)</title><rect x="99.7618%" y="565" width="0.0158%" height="15" fill="rgb(223,190,21)" fg:x="100928" fg:w="16"/><text x="100.0118%" y="575.50"></text></g><g><title>_IO_str_init_static_internal (11 samples, 0.01%)</title><rect x="99.7667%" y="549" width="0.0109%" height="15" fill="rgb(215,228,25)" fg:x="100933" fg:w="11"/><text x="100.0167%" y="559.50"></text></g><g><title>__sscanf (59 samples, 0.06%)</title><rect x="99.7588%" y="581" width="0.0583%" height="15" fill="rgb(225,36,22)" fg:x="100925" fg:w="59"/><text x="100.0088%" y="591.50"></text></g><g><title>__vfscanf_internal (40 samples, 0.04%)</title><rect x="99.7776%" y="565" width="0.0395%" height="15" fill="rgb(251,106,46)" fg:x="100944" fg:w="40"/><text x="100.0276%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (977 samples, 0.97%)</title><rect x="98.8672%" y="629" width="0.9657%" height="15" fill="rgb(208,90,1)" fg:x="100023" fg:w="977"/><text x="99.1172%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (977 samples, 0.97%)</title><rect x="98.8672%" y="613" width="0.9657%" height="15" fill="rgb(243,10,4)" fg:x="100023" fg:w="977"/><text x="99.1172%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (973 samples, 0.96%)</title><rect x="98.8712%" y="597" width="0.9618%" height="15" fill="rgb(212,137,27)" fg:x="100027" fg:w="973"/><text x="99.1212%" y="607.50"></text></g><g><title>std::thread::sleep (17 samples, 0.02%)</title><rect x="99.8339%" y="421" width="0.0168%" height="15" fill="rgb(231,220,49)" fg:x="101001" fg:w="17"/><text x="100.0839%" y="431.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (17 samples, 0.02%)</title><rect x="99.8339%" y="405" width="0.0168%" height="15" fill="rgb(237,96,20)" fg:x="101001" fg:w="17"/><text x="100.0839%" y="415.50"></text></g><g><title>__GI___nanosleep (16 samples, 0.02%)</title><rect x="99.8349%" y="389" width="0.0158%" height="15" fill="rgb(239,229,30)" fg:x="101002" fg:w="16"/><text x="100.0849%" y="399.50"></text></g><g><title>__GI___clock_nanosleep (16 samples, 0.02%)</title><rect x="99.8349%" y="373" width="0.0158%" height="15" fill="rgb(219,65,33)" fg:x="101002" fg:w="16"/><text x="100.0849%" y="383.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.8349%" y="357" width="0.0158%" height="15" fill="rgb(243,134,7)" fg:x="101002" fg:w="16"/><text x="100.0849%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.8369%" y="341" width="0.0138%" height="15" fill="rgb(216,177,54)" fg:x="101004" fg:w="14"/><text x="100.0869%" y="351.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.8369%" y="325" width="0.0138%" height="15" fill="rgb(211,160,20)" fg:x="101004" fg:w="14"/><text x="100.0869%" y="335.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.8369%" y="309" width="0.0138%" height="15" fill="rgb(239,85,39)" fg:x="101004" fg:w="14"/><text x="100.0869%" y="319.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.8369%" y="293" width="0.0138%" height="15" fill="rgb(232,125,22)" fg:x="101004" fg:w="14"/><text x="100.0869%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.8379%" y="277" width="0.0128%" height="15" fill="rgb(244,57,34)" fg:x="101005" fg:w="13"/><text x="100.0879%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.8379%" y="261" width="0.0128%" height="15" fill="rgb(214,203,32)" fg:x="101005" fg:w="13"/><text x="100.0879%" y="271.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.8379%" y="245" width="0.0128%" height="15" fill="rgb(207,58,43)" fg:x="101005" fg:w="13"/><text x="100.0879%" y="255.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="99.8389%" y="229" width="0.0119%" height="15" fill="rgb(215,193,15)" fg:x="101006" fg:w="12"/><text x="100.0889%" y="239.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="99.8389%" y="213" width="0.0119%" height="15" fill="rgb(232,15,44)" fg:x="101006" fg:w="12"/><text x="100.0889%" y="223.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="99.8389%" y="197" width="0.0119%" height="15" fill="rgb(212,3,48)" fg:x="101006" fg:w="12"/><text x="100.0889%" y="207.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="99.8389%" y="181" width="0.0119%" height="15" fill="rgb(218,128,7)" fg:x="101006" fg:w="12"/><text x="100.0889%" y="191.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.8399%" y="165" width="0.0109%" height="15" fill="rgb(226,216,39)" fg:x="101007" fg:w="11"/><text x="100.0899%" y="175.50"></text></g><g><title>__clone3 (997 samples, 0.99%)</title><rect x="98.8672%" y="661" width="0.9855%" height="15" fill="rgb(243,47,51)" fg:x="100023" fg:w="997"/><text x="99.1172%" y="671.50"></text></g><g><title>start_thread (997 samples, 0.99%)</title><rect x="98.8672%" y="645" width="0.9855%" height="15" fill="rgb(241,183,40)" fg:x="100023" fg:w="997"/><text x="99.1172%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (19 samples, 0.02%)</title><rect x="99.8339%" y="629" width="0.0188%" height="15" fill="rgb(231,217,32)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.8339%" y="613" width="0.0188%" height="15" fill="rgb(229,61,38)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.8339%" y="597" width="0.0188%" height="15" fill="rgb(225,210,5)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.02%)</title><rect x="99.8339%" y="581" width="0.0188%" height="15" fill="rgb(231,79,45)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (19 samples, 0.02%)</title><rect x="99.8339%" y="565" width="0.0188%" height="15" fill="rgb(224,100,7)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="575.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.02%)</title><rect x="99.8339%" y="549" width="0.0188%" height="15" fill="rgb(241,198,18)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="559.50"></text></g><g><title>std::panicking::try (19 samples, 0.02%)</title><rect x="99.8339%" y="533" width="0.0188%" height="15" fill="rgb(252,97,53)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="543.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.02%)</title><rect x="99.8339%" y="517" width="0.0188%" height="15" fill="rgb(220,88,7)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="527.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.02%)</title><rect x="99.8339%" y="501" width="0.0188%" height="15" fill="rgb(213,176,14)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="511.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (19 samples, 0.02%)</title><rect x="99.8339%" y="485" width="0.0188%" height="15" fill="rgb(246,73,7)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.02%)</title><rect x="99.8339%" y="469" width="0.0188%" height="15" fill="rgb(245,64,36)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="479.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (19 samples, 0.02%)</title><rect x="99.8339%" y="453" width="0.0188%" height="15" fill="rgb(245,80,10)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="463.50"></text></g><g><title>gilrs::ff::server::run (19 samples, 0.02%)</title><rect x="99.8339%" y="437" width="0.0188%" height="15" fill="rgb(232,107,50)" fg:x="101001" fg:w="19"/><text x="100.0839%" y="447.50"></text></g><g><title>_start (11 samples, 0.01%)</title><rect x="99.8537%" y="661" width="0.0109%" height="15" fill="rgb(253,3,0)" fg:x="101021" fg:w="11"/><text x="100.1037%" y="671.50"></text></g><g><title>neuralang (100,784 samples, 99.62%)</title><rect x="0.2580%" y="677" width="99.6194%" height="15" fill="rgb(212,99,53)" fg:x="261" fg:w="100784"/><text x="0.5080%" y="687.50">neuralang</text></g><g><title>[libpulse.so.0.24.1] (11 samples, 0.01%)</title><rect x="99.8962%" y="453" width="0.0109%" height="15" fill="rgb(249,111,54)" fg:x="101064" fg:w="11"/><text x="100.1462%" y="463.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (11 samples, 0.01%)</title><rect x="99.8962%" y="437" width="0.0109%" height="15" fill="rgb(249,55,30)" fg:x="101064" fg:w="11"/><text x="100.1462%" y="447.50"></text></g><g><title>[libpulse.so.0.24.1] (12 samples, 0.01%)</title><rect x="99.8962%" y="485" width="0.0119%" height="15" fill="rgb(237,47,42)" fg:x="101064" fg:w="12"/><text x="100.1462%" y="495.50"></text></g><g><title>pa_pdispatch_run (12 samples, 0.01%)</title><rect x="99.8962%" y="469" width="0.0119%" height="15" fill="rgb(211,20,18)" fg:x="101064" fg:w="12"/><text x="100.1462%" y="479.50"></text></g><g><title>[libpulsecommon-15.99.so] (18 samples, 0.02%)</title><rect x="99.8962%" y="517" width="0.0178%" height="15" fill="rgb(231,203,46)" fg:x="101064" fg:w="18"/><text x="100.1462%" y="527.50"></text></g><g><title>[libpulsecommon-15.99.so] (18 samples, 0.02%)</title><rect x="99.8962%" y="501" width="0.0178%" height="15" fill="rgb(237,142,3)" fg:x="101064" fg:w="18"/><text x="100.1462%" y="511.50"></text></g><g><title>[libpulsecommon-15.99.so] (27 samples, 0.03%)</title><rect x="99.8942%" y="533" width="0.0267%" height="15" fill="rgb(241,107,1)" fg:x="101062" fg:w="27"/><text x="100.1442%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (31 samples, 0.03%)</title><rect x="99.8932%" y="549" width="0.0306%" height="15" fill="rgb(229,83,13)" fg:x="101061" fg:w="31"/><text x="100.1432%" y="559.50"></text></g><g><title>pa_mainloop_dispatch (41 samples, 0.04%)</title><rect x="99.8863%" y="565" width="0.0405%" height="15" fill="rgb(241,91,40)" fg:x="101054" fg:w="41"/><text x="100.1363%" y="575.50"></text></g><g><title>__GI___poll (63 samples, 0.06%)</title><rect x="99.9288%" y="533" width="0.0623%" height="15" fill="rgb(225,3,45)" fg:x="101097" fg:w="63"/><text x="100.1788%" y="543.50"></text></g><g><title>[unknown] (63 samples, 0.06%)</title><rect x="99.9288%" y="517" width="0.0623%" height="15" fill="rgb(244,223,14)" fg:x="101097" fg:w="63"/><text x="100.1788%" y="527.50"></text></g><g><title>[unknown] (62 samples, 0.06%)</title><rect x="99.9298%" y="501" width="0.0613%" height="15" fill="rgb(224,124,37)" fg:x="101098" fg:w="62"/><text x="100.1798%" y="511.50"></text></g><g><title>[unknown] (62 samples, 0.06%)</title><rect x="99.9298%" y="485" width="0.0613%" height="15" fill="rgb(251,171,30)" fg:x="101098" fg:w="62"/><text x="100.1798%" y="495.50"></text></g><g><title>[unknown] (62 samples, 0.06%)</title><rect x="99.9298%" y="469" width="0.0613%" height="15" fill="rgb(236,46,54)" fg:x="101098" fg:w="62"/><text x="100.1798%" y="479.50"></text></g><g><title>[unknown] (60 samples, 0.06%)</title><rect x="99.9318%" y="453" width="0.0593%" height="15" fill="rgb(245,213,5)" fg:x="101100" fg:w="60"/><text x="100.1818%" y="463.50"></text></g><g><title>[unknown] (58 samples, 0.06%)</title><rect x="99.9338%" y="437" width="0.0573%" height="15" fill="rgb(230,144,27)" fg:x="101102" fg:w="58"/><text x="100.1838%" y="447.50"></text></g><g><title>[unknown] (54 samples, 0.05%)</title><rect x="99.9377%" y="421" width="0.0534%" height="15" fill="rgb(220,86,6)" fg:x="101106" fg:w="54"/><text x="100.1877%" y="431.50"></text></g><g><title>[unknown] (51 samples, 0.05%)</title><rect x="99.9407%" y="405" width="0.0504%" height="15" fill="rgb(240,20,13)" fg:x="101109" fg:w="51"/><text x="100.1907%" y="415.50"></text></g><g><title>[unknown] (50 samples, 0.05%)</title><rect x="99.9417%" y="389" width="0.0494%" height="15" fill="rgb(217,89,34)" fg:x="101110" fg:w="50"/><text x="100.1917%" y="399.50"></text></g><g><title>[unknown] (47 samples, 0.05%)</title><rect x="99.9446%" y="373" width="0.0465%" height="15" fill="rgb(229,13,5)" fg:x="101113" fg:w="47"/><text x="100.1946%" y="383.50"></text></g><g><title>[unknown] (38 samples, 0.04%)</title><rect x="99.9535%" y="357" width="0.0376%" height="15" fill="rgb(244,67,35)" fg:x="101122" fg:w="38"/><text x="100.2035%" y="367.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.9555%" y="341" width="0.0356%" height="15" fill="rgb(221,40,2)" fg:x="101124" fg:w="36"/><text x="100.2055%" y="351.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.9555%" y="325" width="0.0356%" height="15" fill="rgb(237,157,21)" fg:x="101124" fg:w="36"/><text x="100.2055%" y="335.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="99.9585%" y="309" width="0.0326%" height="15" fill="rgb(222,94,11)" fg:x="101127" fg:w="33"/><text x="100.2085%" y="319.50"></text></g><g><title>pa_mainloop_poll (66 samples, 0.07%)</title><rect x="99.9269%" y="565" width="0.0652%" height="15" fill="rgb(249,113,6)" fg:x="101095" fg:w="66"/><text x="100.1769%" y="575.50"></text></g><g><title>[libpulse.so.0.24.1] (65 samples, 0.06%)</title><rect x="99.9278%" y="549" width="0.0642%" height="15" fill="rgb(238,137,36)" fg:x="101096" fg:w="65"/><text x="100.1778%" y="559.50"></text></g><g><title>all (101,169 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(210,102,26)" fg:x="0" fg:w="101169"/><text x="0.2500%" y="703.50"></text></g><g><title>threaded-ml (119 samples, 0.12%)</title><rect x="99.8824%" y="677" width="0.1176%" height="15" fill="rgb(218,30,30)" fg:x="101050" fg:w="119"/><text x="100.1324%" y="687.50"></text></g><g><title>__clone3 (115 samples, 0.11%)</title><rect x="99.8863%" y="661" width="0.1137%" height="15" fill="rgb(214,67,26)" fg:x="101054" fg:w="115"/><text x="100.1363%" y="671.50"></text></g><g><title>start_thread (115 samples, 0.11%)</title><rect x="99.8863%" y="645" width="0.1137%" height="15" fill="rgb(251,9,53)" fg:x="101054" fg:w="115"/><text x="100.1363%" y="655.50"></text></g><g><title>[libpulsecommon-15.99.so] (115 samples, 0.11%)</title><rect x="99.8863%" y="629" width="0.1137%" height="15" fill="rgb(228,204,25)" fg:x="101054" fg:w="115"/><text x="100.1363%" y="639.50"></text></g><g><title>[libpulse.so.0.24.1] (115 samples, 0.11%)</title><rect x="99.8863%" y="613" width="0.1137%" height="15" fill="rgb(207,153,8)" fg:x="101054" fg:w="115"/><text x="100.1363%" y="623.50"></text></g><g><title>pa_mainloop_run (115 samples, 0.11%)</title><rect x="99.8863%" y="597" width="0.1137%" height="15" fill="rgb(242,9,16)" fg:x="101054" fg:w="115"/><text x="100.1363%" y="607.50"></text></g><g><title>pa_mainloop_iterate (115 samples, 0.11%)</title><rect x="99.8863%" y="581" width="0.1137%" height="15" fill="rgb(217,211,10)" fg:x="101054" fg:w="115"/><text x="100.1363%" y="591.50"></text></g></svg></svg>