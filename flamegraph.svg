<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="19135"><g><title>__GI___futex_abstimed_wait_cancelable64 (24 samples, 0.13%)</title><rect x="0.0418%" y="773" width="0.1254%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="24"/><text x="0.2918%" y="783.50"></text></g><g><title>__futex_abstimed_wait_common (24 samples, 0.13%)</title><rect x="0.0418%" y="757" width="0.1254%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="24"/><text x="0.2918%" y="767.50"></text></g><g><title>__futex_abstimed_wait_common64 (24 samples, 0.13%)</title><rect x="0.0418%" y="741" width="0.1254%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="24"/><text x="0.2918%" y="751.50"></text></g><g><title>[unknown] (24 samples, 0.13%)</title><rect x="0.0418%" y="725" width="0.1254%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="24"/><text x="0.2918%" y="735.50"></text></g><g><title>[unknown] (23 samples, 0.12%)</title><rect x="0.0470%" y="709" width="0.1202%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="23"/><text x="0.2970%" y="719.50"></text></g><g><title>[unknown] (23 samples, 0.12%)</title><rect x="0.0470%" y="693" width="0.1202%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="23"/><text x="0.2970%" y="703.50"></text></g><g><title>[unknown] (22 samples, 0.11%)</title><rect x="0.0523%" y="677" width="0.1150%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="22"/><text x="0.3023%" y="687.50"></text></g><g><title>[unknown] (21 samples, 0.11%)</title><rect x="0.0575%" y="661" width="0.1097%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="21"/><text x="0.3075%" y="671.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="0.0679%" y="645" width="0.0993%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="19"/><text x="0.3179%" y="655.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="0.0836%" y="629" width="0.0836%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="16"/><text x="0.3336%" y="639.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="0.0888%" y="613" width="0.0784%" height="15" fill="rgb(250,228,42)" fg:x="17" fg:w="15"/><text x="0.3388%" y="623.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="0.0941%" y="597" width="0.0732%" height="15" fill="rgb(240,193,28)" fg:x="18" fg:w="14"/><text x="0.3441%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="0.1202%" y="581" width="0.0470%" height="15" fill="rgb(216,20,37)" fg:x="23" fg:w="9"/><text x="0.3702%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.1463%" y="565" width="0.0209%" height="15" fill="rgb(206,188,39)" fg:x="28" fg:w="4"/><text x="0.3963%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1568%" y="549" width="0.0105%" height="15" fill="rgb(217,207,13)" fg:x="30" fg:w="2"/><text x="0.4068%" y="559.50"></text></g><g><title>___pthread_cond_timedwait64 (30 samples, 0.16%)</title><rect x="0.0261%" y="805" width="0.1568%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="30"/><text x="0.2761%" y="815.50"></text></g><g><title>__pthread_cond_wait_common (30 samples, 0.16%)</title><rect x="0.0261%" y="789" width="0.1568%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="30"/><text x="0.2761%" y="799.50"></text></g><g><title>__pthread_mutex_cond_lock (2 samples, 0.01%)</title><rect x="0.1725%" y="773" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="33" fg:w="2"/><text x="0.4225%" y="783.50"></text></g><g><title>___pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="0.1881%" y="805" width="0.0157%" height="15" fill="rgb(221,200,47)" fg:x="36" fg:w="3"/><text x="0.4381%" y="815.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="0.1881%" y="789" width="0.0157%" height="15" fill="rgb(226,26,5)" fg:x="36" fg:w="3"/><text x="0.4381%" y="799.50"></text></g><g><title>lll_mutex_unlock_optimized (3 samples, 0.02%)</title><rect x="0.1881%" y="773" width="0.0157%" height="15" fill="rgb(249,33,26)" fg:x="36" fg:w="3"/><text x="0.4381%" y="783.50"></text></g><g><title>__GI___lll_lock_wake (3 samples, 0.02%)</title><rect x="0.1881%" y="757" width="0.0157%" height="15" fill="rgb(235,183,28)" fg:x="36" fg:w="3"/><text x="0.4381%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.1934%" y="741" width="0.0105%" height="15" fill="rgb(221,5,38)" fg:x="37" fg:w="2"/><text x="0.4434%" y="751.50"></text></g><g><title>[vkrt]_Analysis (40 samples, 0.21%)</title><rect x="0.0000%" y="901" width="0.2090%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="40"/><text x="0.2500%" y="911.50"></text></g><g><title>__clone3 (38 samples, 0.20%)</title><rect x="0.0105%" y="885" width="0.1986%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="38"/><text x="0.2605%" y="895.50"></text></g><g><title>start_thread (38 samples, 0.20%)</title><rect x="0.0105%" y="869" width="0.1986%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="38"/><text x="0.2605%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (38 samples, 0.20%)</title><rect x="0.0105%" y="853" width="0.1986%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="38"/><text x="0.2605%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (38 samples, 0.20%)</title><rect x="0.0105%" y="837" width="0.1986%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="38"/><text x="0.2605%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (37 samples, 0.19%)</title><rect x="0.0157%" y="821" width="0.1934%" height="15" fill="rgb(214,148,48)" fg:x="3" fg:w="37"/><text x="0.2657%" y="831.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="0.2090%" y="869" width="0.0366%" height="15" fill="rgb(232,36,49)" fg:x="40" fg:w="7"/><text x="0.4590%" y="879.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.01%)</title><rect x="0.2456%" y="869" width="0.0105%" height="15" fill="rgb(209,103,24)" fg:x="47" fg:w="2"/><text x="0.4956%" y="879.50"></text></g><g><title>[[heap]] (11 samples, 0.06%)</title><rect x="0.2090%" y="885" width="0.0575%" height="15" fill="rgb(229,88,8)" fg:x="40" fg:w="11"/><text x="0.4590%" y="895.50"></text></g><g><title>[anon] (7 samples, 0.04%)</title><rect x="0.2665%" y="885" width="0.0366%" height="15" fill="rgb(213,181,19)" fg:x="51" fg:w="7"/><text x="0.5165%" y="895.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (4 samples, 0.02%)</title><rect x="0.2822%" y="869" width="0.0209%" height="15" fill="rgb(254,191,54)" fg:x="54" fg:w="4"/><text x="0.5322%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.06%)</title><rect x="0.3136%" y="869" width="0.0575%" height="15" fill="rgb(241,83,37)" fg:x="60" fg:w="11"/><text x="0.5636%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.3710%" y="869" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="71" fg:w="2"/><text x="0.6210%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.3710%" y="853" width="0.0105%" height="15" fill="rgb(226,3,54)" fg:x="71" fg:w="2"/><text x="0.6210%" y="863.50"></text></g><g><title>[unknown] (22 samples, 0.11%)</title><rect x="0.3031%" y="885" width="0.1150%" height="15" fill="rgb(245,192,40)" fg:x="58" fg:w="22"/><text x="0.5531%" y="895.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (5 samples, 0.03%)</title><rect x="0.3920%" y="869" width="0.0261%" height="15" fill="rgb(238,167,29)" fg:x="75" fg:w="5"/><text x="0.6420%" y="879.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.02%)</title><rect x="0.4390%" y="565" width="0.0157%" height="15" fill="rgb(232,182,51)" fg:x="84" fg:w="3"/><text x="0.6890%" y="575.50"></text></g><g><title>pa_stream_writable_size (3 samples, 0.02%)</title><rect x="0.4390%" y="549" width="0.0157%" height="15" fill="rgb(231,60,39)" fg:x="84" fg:w="3"/><text x="0.6890%" y="559.50"></text></g><g><title>pa_detect_fork (3 samples, 0.02%)</title><rect x="0.4390%" y="533" width="0.0157%" height="15" fill="rgb(208,69,12)" fg:x="84" fg:w="3"/><text x="0.6890%" y="543.50"></text></g><g><title>__GI___getpid (3 samples, 0.02%)</title><rect x="0.4390%" y="517" width="0.0157%" height="15" fill="rgb(235,93,37)" fg:x="84" fg:w="3"/><text x="0.6890%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.4390%" y="501" width="0.0157%" height="15" fill="rgb(213,116,39)" fg:x="84" fg:w="3"/><text x="0.6890%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.4442%" y="485" width="0.0105%" height="15" fill="rgb(222,207,29)" fg:x="85" fg:w="2"/><text x="0.6942%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.4442%" y="469" width="0.0105%" height="15" fill="rgb(206,96,30)" fg:x="85" fg:w="2"/><text x="0.6942%" y="479.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.03%)</title><rect x="0.4390%" y="581" width="0.0314%" height="15" fill="rgb(218,138,4)" fg:x="84" fg:w="6"/><text x="0.6890%" y="591.50"></text></g><g><title>pa_threaded_mainloop_lock (3 samples, 0.02%)</title><rect x="0.4547%" y="565" width="0.0157%" height="15" fill="rgb(250,191,14)" fg:x="87" fg:w="3"/><text x="0.7047%" y="575.50"></text></g><g><title>[libasound.so.2.0.0] (10 samples, 0.05%)</title><rect x="0.4338%" y="597" width="0.0523%" height="15" fill="rgb(239,60,40)" fg:x="83" fg:w="10"/><text x="0.6838%" y="607.50"></text></g><g><title>___pthread_mutex_unlock (3 samples, 0.02%)</title><rect x="0.4703%" y="581" width="0.0157%" height="15" fill="rgb(206,27,48)" fg:x="90" fg:w="3"/><text x="0.7203%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="0.4703%" y="565" width="0.0157%" height="15" fill="rgb(225,35,8)" fg:x="90" fg:w="3"/><text x="0.7203%" y="575.50"></text></g><g><title>lll_mutex_unlock_optimized (2 samples, 0.01%)</title><rect x="0.4756%" y="549" width="0.0105%" height="15" fill="rgb(250,213,24)" fg:x="91" fg:w="2"/><text x="0.7256%" y="559.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (11 samples, 0.06%)</title><rect x="0.4338%" y="629" width="0.0575%" height="15" fill="rgb(247,123,22)" fg:x="83" fg:w="11"/><text x="0.6838%" y="639.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (11 samples, 0.06%)</title><rect x="0.4338%" y="613" width="0.0575%" height="15" fill="rgb(231,138,38)" fg:x="83" fg:w="11"/><text x="0.6838%" y="623.50"></text></g><g><title>alsa::pcm::PCM::avail (3 samples, 0.02%)</title><rect x="0.4965%" y="629" width="0.0157%" height="15" fill="rgb(231,145,46)" fg:x="95" fg:w="3"/><text x="0.7465%" y="639.50"></text></g><g><title>snd_pcm_avail (3 samples, 0.02%)</title><rect x="0.4965%" y="613" width="0.0157%" height="15" fill="rgb(251,118,11)" fg:x="95" fg:w="3"/><text x="0.7465%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.02%)</title><rect x="0.4965%" y="597" width="0.0157%" height="15" fill="rgb(217,147,25)" fg:x="95" fg:w="3"/><text x="0.7465%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.02%)</title><rect x="0.4965%" y="581" width="0.0157%" height="15" fill="rgb(247,81,37)" fg:x="95" fg:w="3"/><text x="0.7465%" y="591.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.02%)</title><rect x="0.4965%" y="565" width="0.0157%" height="15" fill="rgb(209,12,38)" fg:x="95" fg:w="3"/><text x="0.7465%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.02%)</title><rect x="0.4965%" y="549" width="0.0157%" height="15" fill="rgb(227,1,9)" fg:x="95" fg:w="3"/><text x="0.7465%" y="559.50"></text></g><g><title>pa_stream_writable_size (2 samples, 0.01%)</title><rect x="0.5017%" y="533" width="0.0105%" height="15" fill="rgb(248,47,43)" fg:x="96" fg:w="2"/><text x="0.7517%" y="543.50"></text></g><g><title>pa_detect_fork (2 samples, 0.01%)</title><rect x="0.5017%" y="517" width="0.0105%" height="15" fill="rgb(221,10,30)" fg:x="96" fg:w="2"/><text x="0.7517%" y="527.50"></text></g><g><title>__GI___getpid (2 samples, 0.01%)</title><rect x="0.5017%" y="501" width="0.0105%" height="15" fill="rgb(210,229,1)" fg:x="96" fg:w="2"/><text x="0.7517%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.5017%" y="485" width="0.0105%" height="15" fill="rgb(222,148,37)" fg:x="96" fg:w="2"/><text x="0.7517%" y="495.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.02%)</title><rect x="0.5174%" y="565" width="0.0157%" height="15" fill="rgb(234,67,33)" fg:x="99" fg:w="3"/><text x="0.7674%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.01%)</title><rect x="0.5226%" y="549" width="0.0105%" height="15" fill="rgb(247,98,35)" fg:x="100" fg:w="2"/><text x="0.7726%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.01%)</title><rect x="0.5226%" y="533" width="0.0105%" height="15" fill="rgb(247,138,52)" fg:x="100" fg:w="2"/><text x="0.7726%" y="543.50"></text></g><g><title>pa_stream_writable_size (2 samples, 0.01%)</title><rect x="0.5226%" y="517" width="0.0105%" height="15" fill="rgb(213,79,30)" fg:x="100" fg:w="2"/><text x="0.7726%" y="527.50"></text></g><g><title>pa_detect_fork (2 samples, 0.01%)</title><rect x="0.5226%" y="501" width="0.0105%" height="15" fill="rgb(246,177,23)" fg:x="100" fg:w="2"/><text x="0.7726%" y="511.50"></text></g><g><title>__GI___getpid (2 samples, 0.01%)</title><rect x="0.5226%" y="485" width="0.0105%" height="15" fill="rgb(230,62,27)" fg:x="100" fg:w="2"/><text x="0.7726%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.5226%" y="469" width="0.0105%" height="15" fill="rgb(216,154,8)" fg:x="100" fg:w="2"/><text x="0.7726%" y="479.50"></text></g><g><title>pa_stream_get_latency (3 samples, 0.02%)</title><rect x="0.5331%" y="549" width="0.0157%" height="15" fill="rgb(244,35,45)" fg:x="102" fg:w="3"/><text x="0.7831%" y="559.50"></text></g><g><title>alsa::pcm::PCM::status (8 samples, 0.04%)</title><rect x="0.5122%" y="629" width="0.0418%" height="15" fill="rgb(251,115,12)" fg:x="98" fg:w="8"/><text x="0.7622%" y="639.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (8 samples, 0.04%)</title><rect x="0.5122%" y="613" width="0.0418%" height="15" fill="rgb(240,54,50)" fg:x="98" fg:w="8"/><text x="0.7622%" y="623.50"></text></g><g><title>snd_pcm_status (8 samples, 0.04%)</title><rect x="0.5122%" y="597" width="0.0418%" height="15" fill="rgb(233,84,52)" fg:x="98" fg:w="8"/><text x="0.7622%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (8 samples, 0.04%)</title><rect x="0.5122%" y="581" width="0.0418%" height="15" fill="rgb(207,117,47)" fg:x="98" fg:w="8"/><text x="0.7622%" y="591.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.02%)</title><rect x="0.5331%" y="565" width="0.0209%" height="15" fill="rgb(249,43,39)" fg:x="102" fg:w="4"/><text x="0.7831%" y="575.50"></text></g><g><title>[unknown] (50 samples, 0.26%)</title><rect x="0.5644%" y="597" width="0.2613%" height="15" fill="rgb(209,38,44)" fg:x="108" fg:w="50"/><text x="0.8144%" y="607.50"></text></g><g><title>[unknown] (48 samples, 0.25%)</title><rect x="0.5749%" y="581" width="0.2508%" height="15" fill="rgb(236,212,23)" fg:x="110" fg:w="48"/><text x="0.8249%" y="591.50"></text></g><g><title>[unknown] (47 samples, 0.25%)</title><rect x="0.5801%" y="565" width="0.2456%" height="15" fill="rgb(242,79,21)" fg:x="111" fg:w="47"/><text x="0.8301%" y="575.50"></text></g><g><title>[unknown] (46 samples, 0.24%)</title><rect x="0.5853%" y="549" width="0.2404%" height="15" fill="rgb(211,96,35)" fg:x="112" fg:w="46"/><text x="0.8353%" y="559.50"></text></g><g><title>[unknown] (45 samples, 0.24%)</title><rect x="0.5905%" y="533" width="0.2352%" height="15" fill="rgb(253,215,40)" fg:x="113" fg:w="45"/><text x="0.8405%" y="543.50"></text></g><g><title>[unknown] (41 samples, 0.21%)</title><rect x="0.6114%" y="517" width="0.2143%" height="15" fill="rgb(211,81,21)" fg:x="117" fg:w="41"/><text x="0.8614%" y="527.50"></text></g><g><title>[unknown] (40 samples, 0.21%)</title><rect x="0.6167%" y="501" width="0.2090%" height="15" fill="rgb(208,190,38)" fg:x="118" fg:w="40"/><text x="0.8667%" y="511.50"></text></g><g><title>[unknown] (36 samples, 0.19%)</title><rect x="0.6376%" y="485" width="0.1881%" height="15" fill="rgb(235,213,38)" fg:x="122" fg:w="36"/><text x="0.8876%" y="495.50"></text></g><g><title>[unknown] (35 samples, 0.18%)</title><rect x="0.6428%" y="469" width="0.1829%" height="15" fill="rgb(237,122,38)" fg:x="123" fg:w="35"/><text x="0.8928%" y="479.50"></text></g><g><title>[unknown] (35 samples, 0.18%)</title><rect x="0.6428%" y="453" width="0.1829%" height="15" fill="rgb(244,218,35)" fg:x="123" fg:w="35"/><text x="0.8928%" y="463.50"></text></g><g><title>[unknown] (32 samples, 0.17%)</title><rect x="0.6585%" y="437" width="0.1672%" height="15" fill="rgb(240,68,47)" fg:x="126" fg:w="32"/><text x="0.9085%" y="447.50"></text></g><g><title>[unknown] (30 samples, 0.16%)</title><rect x="0.6689%" y="421" width="0.1568%" height="15" fill="rgb(210,16,53)" fg:x="128" fg:w="30"/><text x="0.9189%" y="431.50"></text></g><g><title>[unknown] (27 samples, 0.14%)</title><rect x="0.6846%" y="405" width="0.1411%" height="15" fill="rgb(235,124,12)" fg:x="131" fg:w="27"/><text x="0.9346%" y="415.50"></text></g><g><title>[unknown] (26 samples, 0.14%)</title><rect x="0.6898%" y="389" width="0.1359%" height="15" fill="rgb(224,169,11)" fg:x="132" fg:w="26"/><text x="0.9398%" y="399.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (79 samples, 0.41%)</title><rect x="0.4181%" y="645" width="0.4129%" height="15" fill="rgb(250,166,2)" fg:x="80" fg:w="79"/><text x="0.6681%" y="655.50"></text></g><g><title>alsa::poll::poll (53 samples, 0.28%)</title><rect x="0.5540%" y="629" width="0.2770%" height="15" fill="rgb(242,216,29)" fg:x="106" fg:w="53"/><text x="0.8040%" y="639.50"></text></g><g><title>__GI___poll (52 samples, 0.27%)</title><rect x="0.5592%" y="613" width="0.2718%" height="15" fill="rgb(230,116,27)" fg:x="107" fg:w="52"/><text x="0.8092%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.01%)</title><rect x="0.8362%" y="565" width="0.0105%" height="15" fill="rgb(228,99,48)" fg:x="160" fg:w="2"/><text x="1.0862%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.01%)</title><rect x="0.8362%" y="549" width="0.0105%" height="15" fill="rgb(253,11,6)" fg:x="160" fg:w="2"/><text x="1.0862%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.01%)</title><rect x="0.8362%" y="533" width="0.0105%" height="15" fill="rgb(247,143,39)" fg:x="160" fg:w="2"/><text x="1.0862%" y="543.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.02%)</title><rect x="0.8466%" y="533" width="0.0157%" height="15" fill="rgb(236,97,10)" fg:x="162" fg:w="3"/><text x="1.0966%" y="543.50"></text></g><g><title>pa_stream_writable_size (2 samples, 0.01%)</title><rect x="0.8518%" y="517" width="0.0105%" height="15" fill="rgb(233,208,19)" fg:x="163" fg:w="2"/><text x="1.1018%" y="527.50"></text></g><g><title>pa_detect_fork (2 samples, 0.01%)</title><rect x="0.8518%" y="501" width="0.0105%" height="15" fill="rgb(216,164,2)" fg:x="163" fg:w="2"/><text x="1.1018%" y="511.50"></text></g><g><title>__GI___getpid (2 samples, 0.01%)</title><rect x="0.8518%" y="485" width="0.0105%" height="15" fill="rgb(220,129,5)" fg:x="163" fg:w="2"/><text x="1.1018%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.8518%" y="469" width="0.0105%" height="15" fill="rgb(242,17,10)" fg:x="163" fg:w="2"/><text x="1.1018%" y="479.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (11 samples, 0.06%)</title><rect x="0.8466%" y="549" width="0.0575%" height="15" fill="rgb(242,107,0)" fg:x="162" fg:w="11"/><text x="1.0966%" y="559.50"></text></g><g><title>pulse_poll_deactivate (7 samples, 0.04%)</title><rect x="0.8675%" y="533" width="0.0366%" height="15" fill="rgb(251,28,31)" fg:x="166" fg:w="7"/><text x="1.1175%" y="543.50"></text></g><g><title>__GI___libc_read (6 samples, 0.03%)</title><rect x="0.8727%" y="517" width="0.0314%" height="15" fill="rgb(233,223,10)" fg:x="167" fg:w="6"/><text x="1.1227%" y="527.50"></text></g><g><title>__GI___libc_read (6 samples, 0.03%)</title><rect x="0.8727%" y="501" width="0.0314%" height="15" fill="rgb(215,21,27)" fg:x="167" fg:w="6"/><text x="1.1227%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="0.8727%" y="485" width="0.0314%" height="15" fill="rgb(232,23,21)" fg:x="167" fg:w="6"/><text x="1.1227%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.8780%" y="469" width="0.0261%" height="15" fill="rgb(244,5,23)" fg:x="168" fg:w="5"/><text x="1.1280%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.8780%" y="453" width="0.0261%" height="15" fill="rgb(226,81,46)" fg:x="168" fg:w="5"/><text x="1.1280%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.8884%" y="437" width="0.0157%" height="15" fill="rgb(247,70,30)" fg:x="170" fg:w="3"/><text x="1.1384%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.8884%" y="421" width="0.0157%" height="15" fill="rgb(212,68,19)" fg:x="170" fg:w="3"/><text x="1.1384%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.8884%" y="405" width="0.0157%" height="15" fill="rgb(240,187,13)" fg:x="170" fg:w="3"/><text x="1.1384%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.8937%" y="389" width="0.0105%" height="15" fill="rgb(223,113,26)" fg:x="171" fg:w="2"/><text x="1.1437%" y="399.50"></text></g><g><title>[libpulse.so.0.24.1] (9 samples, 0.05%)</title><rect x="0.9146%" y="517" width="0.0470%" height="15" fill="rgb(206,192,2)" fg:x="175" fg:w="9"/><text x="1.1646%" y="527.50"></text></g><g><title>pa_mainloop_wakeup (9 samples, 0.05%)</title><rect x="0.9146%" y="501" width="0.0470%" height="15" fill="rgb(241,108,4)" fg:x="175" fg:w="9"/><text x="1.1646%" y="511.50"></text></g><g><title>pa_write (9 samples, 0.05%)</title><rect x="0.9146%" y="485" width="0.0470%" height="15" fill="rgb(247,173,49)" fg:x="175" fg:w="9"/><text x="1.1646%" y="495.50"></text></g><g><title>__GI___libc_write (9 samples, 0.05%)</title><rect x="0.9146%" y="469" width="0.0470%" height="15" fill="rgb(224,114,35)" fg:x="175" fg:w="9"/><text x="1.1646%" y="479.50"></text></g><g><title>__GI___libc_write (9 samples, 0.05%)</title><rect x="0.9146%" y="453" width="0.0470%" height="15" fill="rgb(245,159,27)" fg:x="175" fg:w="9"/><text x="1.1646%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="0.9146%" y="437" width="0.0470%" height="15" fill="rgb(245,172,44)" fg:x="175" fg:w="9"/><text x="1.1646%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="0.9146%" y="421" width="0.0470%" height="15" fill="rgb(236,23,11)" fg:x="175" fg:w="9"/><text x="1.1646%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="0.9198%" y="405" width="0.0418%" height="15" fill="rgb(205,117,38)" fg:x="176" fg:w="8"/><text x="1.1698%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="0.9198%" y="389" width="0.0418%" height="15" fill="rgb(237,72,25)" fg:x="176" fg:w="8"/><text x="1.1698%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="0.9198%" y="373" width="0.0418%" height="15" fill="rgb(244,70,9)" fg:x="176" fg:w="8"/><text x="1.1698%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="0.9198%" y="357" width="0.0418%" height="15" fill="rgb(217,125,39)" fg:x="176" fg:w="8"/><text x="1.1698%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="0.9198%" y="341" width="0.0418%" height="15" fill="rgb(235,36,10)" fg:x="176" fg:w="8"/><text x="1.1698%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="0.9250%" y="325" width="0.0366%" height="15" fill="rgb(251,123,47)" fg:x="177" fg:w="7"/><text x="1.1750%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="0.9250%" y="309" width="0.0366%" height="15" fill="rgb(221,13,13)" fg:x="177" fg:w="7"/><text x="1.1750%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="0.9302%" y="293" width="0.0314%" height="15" fill="rgb(238,131,9)" fg:x="178" fg:w="6"/><text x="1.1802%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.9407%" y="277" width="0.0209%" height="15" fill="rgb(211,50,8)" fg:x="180" fg:w="4"/><text x="1.1907%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.9407%" y="261" width="0.0209%" height="15" fill="rgb(245,182,24)" fg:x="180" fg:w="4"/><text x="1.1907%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.9407%" y="245" width="0.0209%" height="15" fill="rgb(242,14,37)" fg:x="180" fg:w="4"/><text x="1.1907%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.9407%" y="229" width="0.0209%" height="15" fill="rgb(246,228,12)" fg:x="180" fg:w="4"/><text x="1.1907%" y="239.50"></text></g><g><title>pa_detect_fork (2 samples, 0.01%)</title><rect x="0.9668%" y="517" width="0.0105%" height="15" fill="rgb(213,55,15)" fg:x="185" fg:w="2"/><text x="1.2168%" y="527.50"></text></g><g><title>__GI___getpid (2 samples, 0.01%)</title><rect x="0.9668%" y="501" width="0.0105%" height="15" fill="rgb(209,9,3)" fg:x="185" fg:w="2"/><text x="1.2168%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="0.9668%" y="485" width="0.0105%" height="15" fill="rgb(230,59,30)" fg:x="185" fg:w="2"/><text x="1.2168%" y="495.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (31 samples, 0.16%)</title><rect x="0.8309%" y="629" width="0.1620%" height="15" fill="rgb(209,121,21)" fg:x="159" fg:w="31"/><text x="1.0809%" y="639.50"></text></g><g><title>[libasound.so.2.0.0] (31 samples, 0.16%)</title><rect x="0.8309%" y="613" width="0.1620%" height="15" fill="rgb(220,109,13)" fg:x="159" fg:w="31"/><text x="1.0809%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (31 samples, 0.16%)</title><rect x="0.8309%" y="597" width="0.1620%" height="15" fill="rgb(232,18,1)" fg:x="159" fg:w="31"/><text x="1.0809%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (31 samples, 0.16%)</title><rect x="0.8309%" y="581" width="0.1620%" height="15" fill="rgb(215,41,42)" fg:x="159" fg:w="31"/><text x="1.0809%" y="591.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (28 samples, 0.15%)</title><rect x="0.8466%" y="565" width="0.1463%" height="15" fill="rgb(224,123,36)" fg:x="162" fg:w="28"/><text x="1.0966%" y="575.50"></text></g><g><title>pa_stream_write (17 samples, 0.09%)</title><rect x="0.9041%" y="549" width="0.0888%" height="15" fill="rgb(240,125,3)" fg:x="173" fg:w="17"/><text x="1.1541%" y="559.50"></text></g><g><title>pa_stream_write_ext_free (16 samples, 0.08%)</title><rect x="0.9093%" y="533" width="0.0836%" height="15" fill="rgb(205,98,50)" fg:x="174" fg:w="16"/><text x="1.1593%" y="543.50"></text></g><g><title>cpal::host::alsa::frames_to_duration (2 samples, 0.01%)</title><rect x="0.9929%" y="629" width="0.0105%" height="15" fill="rgb(205,185,37)" fg:x="190" fg:w="2"/><text x="1.2429%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (4 samples, 0.02%)</title><rect x="1.0557%" y="533" width="0.0209%" height="15" fill="rgb(238,207,15)" fg:x="202" fg:w="4"/><text x="1.3057%" y="543.50"></text></g><g><title>core::ptr::read (12 samples, 0.06%)</title><rect x="1.0766%" y="501" width="0.0627%" height="15" fill="rgb(213,199,42)" fg:x="206" fg:w="12"/><text x="1.3266%" y="511.50"></text></g><g><title>core::mem::swap (20 samples, 0.10%)</title><rect x="1.0766%" y="533" width="0.1045%" height="15" fill="rgb(235,201,11)" fg:x="206" fg:w="20"/><text x="1.3266%" y="543.50"></text></g><g><title>core::mem::swap_simple (20 samples, 0.10%)</title><rect x="1.0766%" y="517" width="0.1045%" height="15" fill="rgb(207,46,11)" fg:x="206" fg:w="20"/><text x="1.3266%" y="527.50"></text></g><g><title>core::ptr::write (8 samples, 0.04%)</title><rect x="1.1393%" y="501" width="0.0418%" height="15" fill="rgb(241,35,35)" fg:x="218" fg:w="8"/><text x="1.3893%" y="511.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.18%)</title><rect x="1.0086%" y="565" width="0.1829%" height="15" fill="rgb(243,32,47)" fg:x="193" fg:w="35"/><text x="1.2586%" y="575.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (29 samples, 0.15%)</title><rect x="1.0400%" y="549" width="0.1516%" height="15" fill="rgb(247,202,23)" fg:x="199" fg:w="29"/><text x="1.2900%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="1.1811%" y="533" width="0.0105%" height="15" fill="rgb(219,102,11)" fg:x="226" fg:w="2"/><text x="1.4311%" y="543.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="1.1811%" y="517" width="0.0105%" height="15" fill="rgb(243,110,44)" fg:x="226" fg:w="2"/><text x="1.4311%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="1.1811%" y="501" width="0.0105%" height="15" fill="rgb(222,74,54)" fg:x="226" fg:w="2"/><text x="1.4311%" y="511.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="1.1811%" y="485" width="0.0105%" height="15" fill="rgb(216,99,12)" fg:x="226" fg:w="2"/><text x="1.4311%" y="495.50"></text></g><g><title>cpal_alsa_out (190 samples, 0.99%)</title><rect x="0.2090%" y="901" width="0.9929%" height="15" fill="rgb(226,22,26)" fg:x="40" fg:w="190"/><text x="0.4590%" y="911.50"></text></g><g><title>__clone3 (150 samples, 0.78%)</title><rect x="0.4181%" y="885" width="0.7839%" height="15" fill="rgb(217,163,10)" fg:x="80" fg:w="150"/><text x="0.6681%" y="895.50"></text></g><g><title>start_thread (150 samples, 0.78%)</title><rect x="0.4181%" y="869" width="0.7839%" height="15" fill="rgb(213,25,53)" fg:x="80" fg:w="150"/><text x="0.6681%" y="879.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (150 samples, 0.78%)</title><rect x="0.4181%" y="853" width="0.7839%" height="15" fill="rgb(252,105,26)" fg:x="80" fg:w="150"/><text x="0.6681%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (150 samples, 0.78%)</title><rect x="0.4181%" y="837" width="0.7839%" height="15" fill="rgb(220,39,43)" fg:x="80" fg:w="150"/><text x="0.6681%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (150 samples, 0.78%)</title><rect x="0.4181%" y="821" width="0.7839%" height="15" fill="rgb(229,68,48)" fg:x="80" fg:w="150"/><text x="0.6681%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (150 samples, 0.78%)</title><rect x="0.4181%" y="805" width="0.7839%" height="15" fill="rgb(252,8,32)" fg:x="80" fg:w="150"/><text x="0.6681%" y="815.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (150 samples, 0.78%)</title><rect x="0.4181%" y="789" width="0.7839%" height="15" fill="rgb(223,20,43)" fg:x="80" fg:w="150"/><text x="0.6681%" y="799.50"></text></g><g><title>std::panic::catch_unwind (150 samples, 0.78%)</title><rect x="0.4181%" y="773" width="0.7839%" height="15" fill="rgb(229,81,49)" fg:x="80" fg:w="150"/><text x="0.6681%" y="783.50"></text></g><g><title>std::panicking::try (150 samples, 0.78%)</title><rect x="0.4181%" y="757" width="0.7839%" height="15" fill="rgb(236,28,36)" fg:x="80" fg:w="150"/><text x="0.6681%" y="767.50"></text></g><g><title>std::panicking::try::do_call (150 samples, 0.78%)</title><rect x="0.4181%" y="741" width="0.7839%" height="15" fill="rgb(249,185,26)" fg:x="80" fg:w="150"/><text x="0.6681%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (150 samples, 0.78%)</title><rect x="0.4181%" y="725" width="0.7839%" height="15" fill="rgb(249,174,33)" fg:x="80" fg:w="150"/><text x="0.6681%" y="735.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (150 samples, 0.78%)</title><rect x="0.4181%" y="709" width="0.7839%" height="15" fill="rgb(233,201,37)" fg:x="80" fg:w="150"/><text x="0.6681%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (150 samples, 0.78%)</title><rect x="0.4181%" y="693" width="0.7839%" height="15" fill="rgb(221,78,26)" fg:x="80" fg:w="150"/><text x="0.6681%" y="703.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (150 samples, 0.78%)</title><rect x="0.4181%" y="677" width="0.7839%" height="15" fill="rgb(250,127,30)" fg:x="80" fg:w="150"/><text x="0.6681%" y="687.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (150 samples, 0.78%)</title><rect x="0.4181%" y="661" width="0.7839%" height="15" fill="rgb(230,49,44)" fg:x="80" fg:w="150"/><text x="0.6681%" y="671.50"></text></g><g><title>cpal::host::alsa::process_output (71 samples, 0.37%)</title><rect x="0.8309%" y="645" width="0.3710%" height="15" fill="rgb(229,67,23)" fg:x="159" fg:w="71"/><text x="1.0809%" y="655.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (38 samples, 0.20%)</title><rect x="1.0034%" y="629" width="0.1986%" height="15" fill="rgb(249,83,47)" fg:x="192" fg:w="38"/><text x="1.2534%" y="639.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (38 samples, 0.20%)</title><rect x="1.0034%" y="613" width="0.1986%" height="15" fill="rgb(215,43,3)" fg:x="192" fg:w="38"/><text x="1.2534%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (38 samples, 0.20%)</title><rect x="1.0034%" y="597" width="0.1986%" height="15" fill="rgb(238,154,13)" fg:x="192" fg:w="38"/><text x="1.2534%" y="607.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (37 samples, 0.19%)</title><rect x="1.0086%" y="581" width="0.1934%" height="15" fill="rgb(219,56,2)" fg:x="193" fg:w="37"/><text x="1.2586%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (2 samples, 0.01%)</title><rect x="1.1915%" y="565" width="0.0105%" height="15" fill="rgb(233,0,4)" fg:x="228" fg:w="2"/><text x="1.4415%" y="575.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (2 samples, 0.01%)</title><rect x="1.2020%" y="885" width="0.0105%" height="15" fill="rgb(235,30,7)" fg:x="230" fg:w="2"/><text x="1.4520%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="1.2124%" y="869" width="0.0105%" height="15" fill="rgb(250,79,13)" fg:x="232" fg:w="2"/><text x="1.4624%" y="879.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="1.2595%" y="869" width="0.0105%" height="15" fill="rgb(211,146,34)" fg:x="241" fg:w="2"/><text x="1.5095%" y="879.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.01%)</title><rect x="1.2804%" y="869" width="0.0105%" height="15" fill="rgb(228,22,38)" fg:x="245" fg:w="2"/><text x="1.5304%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (54 samples, 0.28%)</title><rect x="1.2908%" y="869" width="0.2822%" height="15" fill="rgb(235,168,5)" fg:x="247" fg:w="54"/><text x="1.5408%" y="879.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="1.5730%" y="869" width="0.0105%" height="15" fill="rgb(221,155,16)" fg:x="301" fg:w="2"/><text x="1.8230%" y="879.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="1.5835%" y="869" width="0.0105%" height="15" fill="rgb(215,215,53)" fg:x="303" fg:w="2"/><text x="1.8335%" y="879.50"></text></g><g><title>__GI___lll_lock_wake (2 samples, 0.01%)</title><rect x="1.5939%" y="869" width="0.0105%" height="15" fill="rgb(223,4,10)" fg:x="305" fg:w="2"/><text x="1.8439%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="1.5939%" y="853" width="0.0105%" height="15" fill="rgb(234,103,6)" fg:x="305" fg:w="2"/><text x="1.8439%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="1.6305%" y="869" width="0.0105%" height="15" fill="rgb(227,97,0)" fg:x="312" fg:w="2"/><text x="1.8805%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="1.6305%" y="853" width="0.0105%" height="15" fill="rgb(234,150,53)" fg:x="312" fg:w="2"/><text x="1.8805%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="1.6305%" y="837" width="0.0105%" height="15" fill="rgb(228,201,54)" fg:x="312" fg:w="2"/><text x="1.8805%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="1.6305%" y="821" width="0.0105%" height="15" fill="rgb(222,22,37)" fg:x="312" fg:w="2"/><text x="1.8805%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="1.6567%" y="869" width="0.0105%" height="15" fill="rgb(237,53,32)" fg:x="317" fg:w="2"/><text x="1.9067%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::BasePass&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (4 samples, 0.02%)</title><rect x="1.6828%" y="869" width="0.0209%" height="15" fill="rgb(233,25,53)" fg:x="322" fg:w="4"/><text x="1.9328%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (3 samples, 0.02%)</title><rect x="1.7037%" y="869" width="0.0157%" height="15" fill="rgb(210,40,34)" fg:x="326" fg:w="3"/><text x="1.9537%" y="879.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (5 samples, 0.03%)</title><rect x="1.7194%" y="869" width="0.0261%" height="15" fill="rgb(241,220,44)" fg:x="329" fg:w="5"/><text x="1.9694%" y="879.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (4 samples, 0.02%)</title><rect x="1.7246%" y="853" width="0.0209%" height="15" fill="rgb(235,28,35)" fg:x="330" fg:w="4"/><text x="1.9746%" y="863.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (4 samples, 0.02%)</title><rect x="1.7246%" y="837" width="0.0209%" height="15" fill="rgb(210,56,17)" fg:x="330" fg:w="4"/><text x="1.9746%" y="847.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (4 samples, 0.02%)</title><rect x="1.7246%" y="821" width="0.0209%" height="15" fill="rgb(224,130,29)" fg:x="330" fg:w="4"/><text x="1.9746%" y="831.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="1.7664%" y="869" width="0.0105%" height="15" fill="rgb(235,212,8)" fg:x="338" fg:w="2"/><text x="2.0164%" y="879.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.01%)</title><rect x="1.7873%" y="869" width="0.0105%" height="15" fill="rgb(223,33,50)" fg:x="342" fg:w="2"/><text x="2.0373%" y="879.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="1.7978%" y="869" width="0.0105%" height="15" fill="rgb(219,149,13)" fg:x="344" fg:w="2"/><text x="2.0478%" y="879.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (2 samples, 0.01%)</title><rect x="1.8134%" y="869" width="0.0105%" height="15" fill="rgb(250,156,29)" fg:x="347" fg:w="2"/><text x="2.0634%" y="879.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (2 samples, 0.01%)</title><rect x="1.8396%" y="869" width="0.0105%" height="15" fill="rgb(216,193,19)" fg:x="352" fg:w="2"/><text x="2.0896%" y="879.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (2 samples, 0.01%)</title><rect x="1.8500%" y="869" width="0.0105%" height="15" fill="rgb(216,135,14)" fg:x="354" fg:w="2"/><text x="2.1000%" y="879.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::post_submit (3 samples, 0.02%)</title><rect x="1.8605%" y="869" width="0.0157%" height="15" fill="rgb(241,47,5)" fg:x="356" fg:w="3"/><text x="2.1105%" y="879.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.01%)</title><rect x="1.8761%" y="869" width="0.0105%" height="15" fill="rgb(233,42,35)" fg:x="359" fg:w="2"/><text x="2.1261%" y="879.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="1.9075%" y="869" width="0.0105%" height="15" fill="rgb(231,13,6)" fg:x="365" fg:w="2"/><text x="2.1575%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (5 samples, 0.03%)</title><rect x="1.9441%" y="869" width="0.0261%" height="15" fill="rgb(207,181,40)" fg:x="372" fg:w="5"/><text x="2.1941%" y="879.50"></text></g><g><title>[[heap]] (148 samples, 0.77%)</title><rect x="1.2124%" y="885" width="0.7735%" height="15" fill="rgb(254,173,49)" fg:x="232" fg:w="148"/><text x="1.4624%" y="895.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (3 samples, 0.02%)</title><rect x="1.9911%" y="869" width="0.0157%" height="15" fill="rgb(221,1,38)" fg:x="381" fg:w="3"/><text x="2.2411%" y="879.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (2 samples, 0.01%)</title><rect x="2.0172%" y="869" width="0.0105%" height="15" fill="rgb(206,124,46)" fg:x="386" fg:w="2"/><text x="2.2672%" y="879.50"></text></g><g><title>ggez::graphics::canvas::Canvas::from_frame (2 samples, 0.01%)</title><rect x="2.0172%" y="853" width="0.0105%" height="15" fill="rgb(249,21,11)" fg:x="386" fg:w="2"/><text x="2.2672%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="2.0172%" y="837" width="0.0105%" height="15" fill="rgb(222,201,40)" fg:x="386" fg:w="2"/><text x="2.2672%" y="847.50"></text></g><g><title>neuralang::World::age_obstructs (6 samples, 0.03%)</title><rect x="2.0329%" y="837" width="0.0314%" height="15" fill="rgb(235,61,29)" fg:x="389" fg:w="6"/><text x="2.2829%" y="847.50"></text></g><g><title>neuralang::World::check_collisions (16 samples, 0.08%)</title><rect x="2.0643%" y="837" width="0.0836%" height="15" fill="rgb(219,207,3)" fg:x="395" fg:w="16"/><text x="2.3143%" y="847.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (15 samples, 0.08%)</title><rect x="2.0695%" y="821" width="0.0784%" height="15" fill="rgb(222,56,46)" fg:x="396" fg:w="15"/><text x="2.3195%" y="831.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.29%)</title><rect x="2.1479%" y="789" width="0.2927%" height="15" fill="rgb(239,76,54)" fg:x="411" fg:w="56"/><text x="2.3979%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.27%)</title><rect x="2.1688%" y="773" width="0.2718%" height="15" fill="rgb(231,124,27)" fg:x="415" fg:w="52"/><text x="2.4188%" y="783.50"></text></g><g><title>neuralang::World::move_beings (83 samples, 0.43%)</title><rect x="2.1479%" y="837" width="0.4338%" height="15" fill="rgb(249,195,6)" fg:x="411" fg:w="83"/><text x="2.3979%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (83 samples, 0.43%)</title><rect x="2.1479%" y="821" width="0.4338%" height="15" fill="rgb(237,174,47)" fg:x="411" fg:w="83"/><text x="2.3979%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (83 samples, 0.43%)</title><rect x="2.1479%" y="805" width="0.4338%" height="15" fill="rgb(206,201,31)" fg:x="411" fg:w="83"/><text x="2.3979%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (27 samples, 0.14%)</title><rect x="2.4406%" y="789" width="0.1411%" height="15" fill="rgb(231,57,52)" fg:x="467" fg:w="27"/><text x="2.6906%" y="799.50"></text></g><g><title>neuralang::World::move_beings::{{closure}} (27 samples, 0.14%)</title><rect x="2.4406%" y="773" width="0.1411%" height="15" fill="rgb(248,177,22)" fg:x="467" fg:w="27"/><text x="2.6906%" y="783.50"></text></g><g><title>neuralang::dir_from_theta (27 samples, 0.14%)</title><rect x="2.4406%" y="757" width="0.1411%" height="15" fill="rgb(215,211,37)" fg:x="467" fg:w="27"/><text x="2.6906%" y="767.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (27 samples, 0.14%)</title><rect x="2.4406%" y="741" width="0.1411%" height="15" fill="rgb(241,128,51)" fg:x="467" fg:w="27"/><text x="2.6906%" y="751.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.07%)</title><rect x="2.5869%" y="821" width="0.0732%" height="15" fill="rgb(227,165,31)" fg:x="495" fg:w="14"/><text x="2.8369%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.04%)</title><rect x="2.6235%" y="805" width="0.0366%" height="15" fill="rgb(228,167,24)" fg:x="502" fg:w="7"/><text x="2.8735%" y="815.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (137 samples, 0.72%)</title><rect x="2.0277%" y="869" width="0.7160%" height="15" fill="rgb(228,143,12)" fg:x="388" fg:w="137"/><text x="2.2777%" y="879.50"></text></g><g><title>neuralang::World::step (137 samples, 0.72%)</title><rect x="2.0277%" y="853" width="0.7160%" height="15" fill="rgb(249,149,8)" fg:x="388" fg:w="137"/><text x="2.2777%" y="863.50"></text></g><g><title>neuralang::World::update_cells (30 samples, 0.16%)</title><rect x="2.5869%" y="837" width="0.1568%" height="15" fill="rgb(243,35,44)" fg:x="495" fg:w="30"/><text x="2.8369%" y="847.50"></text></g><g><title>neuralang::pos_to_cell (16 samples, 0.08%)</title><rect x="2.6600%" y="821" width="0.0836%" height="15" fill="rgb(246,89,9)" fg:x="509" fg:w="16"/><text x="2.9100%" y="831.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.10%)</title><rect x="2.7489%" y="869" width="0.1045%" height="15" fill="rgb(233,213,13)" fg:x="526" fg:w="20"/><text x="2.9989%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="2.8430%" y="853" width="0.0105%" height="15" fill="rgb(233,141,41)" fg:x="544" fg:w="2"/><text x="3.0930%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.02%)</title><rect x="2.8534%" y="869" width="0.0157%" height="15" fill="rgb(239,167,4)" fg:x="546" fg:w="3"/><text x="3.1034%" y="879.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="2.9057%" y="869" width="0.0105%" height="15" fill="rgb(209,217,16)" fg:x="556" fg:w="2"/><text x="3.1557%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="2.9161%" y="869" width="0.0157%" height="15" fill="rgb(219,88,35)" fg:x="558" fg:w="3"/><text x="3.1661%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.13%)</title><rect x="2.9370%" y="869" width="0.1307%" height="15" fill="rgb(220,193,23)" fg:x="562" fg:w="25"/><text x="3.1870%" y="879.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.02%)</title><rect x="3.0677%" y="869" width="0.0157%" height="15" fill="rgb(230,90,52)" fg:x="587" fg:w="3"/><text x="3.3177%" y="879.50"></text></g><g><title>_XReply (2 samples, 0.01%)</title><rect x="3.0834%" y="869" width="0.0105%" height="15" fill="rgb(252,106,19)" fg:x="590" fg:w="2"/><text x="3.3334%" y="879.50"></text></g><g><title>__GI___writev (2 samples, 0.01%)</title><rect x="3.0938%" y="869" width="0.0105%" height="15" fill="rgb(206,74,20)" fg:x="592" fg:w="2"/><text x="3.3438%" y="879.50"></text></g><g><title>__GI___writev (2 samples, 0.01%)</title><rect x="3.0938%" y="853" width="0.0105%" height="15" fill="rgb(230,138,44)" fg:x="592" fg:w="2"/><text x="3.3438%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="3.0938%" y="837" width="0.0105%" height="15" fill="rgb(235,182,43)" fg:x="592" fg:w="2"/><text x="3.3438%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="3.1095%" y="869" width="0.0105%" height="15" fill="rgb(242,16,51)" fg:x="595" fg:w="2"/><text x="3.3595%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="3.1095%" y="853" width="0.0105%" height="15" fill="rgb(248,9,4)" fg:x="595" fg:w="2"/><text x="3.3595%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="3.1095%" y="837" width="0.0105%" height="15" fill="rgb(210,31,22)" fg:x="595" fg:w="2"/><text x="3.3595%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="3.1095%" y="821" width="0.0105%" height="15" fill="rgb(239,54,39)" fg:x="595" fg:w="2"/><text x="3.3595%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="3.1199%" y="869" width="0.0105%" height="15" fill="rgb(230,99,41)" fg:x="597" fg:w="2"/><text x="3.3699%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::canvas::Draw&gt; (2 samples, 0.01%)</title><rect x="3.1408%" y="869" width="0.0105%" height="15" fill="rgb(253,106,12)" fg:x="601" fg:w="2"/><text x="3.3908%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo&gt; (2 samples, 0.01%)</title><rect x="3.1513%" y="869" width="0.0105%" height="15" fill="rgb(213,46,41)" fg:x="603" fg:w="2"/><text x="3.4013%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (2 samples, 0.01%)</title><rect x="3.1617%" y="869" width="0.0105%" height="15" fill="rgb(215,133,35)" fg:x="605" fg:w="2"/><text x="3.4117%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (4 samples, 0.02%)</title><rect x="3.1879%" y="869" width="0.0209%" height="15" fill="rgb(213,28,5)" fg:x="610" fg:w="4"/><text x="3.4379%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.01%)</title><rect x="3.1983%" y="853" width="0.0105%" height="15" fill="rgb(215,77,49)" fg:x="612" fg:w="2"/><text x="3.4483%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="3.2140%" y="869" width="0.0105%" height="15" fill="rgb(248,100,22)" fg:x="615" fg:w="2"/><text x="3.4640%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::BindGroupStates&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="3.2245%" y="869" width="0.0105%" height="15" fill="rgb(208,67,9)" fg:x="617" fg:w="2"/><text x="3.4745%" y="879.50"></text></g><g><title>ggez::event::run::{{closure}} (4 samples, 0.02%)</title><rect x="3.2454%" y="869" width="0.0209%" height="15" fill="rgb(219,133,21)" fg:x="621" fg:w="4"/><text x="3.4954%" y="879.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (3 samples, 0.02%)</title><rect x="3.2663%" y="869" width="0.0157%" height="15" fill="rgb(246,46,29)" fg:x="625" fg:w="3"/><text x="3.5163%" y="879.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (2 samples, 0.01%)</title><rect x="3.2819%" y="869" width="0.0105%" height="15" fill="rgb(246,185,52)" fg:x="628" fg:w="2"/><text x="3.5319%" y="879.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::layout (4 samples, 0.02%)</title><rect x="3.2924%" y="869" width="0.0209%" height="15" fill="rgb(252,136,11)" fg:x="630" fg:w="4"/><text x="3.5424%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="3.3028%" y="853" width="0.0105%" height="15" fill="rgb(219,138,53)" fg:x="632" fg:w="2"/><text x="3.5528%" y="863.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="3.3028%" y="837" width="0.0105%" height="15" fill="rgb(211,51,23)" fg:x="632" fg:w="2"/><text x="3.5528%" y="847.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="3.3028%" y="821" width="0.0105%" height="15" fill="rgb(247,221,28)" fg:x="632" fg:w="2"/><text x="3.5528%" y="831.50"></text></g><g><title>slotmap::KeyData::new (6 samples, 0.03%)</title><rect x="3.3551%" y="869" width="0.0314%" height="15" fill="rgb(251,222,45)" fg:x="642" fg:w="6"/><text x="3.6051%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (3 samples, 0.02%)</title><rect x="3.3865%" y="869" width="0.0157%" height="15" fill="rgb(217,162,53)" fg:x="648" fg:w="3"/><text x="3.6365%" y="879.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove_abandoned (2 samples, 0.01%)</title><rect x="3.4492%" y="869" width="0.0105%" height="15" fill="rgb(229,93,14)" fg:x="660" fg:w="2"/><text x="3.6992%" y="879.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (2 samples, 0.01%)</title><rect x="3.4492%" y="853" width="0.0105%" height="15" fill="rgb(209,67,49)" fg:x="660" fg:w="2"/><text x="3.6992%" y="863.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (2 samples, 0.01%)</title><rect x="3.4492%" y="837" width="0.0105%" height="15" fill="rgb(213,87,29)" fg:x="660" fg:w="2"/><text x="3.6992%" y="847.50"></text></g><g><title>[[stack]] (287 samples, 1.50%)</title><rect x="1.9859%" y="885" width="1.4999%" height="15" fill="rgb(205,151,52)" fg:x="380" fg:w="287"/><text x="2.2359%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.05%)</title><rect x="3.4910%" y="869" width="0.0523%" height="15" fill="rgb(253,215,39)" fg:x="668" fg:w="10"/><text x="3.7410%" y="879.50"></text></g><g><title>[anon] (12 samples, 0.06%)</title><rect x="3.4858%" y="885" width="0.0627%" height="15" fill="rgb(221,220,41)" fg:x="667" fg:w="12"/><text x="3.7358%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (5 samples, 0.03%)</title><rect x="3.5485%" y="885" width="0.0261%" height="15" fill="rgb(218,133,21)" fg:x="679" fg:w="5"/><text x="3.7985%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="3.5537%" y="869" width="0.0209%" height="15" fill="rgb(221,193,43)" fg:x="680" fg:w="4"/><text x="3.8037%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="3.5537%" y="853" width="0.0209%" height="15" fill="rgb(240,128,52)" fg:x="680" fg:w="4"/><text x="3.8037%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="3.5537%" y="837" width="0.0209%" height="15" fill="rgb(253,114,12)" fg:x="680" fg:w="4"/><text x="3.8037%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="3.5537%" y="821" width="0.0209%" height="15" fill="rgb(215,223,47)" fg:x="680" fg:w="4"/><text x="3.8037%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="3.5589%" y="805" width="0.0157%" height="15" fill="rgb(248,225,23)" fg:x="681" fg:w="3"/><text x="3.8089%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="3.5589%" y="789" width="0.0157%" height="15" fill="rgb(250,108,0)" fg:x="681" fg:w="3"/><text x="3.8089%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.13%)</title><rect x="3.5746%" y="885" width="0.1254%" height="15" fill="rgb(228,208,7)" fg:x="684" fg:w="24"/><text x="3.8246%" y="895.50"></text></g><g><title>[libudev.so.1.7.2] (3 samples, 0.02%)</title><rect x="3.7053%" y="885" width="0.0157%" height="15" fill="rgb(244,45,10)" fg:x="709" fg:w="3"/><text x="3.9553%" y="895.50"></text></g><g><title>[libudev.so.1.7.2] (3 samples, 0.02%)</title><rect x="3.7053%" y="869" width="0.0157%" height="15" fill="rgb(207,125,25)" fg:x="709" fg:w="3"/><text x="3.9553%" y="879.50"></text></g><g><title>[libudev.so.1.7.2] (2 samples, 0.01%)</title><rect x="3.7105%" y="853" width="0.0105%" height="15" fill="rgb(210,195,18)" fg:x="710" fg:w="2"/><text x="3.9605%" y="863.50"></text></g><g><title>__GI___close (2 samples, 0.01%)</title><rect x="3.7105%" y="837" width="0.0105%" height="15" fill="rgb(249,80,12)" fg:x="710" fg:w="2"/><text x="3.9605%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="3.7105%" y="821" width="0.0105%" height="15" fill="rgb(221,65,9)" fg:x="710" fg:w="2"/><text x="3.9605%" y="831.50"></text></g><g><title>[neuralang] (2 samples, 0.01%)</title><rect x="3.7209%" y="885" width="0.0105%" height="15" fill="rgb(235,49,36)" fg:x="712" fg:w="2"/><text x="3.9709%" y="895.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (2 samples, 0.01%)</title><rect x="3.9613%" y="869" width="0.0105%" height="15" fill="rgb(225,32,20)" fg:x="758" fg:w="2"/><text x="4.2113%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="3.9770%" y="869" width="0.0105%" height="15" fill="rgb(215,141,46)" fg:x="761" fg:w="2"/><text x="4.2270%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.03%)</title><rect x="3.9927%" y="853" width="0.0261%" height="15" fill="rgb(250,160,47)" fg:x="764" fg:w="5"/><text x="4.2427%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="3.9927%" y="837" width="0.0261%" height="15" fill="rgb(216,222,40)" fg:x="764" fg:w="5"/><text x="4.2427%" y="847.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="3.9927%" y="821" width="0.0261%" height="15" fill="rgb(234,217,39)" fg:x="764" fg:w="5"/><text x="4.2427%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="4.0031%" y="805" width="0.0157%" height="15" fill="rgb(207,178,40)" fg:x="766" fg:w="3"/><text x="4.2531%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.04%)</title><rect x="3.9875%" y="869" width="0.0366%" height="15" fill="rgb(221,136,13)" fg:x="763" fg:w="7"/><text x="4.2375%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="4.0240%" y="869" width="0.0105%" height="15" fill="rgb(249,199,10)" fg:x="770" fg:w="2"/><text x="4.2740%" y="879.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (2 samples, 0.01%)</title><rect x="4.0397%" y="869" width="0.0105%" height="15" fill="rgb(249,222,13)" fg:x="773" fg:w="2"/><text x="4.2897%" y="879.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (67 samples, 0.35%)</title><rect x="4.0502%" y="869" width="0.3501%" height="15" fill="rgb(244,185,38)" fg:x="775" fg:w="67"/><text x="4.3002%" y="879.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (12 samples, 0.06%)</title><rect x="4.4003%" y="869" width="0.0627%" height="15" fill="rgb(236,202,9)" fg:x="842" fg:w="12"/><text x="4.6503%" y="879.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="4.4630%" y="869" width="0.0470%" height="15" fill="rgb(250,229,37)" fg:x="854" fg:w="9"/><text x="4.7130%" y="879.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (2 samples, 0.01%)</title><rect x="4.5205%" y="869" width="0.0105%" height="15" fill="rgb(206,174,23)" fg:x="865" fg:w="2"/><text x="4.7705%" y="879.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (2 samples, 0.01%)</title><rect x="4.5205%" y="853" width="0.0105%" height="15" fill="rgb(211,33,43)" fg:x="865" fg:w="2"/><text x="4.7705%" y="863.50"></text></g><g><title>wgpu_core::instance::Instance::new (2 samples, 0.01%)</title><rect x="4.5205%" y="837" width="0.0105%" height="15" fill="rgb(245,58,50)" fg:x="865" fg:w="2"/><text x="4.7705%" y="847.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (2 samples, 0.01%)</title><rect x="4.5205%" y="821" width="0.0105%" height="15" fill="rgb(244,68,36)" fg:x="865" fg:w="2"/><text x="4.7705%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (2 samples, 0.01%)</title><rect x="4.5205%" y="805" width="0.0105%" height="15" fill="rgb(232,229,15)" fg:x="865" fg:w="2"/><text x="4.7705%" y="815.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="4.5362%" y="869" width="0.0105%" height="15" fill="rgb(254,30,23)" fg:x="868" fg:w="2"/><text x="4.7862%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="4.5466%" y="869" width="0.0105%" height="15" fill="rgb(235,160,14)" fg:x="870" fg:w="2"/><text x="4.7966%" y="879.50"></text></g><g><title>[libdrm.so.2.4.0] (2 samples, 0.01%)</title><rect x="4.5571%" y="869" width="0.0105%" height="15" fill="rgb(212,155,44)" fg:x="872" fg:w="2"/><text x="4.8071%" y="879.50"></text></g><g><title>[libdrm.so.2.4.0] (2 samples, 0.01%)</title><rect x="4.5571%" y="853" width="0.0105%" height="15" fill="rgb(226,2,50)" fg:x="872" fg:w="2"/><text x="4.8071%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (59 samples, 0.31%)</title><rect x="4.5728%" y="869" width="0.3083%" height="15" fill="rgb(234,177,6)" fg:x="875" fg:w="59"/><text x="4.8228%" y="879.50"></text></g><g><title>[unknown] (66 samples, 0.34%)</title><rect x="4.8916%" y="869" width="0.3449%" height="15" fill="rgb(217,24,9)" fg:x="936" fg:w="66"/><text x="5.1416%" y="879.50"></text></g><g><title>[unknown] (64 samples, 0.33%)</title><rect x="4.9020%" y="853" width="0.3345%" height="15" fill="rgb(220,13,46)" fg:x="938" fg:w="64"/><text x="5.1520%" y="863.50"></text></g><g><title>[unknown] (64 samples, 0.33%)</title><rect x="4.9020%" y="837" width="0.3345%" height="15" fill="rgb(239,221,27)" fg:x="938" fg:w="64"/><text x="5.1520%" y="847.50"></text></g><g><title>[unknown] (62 samples, 0.32%)</title><rect x="4.9125%" y="821" width="0.3240%" height="15" fill="rgb(222,198,25)" fg:x="940" fg:w="62"/><text x="5.1625%" y="831.50"></text></g><g><title>[unknown] (59 samples, 0.31%)</title><rect x="4.9281%" y="805" width="0.3083%" height="15" fill="rgb(211,99,13)" fg:x="943" fg:w="59"/><text x="5.1781%" y="815.50"></text></g><g><title>[unknown] (57 samples, 0.30%)</title><rect x="4.9386%" y="789" width="0.2979%" height="15" fill="rgb(232,111,31)" fg:x="945" fg:w="57"/><text x="5.1886%" y="799.50"></text></g><g><title>[unknown] (41 samples, 0.21%)</title><rect x="5.0222%" y="773" width="0.2143%" height="15" fill="rgb(245,82,37)" fg:x="961" fg:w="41"/><text x="5.2722%" y="783.50"></text></g><g><title>[unknown] (36 samples, 0.19%)</title><rect x="5.0483%" y="757" width="0.1881%" height="15" fill="rgb(227,149,46)" fg:x="966" fg:w="36"/><text x="5.2983%" y="767.50"></text></g><g><title>[unknown] (25 samples, 0.13%)</title><rect x="5.1058%" y="741" width="0.1307%" height="15" fill="rgb(218,36,50)" fg:x="977" fg:w="25"/><text x="5.3558%" y="751.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="5.1529%" y="725" width="0.0836%" height="15" fill="rgb(226,80,48)" fg:x="986" fg:w="16"/><text x="5.4029%" y="735.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="5.1685%" y="709" width="0.0679%" height="15" fill="rgb(238,224,15)" fg:x="989" fg:w="13"/><text x="5.4185%" y="719.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="5.1790%" y="693" width="0.0575%" height="15" fill="rgb(241,136,10)" fg:x="991" fg:w="11"/><text x="5.4290%" y="703.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="5.1842%" y="677" width="0.0523%" height="15" fill="rgb(208,32,45)" fg:x="992" fg:w="10"/><text x="5.4342%" y="687.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="5.1894%" y="661" width="0.0470%" height="15" fill="rgb(207,135,9)" fg:x="993" fg:w="9"/><text x="5.4394%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.2103%" y="645" width="0.0261%" height="15" fill="rgb(206,86,44)" fg:x="997" fg:w="5"/><text x="5.4603%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.2260%" y="629" width="0.0105%" height="15" fill="rgb(245,177,15)" fg:x="1000" fg:w="2"/><text x="5.4760%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.2260%" y="613" width="0.0105%" height="15" fill="rgb(206,64,50)" fg:x="1000" fg:w="2"/><text x="5.4760%" y="623.50"></text></g><g><title>__GI___poll (3 samples, 0.02%)</title><rect x="5.2574%" y="869" width="0.0157%" height="15" fill="rgb(234,36,40)" fg:x="1006" fg:w="3"/><text x="5.5074%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.2626%" y="853" width="0.0105%" height="15" fill="rgb(213,64,8)" fg:x="1007" fg:w="2"/><text x="5.5126%" y="863.50"></text></g><g><title>__ieee754_fmodf (31 samples, 0.16%)</title><rect x="5.2783%" y="869" width="0.1620%" height="15" fill="rgb(210,75,36)" fg:x="1010" fg:w="31"/><text x="5.5283%" y="879.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (8 samples, 0.04%)</title><rect x="5.4507%" y="517" width="0.0418%" height="15" fill="rgb(229,88,21)" fg:x="1043" fg:w="8"/><text x="5.7007%" y="527.50"></text></g><g><title>epoll_wait (8 samples, 0.04%)</title><rect x="5.4507%" y="501" width="0.0418%" height="15" fill="rgb(252,204,47)" fg:x="1043" fg:w="8"/><text x="5.7007%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="5.4507%" y="485" width="0.0418%" height="15" fill="rgb(208,77,27)" fg:x="1043" fg:w="8"/><text x="5.7007%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="5.4560%" y="469" width="0.0366%" height="15" fill="rgb(221,76,26)" fg:x="1044" fg:w="7"/><text x="5.7060%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="5.4560%" y="453" width="0.0366%" height="15" fill="rgb(225,139,18)" fg:x="1044" fg:w="7"/><text x="5.7060%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="5.4560%" y="437" width="0.0366%" height="15" fill="rgb(230,137,11)" fg:x="1044" fg:w="7"/><text x="5.7060%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="5.4560%" y="421" width="0.0366%" height="15" fill="rgb(212,28,1)" fg:x="1044" fg:w="7"/><text x="5.7060%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="5.4560%" y="405" width="0.0366%" height="15" fill="rgb(248,164,17)" fg:x="1044" fg:w="7"/><text x="5.7060%" y="415.50"></text></g><g><title>__libc_start_main_impl (12 samples, 0.06%)</title><rect x="5.4507%" y="869" width="0.0627%" height="15" fill="rgb(222,171,42)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="879.50"></text></g><g><title>__libc_start_call_main (12 samples, 0.06%)</title><rect x="5.4507%" y="853" width="0.0627%" height="15" fill="rgb(243,84,45)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="863.50"></text></g><g><title>main (12 samples, 0.06%)</title><rect x="5.4507%" y="837" width="0.0627%" height="15" fill="rgb(252,49,23)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (12 samples, 0.06%)</title><rect x="5.4507%" y="821" width="0.0627%" height="15" fill="rgb(215,19,7)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="831.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.06%)</title><rect x="5.4507%" y="805" width="0.0627%" height="15" fill="rgb(238,81,41)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="815.50"></text></g><g><title>std::panicking::try (12 samples, 0.06%)</title><rect x="5.4507%" y="789" width="0.0627%" height="15" fill="rgb(210,199,37)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="799.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.06%)</title><rect x="5.4507%" y="773" width="0.0627%" height="15" fill="rgb(244,192,49)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (12 samples, 0.06%)</title><rect x="5.4507%" y="757" width="0.0627%" height="15" fill="rgb(226,211,11)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="767.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.06%)</title><rect x="5.4507%" y="741" width="0.0627%" height="15" fill="rgb(236,162,54)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="751.50"></text></g><g><title>std::panicking::try (12 samples, 0.06%)</title><rect x="5.4507%" y="725" width="0.0627%" height="15" fill="rgb(220,229,9)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="735.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.06%)</title><rect x="5.4507%" y="709" width="0.0627%" height="15" fill="rgb(250,87,22)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (12 samples, 0.06%)</title><rect x="5.4507%" y="693" width="0.0627%" height="15" fill="rgb(239,43,17)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="703.50"></text></g><g><title>std::rt::lang_start::{{closure}} (12 samples, 0.06%)</title><rect x="5.4507%" y="677" width="0.0627%" height="15" fill="rgb(231,177,25)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.06%)</title><rect x="5.4507%" y="661" width="0.0627%" height="15" fill="rgb(219,179,1)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.06%)</title><rect x="5.4507%" y="645" width="0.0627%" height="15" fill="rgb(238,219,53)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="655.50"></text></g><g><title>neuralang::main (12 samples, 0.06%)</title><rect x="5.4507%" y="629" width="0.0627%" height="15" fill="rgb(232,167,36)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="639.50"></text></g><g><title>neuralang::run (12 samples, 0.06%)</title><rect x="5.4507%" y="613" width="0.0627%" height="15" fill="rgb(244,19,51)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="623.50"></text></g><g><title>ggez::event::run (12 samples, 0.06%)</title><rect x="5.4507%" y="597" width="0.0627%" height="15" fill="rgb(224,6,22)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="607.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (12 samples, 0.06%)</title><rect x="5.4507%" y="581" width="0.0627%" height="15" fill="rgb(224,145,5)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="591.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (12 samples, 0.06%)</title><rect x="5.4507%" y="565" width="0.0627%" height="15" fill="rgb(234,130,49)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (12 samples, 0.06%)</title><rect x="5.4507%" y="549" width="0.0627%" height="15" fill="rgb(254,6,2)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (12 samples, 0.06%)</title><rect x="5.4507%" y="533" width="0.0627%" height="15" fill="rgb(208,96,46)" fg:x="1043" fg:w="12"/><text x="5.7007%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (4 samples, 0.02%)</title><rect x="5.4926%" y="517" width="0.0209%" height="15" fill="rgb(239,3,39)" fg:x="1051" fg:w="4"/><text x="5.7426%" y="527.50"></text></g><g><title>XPending (4 samples, 0.02%)</title><rect x="5.4926%" y="501" width="0.0209%" height="15" fill="rgb(233,210,1)" fg:x="1051" fg:w="4"/><text x="5.7426%" y="511.50"></text></g><g><title>_XEventsQueued (4 samples, 0.02%)</title><rect x="5.4926%" y="485" width="0.0209%" height="15" fill="rgb(244,137,37)" fg:x="1051" fg:w="4"/><text x="5.7426%" y="495.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 0.02%)</title><rect x="5.4926%" y="469" width="0.0209%" height="15" fill="rgb(240,136,2)" fg:x="1051" fg:w="4"/><text x="5.7426%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (3 samples, 0.02%)</title><rect x="5.4978%" y="453" width="0.0157%" height="15" fill="rgb(239,18,37)" fg:x="1052" fg:w="3"/><text x="5.7478%" y="463.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="5.5135%" y="869" width="0.0105%" height="15" fill="rgb(218,185,22)" fg:x="1055" fg:w="2"/><text x="5.7635%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="5.5291%" y="869" width="0.0105%" height="15" fill="rgb(225,218,4)" fg:x="1058" fg:w="2"/><text x="5.7791%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="5.5291%" y="853" width="0.0105%" height="15" fill="rgb(230,182,32)" fg:x="1058" fg:w="2"/><text x="5.7791%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="5.5291%" y="837" width="0.0105%" height="15" fill="rgb(242,56,43)" fg:x="1058" fg:w="2"/><text x="5.7791%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="5.5291%" y="821" width="0.0105%" height="15" fill="rgb(233,99,24)" fg:x="1058" fg:w="2"/><text x="5.7791%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="5.5396%" y="869" width="0.0105%" height="15" fill="rgb(234,209,42)" fg:x="1060" fg:w="2"/><text x="5.7896%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="5.5396%" y="853" width="0.0105%" height="15" fill="rgb(227,7,12)" fg:x="1060" fg:w="2"/><text x="5.7896%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="5.5396%" y="837" width="0.0105%" height="15" fill="rgb(245,203,43)" fg:x="1060" fg:w="2"/><text x="5.7896%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="5.5396%" y="821" width="0.0105%" height="15" fill="rgb(238,205,33)" fg:x="1060" fg:w="2"/><text x="5.7896%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="5.5500%" y="869" width="0.0157%" height="15" fill="rgb(231,56,7)" fg:x="1062" fg:w="3"/><text x="5.8000%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.02%)</title><rect x="5.5762%" y="869" width="0.0209%" height="15" fill="rgb(244,186,29)" fg:x="1067" fg:w="4"/><text x="5.8262%" y="879.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (2 samples, 0.01%)</title><rect x="5.5866%" y="853" width="0.0105%" height="15" fill="rgb(234,111,31)" fg:x="1069" fg:w="2"/><text x="5.8366%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (2 samples, 0.01%)</title><rect x="5.5971%" y="869" width="0.0105%" height="15" fill="rgb(241,149,10)" fg:x="1071" fg:w="2"/><text x="5.8471%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Texture&gt; (3 samples, 0.02%)</title><rect x="5.6128%" y="869" width="0.0157%" height="15" fill="rgb(249,206,44)" fg:x="1074" fg:w="3"/><text x="5.8628%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::EntryPayload&gt; (2 samples, 0.01%)</title><rect x="5.6337%" y="869" width="0.0105%" height="15" fill="rgb(251,153,30)" fg:x="1078" fg:w="2"/><text x="5.8837%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="5.6337%" y="853" width="0.0105%" height="15" fill="rgb(239,152,38)" fg:x="1078" fg:w="2"/><text x="5.8837%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="5.6337%" y="837" width="0.0105%" height="15" fill="rgb(249,139,47)" fg:x="1078" fg:w="2"/><text x="5.8837%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="5.6337%" y="821" width="0.0105%" height="15" fill="rgb(244,64,35)" fg:x="1078" fg:w="2"/><text x="5.8837%" y="831.50"></text></g><g><title>ggez::graphics::mesh::Mesh::from_data_wgpu (2 samples, 0.01%)</title><rect x="5.6650%" y="805" width="0.0105%" height="15" fill="rgb(216,46,15)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="815.50"></text></g><g><title>ggez::graphics::mesh::Mesh::create_verts (2 samples, 0.01%)</title><rect x="5.6650%" y="789" width="0.0105%" height="15" fill="rgb(250,74,19)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="799.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2 samples, 0.01%)</title><rect x="5.6650%" y="773" width="0.0105%" height="15" fill="rgb(249,42,33)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="783.50"></text></g><g><title>wgpu::Device::create_buffer (2 samples, 0.01%)</title><rect x="5.6650%" y="757" width="0.0105%" height="15" fill="rgb(242,149,17)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="767.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="5.6650%" y="741" width="0.0105%" height="15" fill="rgb(244,29,21)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="5.6650%" y="725" width="0.0105%" height="15" fill="rgb(220,130,37)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="735.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="5.6650%" y="709" width="0.0105%" height="15" fill="rgb(211,67,2)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (2 samples, 0.01%)</title><rect x="5.6650%" y="693" width="0.0105%" height="15" fill="rgb(235,68,52)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (2 samples, 0.01%)</title><rect x="5.6650%" y="677" width="0.0105%" height="15" fill="rgb(246,142,3)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="687.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (2 samples, 0.01%)</title><rect x="5.6650%" y="661" width="0.0105%" height="15" fill="rgb(241,25,7)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="671.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (2 samples, 0.01%)</title><rect x="5.6650%" y="645" width="0.0105%" height="15" fill="rgb(242,119,39)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="655.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (2 samples, 0.01%)</title><rect x="5.6650%" y="629" width="0.0105%" height="15" fill="rgb(241,98,45)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (2 samples, 0.01%)</title><rect x="5.6650%" y="613" width="0.0105%" height="15" fill="rgb(254,28,30)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="623.50"></text></g><g><title>ash::device::Device::allocate_memory (2 samples, 0.01%)</title><rect x="5.6650%" y="597" width="0.0105%" height="15" fill="rgb(241,142,54)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="581" width="0.0105%" height="15" fill="rgb(222,85,15)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="565" width="0.0105%" height="15" fill="rgb(210,85,47)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="549" width="0.0105%" height="15" fill="rgb(224,206,25)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="533" width="0.0105%" height="15" fill="rgb(243,201,19)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="517" width="0.0105%" height="15" fill="rgb(236,59,4)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="501" width="0.0105%" height="15" fill="rgb(254,179,45)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="485" width="0.0105%" height="15" fill="rgb(226,14,10)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="469" width="0.0105%" height="15" fill="rgb(244,27,41)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="453" width="0.0105%" height="15" fill="rgb(235,35,32)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="437" width="0.0105%" height="15" fill="rgb(218,68,31)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="421" width="0.0105%" height="15" fill="rgb(207,120,37)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="405" width="0.0105%" height="15" fill="rgb(227,98,0)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.6650%" y="389" width="0.0105%" height="15" fill="rgb(207,7,3)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="399.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="5.6650%" y="373" width="0.0105%" height="15" fill="rgb(206,98,19)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.6650%" y="357" width="0.0105%" height="15" fill="rgb(217,5,26)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.6650%" y="341" width="0.0105%" height="15" fill="rgb(235,190,38)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.6650%" y="325" width="0.0105%" height="15" fill="rgb(247,86,24)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.6650%" y="309" width="0.0105%" height="15" fill="rgb(205,101,16)" fg:x="1084" fg:w="2"/><text x="5.9150%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="5.6911%" y="405" width="0.0157%" height="15" fill="rgb(246,168,33)" fg:x="1089" fg:w="3"/><text x="5.9411%" y="415.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="5.6964%" y="389" width="0.0105%" height="15" fill="rgb(231,114,1)" fg:x="1090" fg:w="2"/><text x="5.9464%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="5.6964%" y="373" width="0.0105%" height="15" fill="rgb(207,184,53)" fg:x="1090" fg:w="2"/><text x="5.9464%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="5.6911%" y="485" width="0.0209%" height="15" fill="rgb(224,95,51)" fg:x="1089" fg:w="4"/><text x="5.9411%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="5.6911%" y="469" width="0.0209%" height="15" fill="rgb(212,188,45)" fg:x="1089" fg:w="4"/><text x="5.9411%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="5.6911%" y="453" width="0.0209%" height="15" fill="rgb(223,154,38)" fg:x="1089" fg:w="4"/><text x="5.9411%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="5.6911%" y="437" width="0.0209%" height="15" fill="rgb(251,22,52)" fg:x="1089" fg:w="4"/><text x="5.9411%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="5.6911%" y="421" width="0.0209%" height="15" fill="rgb(229,209,22)" fg:x="1089" fg:w="4"/><text x="5.9411%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="5.6911%" y="501" width="0.0261%" height="15" fill="rgb(234,138,34)" fg:x="1089" fg:w="5"/><text x="5.9411%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="5.6911%" y="533" width="0.0314%" height="15" fill="rgb(212,95,11)" fg:x="1089" fg:w="6"/><text x="5.9411%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="5.6911%" y="517" width="0.0314%" height="15" fill="rgb(240,179,47)" fg:x="1089" fg:w="6"/><text x="5.9411%" y="527.50"></text></g><g><title>__GI___ioctl (4 samples, 0.02%)</title><rect x="5.7225%" y="533" width="0.0209%" height="15" fill="rgb(240,163,11)" fg:x="1095" fg:w="4"/><text x="5.9725%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="5.7225%" y="517" width="0.0209%" height="15" fill="rgb(236,37,12)" fg:x="1095" fg:w="4"/><text x="5.9725%" y="527.50"></text></g><g><title>wgpu::Surface::configure (13 samples, 0.07%)</title><rect x="5.6807%" y="805" width="0.0679%" height="15" fill="rgb(232,164,16)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="815.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (13 samples, 0.07%)</title><rect x="5.6807%" y="789" width="0.0679%" height="15" fill="rgb(244,205,15)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (13 samples, 0.07%)</title><rect x="5.6807%" y="773" width="0.0679%" height="15" fill="rgb(223,117,47)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (13 samples, 0.07%)</title><rect x="5.6807%" y="757" width="0.0679%" height="15" fill="rgb(244,107,35)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (13 samples, 0.07%)</title><rect x="5.6807%" y="741" width="0.0679%" height="15" fill="rgb(205,140,8)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (13 samples, 0.07%)</title><rect x="5.6807%" y="725" width="0.0679%" height="15" fill="rgb(228,84,46)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="735.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (13 samples, 0.07%)</title><rect x="5.6807%" y="709" width="0.0679%" height="15" fill="rgb(254,188,9)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.204] (13 samples, 0.07%)</title><rect x="5.6807%" y="693" width="0.0679%" height="15" fill="rgb(206,112,54)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="703.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (13 samples, 0.07%)</title><rect x="5.6807%" y="677" width="0.0679%" height="15" fill="rgb(216,84,49)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="5.6807%" y="661" width="0.0679%" height="15" fill="rgb(214,194,35)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="5.6807%" y="645" width="0.0679%" height="15" fill="rgb(249,28,3)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="5.6807%" y="629" width="0.0679%" height="15" fill="rgb(222,56,52)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="5.6807%" y="613" width="0.0679%" height="15" fill="rgb(245,217,50)" fg:x="1087" fg:w="13"/><text x="5.9307%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="5.6859%" y="597" width="0.0627%" height="15" fill="rgb(213,201,24)" fg:x="1088" fg:w="12"/><text x="5.9359%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="5.6859%" y="581" width="0.0627%" height="15" fill="rgb(248,116,28)" fg:x="1088" fg:w="12"/><text x="5.9359%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="5.6911%" y="565" width="0.0575%" height="15" fill="rgb(219,72,43)" fg:x="1089" fg:w="11"/><text x="5.9411%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="5.6911%" y="549" width="0.0575%" height="15" fill="rgb(209,138,14)" fg:x="1089" fg:w="11"/><text x="5.9411%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::set_decorations_inner (6 samples, 0.03%)</title><rect x="5.7539%" y="741" width="0.0314%" height="15" fill="rgb(222,18,33)" fg:x="1101" fg:w="6"/><text x="6.0039%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::util::hint::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_motif_hints (6 samples, 0.03%)</title><rect x="5.7539%" y="725" width="0.0314%" height="15" fill="rgb(213,199,7)" fg:x="1101" fg:w="6"/><text x="6.0039%" y="735.50"></text></g><g><title>winit::platform_impl::platform::x11::util::atom::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_atom_unchecked (6 samples, 0.03%)</title><rect x="5.7539%" y="709" width="0.0314%" height="15" fill="rgb(250,110,10)" fg:x="1101" fg:w="6"/><text x="6.0039%" y="719.50"></text></g><g><title>winit::platform_impl::platform::x11::util::atom::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_atom (6 samples, 0.03%)</title><rect x="5.7539%" y="693" width="0.0314%" height="15" fill="rgb(248,123,6)" fg:x="1101" fg:w="6"/><text x="6.0039%" y="703.50"></text></g><g><title>XInternAtom (6 samples, 0.03%)</title><rect x="5.7539%" y="677" width="0.0314%" height="15" fill="rgb(206,91,31)" fg:x="1101" fg:w="6"/><text x="6.0039%" y="687.50"></text></g><g><title>_XReply (6 samples, 0.03%)</title><rect x="5.7539%" y="661" width="0.0314%" height="15" fill="rgb(211,154,13)" fg:x="1101" fg:w="6"/><text x="6.0039%" y="671.50"></text></g><g><title>xcb_wait_for_reply64 (5 samples, 0.03%)</title><rect x="5.7591%" y="645" width="0.0261%" height="15" fill="rgb(225,148,7)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="655.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="5.7591%" y="629" width="0.0261%" height="15" fill="rgb(220,160,43)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="639.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="5.7591%" y="613" width="0.0261%" height="15" fill="rgb(213,52,39)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="623.50"></text></g><g><title>__GI___poll (5 samples, 0.03%)</title><rect x="5.7591%" y="597" width="0.0261%" height="15" fill="rgb(243,137,7)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="581" width="0.0261%" height="15" fill="rgb(230,79,13)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="565" width="0.0261%" height="15" fill="rgb(247,105,23)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="549" width="0.0261%" height="15" fill="rgb(223,179,41)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="533" width="0.0261%" height="15" fill="rgb(218,9,34)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="517" width="0.0261%" height="15" fill="rgb(222,106,8)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="501" width="0.0261%" height="15" fill="rgb(211,220,0)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="485" width="0.0261%" height="15" fill="rgb(229,52,16)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="469" width="0.0261%" height="15" fill="rgb(212,155,18)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="453" width="0.0261%" height="15" fill="rgb(242,21,14)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="437" width="0.0261%" height="15" fill="rgb(222,19,48)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="421" width="0.0261%" height="15" fill="rgb(232,45,27)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="405" width="0.0261%" height="15" fill="rgb(249,103,42)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="389" width="0.0261%" height="15" fill="rgb(246,81,33)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="5.7591%" y="373" width="0.0261%" height="15" fill="rgb(252,33,42)" fg:x="1102" fg:w="5"/><text x="6.0091%" y="383.50"></text></g><g><title>ggez::context::ContextBuilder::build (27 samples, 0.14%)</title><rect x="5.6493%" y="869" width="0.1411%" height="15" fill="rgb(209,212,41)" fg:x="1081" fg:w="27"/><text x="5.8993%" y="879.50"></text></g><g><title>ggez::context::Context::from_conf (27 samples, 0.14%)</title><rect x="5.6493%" y="853" width="0.1411%" height="15" fill="rgb(207,154,6)" fg:x="1081" fg:w="27"/><text x="5.8993%" y="863.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (27 samples, 0.14%)</title><rect x="5.6493%" y="837" width="0.1411%" height="15" fill="rgb(223,64,47)" fg:x="1081" fg:w="27"/><text x="5.8993%" y="847.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (27 samples, 0.14%)</title><rect x="5.6493%" y="821" width="0.1411%" height="15" fill="rgb(211,161,38)" fg:x="1081" fg:w="27"/><text x="5.8993%" y="831.50"></text></g><g><title>winit::window::WindowBuilder::build (8 samples, 0.04%)</title><rect x="5.7486%" y="805" width="0.0418%" height="15" fill="rgb(219,138,40)" fg:x="1100" fg:w="8"/><text x="5.9986%" y="815.50"></text></g><g><title>winit::platform_impl::platform::Window::new (8 samples, 0.04%)</title><rect x="5.7486%" y="789" width="0.0418%" height="15" fill="rgb(241,228,46)" fg:x="1100" fg:w="8"/><text x="5.9986%" y="799.50"></text></g><g><title>winit::platform_impl::platform::x11::Window::new (8 samples, 0.04%)</title><rect x="5.7486%" y="773" width="0.0418%" height="15" fill="rgb(223,209,38)" fg:x="1100" fg:w="8"/><text x="5.9986%" y="783.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::new (8 samples, 0.04%)</title><rect x="5.7486%" y="757" width="0.0418%" height="15" fill="rgb(236,164,45)" fg:x="1100" fg:w="8"/><text x="5.9986%" y="767.50"></text></g><g><title>ggez::event::run::{{closure}} (5 samples, 0.03%)</title><rect x="5.7904%" y="869" width="0.0261%" height="15" fill="rgb(231,15,5)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="879.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (5 samples, 0.03%)</title><rect x="5.7904%" y="853" width="0.0261%" height="15" fill="rgb(252,35,15)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="863.50"></text></g><g><title>core::mem::drop (5 samples, 0.03%)</title><rect x="5.7904%" y="837" width="0.0261%" height="15" fill="rgb(248,181,18)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (5 samples, 0.03%)</title><rect x="5.7904%" y="821" width="0.0261%" height="15" fill="rgb(233,39,42)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="831.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="5.7904%" y="805" width="0.0261%" height="15" fill="rgb(238,110,33)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="815.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (5 samples, 0.03%)</title><rect x="5.7904%" y="789" width="0.0261%" height="15" fill="rgb(233,195,10)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (5 samples, 0.03%)</title><rect x="5.7904%" y="773" width="0.0261%" height="15" fill="rgb(254,105,3)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="783.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (5 samples, 0.03%)</title><rect x="5.7904%" y="757" width="0.0261%" height="15" fill="rgb(221,225,9)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (5 samples, 0.03%)</title><rect x="5.7904%" y="741" width="0.0261%" height="15" fill="rgb(224,227,45)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="751.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (5 samples, 0.03%)</title><rect x="5.7904%" y="725" width="0.0261%" height="15" fill="rgb(229,198,43)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (5 samples, 0.03%)</title><rect x="5.7904%" y="709" width="0.0261%" height="15" fill="rgb(206,209,35)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="719.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (5 samples, 0.03%)</title><rect x="5.7904%" y="693" width="0.0261%" height="15" fill="rgb(245,195,53)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="5.7904%" y="677" width="0.0261%" height="15" fill="rgb(240,92,26)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="5.7904%" y="661" width="0.0261%" height="15" fill="rgb(207,40,23)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="5.7904%" y="645" width="0.0261%" height="15" fill="rgb(223,111,35)" fg:x="1108" fg:w="5"/><text x="6.0404%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="5.7957%" y="629" width="0.0209%" height="15" fill="rgb(229,147,28)" fg:x="1109" fg:w="4"/><text x="6.0457%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="5.8061%" y="613" width="0.0105%" height="15" fill="rgb(211,29,28)" fg:x="1111" fg:w="2"/><text x="6.0561%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="5.8322%" y="613" width="0.0105%" height="15" fill="rgb(228,72,33)" fg:x="1116" fg:w="2"/><text x="6.0822%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="5.8322%" y="597" width="0.0105%" height="15" fill="rgb(205,214,31)" fg:x="1116" fg:w="2"/><text x="6.0822%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (2 samples, 0.01%)</title><rect x="5.8322%" y="581" width="0.0105%" height="15" fill="rgb(224,111,15)" fg:x="1116" fg:w="2"/><text x="6.0822%" y="591.50"></text></g><g><title>&lt;wgpu_hal::vulkan::FramebufferAttachment as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="5.8322%" y="693" width="0.0209%" height="15" fill="rgb(253,21,26)" fg:x="1116" fg:w="4"/><text x="6.0822%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="5.8322%" y="677" width="0.0209%" height="15" fill="rgb(245,139,43)" fg:x="1116" fg:w="4"/><text x="6.0822%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="5.8322%" y="661" width="0.0209%" height="15" fill="rgb(252,170,7)" fg:x="1116" fg:w="4"/><text x="6.0822%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="5.8322%" y="645" width="0.0209%" height="15" fill="rgb(231,118,14)" fg:x="1116" fg:w="4"/><text x="6.0822%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="5.8322%" y="629" width="0.0209%" height="15" fill="rgb(238,83,0)" fg:x="1116" fg:w="4"/><text x="6.0822%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="5.8427%" y="613" width="0.0105%" height="15" fill="rgb(221,39,39)" fg:x="1118" fg:w="2"/><text x="6.0927%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="5.8427%" y="597" width="0.0105%" height="15" fill="rgb(222,119,46)" fg:x="1118" fg:w="2"/><text x="6.0927%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="5.8427%" y="581" width="0.0105%" height="15" fill="rgb(222,165,49)" fg:x="1118" fg:w="2"/><text x="6.0927%" y="591.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (33 samples, 0.17%)</title><rect x="5.8531%" y="693" width="0.1725%" height="15" fill="rgb(219,113,52)" fg:x="1120" fg:w="33"/><text x="6.1031%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (33 samples, 0.17%)</title><rect x="5.8531%" y="677" width="0.1725%" height="15" fill="rgb(214,7,15)" fg:x="1120" fg:w="33"/><text x="6.1031%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (31 samples, 0.16%)</title><rect x="5.8636%" y="661" width="0.1620%" height="15" fill="rgb(235,32,4)" fg:x="1122" fg:w="31"/><text x="6.1136%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.14%)</title><rect x="5.8897%" y="645" width="0.1359%" height="15" fill="rgb(238,90,54)" fg:x="1127" fg:w="26"/><text x="6.1397%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.12%)</title><rect x="5.9054%" y="629" width="0.1202%" height="15" fill="rgb(213,208,19)" fg:x="1130" fg:w="23"/><text x="6.1554%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.09%)</title><rect x="5.9368%" y="613" width="0.0888%" height="15" fill="rgb(233,156,4)" fg:x="1136" fg:w="17"/><text x="6.1868%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="5.9786%" y="597" width="0.0470%" height="15" fill="rgb(207,194,5)" fg:x="1144" fg:w="9"/><text x="6.2286%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.0099%" y="581" width="0.0157%" height="15" fill="rgb(206,111,30)" fg:x="1150" fg:w="3"/><text x="6.2599%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.0152%" y="565" width="0.0105%" height="15" fill="rgb(243,70,54)" fg:x="1151" fg:w="2"/><text x="6.2652%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="6.0361%" y="645" width="0.0261%" height="15" fill="rgb(242,28,8)" fg:x="1155" fg:w="5"/><text x="6.2861%" y="655.50"></text></g><g><title>ash::device::Device::cmd_set_viewport (9 samples, 0.05%)</title><rect x="6.0308%" y="693" width="0.0470%" height="15" fill="rgb(219,106,18)" fg:x="1154" fg:w="9"/><text x="6.2808%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="6.0308%" y="677" width="0.0470%" height="15" fill="rgb(244,222,10)" fg:x="1154" fg:w="9"/><text x="6.2808%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="6.0308%" y="661" width="0.0470%" height="15" fill="rgb(236,179,52)" fg:x="1154" fg:w="9"/><text x="6.2808%" y="671.50"></text></g><g><title>memcpy@plt (2 samples, 0.01%)</title><rect x="6.0674%" y="645" width="0.0105%" height="15" fill="rgb(213,23,39)" fg:x="1161" fg:w="2"/><text x="6.3174%" y="655.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="6.0831%" y="645" width="0.0105%" height="15" fill="rgb(238,48,10)" fg:x="1164" fg:w="2"/><text x="6.3331%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_framebuffer (5 samples, 0.03%)</title><rect x="6.0831%" y="693" width="0.0261%" height="15" fill="rgb(251,196,23)" fg:x="1164" fg:w="5"/><text x="6.3331%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.03%)</title><rect x="6.0831%" y="677" width="0.0261%" height="15" fill="rgb(250,152,24)" fg:x="1164" fg:w="5"/><text x="6.3331%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.03%)</title><rect x="6.0831%" y="661" width="0.0261%" height="15" fill="rgb(209,150,17)" fg:x="1164" fg:w="5"/><text x="6.3331%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="6.0988%" y="645" width="0.0105%" height="15" fill="rgb(234,202,34)" fg:x="1167" fg:w="2"/><text x="6.3488%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="6.0988%" y="629" width="0.0105%" height="15" fill="rgb(253,148,53)" fg:x="1167" fg:w="2"/><text x="6.3488%" y="639.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (60 samples, 0.31%)</title><rect x="5.8166%" y="869" width="0.3136%" height="15" fill="rgb(218,129,16)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="879.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (60 samples, 0.31%)</title><rect x="5.8166%" y="853" width="0.3136%" height="15" fill="rgb(216,85,19)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (60 samples, 0.31%)</title><rect x="5.8166%" y="837" width="0.3136%" height="15" fill="rgb(235,228,7)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (60 samples, 0.31%)</title><rect x="5.8166%" y="821" width="0.3136%" height="15" fill="rgb(245,175,0)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="831.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (60 samples, 0.31%)</title><rect x="5.8166%" y="805" width="0.3136%" height="15" fill="rgb(208,168,36)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="815.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (60 samples, 0.31%)</title><rect x="5.8166%" y="789" width="0.3136%" height="15" fill="rgb(246,171,24)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (60 samples, 0.31%)</title><rect x="5.8166%" y="773" width="0.3136%" height="15" fill="rgb(215,142,24)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="783.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (60 samples, 0.31%)</title><rect x="5.8166%" y="757" width="0.3136%" height="15" fill="rgb(250,187,7)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (60 samples, 0.31%)</title><rect x="5.8166%" y="741" width="0.3136%" height="15" fill="rgb(228,66,33)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="751.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (60 samples, 0.31%)</title><rect x="5.8166%" y="725" width="0.3136%" height="15" fill="rgb(234,215,21)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (60 samples, 0.31%)</title><rect x="5.8166%" y="709" width="0.3136%" height="15" fill="rgb(222,191,20)" fg:x="1113" fg:w="60"/><text x="6.0666%" y="719.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_render_pass (4 samples, 0.02%)</title><rect x="6.1092%" y="693" width="0.0209%" height="15" fill="rgb(245,79,54)" fg:x="1169" fg:w="4"/><text x="6.3592%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.02%)</title><rect x="6.1144%" y="677" width="0.0157%" height="15" fill="rgb(240,10,37)" fg:x="1170" fg:w="3"/><text x="6.3644%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.02%)</title><rect x="6.1144%" y="661" width="0.0157%" height="15" fill="rgb(214,192,32)" fg:x="1170" fg:w="3"/><text x="6.3644%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="6.1197%" y="645" width="0.0105%" height="15" fill="rgb(209,36,54)" fg:x="1171" fg:w="2"/><text x="6.3697%" y="655.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (2 samples, 0.01%)</title><rect x="6.1301%" y="869" width="0.0105%" height="15" fill="rgb(220,10,11)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="879.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="6.1301%" y="853" width="0.0105%" height="15" fill="rgb(221,106,17)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (2 samples, 0.01%)</title><rect x="6.1301%" y="837" width="0.0105%" height="15" fill="rgb(251,142,44)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="847.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="6.1301%" y="821" width="0.0105%" height="15" fill="rgb(238,13,15)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="831.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (2 samples, 0.01%)</title><rect x="6.1301%" y="805" width="0.0105%" height="15" fill="rgb(208,107,27)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (2 samples, 0.01%)</title><rect x="6.1301%" y="789" width="0.0105%" height="15" fill="rgb(205,136,37)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="799.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (2 samples, 0.01%)</title><rect x="6.1301%" y="773" width="0.0105%" height="15" fill="rgb(250,205,27)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="783.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.01%)</title><rect x="6.1301%" y="757" width="0.0105%" height="15" fill="rgb(210,80,43)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="767.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (2 samples, 0.01%)</title><rect x="6.1301%" y="741" width="0.0105%" height="15" fill="rgb(247,160,36)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (2 samples, 0.01%)</title><rect x="6.1301%" y="725" width="0.0105%" height="15" fill="rgb(234,13,49)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="735.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (2 samples, 0.01%)</title><rect x="6.1301%" y="709" width="0.0105%" height="15" fill="rgb(234,122,0)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1301%" y="693" width="0.0105%" height="15" fill="rgb(207,146,38)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1301%" y="677" width="0.0105%" height="15" fill="rgb(207,177,25)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1301%" y="661" width="0.0105%" height="15" fill="rgb(211,178,42)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1301%" y="645" width="0.0105%" height="15" fill="rgb(230,69,54)" fg:x="1173" fg:w="2"/><text x="6.3801%" y="655.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new::{{closure}} (4 samples, 0.02%)</title><rect x="6.1406%" y="853" width="0.0209%" height="15" fill="rgb(214,135,41)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="863.50"></text></g><g><title>wgpu::Instance::new (4 samples, 0.02%)</title><rect x="6.1406%" y="837" width="0.0209%" height="15" fill="rgb(237,67,25)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (4 samples, 0.02%)</title><rect x="6.1406%" y="821" width="0.0209%" height="15" fill="rgb(222,189,50)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="831.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (4 samples, 0.02%)</title><rect x="6.1406%" y="805" width="0.0209%" height="15" fill="rgb(245,148,34)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="815.50"></text></g><g><title>wgpu_core::instance::Instance::new (4 samples, 0.02%)</title><rect x="6.1406%" y="789" width="0.0209%" height="15" fill="rgb(222,29,6)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="799.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (4 samples, 0.02%)</title><rect x="6.1406%" y="773" width="0.0209%" height="15" fill="rgb(221,189,43)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (4 samples, 0.02%)</title><rect x="6.1406%" y="757" width="0.0209%" height="15" fill="rgb(207,36,27)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (4 samples, 0.02%)</title><rect x="6.1406%" y="741" width="0.0209%" height="15" fill="rgb(217,90,24)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="751.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (4 samples, 0.02%)</title><rect x="6.1406%" y="725" width="0.0209%" height="15" fill="rgb(224,66,35)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="735.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (4 samples, 0.02%)</title><rect x="6.1406%" y="709" width="0.0209%" height="15" fill="rgb(221,13,50)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="719.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (4 samples, 0.02%)</title><rect x="6.1406%" y="693" width="0.0209%" height="15" fill="rgb(236,68,49)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="703.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (4 samples, 0.02%)</title><rect x="6.1406%" y="677" width="0.0209%" height="15" fill="rgb(229,146,28)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (4 samples, 0.02%)</title><rect x="6.1406%" y="661" width="0.0209%" height="15" fill="rgb(225,31,38)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="671.50"></text></g><g><title>[libvulkan.so.1.3.204] (4 samples, 0.02%)</title><rect x="6.1406%" y="645" width="0.0209%" height="15" fill="rgb(250,208,3)" fg:x="1175" fg:w="4"/><text x="6.3906%" y="655.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (3 samples, 0.02%)</title><rect x="6.1458%" y="629" width="0.0157%" height="15" fill="rgb(246,54,23)" fg:x="1176" fg:w="3"/><text x="6.3958%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.1458%" y="613" width="0.0157%" height="15" fill="rgb(243,76,11)" fg:x="1176" fg:w="3"/><text x="6.3958%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1510%" y="597" width="0.0105%" height="15" fill="rgb(245,21,50)" fg:x="1177" fg:w="2"/><text x="6.4010%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1510%" y="581" width="0.0105%" height="15" fill="rgb(228,9,43)" fg:x="1177" fg:w="2"/><text x="6.4010%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.1510%" y="565" width="0.0105%" height="15" fill="rgb(208,100,47)" fg:x="1177" fg:w="2"/><text x="6.4010%" y="575.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="6.1824%" y="517" width="0.0105%" height="15" fill="rgb(232,26,8)" fg:x="1183" fg:w="2"/><text x="6.4324%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (8 samples, 0.04%)</title><rect x="6.1772%" y="613" width="0.0418%" height="15" fill="rgb(216,166,38)" fg:x="1182" fg:w="8"/><text x="6.4272%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (8 samples, 0.04%)</title><rect x="6.1772%" y="597" width="0.0418%" height="15" fill="rgb(251,202,51)" fg:x="1182" fg:w="8"/><text x="6.4272%" y="607.50"></text></g><g><title>_XReply (7 samples, 0.04%)</title><rect x="6.1824%" y="581" width="0.0366%" height="15" fill="rgb(254,216,34)" fg:x="1183" fg:w="7"/><text x="6.4324%" y="591.50"></text></g><g><title>xcb_wait_for_reply64 (7 samples, 0.04%)</title><rect x="6.1824%" y="565" width="0.0366%" height="15" fill="rgb(251,32,27)" fg:x="1183" fg:w="7"/><text x="6.4324%" y="575.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.04%)</title><rect x="6.1824%" y="549" width="0.0366%" height="15" fill="rgb(208,127,28)" fg:x="1183" fg:w="7"/><text x="6.4324%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.04%)</title><rect x="6.1824%" y="533" width="0.0366%" height="15" fill="rgb(224,137,22)" fg:x="1183" fg:w="7"/><text x="6.4324%" y="543.50"></text></g><g><title>__GI___poll (5 samples, 0.03%)</title><rect x="6.1928%" y="517" width="0.0261%" height="15" fill="rgb(254,70,32)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="501" width="0.0261%" height="15" fill="rgb(229,75,37)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="485" width="0.0261%" height="15" fill="rgb(252,64,23)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="469" width="0.0261%" height="15" fill="rgb(232,162,48)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="453" width="0.0261%" height="15" fill="rgb(246,160,12)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="437" width="0.0261%" height="15" fill="rgb(247,166,0)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="421" width="0.0261%" height="15" fill="rgb(249,219,21)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="405" width="0.0261%" height="15" fill="rgb(205,209,3)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="389" width="0.0261%" height="15" fill="rgb(243,44,1)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="373" width="0.0261%" height="15" fill="rgb(206,159,16)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="357" width="0.0261%" height="15" fill="rgb(244,77,30)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="341" width="0.0261%" height="15" fill="rgb(218,69,12)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="325" width="0.0261%" height="15" fill="rgb(212,87,7)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="309" width="0.0261%" height="15" fill="rgb(245,114,25)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.1928%" y="293" width="0.0261%" height="15" fill="rgb(210,61,42)" fg:x="1185" fg:w="5"/><text x="6.4428%" y="303.50"></text></g><g><title>wgpu::Instance::request_adapter (11 samples, 0.06%)</title><rect x="6.1772%" y="837" width="0.0575%" height="15" fill="rgb(211,52,33)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="847.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (11 samples, 0.06%)</title><rect x="6.1772%" y="821" width="0.0575%" height="15" fill="rgb(234,58,33)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="831.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (11 samples, 0.06%)</title><rect x="6.1772%" y="805" width="0.0575%" height="15" fill="rgb(220,115,36)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="815.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (11 samples, 0.06%)</title><rect x="6.1772%" y="789" width="0.0575%" height="15" fill="rgb(243,153,54)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="799.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (11 samples, 0.06%)</title><rect x="6.1772%" y="773" width="0.0575%" height="15" fill="rgb(251,47,18)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (11 samples, 0.06%)</title><rect x="6.1772%" y="757" width="0.0575%" height="15" fill="rgb(242,102,42)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (11 samples, 0.06%)</title><rect x="6.1772%" y="741" width="0.0575%" height="15" fill="rgb(234,31,38)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (11 samples, 0.06%)</title><rect x="6.1772%" y="725" width="0.0575%" height="15" fill="rgb(221,117,51)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (11 samples, 0.06%)</title><rect x="6.1772%" y="709" width="0.0575%" height="15" fill="rgb(212,20,18)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="719.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (11 samples, 0.06%)</title><rect x="6.1772%" y="693" width="0.0575%" height="15" fill="rgb(245,133,36)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (11 samples, 0.06%)</title><rect x="6.1772%" y="677" width="0.0575%" height="15" fill="rgb(212,6,19)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="687.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (11 samples, 0.06%)</title><rect x="6.1772%" y="661" width="0.0575%" height="15" fill="rgb(218,1,36)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="6.1772%" y="645" width="0.0575%" height="15" fill="rgb(246,84,54)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="6.1772%" y="629" width="0.0575%" height="15" fill="rgb(242,110,6)" fg:x="1182" fg:w="11"/><text x="6.4272%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.2190%" y="613" width="0.0157%" height="15" fill="rgb(214,47,5)" fg:x="1190" fg:w="3"/><text x="6.4690%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.2190%" y="597" width="0.0157%" height="15" fill="rgb(218,159,25)" fg:x="1190" fg:w="3"/><text x="6.4690%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.2190%" y="581" width="0.0157%" height="15" fill="rgb(215,211,28)" fg:x="1190" fg:w="3"/><text x="6.4690%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.2242%" y="565" width="0.0105%" height="15" fill="rgb(238,59,32)" fg:x="1191" fg:w="2"/><text x="6.4742%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.2242%" y="549" width="0.0105%" height="15" fill="rgb(226,82,3)" fg:x="1191" fg:w="2"/><text x="6.4742%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.2242%" y="533" width="0.0105%" height="15" fill="rgb(240,164,32)" fg:x="1191" fg:w="2"/><text x="6.4742%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.2242%" y="517" width="0.0105%" height="15" fill="rgb(232,46,7)" fg:x="1191" fg:w="2"/><text x="6.4742%" y="527.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (19 samples, 0.10%)</title><rect x="6.1406%" y="869" width="0.0993%" height="15" fill="rgb(229,129,53)" fg:x="1175" fg:w="19"/><text x="6.3906%" y="879.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (15 samples, 0.08%)</title><rect x="6.1615%" y="853" width="0.0784%" height="15" fill="rgb(234,188,29)" fg:x="1179" fg:w="15"/><text x="6.4115%" y="863.50"></text></g><g><title>wgpu::Instance::request_adapter (2 samples, 0.01%)</title><rect x="6.2399%" y="853" width="0.0105%" height="15" fill="rgb(246,141,4)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (2 samples, 0.01%)</title><rect x="6.2399%" y="837" width="0.0105%" height="15" fill="rgb(229,23,39)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (2 samples, 0.01%)</title><rect x="6.2399%" y="821" width="0.0105%" height="15" fill="rgb(206,12,3)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="831.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (2 samples, 0.01%)</title><rect x="6.2399%" y="805" width="0.0105%" height="15" fill="rgb(252,226,20)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="815.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (2 samples, 0.01%)</title><rect x="6.2399%" y="789" width="0.0105%" height="15" fill="rgb(216,123,35)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="799.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::enumerate_adapters (2 samples, 0.01%)</title><rect x="6.2399%" y="773" width="0.0105%" height="15" fill="rgb(212,68,40)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="783.50"></text></g><g><title>ash::instance::Instance::enumerate_physical_devices (2 samples, 0.01%)</title><rect x="6.2399%" y="757" width="0.0105%" height="15" fill="rgb(254,125,32)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="767.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (2 samples, 0.01%)</title><rect x="6.2399%" y="741" width="0.0105%" height="15" fill="rgb(253,97,22)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="751.50"></text></g><g><title>ash::instance::Instance::enumerate_physical_devices::{{closure}} (2 samples, 0.01%)</title><rect x="6.2399%" y="725" width="0.0105%" height="15" fill="rgb(241,101,14)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="735.50"></text></g><g><title>vkEnumeratePhysicalDevices (2 samples, 0.01%)</title><rect x="6.2399%" y="709" width="0.0105%" height="15" fill="rgb(238,103,29)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.204] (2 samples, 0.01%)</title><rect x="6.2399%" y="693" width="0.0105%" height="15" fill="rgb(233,195,47)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="703.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (2 samples, 0.01%)</title><rect x="6.2399%" y="677" width="0.0105%" height="15" fill="rgb(246,218,30)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (2 samples, 0.01%)</title><rect x="6.2399%" y="661" width="0.0105%" height="15" fill="rgb(219,145,47)" fg:x="1194" fg:w="2"/><text x="6.4899%" y="671.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (14 samples, 0.07%)</title><rect x="6.2399%" y="869" width="0.0732%" height="15" fill="rgb(243,12,26)" fg:x="1194" fg:w="14"/><text x="6.4899%" y="879.50"></text></g><g><title>winit::window::WindowBuilder::build (12 samples, 0.06%)</title><rect x="6.2503%" y="853" width="0.0627%" height="15" fill="rgb(214,87,16)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="863.50"></text></g><g><title>winit::platform_impl::platform::Window::new (12 samples, 0.06%)</title><rect x="6.2503%" y="837" width="0.0627%" height="15" fill="rgb(208,99,42)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::Window::new (12 samples, 0.06%)</title><rect x="6.2503%" y="821" width="0.0627%" height="15" fill="rgb(253,99,2)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="831.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::new (12 samples, 0.06%)</title><rect x="6.2503%" y="805" width="0.0627%" height="15" fill="rgb(220,168,23)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="815.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::create_context (12 samples, 0.06%)</title><rect x="6.2503%" y="789" width="0.0627%" height="15" fill="rgb(242,38,24)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="799.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::context::ImeContext::new (12 samples, 0.06%)</title><rect x="6.2503%" y="773" width="0.0627%" height="15" fill="rgb(225,182,9)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="783.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::context::ImeContext::create_preedit_ic (12 samples, 0.06%)</title><rect x="6.2503%" y="757" width="0.0627%" height="15" fill="rgb(243,178,37)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="767.50"></text></g><g><title>XCreateIC (12 samples, 0.06%)</title><rect x="6.2503%" y="741" width="0.0627%" height="15" fill="rgb(232,139,19)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="751.50"></text></g><g><title>_XimProtoCreateIC (12 samples, 0.06%)</title><rect x="6.2503%" y="725" width="0.0627%" height="15" fill="rgb(225,201,24)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="735.50"></text></g><g><title>_XimRead (12 samples, 0.06%)</title><rect x="6.2503%" y="709" width="0.0627%" height="15" fill="rgb(221,47,46)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="719.50"></text></g><g><title>[libX11.so.6.4.0] (12 samples, 0.06%)</title><rect x="6.2503%" y="693" width="0.0627%" height="15" fill="rgb(249,23,13)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="703.50"></text></g><g><title>[libX11.so.6.4.0] (12 samples, 0.06%)</title><rect x="6.2503%" y="677" width="0.0627%" height="15" fill="rgb(219,9,5)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="687.50"></text></g><g><title>XIfEvent (12 samples, 0.06%)</title><rect x="6.2503%" y="661" width="0.0627%" height="15" fill="rgb(254,171,16)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="671.50"></text></g><g><title>_XReadEvents (12 samples, 0.06%)</title><rect x="6.2503%" y="645" width="0.0627%" height="15" fill="rgb(230,171,20)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="655.50"></text></g><g><title>xcb_wait_for_event (12 samples, 0.06%)</title><rect x="6.2503%" y="629" width="0.0627%" height="15" fill="rgb(210,71,41)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="639.50"></text></g><g><title>[libxcb.so.1.1.0] (12 samples, 0.06%)</title><rect x="6.2503%" y="613" width="0.0627%" height="15" fill="rgb(206,173,20)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="623.50"></text></g><g><title>__GI___poll (12 samples, 0.06%)</title><rect x="6.2503%" y="597" width="0.0627%" height="15" fill="rgb(233,88,34)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="607.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="6.2503%" y="581" width="0.0627%" height="15" fill="rgb(223,209,46)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="591.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="6.2503%" y="565" width="0.0627%" height="15" fill="rgb(250,43,18)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="575.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="6.2503%" y="549" width="0.0627%" height="15" fill="rgb(208,13,10)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="6.2503%" y="533" width="0.0627%" height="15" fill="rgb(212,200,36)" fg:x="1196" fg:w="12"/><text x="6.5003%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.2556%" y="517" width="0.0575%" height="15" fill="rgb(225,90,30)" fg:x="1197" fg:w="11"/><text x="6.5056%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.2556%" y="501" width="0.0575%" height="15" fill="rgb(236,182,39)" fg:x="1197" fg:w="11"/><text x="6.5056%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.2556%" y="485" width="0.0575%" height="15" fill="rgb(212,144,35)" fg:x="1197" fg:w="11"/><text x="6.5056%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.2556%" y="469" width="0.0575%" height="15" fill="rgb(228,63,44)" fg:x="1197" fg:w="11"/><text x="6.5056%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.2556%" y="453" width="0.0575%" height="15" fill="rgb(228,109,6)" fg:x="1197" fg:w="11"/><text x="6.5056%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.2556%" y="437" width="0.0575%" height="15" fill="rgb(238,117,24)" fg:x="1197" fg:w="11"/><text x="6.5056%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="6.2608%" y="421" width="0.0523%" height="15" fill="rgb(242,26,26)" fg:x="1198" fg:w="10"/><text x="6.5108%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="6.2608%" y="405" width="0.0523%" height="15" fill="rgb(221,92,48)" fg:x="1198" fg:w="10"/><text x="6.5108%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="6.2608%" y="389" width="0.0523%" height="15" fill="rgb(209,209,32)" fg:x="1198" fg:w="10"/><text x="6.5108%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="6.2608%" y="373" width="0.0523%" height="15" fill="rgb(221,70,22)" fg:x="1198" fg:w="10"/><text x="6.5108%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (3 samples, 0.02%)</title><rect x="6.3130%" y="869" width="0.0157%" height="15" fill="rgb(248,145,5)" fg:x="1208" fg:w="3"/><text x="6.5630%" y="879.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (2 samples, 0.01%)</title><rect x="6.3548%" y="869" width="0.0105%" height="15" fill="rgb(226,116,26)" fg:x="1216" fg:w="2"/><text x="6.6048%" y="879.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (3 samples, 0.02%)</title><rect x="6.3653%" y="869" width="0.0157%" height="15" fill="rgb(244,5,17)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.02%)</title><rect x="6.3653%" y="853" width="0.0157%" height="15" fill="rgb(252,159,33)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="6.3653%" y="837" width="0.0157%" height="15" fill="rgb(206,71,0)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.02%)</title><rect x="6.3653%" y="821" width="0.0157%" height="15" fill="rgb(233,118,54)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.02%)</title><rect x="6.3653%" y="805" width="0.0157%" height="15" fill="rgb(234,83,48)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.02%)</title><rect x="6.3653%" y="789" width="0.0157%" height="15" fill="rgb(228,3,54)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.02%)</title><rect x="6.3653%" y="773" width="0.0157%" height="15" fill="rgb(226,155,13)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.02%)</title><rect x="6.3653%" y="757" width="0.0157%" height="15" fill="rgb(241,28,37)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="767.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (3 samples, 0.02%)</title><rect x="6.3653%" y="741" width="0.0157%" height="15" fill="rgb(233,93,10)" fg:x="1218" fg:w="3"/><text x="6.6153%" y="751.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (2 samples, 0.01%)</title><rect x="6.3914%" y="869" width="0.0105%" height="15" fill="rgb(225,113,19)" fg:x="1223" fg:w="2"/><text x="6.6414%" y="879.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_projection (2 samples, 0.01%)</title><rect x="6.4019%" y="869" width="0.0105%" height="15" fill="rgb(241,2,18)" fg:x="1225" fg:w="2"/><text x="6.6519%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="6.4019%" y="853" width="0.0105%" height="15" fill="rgb(228,207,21)" fg:x="1225" fg:w="2"/><text x="6.6519%" y="863.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (2 samples, 0.01%)</title><rect x="6.4123%" y="869" width="0.0105%" height="15" fill="rgb(213,211,35)" fg:x="1227" fg:w="2"/><text x="6.6623%" y="879.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (9 samples, 0.05%)</title><rect x="6.4228%" y="869" width="0.0470%" height="15" fill="rgb(209,83,10)" fg:x="1229" fg:w="9"/><text x="6.6728%" y="879.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (2 samples, 0.01%)</title><rect x="6.4698%" y="869" width="0.0105%" height="15" fill="rgb(209,164,1)" fg:x="1238" fg:w="2"/><text x="6.7198%" y="879.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (6 samples, 0.03%)</title><rect x="6.5064%" y="757" width="0.0314%" height="15" fill="rgb(213,184,43)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="767.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (6 samples, 0.03%)</title><rect x="6.5064%" y="741" width="0.0314%" height="15" fill="rgb(231,61,34)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="751.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (6 samples, 0.03%)</title><rect x="6.5064%" y="725" width="0.0314%" height="15" fill="rgb(235,75,3)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="735.50"></text></g><g><title>cpal::host::alsa::Device::default_config (6 samples, 0.03%)</title><rect x="6.5064%" y="709" width="0.0314%" height="15" fill="rgb(220,106,47)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="719.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (6 samples, 0.03%)</title><rect x="6.5064%" y="693" width="0.0314%" height="15" fill="rgb(210,196,33)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="703.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (6 samples, 0.03%)</title><rect x="6.5064%" y="677" width="0.0314%" height="15" fill="rgb(229,154,42)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="687.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (6 samples, 0.03%)</title><rect x="6.5064%" y="661" width="0.0314%" height="15" fill="rgb(228,114,26)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="671.50"></text></g><g><title>alsa::pcm::PCM::new (6 samples, 0.03%)</title><rect x="6.5064%" y="645" width="0.0314%" height="15" fill="rgb(208,144,1)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="655.50"></text></g><g><title>alsa::pcm::PCM::open (6 samples, 0.03%)</title><rect x="6.5064%" y="629" width="0.0314%" height="15" fill="rgb(239,112,37)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="639.50"></text></g><g><title>snd_pcm_open (6 samples, 0.03%)</title><rect x="6.5064%" y="613" width="0.0314%" height="15" fill="rgb(210,96,50)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.03%)</title><rect x="6.5064%" y="597" width="0.0314%" height="15" fill="rgb(222,178,2)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.03%)</title><rect x="6.5064%" y="581" width="0.0314%" height="15" fill="rgb(226,74,18)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="591.50"></text></g><g><title>_snd_pcm_pulse_open (6 samples, 0.03%)</title><rect x="6.5064%" y="565" width="0.0314%" height="15" fill="rgb(225,67,54)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="575.50"></text></g><g><title>pulse_connect (6 samples, 0.03%)</title><rect x="6.5064%" y="549" width="0.0314%" height="15" fill="rgb(251,92,32)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="559.50"></text></g><g><title>pa_threaded_mainloop_wait (6 samples, 0.03%)</title><rect x="6.5064%" y="533" width="0.0314%" height="15" fill="rgb(228,149,22)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="543.50"></text></g><g><title>___pthread_cond_wait (6 samples, 0.03%)</title><rect x="6.5064%" y="517" width="0.0314%" height="15" fill="rgb(243,54,13)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="527.50"></text></g><g><title>__pthread_cond_wait_common (6 samples, 0.03%)</title><rect x="6.5064%" y="501" width="0.0314%" height="15" fill="rgb(243,180,28)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="511.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (6 samples, 0.03%)</title><rect x="6.5064%" y="485" width="0.0314%" height="15" fill="rgb(208,167,24)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="495.50"></text></g><g><title>__futex_abstimed_wait_common (6 samples, 0.03%)</title><rect x="6.5064%" y="469" width="0.0314%" height="15" fill="rgb(245,73,45)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="479.50"></text></g><g><title>__futex_abstimed_wait_common64 (6 samples, 0.03%)</title><rect x="6.5064%" y="453" width="0.0314%" height="15" fill="rgb(237,203,48)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.5064%" y="437" width="0.0314%" height="15" fill="rgb(211,197,16)" fg:x="1245" fg:w="6"/><text x="6.7564%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="421" width="0.0261%" height="15" fill="rgb(243,99,51)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="405" width="0.0261%" height="15" fill="rgb(215,123,29)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="389" width="0.0261%" height="15" fill="rgb(239,186,37)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="373" width="0.0261%" height="15" fill="rgb(252,136,39)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="357" width="0.0261%" height="15" fill="rgb(223,213,32)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="341" width="0.0261%" height="15" fill="rgb(233,115,5)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="325" width="0.0261%" height="15" fill="rgb(207,226,44)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="309" width="0.0261%" height="15" fill="rgb(208,126,0)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="293" width="0.0261%" height="15" fill="rgb(244,66,21)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="277" width="0.0261%" height="15" fill="rgb(222,97,12)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="261" width="0.0261%" height="15" fill="rgb(219,213,19)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5116%" y="245" width="0.0261%" height="15" fill="rgb(252,169,30)" fg:x="1246" fg:w="5"/><text x="6.7616%" y="255.50"></text></g><g><title>ggez::audio::AudioContext::new (13 samples, 0.07%)</title><rect x="6.5064%" y="805" width="0.0679%" height="15" fill="rgb(206,32,51)" fg:x="1245" fg:w="13"/><text x="6.7564%" y="815.50"></text></g><g><title>rodio::stream::OutputStream::try_default (13 samples, 0.07%)</title><rect x="6.5064%" y="789" width="0.0679%" height="15" fill="rgb(250,172,42)" fg:x="1245" fg:w="13"/><text x="6.7564%" y="799.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (13 samples, 0.07%)</title><rect x="6.5064%" y="773" width="0.0679%" height="15" fill="rgb(209,34,43)" fg:x="1245" fg:w="13"/><text x="6.7564%" y="783.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device_config (7 samples, 0.04%)</title><rect x="6.5378%" y="757" width="0.0366%" height="15" fill="rgb(223,11,35)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="767.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream_config (7 samples, 0.04%)</title><rect x="6.5378%" y="741" width="0.0366%" height="15" fill="rgb(251,219,26)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="751.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format (7 samples, 0.04%)</title><rect x="6.5378%" y="725" width="0.0366%" height="15" fill="rgb(231,119,3)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="735.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream (7 samples, 0.04%)</title><rect x="6.5378%" y="709" width="0.0366%" height="15" fill="rgb(216,97,11)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="719.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (7 samples, 0.04%)</title><rect x="6.5378%" y="693" width="0.0366%" height="15" fill="rgb(223,59,9)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="703.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (7 samples, 0.04%)</title><rect x="6.5378%" y="677" width="0.0366%" height="15" fill="rgb(233,93,31)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="687.50"></text></g><g><title>cpal::host::alsa::Device::build_stream_inner (7 samples, 0.04%)</title><rect x="6.5378%" y="661" width="0.0366%" height="15" fill="rgb(239,81,33)" fg:x="1251" fg:w="7"/><text x="6.7878%" y="671.50"></text></g><g><title>cpal::host::alsa::set_hw_params_from_format (6 samples, 0.03%)</title><rect x="6.5430%" y="645" width="0.0314%" height="15" fill="rgb(213,120,34)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="655.50"></text></g><g><title>alsa::pcm::PCM::hw_params (6 samples, 0.03%)</title><rect x="6.5430%" y="629" width="0.0314%" height="15" fill="rgb(243,49,53)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="639.50"></text></g><g><title>snd_pcm_prepare (6 samples, 0.03%)</title><rect x="6.5430%" y="613" width="0.0314%" height="15" fill="rgb(247,216,33)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.03%)</title><rect x="6.5430%" y="597" width="0.0314%" height="15" fill="rgb(226,26,14)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="607.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.03%)</title><rect x="6.5430%" y="581" width="0.0314%" height="15" fill="rgb(215,49,53)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="591.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.03%)</title><rect x="6.5430%" y="565" width="0.0314%" height="15" fill="rgb(245,162,40)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="575.50"></text></g><g><title>pa_threaded_mainloop_wait (6 samples, 0.03%)</title><rect x="6.5430%" y="549" width="0.0314%" height="15" fill="rgb(229,68,17)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="559.50"></text></g><g><title>___pthread_cond_wait (6 samples, 0.03%)</title><rect x="6.5430%" y="533" width="0.0314%" height="15" fill="rgb(213,182,10)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="543.50"></text></g><g><title>__pthread_cond_wait_common (6 samples, 0.03%)</title><rect x="6.5430%" y="517" width="0.0314%" height="15" fill="rgb(245,125,30)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="527.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (6 samples, 0.03%)</title><rect x="6.5430%" y="501" width="0.0314%" height="15" fill="rgb(232,202,2)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="511.50"></text></g><g><title>__futex_abstimed_wait_common (6 samples, 0.03%)</title><rect x="6.5430%" y="485" width="0.0314%" height="15" fill="rgb(237,140,51)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="495.50"></text></g><g><title>__futex_abstimed_wait_common64 (6 samples, 0.03%)</title><rect x="6.5430%" y="469" width="0.0314%" height="15" fill="rgb(236,157,25)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.5430%" y="453" width="0.0314%" height="15" fill="rgb(219,209,0)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.5430%" y="437" width="0.0314%" height="15" fill="rgb(240,116,54)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.5430%" y="421" width="0.0314%" height="15" fill="rgb(216,10,36)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.5430%" y="405" width="0.0314%" height="15" fill="rgb(222,72,44)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.5430%" y="389" width="0.0314%" height="15" fill="rgb(232,159,9)" fg:x="1252" fg:w="6"/><text x="6.7930%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="373" width="0.0261%" height="15" fill="rgb(210,39,32)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="357" width="0.0261%" height="15" fill="rgb(216,194,45)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="341" width="0.0261%" height="15" fill="rgb(218,18,35)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="325" width="0.0261%" height="15" fill="rgb(207,83,51)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="309" width="0.0261%" height="15" fill="rgb(225,63,43)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="293" width="0.0261%" height="15" fill="rgb(207,57,36)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="277" width="0.0261%" height="15" fill="rgb(216,99,33)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.5482%" y="261" width="0.0261%" height="15" fill="rgb(225,42,16)" fg:x="1253" fg:w="5"/><text x="6.7982%" y="271.50"></text></g><g><title>[libudev.so.1.7.2] (7 samples, 0.04%)</title><rect x="6.6109%" y="581" width="0.0366%" height="15" fill="rgb(220,201,45)" fg:x="1265" fg:w="7"/><text x="6.8609%" y="591.50"></text></g><g><title>[libudev.so.1.7.2] (7 samples, 0.04%)</title><rect x="6.6109%" y="565" width="0.0366%" height="15" fill="rgb(225,33,4)" fg:x="1265" fg:w="7"/><text x="6.8609%" y="575.50"></text></g><g><title>[libudev.so.1.7.2] (2 samples, 0.01%)</title><rect x="6.6371%" y="549" width="0.0105%" height="15" fill="rgb(224,33,50)" fg:x="1270" fg:w="2"/><text x="6.8871%" y="559.50"></text></g><g><title>_IO_new_fopen (6 samples, 0.03%)</title><rect x="6.6475%" y="581" width="0.0314%" height="15" fill="rgb(246,198,51)" fg:x="1272" fg:w="6"/><text x="6.8975%" y="591.50"></text></g><g><title>__fopen_internal (6 samples, 0.03%)</title><rect x="6.6475%" y="565" width="0.0314%" height="15" fill="rgb(205,22,4)" fg:x="1272" fg:w="6"/><text x="6.8975%" y="575.50"></text></g><g><title>_IO_new_file_fopen (6 samples, 0.03%)</title><rect x="6.6475%" y="549" width="0.0314%" height="15" fill="rgb(206,3,8)" fg:x="1272" fg:w="6"/><text x="6.8975%" y="559.50"></text></g><g><title>__GI__IO_file_open (6 samples, 0.03%)</title><rect x="6.6475%" y="533" width="0.0314%" height="15" fill="rgb(251,23,15)" fg:x="1272" fg:w="6"/><text x="6.8975%" y="543.50"></text></g><g><title>__libc_open64 (6 samples, 0.03%)</title><rect x="6.6475%" y="517" width="0.0314%" height="15" fill="rgb(252,88,28)" fg:x="1272" fg:w="6"/><text x="6.8975%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.6475%" y="501" width="0.0314%" height="15" fill="rgb(212,127,14)" fg:x="1272" fg:w="6"/><text x="6.8975%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.6527%" y="485" width="0.0261%" height="15" fill="rgb(247,145,37)" fg:x="1273" fg:w="5"/><text x="6.9027%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.6527%" y="469" width="0.0261%" height="15" fill="rgb(209,117,53)" fg:x="1273" fg:w="5"/><text x="6.9027%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.6580%" y="453" width="0.0209%" height="15" fill="rgb(212,90,42)" fg:x="1274" fg:w="4"/><text x="6.9080%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.6580%" y="437" width="0.0209%" height="15" fill="rgb(218,164,37)" fg:x="1274" fg:w="4"/><text x="6.9080%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.6632%" y="421" width="0.0157%" height="15" fill="rgb(246,65,34)" fg:x="1275" fg:w="3"/><text x="6.9132%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.6632%" y="405" width="0.0157%" height="15" fill="rgb(231,100,33)" fg:x="1275" fg:w="3"/><text x="6.9132%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.6632%" y="389" width="0.0157%" height="15" fill="rgb(228,126,14)" fg:x="1275" fg:w="3"/><text x="6.9132%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.6632%" y="373" width="0.0157%" height="15" fill="rgb(215,173,21)" fg:x="1275" fg:w="3"/><text x="6.9132%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.6789%" y="565" width="0.0105%" height="15" fill="rgb(210,6,40)" fg:x="1278" fg:w="2"/><text x="6.9289%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.6789%" y="549" width="0.0105%" height="15" fill="rgb(212,48,18)" fg:x="1278" fg:w="2"/><text x="6.9289%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.6789%" y="533" width="0.0105%" height="15" fill="rgb(230,214,11)" fg:x="1278" fg:w="2"/><text x="6.9289%" y="543.50"></text></g><g><title>[libudev.so.1.7.2] (18 samples, 0.09%)</title><rect x="6.6005%" y="597" width="0.0941%" height="15" fill="rgb(254,105,39)" fg:x="1263" fg:w="18"/><text x="6.8505%" y="607.50"></text></g><g><title>__GI___close (3 samples, 0.02%)</title><rect x="6.6789%" y="581" width="0.0157%" height="15" fill="rgb(245,158,5)" fg:x="1278" fg:w="3"/><text x="6.9289%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="6.6945%" y="581" width="0.0470%" height="15" fill="rgb(249,208,11)" fg:x="1281" fg:w="9"/><text x="6.9445%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.7102%" y="565" width="0.0314%" height="15" fill="rgb(210,39,28)" fg:x="1284" fg:w="6"/><text x="6.9602%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.7102%" y="549" width="0.0314%" height="15" fill="rgb(211,56,53)" fg:x="1284" fg:w="6"/><text x="6.9602%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7207%" y="533" width="0.0209%" height="15" fill="rgb(226,201,30)" fg:x="1286" fg:w="4"/><text x="6.9707%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7207%" y="517" width="0.0209%" height="15" fill="rgb(239,101,34)" fg:x="1286" fg:w="4"/><text x="6.9707%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7207%" y="501" width="0.0209%" height="15" fill="rgb(226,209,5)" fg:x="1286" fg:w="4"/><text x="6.9707%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7207%" y="485" width="0.0209%" height="15" fill="rgb(250,105,47)" fg:x="1286" fg:w="4"/><text x="6.9707%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7207%" y="469" width="0.0209%" height="15" fill="rgb(230,72,3)" fg:x="1286" fg:w="4"/><text x="6.9707%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7207%" y="453" width="0.0209%" height="15" fill="rgb(232,218,39)" fg:x="1286" fg:w="4"/><text x="6.9707%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7311%" y="437" width="0.0105%" height="15" fill="rgb(248,166,6)" fg:x="1288" fg:w="2"/><text x="6.9811%" y="447.50"></text></g><g><title>__GI___close (10 samples, 0.05%)</title><rect x="6.6945%" y="597" width="0.0523%" height="15" fill="rgb(247,89,20)" fg:x="1281" fg:w="10"/><text x="6.9445%" y="607.50"></text></g><g><title>__GI___libc_read (2 samples, 0.01%)</title><rect x="6.7468%" y="597" width="0.0105%" height="15" fill="rgb(248,130,54)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="607.50"></text></g><g><title>__GI___libc_read (2 samples, 0.01%)</title><rect x="6.7468%" y="581" width="0.0105%" height="15" fill="rgb(234,196,4)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="565" width="0.0105%" height="15" fill="rgb(250,143,31)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="549" width="0.0105%" height="15" fill="rgb(211,110,34)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="533" width="0.0105%" height="15" fill="rgb(215,124,48)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="517" width="0.0105%" height="15" fill="rgb(216,46,13)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="501" width="0.0105%" height="15" fill="rgb(205,184,25)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="485" width="0.0105%" height="15" fill="rgb(228,1,10)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="469" width="0.0105%" height="15" fill="rgb(213,116,27)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="453" width="0.0105%" height="15" fill="rgb(241,95,50)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="437" width="0.0105%" height="15" fill="rgb(238,48,32)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="421" width="0.0105%" height="15" fill="rgb(235,113,49)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="405" width="0.0105%" height="15" fill="rgb(205,127,43)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="389" width="0.0105%" height="15" fill="rgb(250,162,2)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="373" width="0.0105%" height="15" fill="rgb(220,13,41)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7468%" y="357" width="0.0105%" height="15" fill="rgb(249,221,25)" fg:x="1291" fg:w="2"/><text x="6.9968%" y="367.50"></text></g><g><title>__GI_readlinkat (3 samples, 0.02%)</title><rect x="6.7625%" y="597" width="0.0157%" height="15" fill="rgb(215,208,19)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="581" width="0.0157%" height="15" fill="rgb(236,175,2)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="565" width="0.0157%" height="15" fill="rgb(241,52,2)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="549" width="0.0157%" height="15" fill="rgb(248,140,14)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="533" width="0.0157%" height="15" fill="rgb(253,22,42)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="517" width="0.0157%" height="15" fill="rgb(234,61,47)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="501" width="0.0157%" height="15" fill="rgb(208,226,15)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7625%" y="485" width="0.0157%" height="15" fill="rgb(217,221,4)" fg:x="1294" fg:w="3"/><text x="7.0125%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7677%" y="469" width="0.0105%" height="15" fill="rgb(212,174,34)" fg:x="1295" fg:w="2"/><text x="7.0177%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7677%" y="453" width="0.0105%" height="15" fill="rgb(253,83,4)" fg:x="1295" fg:w="2"/><text x="7.0177%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.7677%" y="437" width="0.0105%" height="15" fill="rgb(250,195,49)" fg:x="1295" fg:w="2"/><text x="7.0177%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (38 samples, 0.20%)</title><rect x="6.6005%" y="613" width="0.1986%" height="15" fill="rgb(241,192,25)" fg:x="1263" fg:w="38"/><text x="6.8505%" y="623.50"></text></g><g><title>__libc_open64 (4 samples, 0.02%)</title><rect x="6.7782%" y="597" width="0.0209%" height="15" fill="rgb(208,124,10)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="581" width="0.0209%" height="15" fill="rgb(222,33,0)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="565" width="0.0209%" height="15" fill="rgb(234,209,28)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="549" width="0.0209%" height="15" fill="rgb(224,11,23)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="533" width="0.0209%" height="15" fill="rgb(232,99,1)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="517" width="0.0209%" height="15" fill="rgb(237,95,45)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="501" width="0.0209%" height="15" fill="rgb(208,109,11)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.7782%" y="485" width="0.0209%" height="15" fill="rgb(216,190,48)" fg:x="1297" fg:w="4"/><text x="7.0282%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7834%" y="469" width="0.0157%" height="15" fill="rgb(251,171,36)" fg:x="1298" fg:w="3"/><text x="7.0334%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7834%" y="453" width="0.0157%" height="15" fill="rgb(230,62,22)" fg:x="1298" fg:w="3"/><text x="7.0334%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.7834%" y="437" width="0.0157%" height="15" fill="rgb(225,114,35)" fg:x="1298" fg:w="3"/><text x="7.0334%" y="447.50"></text></g><g><title>__GI___fstatat64 (7 samples, 0.04%)</title><rect x="6.8043%" y="613" width="0.0366%" height="15" fill="rgb(215,118,42)" fg:x="1302" fg:w="7"/><text x="7.0543%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="6.8043%" y="597" width="0.0366%" height="15" fill="rgb(243,119,21)" fg:x="1302" fg:w="7"/><text x="7.0543%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.8095%" y="581" width="0.0314%" height="15" fill="rgb(252,177,53)" fg:x="1303" fg:w="6"/><text x="7.0595%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.8095%" y="565" width="0.0314%" height="15" fill="rgb(237,209,29)" fg:x="1303" fg:w="6"/><text x="7.0595%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.8147%" y="549" width="0.0261%" height="15" fill="rgb(212,65,23)" fg:x="1304" fg:w="5"/><text x="7.0647%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.8147%" y="533" width="0.0261%" height="15" fill="rgb(230,222,46)" fg:x="1304" fg:w="5"/><text x="7.0647%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.8147%" y="517" width="0.0261%" height="15" fill="rgb(215,135,32)" fg:x="1304" fg:w="5"/><text x="7.0647%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.8147%" y="501" width="0.0261%" height="15" fill="rgb(246,101,22)" fg:x="1304" fg:w="5"/><text x="7.0647%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.8200%" y="485" width="0.0209%" height="15" fill="rgb(206,107,13)" fg:x="1305" fg:w="4"/><text x="7.0700%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.8252%" y="469" width="0.0157%" height="15" fill="rgb(250,100,44)" fg:x="1306" fg:w="3"/><text x="7.0752%" y="479.50"></text></g><g><title>__libc_openat64 (19 samples, 0.10%)</title><rect x="6.8409%" y="613" width="0.0993%" height="15" fill="rgb(231,147,38)" fg:x="1309" fg:w="19"/><text x="7.0909%" y="623.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="6.8409%" y="597" width="0.0993%" height="15" fill="rgb(229,8,40)" fg:x="1309" fg:w="19"/><text x="7.0909%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="6.8565%" y="581" width="0.0836%" height="15" fill="rgb(221,135,30)" fg:x="1312" fg:w="16"/><text x="7.1065%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="6.8565%" y="565" width="0.0836%" height="15" fill="rgb(249,193,18)" fg:x="1312" fg:w="16"/><text x="7.1065%" y="575.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="6.8618%" y="549" width="0.0784%" height="15" fill="rgb(209,133,39)" fg:x="1313" fg:w="15"/><text x="7.1118%" y="559.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="6.8670%" y="533" width="0.0732%" height="15" fill="rgb(232,100,14)" fg:x="1314" fg:w="14"/><text x="7.1170%" y="543.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="6.8670%" y="517" width="0.0732%" height="15" fill="rgb(224,185,1)" fg:x="1314" fg:w="14"/><text x="7.1170%" y="527.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="6.8670%" y="501" width="0.0732%" height="15" fill="rgb(223,139,8)" fg:x="1314" fg:w="14"/><text x="7.1170%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="6.8827%" y="485" width="0.0575%" height="15" fill="rgb(232,213,38)" fg:x="1317" fg:w="11"/><text x="7.1327%" y="495.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="6.8931%" y="469" width="0.0470%" height="15" fill="rgb(207,94,22)" fg:x="1319" fg:w="9"/><text x="7.1431%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="6.9088%" y="453" width="0.0314%" height="15" fill="rgb(219,183,54)" fg:x="1322" fg:w="6"/><text x="7.1588%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9297%" y="437" width="0.0105%" height="15" fill="rgb(216,185,54)" fg:x="1326" fg:w="2"/><text x="7.1797%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (68 samples, 0.36%)</title><rect x="6.5900%" y="629" width="0.3554%" height="15" fill="rgb(254,217,39)" fg:x="1261" fg:w="68"/><text x="6.8400%" y="639.50"></text></g><g><title>_IO_new_fopen (2 samples, 0.01%)</title><rect x="6.9454%" y="629" width="0.0105%" height="15" fill="rgb(240,178,23)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="639.50"></text></g><g><title>__fopen_internal (2 samples, 0.01%)</title><rect x="6.9454%" y="613" width="0.0105%" height="15" fill="rgb(218,11,47)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="623.50"></text></g><g><title>_IO_new_file_fopen (2 samples, 0.01%)</title><rect x="6.9454%" y="597" width="0.0105%" height="15" fill="rgb(218,51,51)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="607.50"></text></g><g><title>__GI__IO_file_open (2 samples, 0.01%)</title><rect x="6.9454%" y="581" width="0.0105%" height="15" fill="rgb(238,126,27)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="591.50"></text></g><g><title>__libc_open64 (2 samples, 0.01%)</title><rect x="6.9454%" y="565" width="0.0105%" height="15" fill="rgb(249,202,22)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="549" width="0.0105%" height="15" fill="rgb(254,195,49)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="533" width="0.0105%" height="15" fill="rgb(208,123,14)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="517" width="0.0105%" height="15" fill="rgb(224,200,8)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="501" width="0.0105%" height="15" fill="rgb(217,61,36)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="485" width="0.0105%" height="15" fill="rgb(206,35,45)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="469" width="0.0105%" height="15" fill="rgb(217,65,33)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9454%" y="453" width="0.0105%" height="15" fill="rgb(222,158,48)" fg:x="1329" fg:w="2"/><text x="7.1954%" y="463.50"></text></g><g><title>_IO_new_file_underflow (3 samples, 0.02%)</title><rect x="6.9558%" y="597" width="0.0157%" height="15" fill="rgb(254,2,54)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="607.50"></text></g><g><title>__GI___libc_read (3 samples, 0.02%)</title><rect x="6.9558%" y="581" width="0.0157%" height="15" fill="rgb(250,143,38)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="591.50"></text></g><g><title>__GI___libc_read (3 samples, 0.02%)</title><rect x="6.9558%" y="565" width="0.0157%" height="15" fill="rgb(248,25,0)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9558%" y="549" width="0.0157%" height="15" fill="rgb(206,152,27)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9558%" y="533" width="0.0157%" height="15" fill="rgb(240,77,30)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9558%" y="517" width="0.0157%" height="15" fill="rgb(231,5,3)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9558%" y="501" width="0.0157%" height="15" fill="rgb(207,226,32)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9558%" y="485" width="0.0157%" height="15" fill="rgb(222,207,47)" fg:x="1331" fg:w="3"/><text x="7.2058%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9611%" y="469" width="0.0105%" height="15" fill="rgb(229,115,45)" fg:x="1332" fg:w="2"/><text x="7.2111%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9611%" y="453" width="0.0105%" height="15" fill="rgb(224,191,6)" fg:x="1332" fg:w="2"/><text x="7.2111%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9611%" y="437" width="0.0105%" height="15" fill="rgb(230,227,24)" fg:x="1332" fg:w="2"/><text x="7.2111%" y="447.50"></text></g><g><title>__GI__IO_fread (4 samples, 0.02%)</title><rect x="6.9558%" y="629" width="0.0209%" height="15" fill="rgb(228,80,19)" fg:x="1331" fg:w="4"/><text x="7.2058%" y="639.50"></text></g><g><title>__GI__IO_file_xsgetn (4 samples, 0.02%)</title><rect x="6.9558%" y="613" width="0.0209%" height="15" fill="rgb(247,229,0)" fg:x="1331" fg:w="4"/><text x="7.2058%" y="623.50"></text></g><g><title>[libudev.so.1.7.2] (81 samples, 0.42%)</title><rect x="6.5796%" y="661" width="0.4233%" height="15" fill="rgb(237,194,15)" fg:x="1259" fg:w="81"/><text x="6.8296%" y="671.50"></text></g><g><title>[libudev.so.1.7.2] (81 samples, 0.42%)</title><rect x="6.5796%" y="645" width="0.4233%" height="15" fill="rgb(219,203,20)" fg:x="1259" fg:w="81"/><text x="6.8296%" y="655.50"></text></g><g><title>__GI___access (5 samples, 0.03%)</title><rect x="6.9767%" y="629" width="0.0261%" height="15" fill="rgb(234,128,8)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9767%" y="613" width="0.0261%" height="15" fill="rgb(248,202,8)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9767%" y="597" width="0.0261%" height="15" fill="rgb(206,104,37)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9767%" y="581" width="0.0261%" height="15" fill="rgb(223,8,27)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9767%" y="565" width="0.0261%" height="15" fill="rgb(216,217,28)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9767%" y="549" width="0.0261%" height="15" fill="rgb(249,199,1)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="6.9767%" y="533" width="0.0261%" height="15" fill="rgb(240,85,17)" fg:x="1335" fg:w="5"/><text x="7.2267%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.9820%" y="517" width="0.0209%" height="15" fill="rgb(206,108,45)" fg:x="1336" fg:w="4"/><text x="7.2320%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="6.9820%" y="501" width="0.0209%" height="15" fill="rgb(245,210,41)" fg:x="1336" fg:w="4"/><text x="7.2320%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="6.9872%" y="485" width="0.0157%" height="15" fill="rgb(206,13,37)" fg:x="1337" fg:w="3"/><text x="7.2372%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.9924%" y="469" width="0.0105%" height="15" fill="rgb(250,61,18)" fg:x="1338" fg:w="2"/><text x="7.2424%" y="479.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (83 samples, 0.43%)</title><rect x="6.5743%" y="805" width="0.4338%" height="15" fill="rgb(235,172,48)" fg:x="1258" fg:w="83"/><text x="6.8243%" y="815.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (83 samples, 0.43%)</title><rect x="6.5743%" y="789" width="0.4338%" height="15" fill="rgb(249,201,17)" fg:x="1258" fg:w="83"/><text x="6.8243%" y="799.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (83 samples, 0.43%)</title><rect x="6.5743%" y="773" width="0.4338%" height="15" fill="rgb(219,208,6)" fg:x="1258" fg:w="83"/><text x="6.8243%" y="783.50"></text></g><g><title>gilrs_core::Gilrs::new (82 samples, 0.43%)</title><rect x="6.5796%" y="757" width="0.4285%" height="15" fill="rgb(248,31,23)" fg:x="1259" fg:w="82"/><text x="6.8296%" y="767.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (82 samples, 0.43%)</title><rect x="6.5796%" y="741" width="0.4285%" height="15" fill="rgb(245,15,42)" fg:x="1259" fg:w="82"/><text x="6.8296%" y="751.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (82 samples, 0.43%)</title><rect x="6.5796%" y="725" width="0.4285%" height="15" fill="rgb(222,217,39)" fg:x="1259" fg:w="82"/><text x="6.8296%" y="735.50"></text></g><g><title>udev_enumerate_scan_devices (82 samples, 0.43%)</title><rect x="6.5796%" y="709" width="0.4285%" height="15" fill="rgb(210,219,27)" fg:x="1259" fg:w="82"/><text x="6.8296%" y="719.50"></text></g><g><title>[libudev.so.1.7.2] (82 samples, 0.43%)</title><rect x="6.5796%" y="693" width="0.4285%" height="15" fill="rgb(252,166,36)" fg:x="1259" fg:w="82"/><text x="6.8296%" y="703.50"></text></g><g><title>[libudev.so.1.7.2] (82 samples, 0.43%)</title><rect x="6.5796%" y="677" width="0.4285%" height="15" fill="rgb(245,132,34)" fg:x="1259" fg:w="82"/><text x="6.8296%" y="687.50"></text></g><g><title>ggez::context::ContextBuilder::build (97 samples, 0.51%)</title><rect x="6.5064%" y="837" width="0.5069%" height="15" fill="rgb(236,54,3)" fg:x="1245" fg:w="97"/><text x="6.7564%" y="847.50"></text></g><g><title>ggez::context::Context::from_conf (97 samples, 0.51%)</title><rect x="6.5064%" y="821" width="0.5069%" height="15" fill="rgb(241,173,43)" fg:x="1245" fg:w="97"/><text x="6.7564%" y="831.50"></text></g><g><title>[libX11.so.6.4.0] (9 samples, 0.05%)</title><rect x="7.0133%" y="661" width="0.0470%" height="15" fill="rgb(215,190,9)" fg:x="1342" fg:w="9"/><text x="7.2633%" y="671.50"></text></g><g><title>[libxcb.so.1.1.0] (9 samples, 0.05%)</title><rect x="7.0133%" y="645" width="0.0470%" height="15" fill="rgb(242,101,16)" fg:x="1342" fg:w="9"/><text x="7.2633%" y="655.50"></text></g><g><title>[libxcb.so.1.1.0] (9 samples, 0.05%)</title><rect x="7.0133%" y="629" width="0.0470%" height="15" fill="rgb(223,190,21)" fg:x="1342" fg:w="9"/><text x="7.2633%" y="639.50"></text></g><g><title>__libc_recvmsg (9 samples, 0.05%)</title><rect x="7.0133%" y="613" width="0.0470%" height="15" fill="rgb(215,228,25)" fg:x="1342" fg:w="9"/><text x="7.2633%" y="623.50"></text></g><g><title>__recvmsg_syscall (9 samples, 0.05%)</title><rect x="7.0133%" y="597" width="0.0470%" height="15" fill="rgb(225,36,22)" fg:x="1342" fg:w="9"/><text x="7.2633%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="7.0133%" y="581" width="0.0470%" height="15" fill="rgb(251,106,46)" fg:x="1342" fg:w="9"/><text x="7.2633%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="7.0238%" y="565" width="0.0366%" height="15" fill="rgb(208,90,1)" fg:x="1344" fg:w="7"/><text x="7.2738%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="7.0238%" y="549" width="0.0366%" height="15" fill="rgb(243,10,4)" fg:x="1344" fg:w="7"/><text x="7.2738%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.0447%" y="533" width="0.0157%" height="15" fill="rgb(212,137,27)" fg:x="1348" fg:w="3"/><text x="7.2947%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.0447%" y="517" width="0.0157%" height="15" fill="rgb(231,220,49)" fg:x="1348" fg:w="3"/><text x="7.2947%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.0447%" y="501" width="0.0157%" height="15" fill="rgb(237,96,20)" fg:x="1348" fg:w="3"/><text x="7.2947%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.0447%" y="485" width="0.0157%" height="15" fill="rgb(239,229,30)" fg:x="1348" fg:w="3"/><text x="7.2947%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="7.0499%" y="469" width="0.0105%" height="15" fill="rgb(219,65,33)" fg:x="1349" fg:w="2"/><text x="7.2999%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="7.0499%" y="453" width="0.0105%" height="15" fill="rgb(243,134,7)" fg:x="1349" fg:w="2"/><text x="7.2999%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (12 samples, 0.06%)</title><rect x="7.0604%" y="645" width="0.0627%" height="15" fill="rgb(216,177,54)" fg:x="1351" fg:w="12"/><text x="7.3104%" y="655.50"></text></g><g><title>__libc_recvmsg (12 samples, 0.06%)</title><rect x="7.0604%" y="629" width="0.0627%" height="15" fill="rgb(211,160,20)" fg:x="1351" fg:w="12"/><text x="7.3104%" y="639.50"></text></g><g><title>__recvmsg_syscall (12 samples, 0.06%)</title><rect x="7.0604%" y="613" width="0.0627%" height="15" fill="rgb(239,85,39)" fg:x="1351" fg:w="12"/><text x="7.3104%" y="623.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="7.0604%" y="597" width="0.0627%" height="15" fill="rgb(232,125,22)" fg:x="1351" fg:w="12"/><text x="7.3104%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="7.0656%" y="581" width="0.0575%" height="15" fill="rgb(244,57,34)" fg:x="1352" fg:w="11"/><text x="7.3156%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="7.0656%" y="565" width="0.0575%" height="15" fill="rgb(214,203,32)" fg:x="1352" fg:w="11"/><text x="7.3156%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="7.0969%" y="549" width="0.0261%" height="15" fill="rgb(207,58,43)" fg:x="1358" fg:w="5"/><text x="7.3469%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="7.0969%" y="533" width="0.0261%" height="15" fill="rgb(215,193,15)" fg:x="1358" fg:w="5"/><text x="7.3469%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="7.0969%" y="517" width="0.0261%" height="15" fill="rgb(232,15,44)" fg:x="1358" fg:w="5"/><text x="7.3469%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="7.0969%" y="501" width="0.0261%" height="15" fill="rgb(212,3,48)" fg:x="1358" fg:w="5"/><text x="7.3469%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.1074%" y="485" width="0.0157%" height="15" fill="rgb(218,128,7)" fg:x="1360" fg:w="3"/><text x="7.3574%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.1074%" y="469" width="0.0157%" height="15" fill="rgb(226,216,39)" fg:x="1360" fg:w="3"/><text x="7.3574%" y="479.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (22 samples, 0.11%)</title><rect x="7.0133%" y="725" width="0.1150%" height="15" fill="rgb(243,47,51)" fg:x="1342" fg:w="22"/><text x="7.2633%" y="735.50"></text></g><g><title>XCheckIfEvent (22 samples, 0.11%)</title><rect x="7.0133%" y="709" width="0.1150%" height="15" fill="rgb(241,183,40)" fg:x="1342" fg:w="22"/><text x="7.2633%" y="719.50"></text></g><g><title>_XEventsQueued (22 samples, 0.11%)</title><rect x="7.0133%" y="693" width="0.1150%" height="15" fill="rgb(231,217,32)" fg:x="1342" fg:w="22"/><text x="7.2633%" y="703.50"></text></g><g><title>[libX11.so.6.4.0] (22 samples, 0.11%)</title><rect x="7.0133%" y="677" width="0.1150%" height="15" fill="rgb(229,61,38)" fg:x="1342" fg:w="22"/><text x="7.2633%" y="687.50"></text></g><g><title>xcb_poll_for_reply64 (13 samples, 0.07%)</title><rect x="7.0604%" y="661" width="0.0679%" height="15" fill="rgb(225,210,5)" fg:x="1351" fg:w="13"/><text x="7.3104%" y="671.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (24 samples, 0.13%)</title><rect x="7.0133%" y="741" width="0.1254%" height="15" fill="rgb(231,79,45)" fg:x="1342" fg:w="24"/><text x="7.2633%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (2 samples, 0.01%)</title><rect x="7.1283%" y="725" width="0.0105%" height="15" fill="rgb(224,100,7)" fg:x="1364" fg:w="2"/><text x="7.3783%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (2 samples, 0.01%)</title><rect x="7.1597%" y="645" width="0.0105%" height="15" fill="rgb(241,198,18)" fg:x="1370" fg:w="2"/><text x="7.4097%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.01%)</title><rect x="7.1597%" y="629" width="0.0105%" height="15" fill="rgb(252,97,53)" fg:x="1370" fg:w="2"/><text x="7.4097%" y="639.50"></text></g><g><title>ggez::graphics::canvas::Canvas::push_draw (4 samples, 0.02%)</title><rect x="7.1597%" y="661" width="0.0209%" height="15" fill="rgb(220,88,7)" fg:x="1370" fg:w="4"/><text x="7.4097%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="7.1701%" y="645" width="0.0105%" height="15" fill="rgb(213,176,14)" fg:x="1372" fg:w="2"/><text x="7.4201%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="7.1701%" y="629" width="0.0105%" height="15" fill="rgb(246,73,7)" fg:x="1372" fg:w="2"/><text x="7.4201%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="7.1701%" y="613" width="0.0105%" height="15" fill="rgb(245,64,36)" fg:x="1372" fg:w="2"/><text x="7.4201%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.1701%" y="597" width="0.0105%" height="15" fill="rgb(245,80,10)" fg:x="1372" fg:w="2"/><text x="7.4201%" y="607.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="7.1858%" y="645" width="0.0157%" height="15" fill="rgb(232,107,50)" fg:x="1375" fg:w="3"/><text x="7.4358%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="7.1858%" y="629" width="0.0157%" height="15" fill="rgb(253,3,0)" fg:x="1375" fg:w="3"/><text x="7.4358%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="7.1910%" y="613" width="0.0105%" height="15" fill="rgb(212,99,53)" fg:x="1376" fg:w="2"/><text x="7.4410%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="7.1910%" y="597" width="0.0105%" height="15" fill="rgb(249,111,54)" fg:x="1376" fg:w="2"/><text x="7.4410%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="7.2067%" y="613" width="0.0105%" height="15" fill="rgb(249,55,30)" fg:x="1379" fg:w="2"/><text x="7.4567%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.01%)</title><rect x="7.2067%" y="597" width="0.0105%" height="15" fill="rgb(237,47,42)" fg:x="1379" fg:w="2"/><text x="7.4567%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (2 samples, 0.01%)</title><rect x="7.2067%" y="581" width="0.0105%" height="15" fill="rgb(211,20,18)" fg:x="1379" fg:w="2"/><text x="7.4567%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt; (3 samples, 0.02%)</title><rect x="7.2067%" y="645" width="0.0157%" height="15" fill="rgb(231,203,46)" fg:x="1379" fg:w="3"/><text x="7.4567%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::BindGroup&gt;&gt; (3 samples, 0.02%)</title><rect x="7.2067%" y="629" width="0.0157%" height="15" fill="rgb(237,142,3)" fg:x="1379" fg:w="3"/><text x="7.4567%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_drop (6 samples, 0.03%)</title><rect x="7.2224%" y="565" width="0.0314%" height="15" fill="rgb(241,107,1)" fg:x="1382" fg:w="6"/><text x="7.4724%" y="575.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (5 samples, 0.03%)</title><rect x="7.2276%" y="549" width="0.0261%" height="15" fill="rgb(229,83,13)" fg:x="1383" fg:w="5"/><text x="7.4776%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.04%)</title><rect x="7.2224%" y="597" width="0.0366%" height="15" fill="rgb(241,91,40)" fg:x="1382" fg:w="7"/><text x="7.4724%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (7 samples, 0.04%)</title><rect x="7.2224%" y="581" width="0.0366%" height="15" fill="rgb(225,3,45)" fg:x="1382" fg:w="7"/><text x="7.4724%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt; (8 samples, 0.04%)</title><rect x="7.2224%" y="645" width="0.0418%" height="15" fill="rgb(244,223,14)" fg:x="1382" fg:w="8"/><text x="7.4724%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (8 samples, 0.04%)</title><rect x="7.2224%" y="629" width="0.0418%" height="15" fill="rgb(224,124,37)" fg:x="1382" fg:w="8"/><text x="7.4724%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.04%)</title><rect x="7.2224%" y="613" width="0.0418%" height="15" fill="rgb(251,171,30)" fg:x="1382" fg:w="8"/><text x="7.4724%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::instance::InstanceArray&gt; (2 samples, 0.01%)</title><rect x="7.2642%" y="645" width="0.0105%" height="15" fill="rgb(236,46,54)" fg:x="1390" fg:w="2"/><text x="7.5142%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="7.2799%" y="485" width="0.0209%" height="15" fill="rgb(245,213,5)" fg:x="1393" fg:w="4"/><text x="7.5299%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="7.2799%" y="469" width="0.0209%" height="15" fill="rgb(230,144,27)" fg:x="1393" fg:w="4"/><text x="7.5299%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="7.2799%" y="453" width="0.0209%" height="15" fill="rgb(220,86,6)" fg:x="1393" fg:w="4"/><text x="7.5299%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="7.2799%" y="437" width="0.0209%" height="15" fill="rgb(240,20,13)" fg:x="1393" fg:w="4"/><text x="7.5299%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="7.2851%" y="421" width="0.0157%" height="15" fill="rgb(217,89,34)" fg:x="1394" fg:w="3"/><text x="7.5351%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.04%)</title><rect x="7.2799%" y="629" width="0.0366%" height="15" fill="rgb(229,13,5)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="7.2799%" y="613" width="0.0366%" height="15" fill="rgb(244,67,35)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="7.2799%" y="597" width="0.0366%" height="15" fill="rgb(221,40,2)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.04%)</title><rect x="7.2799%" y="581" width="0.0366%" height="15" fill="rgb(237,157,21)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="7.2799%" y="565" width="0.0366%" height="15" fill="rgb(222,94,11)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="7.2799%" y="549" width="0.0366%" height="15" fill="rgb(249,113,6)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="559.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="7.2799%" y="533" width="0.0366%" height="15" fill="rgb(238,137,36)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="543.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="7.2799%" y="517" width="0.0366%" height="15" fill="rgb(210,102,26)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="527.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="7.2799%" y="501" width="0.0366%" height="15" fill="rgb(218,30,30)" fg:x="1393" fg:w="7"/><text x="7.5299%" y="511.50"></text></g><g><title>malloc_consolidate (3 samples, 0.02%)</title><rect x="7.3008%" y="485" width="0.0157%" height="15" fill="rgb(214,67,26)" fg:x="1397" fg:w="3"/><text x="7.5508%" y="495.50"></text></g><g><title>ggez::graphics::gpu::arc::ArcHandle&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="7.3164%" y="629" width="0.0105%" height="15" fill="rgb(251,9,53)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="7.3164%" y="613" width="0.0105%" height="15" fill="rgb(228,204,25)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="7.3164%" y="597" width="0.0105%" height="15" fill="rgb(207,153,8)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="7.3164%" y="581" width="0.0105%" height="15" fill="rgb(242,9,16)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="7.3164%" y="565" width="0.0105%" height="15" fill="rgb(217,211,10)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="7.3164%" y="549" width="0.0105%" height="15" fill="rgb(219,228,52)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="7.3164%" y="533" width="0.0105%" height="15" fill="rgb(231,92,29)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="7.3164%" y="517" width="0.0105%" height="15" fill="rgb(232,8,23)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="527.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="7.3164%" y="501" width="0.0105%" height="15" fill="rgb(216,211,34)" fg:x="1400" fg:w="2"/><text x="7.5664%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="7.3269%" y="613" width="0.0105%" height="15" fill="rgb(236,151,0)" fg:x="1402" fg:w="2"/><text x="7.5769%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="7.3269%" y="597" width="0.0105%" height="15" fill="rgb(209,168,3)" fg:x="1402" fg:w="2"/><text x="7.5769%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="7.3269%" y="581" width="0.0105%" height="15" fill="rgb(208,129,28)" fg:x="1402" fg:w="2"/><text x="7.5769%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.3269%" y="565" width="0.0105%" height="15" fill="rgb(229,78,22)" fg:x="1402" fg:w="2"/><text x="7.5769%" y="575.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::buffer (3 samples, 0.02%)</title><rect x="7.3269%" y="629" width="0.0157%" height="15" fill="rgb(228,187,13)" fg:x="1402" fg:w="3"/><text x="7.5769%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="7.3530%" y="581" width="0.0105%" height="15" fill="rgb(240,119,24)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="7.3530%" y="565" width="0.0105%" height="15" fill="rgb(209,194,42)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="7.3530%" y="549" width="0.0105%" height="15" fill="rgb(247,200,46)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="7.3530%" y="533" width="0.0105%" height="15" fill="rgb(218,76,16)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="7.3530%" y="517" width="0.0105%" height="15" fill="rgb(225,21,48)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="7.3530%" y="501" width="0.0105%" height="15" fill="rgb(239,223,50)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="7.3530%" y="485" width="0.0105%" height="15" fill="rgb(244,45,21)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="7.3530%" y="469" width="0.0105%" height="15" fill="rgb(232,33,43)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="7.3530%" y="453" width="0.0105%" height="15" fill="rgb(209,8,3)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="7.3530%" y="437" width="0.0105%" height="15" fill="rgb(214,25,53)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group::{{closure}} (2 samples, 0.01%)</title><rect x="7.3530%" y="421" width="0.0105%" height="15" fill="rgb(254,186,54)" fg:x="1407" fg:w="2"/><text x="7.6030%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="7.3844%" y="549" width="0.0105%" height="15" fill="rgb(208,174,49)" fg:x="1413" fg:w="2"/><text x="7.6344%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="7.3844%" y="533" width="0.0105%" height="15" fill="rgb(233,191,51)" fg:x="1413" fg:w="2"/><text x="7.6344%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="7.3844%" y="517" width="0.0105%" height="15" fill="rgb(222,134,10)" fg:x="1413" fg:w="2"/><text x="7.6344%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.3844%" y="501" width="0.0105%" height="15" fill="rgb(230,226,20)" fg:x="1413" fg:w="2"/><text x="7.6344%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="7.3844%" y="485" width="0.0105%" height="15" fill="rgb(251,111,25)" fg:x="1413" fg:w="2"/><text x="7.6344%" y="495.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="7.3844%" y="469" width="0.0105%" height="15" fill="rgb(224,40,46)" fg:x="1413" fg:w="2"/><text x="7.6344%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.03%)</title><rect x="7.4105%" y="549" width="0.0314%" height="15" fill="rgb(236,108,47)" fg:x="1418" fg:w="6"/><text x="7.6605%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.03%)</title><rect x="7.4105%" y="533" width="0.0314%" height="15" fill="rgb(234,93,0)" fg:x="1418" fg:w="6"/><text x="7.6605%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.03%)</title><rect x="7.4105%" y="517" width="0.0314%" height="15" fill="rgb(224,213,32)" fg:x="1418" fg:w="6"/><text x="7.6605%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.02%)</title><rect x="7.4262%" y="501" width="0.0157%" height="15" fill="rgb(251,11,48)" fg:x="1421" fg:w="3"/><text x="7.6762%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="7.4262%" y="485" width="0.0157%" height="15" fill="rgb(236,173,5)" fg:x="1421" fg:w="3"/><text x="7.6762%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="7.4262%" y="469" width="0.0157%" height="15" fill="rgb(230,95,12)" fg:x="1421" fg:w="3"/><text x="7.6762%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="7.4262%" y="453" width="0.0157%" height="15" fill="rgb(232,209,1)" fg:x="1421" fg:w="3"/><text x="7.6762%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="7.4262%" y="437" width="0.0157%" height="15" fill="rgb(232,6,1)" fg:x="1421" fg:w="3"/><text x="7.6762%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="7.4262%" y="421" width="0.0157%" height="15" fill="rgb(210,224,50)" fg:x="1421" fg:w="3"/><text x="7.6762%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.01%)</title><rect x="7.4419%" y="533" width="0.0105%" height="15" fill="rgb(228,127,35)" fg:x="1424" fg:w="2"/><text x="7.6919%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.01%)</title><rect x="7.4419%" y="517" width="0.0105%" height="15" fill="rgb(245,102,45)" fg:x="1424" fg:w="2"/><text x="7.6919%" y="527.50"></text></g><g><title>wgpu_core::track::buffer::BufferBindGroupState&lt;A&gt;::add_single (2 samples, 0.01%)</title><rect x="7.4523%" y="533" width="0.0105%" height="15" fill="rgb(214,1,49)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="7.4523%" y="517" width="0.0105%" height="15" fill="rgb(226,163,40)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="7.4523%" y="501" width="0.0105%" height="15" fill="rgb(239,212,28)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="7.4523%" y="485" width="0.0105%" height="15" fill="rgb(220,20,13)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="7.4523%" y="469" width="0.0105%" height="15" fill="rgb(210,164,35)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="7.4523%" y="453" width="0.0105%" height="15" fill="rgb(248,109,41)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="463.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="7.4523%" y="437" width="0.0105%" height="15" fill="rgb(238,23,50)" fg:x="1426" fg:w="2"/><text x="7.7023%" y="447.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (5 samples, 0.03%)</title><rect x="7.4419%" y="549" width="0.0261%" height="15" fill="rgb(211,48,49)" fg:x="1424" fg:w="5"/><text x="7.6919%" y="559.50"></text></g><g><title>ash::device::Device::update_descriptor_sets (3 samples, 0.02%)</title><rect x="7.4889%" y="533" width="0.0157%" height="15" fill="rgb(223,36,21)" fg:x="1433" fg:w="3"/><text x="7.7389%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="7.4889%" y="517" width="0.0157%" height="15" fill="rgb(207,123,46)" fg:x="1433" fg:w="3"/><text x="7.7389%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="7.4889%" y="501" width="0.0157%" height="15" fill="rgb(240,218,32)" fg:x="1433" fg:w="3"/><text x="7.7389%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="7.4889%" y="485" width="0.0157%" height="15" fill="rgb(252,5,43)" fg:x="1433" fg:w="3"/><text x="7.7389%" y="495.50"></text></g><g><title>&lt;gpu_descriptor::allocator::Allocation&lt;S&gt; as core::iter::traits::collect::Extend&lt;S&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="7.5098%" y="485" width="0.0105%" height="15" fill="rgb(252,84,19)" fg:x="1437" fg:w="2"/><text x="7.7598%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="7.5098%" y="469" width="0.0105%" height="15" fill="rgb(243,152,39)" fg:x="1437" fg:w="2"/><text x="7.7598%" y="479.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="7.5098%" y="453" width="0.0105%" height="15" fill="rgb(234,160,15)" fg:x="1437" fg:w="2"/><text x="7.7598%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="7.5412%" y="405" width="0.0209%" height="15" fill="rgb(237,34,20)" fg:x="1443" fg:w="4"/><text x="7.7912%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="7.5412%" y="389" width="0.0209%" height="15" fill="rgb(229,97,13)" fg:x="1443" fg:w="4"/><text x="7.7912%" y="399.50"></text></g><g><title>ash::device::Device::allocate_descriptor_sets (12 samples, 0.06%)</title><rect x="7.5203%" y="485" width="0.0627%" height="15" fill="rgb(234,71,50)" fg:x="1439" fg:w="12"/><text x="7.7703%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="7.5203%" y="469" width="0.0627%" height="15" fill="rgb(253,155,4)" fg:x="1439" fg:w="12"/><text x="7.7703%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="7.5203%" y="453" width="0.0627%" height="15" fill="rgb(222,185,37)" fg:x="1439" fg:w="12"/><text x="7.7703%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="7.5203%" y="437" width="0.0627%" height="15" fill="rgb(251,177,13)" fg:x="1439" fg:w="12"/><text x="7.7703%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="7.5255%" y="421" width="0.0575%" height="15" fill="rgb(250,179,40)" fg:x="1440" fg:w="11"/><text x="7.7755%" y="431.50"></text></g><g><title>__libc_calloc (4 samples, 0.02%)</title><rect x="7.5621%" y="405" width="0.0209%" height="15" fill="rgb(242,44,2)" fg:x="1447" fg:w="4"/><text x="7.8121%" y="415.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::allocate (17 samples, 0.09%)</title><rect x="7.5098%" y="517" width="0.0888%" height="15" fill="rgb(216,177,13)" fg:x="1437" fg:w="17"/><text x="7.7598%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::alloc_descriptor_sets (17 samples, 0.09%)</title><rect x="7.5098%" y="501" width="0.0888%" height="15" fill="rgb(216,106,43)" fg:x="1437" fg:w="17"/><text x="7.7598%" y="511.50"></text></g><g><title>ash::vk::definitions::ImageViewHandleInfoNVXBuilder::build (2 samples, 0.01%)</title><rect x="7.5882%" y="485" width="0.0105%" height="15" fill="rgb(216,183,2)" fg:x="1452" fg:w="2"/><text x="7.8382%" y="495.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (45 samples, 0.24%)</title><rect x="7.3791%" y="565" width="0.2352%" height="15" fill="rgb(249,75,3)" fg:x="1412" fg:w="45"/><text x="7.6291%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (28 samples, 0.15%)</title><rect x="7.4680%" y="549" width="0.1463%" height="15" fill="rgb(219,67,39)" fg:x="1429" fg:w="28"/><text x="7.7180%" y="559.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::allocate (21 samples, 0.11%)</title><rect x="7.5046%" y="533" width="0.1097%" height="15" fill="rgb(253,228,2)" fg:x="1436" fg:w="21"/><text x="7.7546%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (3 samples, 0.02%)</title><rect x="7.5986%" y="517" width="0.0157%" height="15" fill="rgb(235,138,27)" fg:x="1454" fg:w="3"/><text x="7.8486%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.02%)</title><rect x="7.5986%" y="501" width="0.0157%" height="15" fill="rgb(236,97,51)" fg:x="1454" fg:w="3"/><text x="7.8486%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (3 samples, 0.02%)</title><rect x="7.5986%" y="485" width="0.0157%" height="15" fill="rgb(240,80,30)" fg:x="1454" fg:w="3"/><text x="7.8486%" y="495.50"></text></g><g><title>&lt;gpu_descriptor_types::types::DescriptorTotalCount as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="7.5986%" y="469" width="0.0157%" height="15" fill="rgb(230,178,19)" fg:x="1454" fg:w="3"/><text x="7.8486%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.02%)</title><rect x="7.5986%" y="453" width="0.0157%" height="15" fill="rgb(210,190,27)" fg:x="1454" fg:w="3"/><text x="7.8486%" y="463.50"></text></g><g><title>wgpu::Device::create_bind_group (55 samples, 0.29%)</title><rect x="7.3426%" y="629" width="0.2874%" height="15" fill="rgb(222,107,31)" fg:x="1405" fg:w="55"/><text x="7.5926%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (55 samples, 0.29%)</title><rect x="7.3426%" y="613" width="0.2874%" height="15" fill="rgb(216,127,34)" fg:x="1405" fg:w="55"/><text x="7.5926%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (55 samples, 0.29%)</title><rect x="7.3426%" y="597" width="0.2874%" height="15" fill="rgb(234,116,52)" fg:x="1405" fg:w="55"/><text x="7.5926%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (49 samples, 0.26%)</title><rect x="7.3739%" y="581" width="0.2561%" height="15" fill="rgb(222,124,15)" fg:x="1411" fg:w="49"/><text x="7.6239%" y="591.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="7.6561%" y="421" width="0.0209%" height="15" fill="rgb(231,179,28)" fg:x="1465" fg:w="4"/><text x="7.9061%" y="431.50"></text></g><g><title>wgpu_core::LifeGuard::new (6 samples, 0.03%)</title><rect x="7.6509%" y="549" width="0.0314%" height="15" fill="rgb(226,93,45)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="559.50"></text></g><g><title>wgpu_core::RefCount::new (6 samples, 0.03%)</title><rect x="7.6509%" y="533" width="0.0314%" height="15" fill="rgb(215,8,51)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.03%)</title><rect x="7.6509%" y="517" width="0.0314%" height="15" fill="rgb(223,106,5)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.03%)</title><rect x="7.6509%" y="501" width="0.0314%" height="15" fill="rgb(250,191,5)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="7.6509%" y="485" width="0.0314%" height="15" fill="rgb(242,132,44)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="7.6509%" y="469" width="0.0314%" height="15" fill="rgb(251,152,29)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="479.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="7.6509%" y="453" width="0.0314%" height="15" fill="rgb(218,179,5)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="463.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="7.6509%" y="437" width="0.0314%" height="15" fill="rgb(227,67,19)" fg:x="1464" fg:w="6"/><text x="7.9009%" y="447.50"></text></g><g><title>syscall (13 samples, 0.07%)</title><rect x="7.7136%" y="469" width="0.0679%" height="15" fill="rgb(233,119,31)" fg:x="1476" fg:w="13"/><text x="7.9636%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="7.7241%" y="453" width="0.0575%" height="15" fill="rgb(241,120,22)" fg:x="1478" fg:w="11"/><text x="7.9741%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="7.7345%" y="437" width="0.0470%" height="15" fill="rgb(224,102,30)" fg:x="1480" fg:w="9"/><text x="7.9845%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="7.7502%" y="421" width="0.0314%" height="15" fill="rgb(210,164,37)" fg:x="1483" fg:w="6"/><text x="8.0002%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="7.7711%" y="405" width="0.0105%" height="15" fill="rgb(226,191,16)" fg:x="1487" fg:w="2"/><text x="8.0211%" y="415.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (19 samples, 0.10%)</title><rect x="7.6927%" y="501" width="0.0993%" height="15" fill="rgb(214,40,45)" fg:x="1472" fg:w="19"/><text x="7.9427%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.08%)</title><rect x="7.7136%" y="485" width="0.0784%" height="15" fill="rgb(244,29,26)" fg:x="1476" fg:w="15"/><text x="7.9636%" y="495.50"></text></g><g><title>syscall@plt (2 samples, 0.01%)</title><rect x="7.7816%" y="469" width="0.0105%" height="15" fill="rgb(216,16,5)" fg:x="1489" fg:w="2"/><text x="8.0316%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="7.7920%" y="469" width="0.0261%" height="15" fill="rgb(249,76,35)" fg:x="1491" fg:w="5"/><text x="8.0420%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="7.7920%" y="453" width="0.0261%" height="15" fill="rgb(207,11,44)" fg:x="1491" fg:w="5"/><text x="8.0420%" y="463.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (25 samples, 0.13%)</title><rect x="7.6927%" y="533" width="0.1307%" height="15" fill="rgb(228,190,49)" fg:x="1472" fg:w="25"/><text x="7.9427%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (25 samples, 0.13%)</title><rect x="7.6927%" y="517" width="0.1307%" height="15" fill="rgb(214,173,12)" fg:x="1472" fg:w="25"/><text x="7.9427%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="7.7920%" y="501" width="0.0314%" height="15" fill="rgb(218,26,35)" fg:x="1491" fg:w="6"/><text x="8.0420%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (6 samples, 0.03%)</title><rect x="7.7920%" y="485" width="0.0314%" height="15" fill="rgb(220,200,19)" fg:x="1491" fg:w="6"/><text x="8.0420%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="7.8390%" y="485" width="0.0157%" height="15" fill="rgb(239,95,49)" fg:x="1500" fg:w="3"/><text x="8.0890%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="7.8443%" y="469" width="0.0105%" height="15" fill="rgb(235,85,53)" fg:x="1501" fg:w="2"/><text x="8.0943%" y="479.50"></text></g><g><title>ash::device::Device::create_buffer (8 samples, 0.04%)</title><rect x="7.8234%" y="533" width="0.0418%" height="15" fill="rgb(233,133,31)" fg:x="1497" fg:w="8"/><text x="8.0734%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="7.8234%" y="517" width="0.0418%" height="15" fill="rgb(218,25,20)" fg:x="1497" fg:w="8"/><text x="8.0734%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="7.8338%" y="501" width="0.0314%" height="15" fill="rgb(252,210,38)" fg:x="1499" fg:w="6"/><text x="8.0838%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="7.8547%" y="485" width="0.0105%" height="15" fill="rgb(242,134,21)" fg:x="1503" fg:w="2"/><text x="8.1047%" y="495.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (4 samples, 0.02%)</title><rect x="7.8756%" y="501" width="0.0209%" height="15" fill="rgb(213,28,48)" fg:x="1507" fg:w="4"/><text x="8.1256%" y="511.50"></text></g><g><title>gpu_alloc::buddy::Size::acquire (4 samples, 0.02%)</title><rect x="7.8756%" y="485" width="0.0209%" height="15" fill="rgb(250,196,2)" fg:x="1507" fg:w="4"/><text x="8.1256%" y="495.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::len (2 samples, 0.01%)</title><rect x="7.8861%" y="469" width="0.0105%" height="15" fill="rgb(227,5,17)" fg:x="1509" fg:w="2"/><text x="8.1361%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.01%)</title><rect x="7.8861%" y="453" width="0.0105%" height="15" fill="rgb(221,226,24)" fg:x="1509" fg:w="2"/><text x="8.1361%" y="463.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (49 samples, 0.26%)</title><rect x="7.6509%" y="565" width="0.2561%" height="15" fill="rgb(211,5,48)" fg:x="1464" fg:w="49"/><text x="7.9009%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (43 samples, 0.22%)</title><rect x="7.6823%" y="549" width="0.2247%" height="15" fill="rgb(219,150,6)" fg:x="1470" fg:w="43"/><text x="7.9323%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (7 samples, 0.04%)</title><rect x="7.8704%" y="533" width="0.0366%" height="15" fill="rgb(251,46,16)" fg:x="1506" fg:w="7"/><text x="8.1204%" y="543.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (7 samples, 0.04%)</title><rect x="7.8704%" y="517" width="0.0366%" height="15" fill="rgb(220,204,40)" fg:x="1506" fg:w="7"/><text x="8.1204%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (56 samples, 0.29%)</title><rect x="7.6352%" y="597" width="0.2927%" height="15" fill="rgb(211,85,2)" fg:x="1461" fg:w="56"/><text x="7.8852%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (55 samples, 0.29%)</title><rect x="7.6404%" y="581" width="0.2874%" height="15" fill="rgb(229,17,7)" fg:x="1462" fg:w="55"/><text x="7.8904%" y="591.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (4 samples, 0.02%)</title><rect x="7.9070%" y="565" width="0.0209%" height="15" fill="rgb(239,72,28)" fg:x="1513" fg:w="4"/><text x="8.1570%" y="575.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (4 samples, 0.02%)</title><rect x="7.9070%" y="549" width="0.0209%" height="15" fill="rgb(230,47,54)" fg:x="1513" fg:w="4"/><text x="8.1570%" y="559.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (3 samples, 0.02%)</title><rect x="7.9122%" y="533" width="0.0157%" height="15" fill="rgb(214,50,8)" fg:x="1514" fg:w="3"/><text x="8.1622%" y="543.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="7.9174%" y="517" width="0.0105%" height="15" fill="rgb(216,198,43)" fg:x="1515" fg:w="2"/><text x="8.1674%" y="527.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="7.9174%" y="501" width="0.0105%" height="15" fill="rgb(234,20,35)" fg:x="1515" fg:w="2"/><text x="8.1674%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="7.9174%" y="485" width="0.0105%" height="15" fill="rgb(254,45,19)" fg:x="1515" fg:w="2"/><text x="8.1674%" y="495.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (125 samples, 0.65%)</title><rect x="7.2799%" y="645" width="0.6533%" height="15" fill="rgb(219,14,44)" fg:x="1393" fg:w="125"/><text x="7.5299%" y="655.50"></text></g><g><title>wgpu::Device::create_buffer (58 samples, 0.30%)</title><rect x="7.6300%" y="629" width="0.3031%" height="15" fill="rgb(217,220,26)" fg:x="1460" fg:w="58"/><text x="7.8800%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (57 samples, 0.30%)</title><rect x="7.6352%" y="613" width="0.2979%" height="15" fill="rgb(213,158,28)" fg:x="1461" fg:w="57"/><text x="7.8852%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.13%)</title><rect x="7.9331%" y="581" width="0.1307%" height="15" fill="rgb(252,51,52)" fg:x="1518" fg:w="25"/><text x="8.1831%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (25 samples, 0.13%)</title><rect x="7.9331%" y="565" width="0.1307%" height="15" fill="rgb(246,89,16)" fg:x="1518" fg:w="25"/><text x="8.1831%" y="575.50"></text></g><g><title>ash::device::Device::allocate_command_buffers (2 samples, 0.01%)</title><rect x="8.0794%" y="533" width="0.0105%" height="15" fill="rgb(216,158,49)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="543.50"></text></g><g><title>vkAllocateCommandBuffers (2 samples, 0.01%)</title><rect x="8.0794%" y="517" width="0.0105%" height="15" fill="rgb(236,107,19)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="501" width="0.0105%" height="15" fill="rgb(228,185,30)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="485" width="0.0105%" height="15" fill="rgb(246,134,8)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="469" width="0.0105%" height="15" fill="rgb(214,143,50)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="453" width="0.0105%" height="15" fill="rgb(228,75,8)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="437" width="0.0105%" height="15" fill="rgb(207,175,4)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="421" width="0.0105%" height="15" fill="rgb(205,108,24)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.0794%" y="405" width="0.0105%" height="15" fill="rgb(244,120,49)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="8.0794%" y="389" width="0.0105%" height="15" fill="rgb(223,47,38)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="8.0794%" y="373" width="0.0105%" height="15" fill="rgb(229,179,11)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="8.0794%" y="357" width="0.0105%" height="15" fill="rgb(231,122,1)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="8.0794%" y="341" width="0.0105%" height="15" fill="rgb(245,119,9)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="8.0794%" y="325" width="0.0105%" height="15" fill="rgb(241,163,25)" fg:x="1546" fg:w="2"/><text x="8.3294%" y="335.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (21 samples, 0.11%)</title><rect x="8.0742%" y="565" width="0.1097%" height="15" fill="rgb(217,214,3)" fg:x="1545" fg:w="21"/><text x="8.3242%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (21 samples, 0.11%)</title><rect x="8.0742%" y="549" width="0.1097%" height="15" fill="rgb(240,86,28)" fg:x="1545" fg:w="21"/><text x="8.3242%" y="559.50"></text></g><g><title>ash::device::Device::begin_command_buffer (18 samples, 0.09%)</title><rect x="8.0899%" y="533" width="0.0941%" height="15" fill="rgb(215,47,9)" fg:x="1548" fg:w="18"/><text x="8.3399%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.09%)</title><rect x="8.0899%" y="517" width="0.0941%" height="15" fill="rgb(252,25,45)" fg:x="1548" fg:w="18"/><text x="8.3399%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.07%)</title><rect x="8.1108%" y="501" width="0.0732%" height="15" fill="rgb(251,164,9)" fg:x="1552" fg:w="14"/><text x="8.3608%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="8.1526%" y="485" width="0.0314%" height="15" fill="rgb(233,194,0)" fg:x="1560" fg:w="6"/><text x="8.4026%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="8.1683%" y="469" width="0.0157%" height="15" fill="rgb(249,111,24)" fg:x="1563" fg:w="3"/><text x="8.4183%" y="479.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (32 samples, 0.17%)</title><rect x="8.0638%" y="581" width="0.1672%" height="15" fill="rgb(250,223,3)" fg:x="1543" fg:w="32"/><text x="8.3138%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (8 samples, 0.04%)</title><rect x="8.1892%" y="565" width="0.0418%" height="15" fill="rgb(236,178,37)" fg:x="1567" fg:w="8"/><text x="8.4392%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (8 samples, 0.04%)</title><rect x="8.1892%" y="549" width="0.0418%" height="15" fill="rgb(241,158,50)" fg:x="1567" fg:w="8"/><text x="8.4392%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="8.1892%" y="533" width="0.0418%" height="15" fill="rgb(213,121,41)" fg:x="1567" fg:w="8"/><text x="8.4392%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="8.1892%" y="517" width="0.0418%" height="15" fill="rgb(240,92,3)" fg:x="1567" fg:w="8"/><text x="8.4392%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="8.1892%" y="501" width="0.0418%" height="15" fill="rgb(205,123,3)" fg:x="1567" fg:w="8"/><text x="8.4392%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="8.1996%" y="485" width="0.0314%" height="15" fill="rgb(205,97,47)" fg:x="1569" fg:w="6"/><text x="8.4496%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="8.2153%" y="469" width="0.0157%" height="15" fill="rgb(247,152,14)" fg:x="1572" fg:w="3"/><text x="8.4653%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.2205%" y="453" width="0.0105%" height="15" fill="rgb(248,195,53)" fg:x="1573" fg:w="2"/><text x="8.4705%" y="463.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::resource::StagingBuffer&lt;A&gt;&gt;::flush (3 samples, 0.02%)</title><rect x="8.2310%" y="581" width="0.0157%" height="15" fill="rgb(226,201,16)" fg:x="1575" fg:w="3"/><text x="8.4810%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::unmap_buffer (3 samples, 0.02%)</title><rect x="8.2310%" y="565" width="0.0157%" height="15" fill="rgb(205,98,0)" fg:x="1575" fg:w="3"/><text x="8.4810%" y="575.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="8.2310%" y="549" width="0.0157%" height="15" fill="rgb(214,191,48)" fg:x="1575" fg:w="3"/><text x="8.4810%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="8.2310%" y="533" width="0.0157%" height="15" fill="rgb(237,112,39)" fg:x="1575" fg:w="3"/><text x="8.4810%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.02%)</title><rect x="8.2310%" y="517" width="0.0157%" height="15" fill="rgb(247,203,27)" fg:x="1575" fg:w="3"/><text x="8.4810%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="8.2310%" y="501" width="0.0157%" height="15" fill="rgb(235,124,28)" fg:x="1575" fg:w="3"/><text x="8.4810%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="8.2467%" y="517" width="0.0209%" height="15" fill="rgb(208,207,46)" fg:x="1578" fg:w="4"/><text x="8.4967%" y="527.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (5 samples, 0.03%)</title><rect x="8.2467%" y="549" width="0.0261%" height="15" fill="rgb(234,176,4)" fg:x="1578" fg:w="5"/><text x="8.4967%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (5 samples, 0.03%)</title><rect x="8.2467%" y="533" width="0.0261%" height="15" fill="rgb(230,133,28)" fg:x="1578" fg:w="5"/><text x="8.4967%" y="543.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block (3 samples, 0.02%)</title><rect x="8.2728%" y="501" width="0.0157%" height="15" fill="rgb(211,137,40)" fg:x="1583" fg:w="3"/><text x="8.5228%" y="511.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block_at (3 samples, 0.02%)</title><rect x="8.2728%" y="485" width="0.0157%" height="15" fill="rgb(254,35,13)" fg:x="1583" fg:w="3"/><text x="8.5228%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="8.2780%" y="469" width="0.0105%" height="15" fill="rgb(225,49,51)" fg:x="1584" fg:w="2"/><text x="8.5280%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="8.2780%" y="453" width="0.0105%" height="15" fill="rgb(251,10,15)" fg:x="1584" fg:w="2"/><text x="8.5280%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="8.2780%" y="437" width="0.0105%" height="15" fill="rgb(228,207,15)" fg:x="1584" fg:w="2"/><text x="8.5280%" y="447.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (4 samples, 0.02%)</title><rect x="8.2728%" y="517" width="0.0209%" height="15" fill="rgb(241,99,19)" fg:x="1583" fg:w="4"/><text x="8.5228%" y="527.50"></text></g><g><title>ggez::graphics::canvas::Canvas::draw (219 samples, 1.14%)</title><rect x="7.1597%" y="693" width="1.1445%" height="15" fill="rgb(207,104,49)" fg:x="1370" fg:w="219"/><text x="7.4097%" y="703.50"></text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (219 samples, 1.14%)</title><rect x="7.1597%" y="677" width="1.1445%" height="15" fill="rgb(234,99,18)" fg:x="1370" fg:w="219"/><text x="7.4097%" y="687.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (215 samples, 1.12%)</title><rect x="7.1806%" y="661" width="1.1236%" height="15" fill="rgb(213,191,49)" fg:x="1374" fg:w="215"/><text x="7.4306%" y="671.50"></text></g><g><title>wgpu::Queue::write_buffer (71 samples, 0.37%)</title><rect x="7.9331%" y="645" width="0.3710%" height="15" fill="rgb(210,226,19)" fg:x="1518" fg:w="71"/><text x="8.1831%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (71 samples, 0.37%)</title><rect x="7.9331%" y="629" width="0.3710%" height="15" fill="rgb(229,97,18)" fg:x="1518" fg:w="71"/><text x="8.1831%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (71 samples, 0.37%)</title><rect x="7.9331%" y="613" width="0.3710%" height="15" fill="rgb(211,167,15)" fg:x="1518" fg:w="71"/><text x="8.1831%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (71 samples, 0.37%)</title><rect x="7.9331%" y="597" width="0.3710%" height="15" fill="rgb(210,169,34)" fg:x="1518" fg:w="71"/><text x="8.1831%" y="607.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (11 samples, 0.06%)</title><rect x="8.2467%" y="581" width="0.0575%" height="15" fill="rgb(241,121,31)" fg:x="1578" fg:w="11"/><text x="8.4967%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.06%)</title><rect x="8.2467%" y="565" width="0.0575%" height="15" fill="rgb(232,40,11)" fg:x="1578" fg:w="11"/><text x="8.4967%" y="575.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (6 samples, 0.03%)</title><rect x="8.2728%" y="549" width="0.0314%" height="15" fill="rgb(205,86,26)" fg:x="1583" fg:w="6"/><text x="8.5228%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (6 samples, 0.03%)</title><rect x="8.2728%" y="533" width="0.0314%" height="15" fill="rgb(231,126,28)" fg:x="1583" fg:w="6"/><text x="8.5228%" y="543.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::mask (2 samples, 0.01%)</title><rect x="8.2937%" y="517" width="0.0105%" height="15" fill="rgb(219,221,18)" fg:x="1587" fg:w="2"/><text x="8.5437%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;i32,alloc::vec::Vec&lt;ggez::graphics::canvas::DrawCommand&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="8.3042%" y="661" width="0.0209%" height="15" fill="rgb(211,40,0)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="8.3042%" y="645" width="0.0209%" height="15" fill="rgb(239,85,43)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="655.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="8.3042%" y="629" width="0.0209%" height="15" fill="rgb(231,55,21)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;i32,alloc::vec::Vec&lt;ggez::graphics::canvas::DrawCommand&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="8.3042%" y="613" width="0.0209%" height="15" fill="rgb(225,184,43)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="8.3042%" y="597" width="0.0209%" height="15" fill="rgb(251,158,41)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4 samples, 0.02%)</title><rect x="8.3042%" y="581" width="0.0209%" height="15" fill="rgb(234,159,37)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4 samples, 0.02%)</title><rect x="8.3042%" y="565" width="0.0209%" height="15" fill="rgb(216,204,22)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::canvas::DrawCommand&gt;&gt; (4 samples, 0.02%)</title><rect x="8.3042%" y="549" width="0.0209%" height="15" fill="rgb(214,17,3)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="8.3042%" y="533" width="0.0209%" height="15" fill="rgb(212,111,17)" fg:x="1589" fg:w="4"/><text x="8.5542%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ggez::graphics::canvas::DrawCommand]&gt; (2 samples, 0.01%)</title><rect x="8.3146%" y="517" width="0.0105%" height="15" fill="rgb(221,157,24)" fg:x="1591" fg:w="2"/><text x="8.5646%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InstanceArrayView&gt; (2 samples, 0.01%)</title><rect x="8.3146%" y="501" width="0.0105%" height="15" fill="rgb(252,16,13)" fg:x="1591" fg:w="2"/><text x="8.5646%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ggez::graphics::context::WgpuContext&gt;&gt; (2 samples, 0.01%)</title><rect x="8.3251%" y="661" width="0.0105%" height="15" fill="rgb(221,62,2)" fg:x="1593" fg:w="2"/><text x="8.5751%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="8.3251%" y="645" width="0.0105%" height="15" fill="rgb(247,87,22)" fg:x="1593" fg:w="2"/><text x="8.5751%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="8.3251%" y="629" width="0.0105%" height="15" fill="rgb(215,73,9)" fg:x="1593" fg:w="2"/><text x="8.5751%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="8.3251%" y="613" width="0.0105%" height="15" fill="rgb(207,175,33)" fg:x="1593" fg:w="2"/><text x="8.5751%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::canvas::Canvas&gt; (8 samples, 0.04%)</title><rect x="8.3042%" y="677" width="0.0418%" height="15" fill="rgb(243,129,54)" fg:x="1589" fg:w="8"/><text x="8.5542%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (2 samples, 0.01%)</title><rect x="8.3355%" y="661" width="0.0105%" height="15" fill="rgb(227,119,45)" fg:x="1595" fg:w="2"/><text x="8.5855%" y="671.50"></text></g><g><title>&lt;ggez::graphics::image::Image as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="8.3616%" y="645" width="0.0105%" height="15" fill="rgb(205,109,36)" fg:x="1600" fg:w="2"/><text x="8.6116%" y="655.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="8.3616%" y="629" width="0.0105%" height="15" fill="rgb(205,6,39)" fg:x="1600" fg:w="2"/><text x="8.6116%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="8.3616%" y="613" width="0.0105%" height="15" fill="rgb(221,32,16)" fg:x="1600" fg:w="2"/><text x="8.6116%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="8.3616%" y="597" width="0.0105%" height="15" fill="rgb(228,144,50)" fg:x="1600" fg:w="2"/><text x="8.6116%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="8.3616%" y="581" width="0.0105%" height="15" fill="rgb(229,201,53)" fg:x="1600" fg:w="2"/><text x="8.6116%" y="591.50"></text></g><g><title>exp2_inline (2 samples, 0.01%)</title><rect x="8.3721%" y="565" width="0.0105%" height="15" fill="rgb(249,153,27)" fg:x="1602" fg:w="2"/><text x="8.6221%" y="575.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (3 samples, 0.02%)</title><rect x="8.3721%" y="645" width="0.0157%" height="15" fill="rgb(227,106,25)" fg:x="1602" fg:w="3"/><text x="8.6221%" y="655.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (3 samples, 0.02%)</title><rect x="8.3721%" y="629" width="0.0157%" height="15" fill="rgb(230,65,29)" fg:x="1602" fg:w="3"/><text x="8.6221%" y="639.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (3 samples, 0.02%)</title><rect x="8.3721%" y="613" width="0.0157%" height="15" fill="rgb(221,57,46)" fg:x="1602" fg:w="3"/><text x="8.6221%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (3 samples, 0.02%)</title><rect x="8.3721%" y="597" width="0.0157%" height="15" fill="rgb(229,161,17)" fg:x="1602" fg:w="3"/><text x="8.6221%" y="607.50"></text></g><g><title>__powf_fma (3 samples, 0.02%)</title><rect x="8.3721%" y="581" width="0.0157%" height="15" fill="rgb(222,213,11)" fg:x="1602" fg:w="3"/><text x="8.6221%" y="591.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::buffer (2 samples, 0.01%)</title><rect x="8.3878%" y="645" width="0.0105%" height="15" fill="rgb(235,35,13)" fg:x="1605" fg:w="2"/><text x="8.6378%" y="655.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (2 samples, 0.01%)</title><rect x="8.3982%" y="629" width="0.0105%" height="15" fill="rgb(233,158,34)" fg:x="1607" fg:w="2"/><text x="8.6482%" y="639.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::create (3 samples, 0.02%)</title><rect x="8.3982%" y="645" width="0.0157%" height="15" fill="rgb(215,151,48)" fg:x="1607" fg:w="3"/><text x="8.6482%" y="655.50"></text></g><g><title>ggez::graphics::sampler::SamplerCache::get (2 samples, 0.01%)</title><rect x="8.4244%" y="629" width="0.0105%" height="15" fill="rgb(229,84,14)" fg:x="1612" fg:w="2"/><text x="8.6744%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="8.4244%" y="613" width="0.0105%" height="15" fill="rgb(229,68,14)" fg:x="1612" fg:w="2"/><text x="8.6744%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="8.4244%" y="597" width="0.0105%" height="15" fill="rgb(243,106,26)" fg:x="1612" fg:w="2"/><text x="8.6744%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="8.4244%" y="581" width="0.0105%" height="15" fill="rgb(206,45,38)" fg:x="1612" fg:w="2"/><text x="8.6744%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="8.4244%" y="565" width="0.0105%" height="15" fill="rgb(226,6,15)" fg:x="1612" fg:w="2"/><text x="8.6744%" y="575.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_image (5 samples, 0.03%)</title><rect x="8.4191%" y="645" width="0.0261%" height="15" fill="rgb(232,22,54)" fg:x="1611" fg:w="5"/><text x="8.6691%" y="655.50"></text></g><g><title>wgpu::RenderPass::set_bind_group (2 samples, 0.01%)</title><rect x="8.4348%" y="629" width="0.0105%" height="15" fill="rgb(229,222,32)" fg:x="1614" fg:w="2"/><text x="8.6848%" y="639.50"></text></g><g><title>wgpu_render_pass_set_bind_group (2 samples, 0.01%)</title><rect x="8.4348%" y="613" width="0.0105%" height="15" fill="rgb(228,62,29)" fg:x="1614" fg:w="2"/><text x="8.6848%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="8.4505%" y="629" width="0.0105%" height="15" fill="rgb(251,103,34)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.4505%" y="613" width="0.0105%" height="15" fill="rgb(233,12,30)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="8.4505%" y="597" width="0.0105%" height="15" fill="rgb(238,52,0)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="8.4505%" y="581" width="0.0105%" height="15" fill="rgb(223,98,5)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="8.4505%" y="565" width="0.0105%" height="15" fill="rgb(228,75,37)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="8.4505%" y="549" width="0.0105%" height="15" fill="rgb(205,115,49)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="559.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="8.4505%" y="533" width="0.0105%" height="15" fill="rgb(250,154,43)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="543.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="8.4505%" y="517" width="0.0105%" height="15" fill="rgb(226,43,29)" fg:x="1617" fg:w="2"/><text x="8.7005%" y="527.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="8.4662%" y="613" width="0.0157%" height="15" fill="rgb(249,228,39)" fg:x="1620" fg:w="3"/><text x="8.7162%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="8.4662%" y="597" width="0.0157%" height="15" fill="rgb(216,79,43)" fg:x="1620" fg:w="3"/><text x="8.7162%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="8.4662%" y="581" width="0.0157%" height="15" fill="rgb(228,95,12)" fg:x="1620" fg:w="3"/><text x="8.7162%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="8.4662%" y="565" width="0.0157%" height="15" fill="rgb(249,221,15)" fg:x="1620" fg:w="3"/><text x="8.7162%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="8.4818%" y="565" width="0.0105%" height="15" fill="rgb(233,34,13)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="8.4818%" y="549" width="0.0105%" height="15" fill="rgb(214,103,39)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="8.4818%" y="533" width="0.0105%" height="15" fill="rgb(251,126,39)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (2 samples, 0.01%)</title><rect x="8.4818%" y="517" width="0.0105%" height="15" fill="rgb(214,216,36)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="8.4818%" y="501" width="0.0105%" height="15" fill="rgb(220,221,8)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.01%)</title><rect x="8.4818%" y="485" width="0.0105%" height="15" fill="rgb(240,216,3)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="495.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (2 samples, 0.01%)</title><rect x="8.4818%" y="469" width="0.0105%" height="15" fill="rgb(232,218,17)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="8.4818%" y="453" width="0.0105%" height="15" fill="rgb(229,163,45)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.4818%" y="437" width="0.0105%" height="15" fill="rgb(231,110,42)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.4818%" y="421" width="0.0105%" height="15" fill="rgb(208,170,48)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.4818%" y="405" width="0.0105%" height="15" fill="rgb(239,116,25)" fg:x="1623" fg:w="2"/><text x="8.7318%" y="415.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (3 samples, 0.02%)</title><rect x="8.4818%" y="613" width="0.0157%" height="15" fill="rgb(219,200,50)" fg:x="1623" fg:w="3"/><text x="8.7318%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.02%)</title><rect x="8.4818%" y="597" width="0.0157%" height="15" fill="rgb(245,200,0)" fg:x="1623" fg:w="3"/><text x="8.7318%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.02%)</title><rect x="8.4818%" y="581" width="0.0157%" height="15" fill="rgb(245,119,33)" fg:x="1623" fg:w="3"/><text x="8.7318%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.02%)</title><rect x="8.4975%" y="549" width="0.0157%" height="15" fill="rgb(231,125,12)" fg:x="1626" fg:w="3"/><text x="8.7475%" y="559.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::create (12 samples, 0.06%)</title><rect x="8.4662%" y="629" width="0.0627%" height="15" fill="rgb(216,96,41)" fg:x="1620" fg:w="12"/><text x="8.7162%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.03%)</title><rect x="8.4975%" y="613" width="0.0314%" height="15" fill="rgb(248,43,45)" fg:x="1626" fg:w="6"/><text x="8.7475%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.03%)</title><rect x="8.4975%" y="597" width="0.0314%" height="15" fill="rgb(217,222,7)" fg:x="1626" fg:w="6"/><text x="8.7475%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="8.4975%" y="581" width="0.0314%" height="15" fill="rgb(233,28,6)" fg:x="1626" fg:w="6"/><text x="8.7475%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.03%)</title><rect x="8.4975%" y="565" width="0.0314%" height="15" fill="rgb(231,218,15)" fg:x="1626" fg:w="6"/><text x="8.7475%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="8.5132%" y="549" width="0.0157%" height="15" fill="rgb(226,171,48)" fg:x="1629" fg:w="3"/><text x="8.7632%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="8.5132%" y="533" width="0.0157%" height="15" fill="rgb(235,201,9)" fg:x="1629" fg:w="3"/><text x="8.7632%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="8.5132%" y="517" width="0.0157%" height="15" fill="rgb(217,80,15)" fg:x="1629" fg:w="3"/><text x="8.7632%" y="527.50"></text></g><g><title>&lt;wgpu_types::TextureViewDimension as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="8.5602%" y="437" width="0.0105%" height="15" fill="rgb(219,152,8)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="8.5602%" y="421" width="0.0105%" height="15" fill="rgb(243,107,38)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="8.5602%" y="405" width="0.0105%" height="15" fill="rgb(231,17,5)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="8.5602%" y="389" width="0.0105%" height="15" fill="rgb(209,25,54)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.5602%" y="373" width="0.0105%" height="15" fill="rgb(219,0,2)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.5602%" y="357" width="0.0105%" height="15" fill="rgb(246,9,5)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.5602%" y="341" width="0.0105%" height="15" fill="rgb(226,159,4)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.01%)</title><rect x="8.5602%" y="325" width="0.0105%" height="15" fill="rgb(219,175,34)" fg:x="1638" fg:w="2"/><text x="8.8102%" y="335.50"></text></g><g><title>&lt;wgpu_types::BindingType as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="8.5550%" y="453" width="0.0209%" height="15" fill="rgb(236,10,46)" fg:x="1637" fg:w="4"/><text x="8.8050%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (7 samples, 0.04%)</title><rect x="8.5498%" y="581" width="0.0366%" height="15" fill="rgb(240,211,16)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.04%)</title><rect x="8.5498%" y="565" width="0.0366%" height="15" fill="rgb(205,3,43)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.04%)</title><rect x="8.5498%" y="549" width="0.0366%" height="15" fill="rgb(245,7,22)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (7 samples, 0.04%)</title><rect x="8.5498%" y="533" width="0.0366%" height="15" fill="rgb(239,132,32)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.04%)</title><rect x="8.5498%" y="517" width="0.0366%" height="15" fill="rgb(228,202,34)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.04%)</title><rect x="8.5498%" y="501" width="0.0366%" height="15" fill="rgb(254,200,22)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="511.50"></text></g><g><title>core::hash::Hash::hash_slice (7 samples, 0.04%)</title><rect x="8.5498%" y="485" width="0.0366%" height="15" fill="rgb(219,10,39)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="495.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::hash::Hash&gt;::hash (7 samples, 0.04%)</title><rect x="8.5498%" y="469" width="0.0366%" height="15" fill="rgb(226,210,39)" fg:x="1636" fg:w="7"/><text x="8.7998%" y="479.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (16 samples, 0.08%)</title><rect x="8.5289%" y="629" width="0.0836%" height="15" fill="rgb(208,219,16)" fg:x="1632" fg:w="16"/><text x="8.7789%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12 samples, 0.06%)</title><rect x="8.5498%" y="613" width="0.0627%" height="15" fill="rgb(216,158,51)" fg:x="1636" fg:w="12"/><text x="8.7998%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 0.06%)</title><rect x="8.5498%" y="597" width="0.0627%" height="15" fill="rgb(233,14,44)" fg:x="1636" fg:w="12"/><text x="8.7998%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="8.5864%" y="581" width="0.0261%" height="15" fill="rgb(237,97,39)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.03%)</title><rect x="8.5864%" y="565" width="0.0261%" height="15" fill="rgb(218,198,43)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.03%)</title><rect x="8.5864%" y="549" width="0.0261%" height="15" fill="rgb(231,104,20)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (5 samples, 0.03%)</title><rect x="8.5864%" y="533" width="0.0261%" height="15" fill="rgb(254,36,13)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (5 samples, 0.03%)</title><rect x="8.5864%" y="517" width="0.0261%" height="15" fill="rgb(248,14,50)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="527.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (5 samples, 0.03%)</title><rect x="8.5864%" y="501" width="0.0261%" height="15" fill="rgb(217,107,29)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.03%)</title><rect x="8.5864%" y="485" width="0.0261%" height="15" fill="rgb(251,169,33)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.03%)</title><rect x="8.5864%" y="469" width="0.0261%" height="15" fill="rgb(217,108,32)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.03%)</title><rect x="8.5864%" y="453" width="0.0261%" height="15" fill="rgb(219,66,42)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.03%)</title><rect x="8.5864%" y="437" width="0.0261%" height="15" fill="rgb(206,180,7)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (5 samples, 0.03%)</title><rect x="8.5864%" y="421" width="0.0261%" height="15" fill="rgb(208,226,31)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (5 samples, 0.03%)</title><rect x="8.5864%" y="405" width="0.0261%" height="15" fill="rgb(218,26,49)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.03%)</title><rect x="8.5864%" y="389" width="0.0261%" height="15" fill="rgb(233,197,48)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="399.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::cmp::PartialEq&gt;::eq (5 samples, 0.03%)</title><rect x="8.5864%" y="373" width="0.0261%" height="15" fill="rgb(252,181,51)" fg:x="1643" fg:w="5"/><text x="8.8364%" y="383.50"></text></g><g><title>&lt;wgpu_types::BindingType as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="8.6020%" y="357" width="0.0105%" height="15" fill="rgb(253,90,19)" fg:x="1646" fg:w="2"/><text x="8.8520%" y="367.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::seed (2 samples, 0.01%)</title><rect x="8.6177%" y="629" width="0.0105%" height="15" fill="rgb(215,171,30)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="639.50"></text></g><g><title>&lt;ggez::graphics::internal_canvas::ShaderType as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="8.6177%" y="613" width="0.0105%" height="15" fill="rgb(214,222,9)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="8.6177%" y="597" width="0.0105%" height="15" fill="rgb(223,3,22)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="8.6177%" y="581" width="0.0105%" height="15" fill="rgb(225,196,46)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="8.6177%" y="565" width="0.0105%" height="15" fill="rgb(209,110,37)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.6177%" y="549" width="0.0105%" height="15" fill="rgb(249,89,12)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.6177%" y="533" width="0.0105%" height="15" fill="rgb(226,27,33)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.6177%" y="517" width="0.0105%" height="15" fill="rgb(213,82,22)" fg:x="1649" fg:w="2"/><text x="8.8677%" y="527.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::layout (2 samples, 0.01%)</title><rect x="8.6282%" y="629" width="0.0105%" height="15" fill="rgb(248,140,0)" fg:x="1651" fg:w="2"/><text x="8.8782%" y="639.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="8.6438%" y="533" width="0.0157%" height="15" fill="rgb(228,106,3)" fg:x="1654" fg:w="3"/><text x="8.8938%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (2 samples, 0.01%)</title><rect x="8.6491%" y="517" width="0.0105%" height="15" fill="rgb(209,23,37)" fg:x="1655" fg:w="2"/><text x="8.8991%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u8 (2 samples, 0.01%)</title><rect x="8.6491%" y="501" width="0.0105%" height="15" fill="rgb(241,93,50)" fg:x="1655" fg:w="2"/><text x="8.8991%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.6491%" y="485" width="0.0105%" height="15" fill="rgb(253,46,43)" fg:x="1655" fg:w="2"/><text x="8.8991%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.6491%" y="469" width="0.0105%" height="15" fill="rgb(226,206,43)" fg:x="1655" fg:w="2"/><text x="8.8991%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="8.6491%" y="453" width="0.0105%" height="15" fill="rgb(217,54,7)" fg:x="1655" fg:w="2"/><text x="8.8991%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.02%)</title><rect x="8.6438%" y="581" width="0.0209%" height="15" fill="rgb(223,5,52)" fg:x="1654" fg:w="4"/><text x="8.8938%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="8.6438%" y="565" width="0.0209%" height="15" fill="rgb(206,52,46)" fg:x="1654" fg:w="4"/><text x="8.8938%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.02%)</title><rect x="8.6438%" y="549" width="0.0209%" height="15" fill="rgb(253,136,11)" fg:x="1654" fg:w="4"/><text x="8.8938%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.02%)</title><rect x="8.6648%" y="549" width="0.0209%" height="15" fill="rgb(208,106,33)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.02%)</title><rect x="8.6648%" y="533" width="0.0209%" height="15" fill="rgb(206,54,4)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="543.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="8.6648%" y="517" width="0.0209%" height="15" fill="rgb(213,3,15)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="8.6648%" y="501" width="0.0209%" height="15" fill="rgb(252,211,39)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="511.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.02%)</title><rect x="8.6648%" y="485" width="0.0209%" height="15" fill="rgb(223,6,36)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.02%)</title><rect x="8.6648%" y="469" width="0.0209%" height="15" fill="rgb(252,169,45)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.02%)</title><rect x="8.6648%" y="453" width="0.0209%" height="15" fill="rgb(212,48,26)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="8.6648%" y="437" width="0.0209%" height="15" fill="rgb(251,102,48)" fg:x="1658" fg:w="4"/><text x="8.9148%" y="447.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::render_pipeline (11 samples, 0.06%)</title><rect x="8.6386%" y="629" width="0.0575%" height="15" fill="rgb(243,208,16)" fg:x="1653" fg:w="11"/><text x="8.8886%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10 samples, 0.05%)</title><rect x="8.6438%" y="613" width="0.0523%" height="15" fill="rgb(219,96,24)" fg:x="1654" fg:w="10"/><text x="8.8938%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10 samples, 0.05%)</title><rect x="8.6438%" y="597" width="0.0523%" height="15" fill="rgb(219,33,29)" fg:x="1654" fg:w="10"/><text x="8.8938%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="8.6648%" y="581" width="0.0314%" height="15" fill="rgb(223,176,5)" fg:x="1658" fg:w="6"/><text x="8.9148%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.03%)</title><rect x="8.6648%" y="565" width="0.0314%" height="15" fill="rgb(228,140,14)" fg:x="1658" fg:w="6"/><text x="8.9148%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="8.6857%" y="549" width="0.0105%" height="15" fill="rgb(217,179,31)" fg:x="1662" fg:w="2"/><text x="8.9357%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="8.6857%" y="533" width="0.0105%" height="15" fill="rgb(230,9,30)" fg:x="1662" fg:w="2"/><text x="8.9357%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="8.6857%" y="517" width="0.0105%" height="15" fill="rgb(230,136,20)" fg:x="1662" fg:w="2"/><text x="8.9357%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (51 samples, 0.27%)</title><rect x="8.4453%" y="645" width="0.2665%" height="15" fill="rgb(215,210,22)" fg:x="1616" fg:w="51"/><text x="8.6953%" y="655.50"></text></g><g><title>wgpu::RenderPass::set_pipeline (2 samples, 0.01%)</title><rect x="8.7013%" y="629" width="0.0105%" height="15" fill="rgb(218,43,5)" fg:x="1665" fg:w="2"/><text x="8.9513%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.7170%" y="517" width="0.0105%" height="15" fill="rgb(216,11,5)" fg:x="1668" fg:w="2"/><text x="8.9670%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.7170%" y="501" width="0.0105%" height="15" fill="rgb(209,82,29)" fg:x="1668" fg:w="2"/><text x="8.9670%" y="511.50"></text></g><g><title>syscall (2 samples, 0.01%)</title><rect x="8.7170%" y="485" width="0.0105%" height="15" fill="rgb(244,115,12)" fg:x="1668" fg:w="2"/><text x="8.9670%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="8.7170%" y="469" width="0.0105%" height="15" fill="rgb(222,82,18)" fg:x="1668" fg:w="2"/><text x="8.9670%" y="479.50"></text></g><g><title>wgpu::Queue::write_buffer (4 samples, 0.02%)</title><rect x="8.7118%" y="645" width="0.0209%" height="15" fill="rgb(249,227,8)" fg:x="1667" fg:w="4"/><text x="8.9618%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (4 samples, 0.02%)</title><rect x="8.7118%" y="629" width="0.0209%" height="15" fill="rgb(253,141,45)" fg:x="1667" fg:w="4"/><text x="8.9618%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (4 samples, 0.02%)</title><rect x="8.7118%" y="613" width="0.0209%" height="15" fill="rgb(234,184,4)" fg:x="1667" fg:w="4"/><text x="8.9618%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (4 samples, 0.02%)</title><rect x="8.7118%" y="597" width="0.0209%" height="15" fill="rgb(218,194,23)" fg:x="1667" fg:w="4"/><text x="8.9618%" y="607.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (3 samples, 0.02%)</title><rect x="8.7170%" y="581" width="0.0157%" height="15" fill="rgb(235,66,41)" fg:x="1668" fg:w="3"/><text x="8.9670%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (3 samples, 0.02%)</title><rect x="8.7170%" y="565" width="0.0157%" height="15" fill="rgb(245,217,1)" fg:x="1668" fg:w="3"/><text x="8.9670%" y="575.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (3 samples, 0.02%)</title><rect x="8.7170%" y="549" width="0.0157%" height="15" fill="rgb(229,91,1)" fg:x="1668" fg:w="3"/><text x="8.9670%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="8.7170%" y="533" width="0.0157%" height="15" fill="rgb(207,101,30)" fg:x="1668" fg:w="3"/><text x="8.9670%" y="543.50"></text></g><g><title>wgpu::RenderPass::draw_indexed (2 samples, 0.01%)</title><rect x="8.7327%" y="645" width="0.0105%" height="15" fill="rgb(223,82,49)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="655.50"></text></g><g><title>wgpu_render_pass_draw_indexed (2 samples, 0.01%)</title><rect x="8.7327%" y="629" width="0.0105%" height="15" fill="rgb(218,167,17)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="8.7327%" y="613" width="0.0105%" height="15" fill="rgb(208,103,14)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.7327%" y="597" width="0.0105%" height="15" fill="rgb(238,20,8)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="8.7327%" y="581" width="0.0105%" height="15" fill="rgb(218,80,54)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="8.7327%" y="565" width="0.0105%" height="15" fill="rgb(240,144,17)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="8.7327%" y="549" width="0.0105%" height="15" fill="rgb(245,27,50)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="8.7327%" y="533" width="0.0105%" height="15" fill="rgb(251,51,7)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="8.7327%" y="517" width="0.0105%" height="15" fill="rgb(245,217,29)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="527.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="8.7327%" y="501" width="0.0105%" height="15" fill="rgb(221,176,29)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="511.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="8.7327%" y="485" width="0.0105%" height="15" fill="rgb(212,180,24)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="495.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="8.7327%" y="469" width="0.0105%" height="15" fill="rgb(254,24,2)" fg:x="1671" fg:w="2"/><text x="8.9827%" y="479.50"></text></g><g><title>wgpu::RenderPass::set_bind_group (2 samples, 0.01%)</title><rect x="8.7431%" y="645" width="0.0105%" height="15" fill="rgb(230,100,2)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="655.50"></text></g><g><title>wgpu_render_pass_set_bind_group (2 samples, 0.01%)</title><rect x="8.7431%" y="629" width="0.0105%" height="15" fill="rgb(219,142,25)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="8.7431%" y="613" width="0.0105%" height="15" fill="rgb(240,73,43)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.7431%" y="597" width="0.0105%" height="15" fill="rgb(214,114,15)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="8.7431%" y="581" width="0.0105%" height="15" fill="rgb(207,130,4)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="8.7431%" y="565" width="0.0105%" height="15" fill="rgb(221,25,40)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="8.7431%" y="549" width="0.0105%" height="15" fill="rgb(241,184,7)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="8.7431%" y="533" width="0.0105%" height="15" fill="rgb(235,159,4)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="8.7431%" y="517" width="0.0105%" height="15" fill="rgb(214,87,48)" fg:x="1673" fg:w="2"/><text x="8.9931%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (78 samples, 0.41%)</title><rect x="8.3564%" y="661" width="0.4076%" height="15" fill="rgb(246,198,24)" fg:x="1599" fg:w="78"/><text x="8.6064%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.09%)</title><rect x="8.7902%" y="533" width="0.0941%" height="15" fill="rgb(209,66,40)" fg:x="1682" fg:w="18"/><text x="9.0402%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.07%)</title><rect x="8.8111%" y="517" width="0.0732%" height="15" fill="rgb(233,147,39)" fg:x="1686" fg:w="14"/><text x="9.0611%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="8.8215%" y="501" width="0.0627%" height="15" fill="rgb(231,145,52)" fg:x="1688" fg:w="12"/><text x="9.0715%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="8.8999%" y="517" width="0.0105%" height="15" fill="rgb(206,20,26)" fg:x="1703" fg:w="2"/><text x="9.1499%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (3 samples, 0.02%)</title><rect x="8.8999%" y="533" width="0.0157%" height="15" fill="rgb(238,220,4)" fg:x="1703" fg:w="3"/><text x="9.1499%" y="543.50"></text></g><g><title>wgpu_core::track::buffer::insert_or_barrier_update (3 samples, 0.02%)</title><rect x="8.9208%" y="501" width="0.0157%" height="15" fill="rgb(252,195,42)" fg:x="1707" fg:w="3"/><text x="9.1708%" y="511.50"></text></g><g><title>wgpu_core::track::buffer::insert (3 samples, 0.02%)</title><rect x="8.9208%" y="485" width="0.0157%" height="15" fill="rgb(209,10,6)" fg:x="1707" fg:w="3"/><text x="9.1708%" y="495.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (4 samples, 0.02%)</title><rect x="8.9208%" y="517" width="0.0209%" height="15" fill="rgb(229,3,52)" fg:x="1707" fg:w="4"/><text x="9.1708%" y="527.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (2 samples, 0.01%)</title><rect x="8.9470%" y="501" width="0.0105%" height="15" fill="rgb(253,49,37)" fg:x="1712" fg:w="2"/><text x="9.1970%" y="511.50"></text></g><g><title>wgpu_core::track::texture::insert (2 samples, 0.01%)</title><rect x="8.9470%" y="485" width="0.0105%" height="15" fill="rgb(240,103,49)" fg:x="1712" fg:w="2"/><text x="9.1970%" y="495.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (9 samples, 0.05%)</title><rect x="8.9156%" y="533" width="0.0470%" height="15" fill="rgb(250,182,30)" fg:x="1706" fg:w="9"/><text x="9.1656%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (4 samples, 0.02%)</title><rect x="8.9417%" y="517" width="0.0209%" height="15" fill="rgb(248,8,30)" fg:x="1711" fg:w="4"/><text x="9.1917%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="8.9626%" y="517" width="0.0105%" height="15" fill="rgb(237,120,30)" fg:x="1715" fg:w="2"/><text x="9.2126%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="8.9626%" y="501" width="0.0105%" height="15" fill="rgb(221,146,34)" fg:x="1715" fg:w="2"/><text x="9.2126%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="8.9626%" y="485" width="0.0105%" height="15" fill="rgb(242,55,13)" fg:x="1715" fg:w="2"/><text x="9.2126%" y="495.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (5 samples, 0.03%)</title><rect x="8.9626%" y="533" width="0.0261%" height="15" fill="rgb(242,112,31)" fg:x="1715" fg:w="5"/><text x="9.2126%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (3 samples, 0.02%)</title><rect x="8.9731%" y="517" width="0.0157%" height="15" fill="rgb(249,192,27)" fg:x="1717" fg:w="3"/><text x="9.2231%" y="527.50"></text></g><g><title>ash::device::Device::end_command_buffer (3 samples, 0.02%)</title><rect x="8.9731%" y="501" width="0.0157%" height="15" fill="rgb(208,204,44)" fg:x="1717" fg:w="3"/><text x="9.2231%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="8.9731%" y="485" width="0.0157%" height="15" fill="rgb(208,93,54)" fg:x="1717" fg:w="3"/><text x="9.2231%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="8.9783%" y="469" width="0.0105%" height="15" fill="rgb(242,1,31)" fg:x="1718" fg:w="2"/><text x="9.2283%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="8.9940%" y="469" width="0.0209%" height="15" fill="rgb(241,83,25)" fg:x="1721" fg:w="4"/><text x="9.2440%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="9.0044%" y="453" width="0.0105%" height="15" fill="rgb(205,169,50)" fg:x="1723" fg:w="2"/><text x="9.2544%" y="463.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (6 samples, 0.03%)</title><rect x="8.9888%" y="533" width="0.0314%" height="15" fill="rgb(239,186,37)" fg:x="1720" fg:w="6"/><text x="9.2388%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (6 samples, 0.03%)</title><rect x="8.9888%" y="517" width="0.0314%" height="15" fill="rgb(205,221,10)" fg:x="1720" fg:w="6"/><text x="9.2388%" y="527.50"></text></g><g><title>ash::device::Device::begin_command_buffer (6 samples, 0.03%)</title><rect x="8.9888%" y="501" width="0.0314%" height="15" fill="rgb(218,196,15)" fg:x="1720" fg:w="6"/><text x="9.2388%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="8.9888%" y="485" width="0.0314%" height="15" fill="rgb(218,196,35)" fg:x="1720" fg:w="6"/><text x="9.2388%" y="495.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (13 samples, 0.07%)</title><rect x="9.0201%" y="533" width="0.0679%" height="15" fill="rgb(233,63,24)" fg:x="1726" fg:w="13"/><text x="9.2701%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (13 samples, 0.07%)</title><rect x="9.0201%" y="517" width="0.0679%" height="15" fill="rgb(225,8,4)" fg:x="1726" fg:w="13"/><text x="9.2701%" y="527.50"></text></g><g><title>ash::device::Device::begin_command_buffer (13 samples, 0.07%)</title><rect x="9.0201%" y="501" width="0.0679%" height="15" fill="rgb(234,105,35)" fg:x="1726" fg:w="13"/><text x="9.2701%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="9.0201%" y="485" width="0.0679%" height="15" fill="rgb(236,21,32)" fg:x="1726" fg:w="13"/><text x="9.2701%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="9.0410%" y="469" width="0.0470%" height="15" fill="rgb(228,109,6)" fg:x="1730" fg:w="9"/><text x="9.2910%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="9.0672%" y="453" width="0.0209%" height="15" fill="rgb(229,215,31)" fg:x="1735" fg:w="4"/><text x="9.3172%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="9.0724%" y="437" width="0.0157%" height="15" fill="rgb(221,52,54)" fg:x="1736" fg:w="3"/><text x="9.3224%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="9.0776%" y="421" width="0.0105%" height="15" fill="rgb(252,129,43)" fg:x="1737" fg:w="2"/><text x="9.3276%" y="431.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (2 samples, 0.01%)</title><rect x="9.0881%" y="533" width="0.0105%" height="15" fill="rgb(248,183,27)" fg:x="1739" fg:w="2"/><text x="9.3381%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (2 samples, 0.01%)</title><rect x="9.1351%" y="517" width="0.0105%" height="15" fill="rgb(250,0,22)" fg:x="1748" fg:w="2"/><text x="9.3851%" y="527.50"></text></g><g><title>wgpu_core::track::texture::insert_or_merge (2 samples, 0.01%)</title><rect x="9.1351%" y="501" width="0.0105%" height="15" fill="rgb(213,166,10)" fg:x="1748" fg:w="2"/><text x="9.3851%" y="511.50"></text></g><g><title>wgpu_core::track::texture::insert (2 samples, 0.01%)</title><rect x="9.1351%" y="485" width="0.0105%" height="15" fill="rgb(207,163,36)" fg:x="1748" fg:w="2"/><text x="9.3851%" y="495.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (12 samples, 0.06%)</title><rect x="9.1194%" y="533" width="0.0627%" height="15" fill="rgb(208,122,22)" fg:x="1745" fg:w="12"/><text x="9.3694%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (7 samples, 0.04%)</title><rect x="9.1455%" y="517" width="0.0366%" height="15" fill="rgb(207,104,49)" fg:x="1750" fg:w="7"/><text x="9.3955%" y="527.50"></text></g><g><title>ash::device::Device::cmd_end_render_pass (7 samples, 0.04%)</title><rect x="9.1455%" y="501" width="0.0366%" height="15" fill="rgb(248,211,50)" fg:x="1750" fg:w="7"/><text x="9.3955%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="9.1455%" y="485" width="0.0366%" height="15" fill="rgb(217,13,45)" fg:x="1750" fg:w="7"/><text x="9.3955%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="9.1455%" y="469" width="0.0366%" height="15" fill="rgb(211,216,49)" fg:x="1750" fg:w="7"/><text x="9.3955%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="9.1560%" y="453" width="0.0261%" height="15" fill="rgb(221,58,53)" fg:x="1752" fg:w="5"/><text x="9.4060%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="9.1612%" y="437" width="0.0209%" height="15" fill="rgb(220,112,41)" fg:x="1753" fg:w="4"/><text x="9.4112%" y="447.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="9.2030%" y="517" width="0.0105%" height="15" fill="rgb(236,38,28)" fg:x="1761" fg:w="2"/><text x="9.4530%" y="527.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::add_pass_texture_init_actions (4 samples, 0.02%)</title><rect x="9.2135%" y="517" width="0.0209%" height="15" fill="rgb(227,195,22)" fg:x="1763" fg:w="4"/><text x="9.4635%" y="527.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_implicit_init (2 samples, 0.01%)</title><rect x="9.2239%" y="501" width="0.0105%" height="15" fill="rgb(214,55,33)" fg:x="1765" fg:w="2"/><text x="9.4739%" y="511.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (2 samples, 0.01%)</title><rect x="9.2239%" y="485" width="0.0105%" height="15" fill="rgb(248,80,13)" fg:x="1765" fg:w="2"/><text x="9.4739%" y="495.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="9.2344%" y="501" width="0.0105%" height="15" fill="rgb(238,52,6)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="511.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="9.2344%" y="485" width="0.0105%" height="15" fill="rgb(224,198,47)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="9.2344%" y="469" width="0.0105%" height="15" fill="rgb(233,171,20)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="9.2344%" y="453" width="0.0105%" height="15" fill="rgb(241,30,25)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.2344%" y="437" width="0.0105%" height="15" fill="rgb(207,171,38)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.2344%" y="421" width="0.0105%" height="15" fill="rgb(234,70,1)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="9.2344%" y="405" width="0.0105%" height="15" fill="rgb(232,178,18)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="9.2344%" y="389" width="0.0105%" height="15" fill="rgb(241,78,40)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="9.2344%" y="373" width="0.0105%" height="15" fill="rgb(222,35,25)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="9.2344%" y="357" width="0.0105%" height="15" fill="rgb(207,92,16)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="367.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="9.2344%" y="341" width="0.0105%" height="15" fill="rgb(216,59,51)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="351.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="9.2344%" y="325" width="0.0105%" height="15" fill="rgb(213,80,28)" fg:x="1767" fg:w="2"/><text x="9.4844%" y="335.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (5 samples, 0.03%)</title><rect x="9.2344%" y="517" width="0.0261%" height="15" fill="rgb(220,93,7)" fg:x="1767" fg:w="5"/><text x="9.4844%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="9.2501%" y="501" width="0.0105%" height="15" fill="rgb(225,24,44)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="511.50"></text></g><g><title>wgpu_core::track::texture::TextureStateSet::set_size (2 samples, 0.01%)</title><rect x="9.2501%" y="485" width="0.0105%" height="15" fill="rgb(243,74,40)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="9.2501%" y="469" width="0.0105%" height="15" fill="rgb(228,39,7)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="9.2501%" y="453" width="0.0105%" height="15" fill="rgb(227,79,8)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.2501%" y="437" width="0.0105%" height="15" fill="rgb(236,58,11)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.2501%" y="421" width="0.0105%" height="15" fill="rgb(249,63,35)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="9.2501%" y="405" width="0.0105%" height="15" fill="rgb(252,114,16)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="9.2501%" y="389" width="0.0105%" height="15" fill="rgb(254,151,24)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="9.2501%" y="373" width="0.0105%" height="15" fill="rgb(253,54,39)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="383.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="9.2501%" y="357" width="0.0105%" height="15" fill="rgb(243,25,45)" fg:x="1770" fg:w="2"/><text x="9.5001%" y="367.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (3 samples, 0.02%)</title><rect x="9.2605%" y="517" width="0.0157%" height="15" fill="rgb(234,134,9)" fg:x="1772" fg:w="3"/><text x="9.5105%" y="527.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::allow_index (2 samples, 0.01%)</title><rect x="9.2657%" y="501" width="0.0105%" height="15" fill="rgb(227,166,31)" fg:x="1773" fg:w="2"/><text x="9.5157%" y="511.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (2 samples, 0.01%)</title><rect x="9.2657%" y="485" width="0.0105%" height="15" fill="rgb(245,143,41)" fg:x="1773" fg:w="2"/><text x="9.5157%" y="495.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (2 samples, 0.01%)</title><rect x="9.2657%" y="469" width="0.0105%" height="15" fill="rgb(238,181,32)" fg:x="1773" fg:w="2"/><text x="9.5157%" y="479.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (19 samples, 0.10%)</title><rect x="9.1821%" y="533" width="0.0993%" height="15" fill="rgb(224,113,18)" fg:x="1757" fg:w="19"/><text x="9.4321%" y="543.50"></text></g><g><title>wgpu_core::command::render::State::is_ready (2 samples, 0.01%)</title><rect x="9.2814%" y="533" width="0.0105%" height="15" fill="rgb(240,229,28)" fg:x="1776" fg:w="2"/><text x="9.5314%" y="543.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="9.2971%" y="517" width="0.0105%" height="15" fill="rgb(250,185,3)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="9.2971%" y="501" width="0.0105%" height="15" fill="rgb(212,59,25)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="9.2971%" y="485" width="0.0105%" height="15" fill="rgb(221,87,20)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.2971%" y="469" width="0.0105%" height="15" fill="rgb(213,74,28)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.2971%" y="453" width="0.0105%" height="15" fill="rgb(224,132,34)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="9.2971%" y="437" width="0.0105%" height="15" fill="rgb(222,101,24)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="9.2971%" y="421" width="0.0105%" height="15" fill="rgb(254,142,4)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="9.2971%" y="405" width="0.0105%" height="15" fill="rgb(230,229,49)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="9.2971%" y="389" width="0.0105%" height="15" fill="rgb(238,70,47)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="399.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="9.2971%" y="373" width="0.0105%" height="15" fill="rgb(231,160,17)" fg:x="1779" fg:w="2"/><text x="9.5471%" y="383.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (2 samples, 0.01%)</title><rect x="9.3128%" y="501" width="0.0105%" height="15" fill="rgb(218,68,53)" fg:x="1782" fg:w="2"/><text x="9.5628%" y="511.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (6 samples, 0.03%)</title><rect x="9.3128%" y="517" width="0.0314%" height="15" fill="rgb(236,111,10)" fg:x="1782" fg:w="6"/><text x="9.5628%" y="527.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (4 samples, 0.02%)</title><rect x="9.3232%" y="501" width="0.0209%" height="15" fill="rgb(224,34,41)" fg:x="1784" fg:w="4"/><text x="9.5732%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (4 samples, 0.02%)</title><rect x="9.3232%" y="485" width="0.0209%" height="15" fill="rgb(241,118,19)" fg:x="1784" fg:w="4"/><text x="9.5732%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (4 samples, 0.02%)</title><rect x="9.3232%" y="469" width="0.0209%" height="15" fill="rgb(238,129,25)" fg:x="1784" fg:w="4"/><text x="9.5732%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="9.3232%" y="453" width="0.0209%" height="15" fill="rgb(238,22,31)" fg:x="1784" fg:w="4"/><text x="9.5732%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="9.3232%" y="437" width="0.0209%" height="15" fill="rgb(222,174,48)" fg:x="1784" fg:w="4"/><text x="9.5732%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="9.3285%" y="421" width="0.0157%" height="15" fill="rgb(206,152,40)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="9.3285%" y="405" width="0.0157%" height="15" fill="rgb(218,99,54)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="9.3285%" y="389" width="0.0157%" height="15" fill="rgb(220,174,26)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="9.3285%" y="373" width="0.0157%" height="15" fill="rgb(245,116,9)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="9.3285%" y="357" width="0.0157%" height="15" fill="rgb(209,72,35)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="367.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="9.3285%" y="341" width="0.0157%" height="15" fill="rgb(226,126,21)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="351.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="9.3285%" y="325" width="0.0157%" height="15" fill="rgb(227,192,1)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="335.50"></text></g><g><title>_int_realloc (3 samples, 0.02%)</title><rect x="9.3285%" y="309" width="0.0157%" height="15" fill="rgb(237,180,29)" fg:x="1785" fg:w="3"/><text x="9.5785%" y="319.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="9.3494%" y="501" width="0.0105%" height="15" fill="rgb(230,197,35)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="9.3494%" y="485" width="0.0105%" height="15" fill="rgb(246,193,31)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="9.3494%" y="469" width="0.0105%" height="15" fill="rgb(241,36,4)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.3494%" y="453" width="0.0105%" height="15" fill="rgb(241,130,17)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.3494%" y="437" width="0.0105%" height="15" fill="rgb(206,137,32)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="9.3494%" y="421" width="0.0105%" height="15" fill="rgb(237,228,51)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="9.3494%" y="405" width="0.0105%" height="15" fill="rgb(243,6,42)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="9.3494%" y="389" width="0.0105%" height="15" fill="rgb(251,74,28)" fg:x="1789" fg:w="2"/><text x="9.5994%" y="399.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (15 samples, 0.08%)</title><rect x="9.2919%" y="533" width="0.0784%" height="15" fill="rgb(218,20,49)" fg:x="1778" fg:w="15"/><text x="9.5419%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_size (5 samples, 0.03%)</title><rect x="9.3441%" y="517" width="0.0261%" height="15" fill="rgb(238,28,14)" fg:x="1788" fg:w="5"/><text x="9.5941%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureStateSet::set_size (2 samples, 0.01%)</title><rect x="9.3598%" y="501" width="0.0105%" height="15" fill="rgb(229,40,46)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="9.3598%" y="485" width="0.0105%" height="15" fill="rgb(244,195,20)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="9.3598%" y="469" width="0.0105%" height="15" fill="rgb(253,56,35)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.3598%" y="453" width="0.0105%" height="15" fill="rgb(210,149,44)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="9.3598%" y="437" width="0.0105%" height="15" fill="rgb(240,135,12)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="9.3598%" y="421" width="0.0105%" height="15" fill="rgb(251,24,50)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="9.3598%" y="405" width="0.0105%" height="15" fill="rgb(243,200,47)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="9.3598%" y="389" width="0.0105%" height="15" fill="rgb(224,166,26)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="399.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="9.3598%" y="373" width="0.0105%" height="15" fill="rgb(233,0,47)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="383.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="9.3598%" y="357" width="0.0105%" height="15" fill="rgb(253,80,5)" fg:x="1791" fg:w="2"/><text x="9.6098%" y="367.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (2 samples, 0.01%)</title><rect x="9.3703%" y="517" width="0.0105%" height="15" fill="rgb(214,133,25)" fg:x="1793" fg:w="2"/><text x="9.6203%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (2 samples, 0.01%)</title><rect x="9.3807%" y="485" width="0.0105%" height="15" fill="rgb(209,27,14)" fg:x="1795" fg:w="2"/><text x="9.6307%" y="495.50"></text></g><g><title>wgpu_core::track::texture::insert_or_merge (2 samples, 0.01%)</title><rect x="9.3912%" y="485" width="0.0105%" height="15" fill="rgb(219,102,51)" fg:x="1797" fg:w="2"/><text x="9.6412%" y="495.50"></text></g><g><title>wgpu_core::track::texture::insert (2 samples, 0.01%)</title><rect x="9.3912%" y="469" width="0.0105%" height="15" fill="rgb(237,18,16)" fg:x="1797" fg:w="2"/><text x="9.6412%" y="479.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::merge_bind_group (8 samples, 0.04%)</title><rect x="9.3703%" y="533" width="0.0418%" height="15" fill="rgb(241,85,17)" fg:x="1793" fg:w="8"/><text x="9.6203%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_bind_group (6 samples, 0.03%)</title><rect x="9.3807%" y="517" width="0.0314%" height="15" fill="rgb(236,90,42)" fg:x="1795" fg:w="6"/><text x="9.6307%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (6 samples, 0.03%)</title><rect x="9.3807%" y="501" width="0.0314%" height="15" fill="rgb(249,57,21)" fg:x="1795" fg:w="6"/><text x="9.6307%" y="511.50"></text></g><g><title>wgpu_core::track::texture::texture_data_from_texture (2 samples, 0.01%)</title><rect x="9.4016%" y="485" width="0.0105%" height="15" fill="rgb(243,12,36)" fg:x="1799" fg:w="2"/><text x="9.6516%" y="495.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="9.4016%" y="469" width="0.0105%" height="15" fill="rgb(253,128,47)" fg:x="1799" fg:w="2"/><text x="9.6516%" y="479.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (2 samples, 0.01%)</title><rect x="9.4173%" y="517" width="0.0105%" height="15" fill="rgb(207,33,20)" fg:x="1802" fg:w="2"/><text x="9.6673%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="9.4173%" y="501" width="0.0105%" height="15" fill="rgb(233,215,35)" fg:x="1802" fg:w="2"/><text x="9.6673%" y="511.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="9.4173%" y="485" width="0.0105%" height="15" fill="rgb(249,188,52)" fg:x="1802" fg:w="2"/><text x="9.6673%" y="495.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (7 samples, 0.04%)</title><rect x="9.4121%" y="533" width="0.0366%" height="15" fill="rgb(225,12,32)" fg:x="1801" fg:w="7"/><text x="9.6621%" y="543.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.02%)</title><rect x="9.4278%" y="517" width="0.0209%" height="15" fill="rgb(247,98,14)" fg:x="1804" fg:w="4"/><text x="9.6778%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (15 samples, 0.08%)</title><rect x="9.4487%" y="533" width="0.0784%" height="15" fill="rgb(247,219,48)" fg:x="1808" fg:w="15"/><text x="9.6987%" y="543.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (15 samples, 0.08%)</title><rect x="9.4487%" y="517" width="0.0784%" height="15" fill="rgb(253,60,48)" fg:x="1808" fg:w="15"/><text x="9.6987%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.08%)</title><rect x="9.4487%" y="501" width="0.0784%" height="15" fill="rgb(245,15,52)" fg:x="1808" fg:w="15"/><text x="9.6987%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.08%)</title><rect x="9.4487%" y="485" width="0.0784%" height="15" fill="rgb(220,133,28)" fg:x="1808" fg:w="15"/><text x="9.6987%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_blend_constants (2 samples, 0.01%)</title><rect x="9.5270%" y="533" width="0.0105%" height="15" fill="rgb(217,180,4)" fg:x="1823" fg:w="2"/><text x="9.7770%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="9.5270%" y="517" width="0.0105%" height="15" fill="rgb(251,24,1)" fg:x="1823" fg:w="2"/><text x="9.7770%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.01%)</title><rect x="9.5270%" y="501" width="0.0105%" height="15" fill="rgb(212,185,49)" fg:x="1823" fg:w="2"/><text x="9.7770%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="9.5270%" y="485" width="0.0105%" height="15" fill="rgb(215,175,22)" fg:x="1823" fg:w="2"/><text x="9.7770%" y="495.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (147 samples, 0.77%)</title><rect x="8.7797%" y="613" width="0.7682%" height="15" fill="rgb(250,205,14)" fg:x="1680" fg:w="147"/><text x="9.0297%" y="623.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (147 samples, 0.77%)</title><rect x="8.7797%" y="597" width="0.7682%" height="15" fill="rgb(225,211,22)" fg:x="1680" fg:w="147"/><text x="9.0297%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (147 samples, 0.77%)</title><rect x="8.7797%" y="581" width="0.7682%" height="15" fill="rgb(251,179,42)" fg:x="1680" fg:w="147"/><text x="9.0297%" y="591.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (147 samples, 0.77%)</title><rect x="8.7797%" y="565" width="0.7682%" height="15" fill="rgb(208,216,51)" fg:x="1680" fg:w="147"/><text x="9.0297%" y="575.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (147 samples, 0.77%)</title><rect x="8.7797%" y="549" width="0.7682%" height="15" fill="rgb(235,36,11)" fg:x="1680" fg:w="147"/><text x="9.0297%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (2 samples, 0.01%)</title><rect x="9.5375%" y="533" width="0.0105%" height="15" fill="rgb(213,189,28)" fg:x="1825" fg:w="2"/><text x="9.7875%" y="543.50"></text></g><g><title>ash::device::Device::cmd_bind_vertex_buffers (2 samples, 0.01%)</title><rect x="9.5375%" y="517" width="0.0105%" height="15" fill="rgb(227,203,42)" fg:x="1825" fg:w="2"/><text x="9.7875%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="9.5375%" y="501" width="0.0105%" height="15" fill="rgb(244,72,36)" fg:x="1825" fg:w="2"/><text x="9.7875%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="9.5375%" y="485" width="0.0105%" height="15" fill="rgb(213,53,17)" fg:x="1825" fg:w="2"/><text x="9.7875%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="9.5375%" y="469" width="0.0105%" height="15" fill="rgb(207,167,3)" fg:x="1825" fg:w="2"/><text x="9.7875%" y="479.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (151 samples, 0.79%)</title><rect x="8.7640%" y="661" width="0.7891%" height="15" fill="rgb(216,98,30)" fg:x="1677" fg:w="151"/><text x="9.0140%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (151 samples, 0.79%)</title><rect x="8.7640%" y="645" width="0.7891%" height="15" fill="rgb(236,123,15)" fg:x="1677" fg:w="151"/><text x="9.0140%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (149 samples, 0.78%)</title><rect x="8.7745%" y="629" width="0.7787%" height="15" fill="rgb(248,81,50)" fg:x="1679" fg:w="149"/><text x="9.0245%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="9.5741%" y="565" width="0.0261%" height="15" fill="rgb(214,120,4)" fg:x="1832" fg:w="5"/><text x="9.8241%" y="575.50"></text></g><g><title>&lt;winit::dpi::PhysicalSize&lt;P&gt; as core::convert::From&lt;(X,X)&gt;&gt;::from (5 samples, 0.03%)</title><rect x="9.5741%" y="549" width="0.0261%" height="15" fill="rgb(208,179,34)" fg:x="1832" fg:w="5"/><text x="9.8241%" y="559.50"></text></g><g><title>winit::dpi::Pixel::cast (5 samples, 0.03%)</title><rect x="9.5741%" y="533" width="0.0261%" height="15" fill="rgb(227,140,7)" fg:x="1832" fg:w="5"/><text x="9.8241%" y="543.50"></text></g><g><title>&lt;u32 as winit::dpi::Pixel&gt;::from_f64 (5 samples, 0.03%)</title><rect x="9.5741%" y="517" width="0.0261%" height="15" fill="rgb(214,22,6)" fg:x="1832" fg:w="5"/><text x="9.8241%" y="527.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::round (4 samples, 0.02%)</title><rect x="9.5793%" y="501" width="0.0209%" height="15" fill="rgb(207,137,27)" fg:x="1833" fg:w="4"/><text x="9.8293%" y="511.50"></text></g><g><title>__round (4 samples, 0.02%)</title><rect x="9.5793%" y="485" width="0.0209%" height="15" fill="rgb(210,8,46)" fg:x="1833" fg:w="4"/><text x="9.8293%" y="495.50"></text></g><g><title>[libX11.so.6.4.0] (6 samples, 0.03%)</title><rect x="9.6107%" y="517" width="0.0314%" height="15" fill="rgb(240,16,54)" fg:x="1839" fg:w="6"/><text x="9.8607%" y="527.50"></text></g><g><title>[libX11.so.6.4.0] (9 samples, 0.05%)</title><rect x="9.6629%" y="485" width="0.0470%" height="15" fill="rgb(211,209,29)" fg:x="1849" fg:w="9"/><text x="9.9129%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (9 samples, 0.05%)</title><rect x="9.6629%" y="469" width="0.0470%" height="15" fill="rgb(226,228,24)" fg:x="1849" fg:w="9"/><text x="9.9129%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (9 samples, 0.05%)</title><rect x="9.6629%" y="453" width="0.0470%" height="15" fill="rgb(222,84,9)" fg:x="1849" fg:w="9"/><text x="9.9129%" y="463.50"></text></g><g><title>__libc_recvmsg (9 samples, 0.05%)</title><rect x="9.6629%" y="437" width="0.0470%" height="15" fill="rgb(234,203,30)" fg:x="1849" fg:w="9"/><text x="9.9129%" y="447.50"></text></g><g><title>__recvmsg_syscall (9 samples, 0.05%)</title><rect x="9.6629%" y="421" width="0.0470%" height="15" fill="rgb(238,109,14)" fg:x="1849" fg:w="9"/><text x="9.9129%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="9.6681%" y="405" width="0.0418%" height="15" fill="rgb(233,206,34)" fg:x="1850" fg:w="8"/><text x="9.9181%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="9.6786%" y="389" width="0.0314%" height="15" fill="rgb(220,167,47)" fg:x="1852" fg:w="6"/><text x="9.9286%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="9.6786%" y="373" width="0.0314%" height="15" fill="rgb(238,105,10)" fg:x="1852" fg:w="6"/><text x="9.9286%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="9.6838%" y="357" width="0.0261%" height="15" fill="rgb(213,227,17)" fg:x="1853" fg:w="5"/><text x="9.9338%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="9.6891%" y="341" width="0.0209%" height="15" fill="rgb(217,132,38)" fg:x="1854" fg:w="4"/><text x="9.9391%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="9.6891%" y="325" width="0.0209%" height="15" fill="rgb(242,146,4)" fg:x="1854" fg:w="4"/><text x="9.9391%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="9.6943%" y="309" width="0.0157%" height="15" fill="rgb(212,61,9)" fg:x="1855" fg:w="3"/><text x="9.9443%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="9.6995%" y="293" width="0.0105%" height="15" fill="rgb(247,126,22)" fg:x="1856" fg:w="2"/><text x="9.9495%" y="303.50"></text></g><g><title>[libX11.so.6.4.0] (13 samples, 0.07%)</title><rect x="9.6525%" y="501" width="0.0679%" height="15" fill="rgb(220,196,2)" fg:x="1847" fg:w="13"/><text x="9.9025%" y="511.50"></text></g><g><title>__GI___poll (13 samples, 0.07%)</title><rect x="9.7413%" y="437" width="0.0679%" height="15" fill="rgb(208,46,4)" fg:x="1864" fg:w="13"/><text x="9.9913%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="9.7413%" y="421" width="0.0679%" height="15" fill="rgb(252,104,46)" fg:x="1864" fg:w="13"/><text x="9.9913%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="9.7465%" y="405" width="0.0627%" height="15" fill="rgb(237,152,48)" fg:x="1865" fg:w="12"/><text x="9.9965%" y="415.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="9.7518%" y="389" width="0.0575%" height="15" fill="rgb(221,59,37)" fg:x="1866" fg:w="11"/><text x="10.0018%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="9.7622%" y="373" width="0.0470%" height="15" fill="rgb(209,202,51)" fg:x="1868" fg:w="9"/><text x="10.0122%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="9.7674%" y="357" width="0.0418%" height="15" fill="rgb(228,81,30)" fg:x="1869" fg:w="8"/><text x="10.0174%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="9.7831%" y="341" width="0.0261%" height="15" fill="rgb(227,42,39)" fg:x="1872" fg:w="5"/><text x="10.0331%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="9.7936%" y="325" width="0.0157%" height="15" fill="rgb(221,26,2)" fg:x="1874" fg:w="3"/><text x="10.0436%" y="335.50"></text></g><g><title>__GI___writev (63 samples, 0.33%)</title><rect x="9.8093%" y="437" width="0.3292%" height="15" fill="rgb(254,61,31)" fg:x="1877" fg:w="63"/><text x="10.0593%" y="447.50"></text></g><g><title>__GI___writev (62 samples, 0.32%)</title><rect x="9.8145%" y="421" width="0.3240%" height="15" fill="rgb(222,173,38)" fg:x="1878" fg:w="62"/><text x="10.0645%" y="431.50"></text></g><g><title>[unknown] (62 samples, 0.32%)</title><rect x="9.8145%" y="405" width="0.3240%" height="15" fill="rgb(218,50,12)" fg:x="1878" fg:w="62"/><text x="10.0645%" y="415.50"></text></g><g><title>[unknown] (58 samples, 0.30%)</title><rect x="9.8354%" y="389" width="0.3031%" height="15" fill="rgb(223,88,40)" fg:x="1882" fg:w="58"/><text x="10.0854%" y="399.50"></text></g><g><title>[unknown] (58 samples, 0.30%)</title><rect x="9.8354%" y="373" width="0.3031%" height="15" fill="rgb(237,54,19)" fg:x="1882" fg:w="58"/><text x="10.0854%" y="383.50"></text></g><g><title>[unknown] (56 samples, 0.29%)</title><rect x="9.8458%" y="357" width="0.2927%" height="15" fill="rgb(251,129,25)" fg:x="1884" fg:w="56"/><text x="10.0958%" y="367.50"></text></g><g><title>[unknown] (56 samples, 0.29%)</title><rect x="9.8458%" y="341" width="0.2927%" height="15" fill="rgb(238,97,19)" fg:x="1884" fg:w="56"/><text x="10.0958%" y="351.50"></text></g><g><title>[unknown] (56 samples, 0.29%)</title><rect x="9.8458%" y="325" width="0.2927%" height="15" fill="rgb(240,169,18)" fg:x="1884" fg:w="56"/><text x="10.0958%" y="335.50"></text></g><g><title>[unknown] (53 samples, 0.28%)</title><rect x="9.8615%" y="309" width="0.2770%" height="15" fill="rgb(230,187,49)" fg:x="1887" fg:w="53"/><text x="10.1115%" y="319.50"></text></g><g><title>[unknown] (52 samples, 0.27%)</title><rect x="9.8667%" y="293" width="0.2718%" height="15" fill="rgb(209,44,26)" fg:x="1888" fg:w="52"/><text x="10.1167%" y="303.50"></text></g><g><title>[unknown] (49 samples, 0.26%)</title><rect x="9.8824%" y="277" width="0.2561%" height="15" fill="rgb(244,0,6)" fg:x="1891" fg:w="49"/><text x="10.1324%" y="287.50"></text></g><g><title>[unknown] (45 samples, 0.24%)</title><rect x="9.9033%" y="261" width="0.2352%" height="15" fill="rgb(248,18,21)" fg:x="1895" fg:w="45"/><text x="10.1533%" y="271.50"></text></g><g><title>[unknown] (41 samples, 0.21%)</title><rect x="9.9242%" y="245" width="0.2143%" height="15" fill="rgb(245,180,19)" fg:x="1899" fg:w="41"/><text x="10.1742%" y="255.50"></text></g><g><title>[unknown] (37 samples, 0.19%)</title><rect x="9.9451%" y="229" width="0.1934%" height="15" fill="rgb(252,118,36)" fg:x="1903" fg:w="37"/><text x="10.1951%" y="239.50"></text></g><g><title>[unknown] (34 samples, 0.18%)</title><rect x="9.9608%" y="213" width="0.1777%" height="15" fill="rgb(210,224,19)" fg:x="1906" fg:w="34"/><text x="10.2108%" y="223.50"></text></g><g><title>[unknown] (34 samples, 0.18%)</title><rect x="9.9608%" y="197" width="0.1777%" height="15" fill="rgb(218,30,24)" fg:x="1906" fg:w="34"/><text x="10.2108%" y="207.50"></text></g><g><title>[unknown] (32 samples, 0.17%)</title><rect x="9.9713%" y="181" width="0.1672%" height="15" fill="rgb(219,75,50)" fg:x="1908" fg:w="32"/><text x="10.2213%" y="191.50"></text></g><g><title>[unknown] (24 samples, 0.13%)</title><rect x="10.0131%" y="165" width="0.1254%" height="15" fill="rgb(234,72,50)" fg:x="1916" fg:w="24"/><text x="10.2631%" y="175.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="10.0392%" y="149" width="0.0993%" height="15" fill="rgb(219,100,48)" fg:x="1921" fg:w="19"/><text x="10.2892%" y="159.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="10.0706%" y="133" width="0.0679%" height="15" fill="rgb(253,5,41)" fg:x="1927" fg:w="13"/><text x="10.3206%" y="143.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="10.0810%" y="117" width="0.0575%" height="15" fill="rgb(247,181,11)" fg:x="1929" fg:w="11"/><text x="10.3310%" y="127.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="10.0915%" y="101" width="0.0470%" height="15" fill="rgb(222,223,25)" fg:x="1931" fg:w="9"/><text x="10.3415%" y="111.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="10.0915%" y="85" width="0.0470%" height="15" fill="rgb(214,198,28)" fg:x="1931" fg:w="9"/><text x="10.3415%" y="95.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="10.0967%" y="69" width="0.0418%" height="15" fill="rgb(230,46,43)" fg:x="1932" fg:w="8"/><text x="10.3467%" y="79.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="10.1176%" y="53" width="0.0209%" height="15" fill="rgb(233,65,53)" fg:x="1936" fg:w="4"/><text x="10.3676%" y="63.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.1228%" y="37" width="0.0157%" height="15" fill="rgb(221,121,27)" fg:x="1937" fg:w="3"/><text x="10.3728%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (79 samples, 0.41%)</title><rect x="9.7309%" y="453" width="0.4129%" height="15" fill="rgb(247,70,47)" fg:x="1862" fg:w="79"/><text x="9.9809%" y="463.50"></text></g><g><title>_XSend (82 samples, 0.43%)</title><rect x="9.7204%" y="501" width="0.4285%" height="15" fill="rgb(228,85,35)" fg:x="1860" fg:w="82"/><text x="9.9704%" y="511.50"></text></g><g><title>xcb_writev (82 samples, 0.43%)</title><rect x="9.7204%" y="485" width="0.4285%" height="15" fill="rgb(209,50,18)" fg:x="1860" fg:w="82"/><text x="9.9704%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (80 samples, 0.42%)</title><rect x="9.7309%" y="469" width="0.4181%" height="15" fill="rgb(250,19,35)" fg:x="1862" fg:w="80"/><text x="9.9809%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (25 samples, 0.13%)</title><rect x="10.1646%" y="453" width="0.1307%" height="15" fill="rgb(253,107,29)" fg:x="1945" fg:w="25"/><text x="10.4146%" y="463.50"></text></g><g><title>__libc_recvmsg (22 samples, 0.11%)</title><rect x="10.1803%" y="437" width="0.1150%" height="15" fill="rgb(252,179,29)" fg:x="1948" fg:w="22"/><text x="10.4303%" y="447.50"></text></g><g><title>__recvmsg_syscall (20 samples, 0.10%)</title><rect x="10.1907%" y="421" width="0.1045%" height="15" fill="rgb(238,194,6)" fg:x="1950" fg:w="20"/><text x="10.4407%" y="431.50"></text></g><g><title>[unknown] (20 samples, 0.10%)</title><rect x="10.1907%" y="405" width="0.1045%" height="15" fill="rgb(238,164,29)" fg:x="1950" fg:w="20"/><text x="10.4407%" y="415.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="10.1960%" y="389" width="0.0993%" height="15" fill="rgb(224,25,9)" fg:x="1951" fg:w="19"/><text x="10.4460%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="10.1960%" y="373" width="0.0993%" height="15" fill="rgb(244,153,23)" fg:x="1951" fg:w="19"/><text x="10.4460%" y="383.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="10.2012%" y="357" width="0.0941%" height="15" fill="rgb(212,203,14)" fg:x="1952" fg:w="18"/><text x="10.4512%" y="367.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="10.2012%" y="341" width="0.0941%" height="15" fill="rgb(220,164,20)" fg:x="1952" fg:w="18"/><text x="10.4512%" y="351.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="10.2064%" y="325" width="0.0888%" height="15" fill="rgb(222,203,48)" fg:x="1953" fg:w="17"/><text x="10.4564%" y="335.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="10.2064%" y="309" width="0.0888%" height="15" fill="rgb(215,159,22)" fg:x="1953" fg:w="17"/><text x="10.4564%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="10.2169%" y="293" width="0.0784%" height="15" fill="rgb(216,183,47)" fg:x="1955" fg:w="15"/><text x="10.4669%" y="303.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="10.2169%" y="277" width="0.0784%" height="15" fill="rgb(229,195,25)" fg:x="1955" fg:w="15"/><text x="10.4669%" y="287.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="10.2378%" y="261" width="0.0575%" height="15" fill="rgb(224,132,51)" fg:x="1959" fg:w="11"/><text x="10.4878%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="10.2378%" y="245" width="0.0575%" height="15" fill="rgb(240,63,7)" fg:x="1959" fg:w="11"/><text x="10.4878%" y="255.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="10.2430%" y="229" width="0.0523%" height="15" fill="rgb(249,182,41)" fg:x="1960" fg:w="10"/><text x="10.4930%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="10.2430%" y="213" width="0.0523%" height="15" fill="rgb(243,47,26)" fg:x="1960" fg:w="10"/><text x="10.4930%" y="223.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="10.2535%" y="197" width="0.0418%" height="15" fill="rgb(233,48,2)" fg:x="1962" fg:w="8"/><text x="10.5035%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="10.2639%" y="181" width="0.0314%" height="15" fill="rgb(244,165,34)" fg:x="1964" fg:w="6"/><text x="10.5139%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="10.2744%" y="165" width="0.0209%" height="15" fill="rgb(207,89,7)" fg:x="1966" fg:w="4"/><text x="10.5244%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.2848%" y="149" width="0.0105%" height="15" fill="rgb(244,117,36)" fg:x="1968" fg:w="2"/><text x="10.5348%" y="159.50"></text></g><g><title>__GI___poll (31 samples, 0.16%)</title><rect x="10.2953%" y="453" width="0.1620%" height="15" fill="rgb(226,144,34)" fg:x="1970" fg:w="31"/><text x="10.5453%" y="463.50"></text></g><g><title>[unknown] (31 samples, 0.16%)</title><rect x="10.2953%" y="437" width="0.1620%" height="15" fill="rgb(213,23,19)" fg:x="1970" fg:w="31"/><text x="10.5453%" y="447.50"></text></g><g><title>[unknown] (29 samples, 0.15%)</title><rect x="10.3057%" y="421" width="0.1516%" height="15" fill="rgb(217,75,12)" fg:x="1972" fg:w="29"/><text x="10.5557%" y="431.50"></text></g><g><title>[unknown] (29 samples, 0.15%)</title><rect x="10.3057%" y="405" width="0.1516%" height="15" fill="rgb(224,159,17)" fg:x="1972" fg:w="29"/><text x="10.5557%" y="415.50"></text></g><g><title>[unknown] (27 samples, 0.14%)</title><rect x="10.3162%" y="389" width="0.1411%" height="15" fill="rgb(217,118,1)" fg:x="1974" fg:w="27"/><text x="10.5662%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.13%)</title><rect x="10.3266%" y="373" width="0.1307%" height="15" fill="rgb(232,180,48)" fg:x="1976" fg:w="25"/><text x="10.5766%" y="383.50"></text></g><g><title>[unknown] (24 samples, 0.13%)</title><rect x="10.3319%" y="357" width="0.1254%" height="15" fill="rgb(230,27,33)" fg:x="1977" fg:w="24"/><text x="10.5819%" y="367.50"></text></g><g><title>[unknown] (23 samples, 0.12%)</title><rect x="10.3371%" y="341" width="0.1202%" height="15" fill="rgb(205,31,21)" fg:x="1978" fg:w="23"/><text x="10.5871%" y="351.50"></text></g><g><title>[unknown] (22 samples, 0.11%)</title><rect x="10.3423%" y="325" width="0.1150%" height="15" fill="rgb(253,59,4)" fg:x="1979" fg:w="22"/><text x="10.5923%" y="335.50"></text></g><g><title>[unknown] (22 samples, 0.11%)</title><rect x="10.3423%" y="309" width="0.1150%" height="15" fill="rgb(224,201,9)" fg:x="1979" fg:w="22"/><text x="10.5923%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.11%)</title><rect x="10.3475%" y="293" width="0.1097%" height="15" fill="rgb(229,206,30)" fg:x="1980" fg:w="21"/><text x="10.5975%" y="303.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="10.3632%" y="277" width="0.0941%" height="15" fill="rgb(212,67,47)" fg:x="1983" fg:w="18"/><text x="10.6132%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="10.3946%" y="261" width="0.0627%" height="15" fill="rgb(211,96,50)" fg:x="1989" fg:w="12"/><text x="10.6446%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="10.4311%" y="245" width="0.0261%" height="15" fill="rgb(252,114,18)" fg:x="1996" fg:w="5"/><text x="10.6811%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.4416%" y="229" width="0.0157%" height="15" fill="rgb(223,58,37)" fg:x="1998" fg:w="3"/><text x="10.6916%" y="239.50"></text></g><g><title>[libxcb.so.1.1.0] (60 samples, 0.31%)</title><rect x="10.1489%" y="485" width="0.3136%" height="15" fill="rgb(237,70,4)" fg:x="1942" fg:w="60"/><text x="10.3989%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (60 samples, 0.31%)</title><rect x="10.1489%" y="469" width="0.3136%" height="15" fill="rgb(244,85,46)" fg:x="1942" fg:w="60"/><text x="10.3989%" y="479.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (173 samples, 0.90%)</title><rect x="9.5636%" y="629" width="0.9041%" height="15" fill="rgb(223,39,52)" fg:x="1830" fg:w="173"/><text x="9.8136%" y="639.50"></text></g><g><title>winit::window::Window::inner_size (173 samples, 0.90%)</title><rect x="9.5636%" y="613" width="0.9041%" height="15" fill="rgb(218,200,14)" fg:x="1830" fg:w="173"/><text x="9.8136%" y="623.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (173 samples, 0.90%)</title><rect x="9.5636%" y="597" width="0.9041%" height="15" fill="rgb(208,171,16)" fg:x="1830" fg:w="173"/><text x="9.8136%" y="607.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (173 samples, 0.90%)</title><rect x="9.5636%" y="581" width="0.9041%" height="15" fill="rgb(234,200,18)" fg:x="1830" fg:w="173"/><text x="9.8136%" y="591.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (166 samples, 0.87%)</title><rect x="9.6002%" y="565" width="0.8675%" height="15" fill="rgb(228,45,11)" fg:x="1837" fg:w="166"/><text x="9.8502%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (165 samples, 0.86%)</title><rect x="9.6054%" y="549" width="0.8623%" height="15" fill="rgb(237,182,11)" fg:x="1838" fg:w="165"/><text x="9.8554%" y="559.50"></text></g><g><title>XGetGeometry (165 samples, 0.86%)</title><rect x="9.6054%" y="533" width="0.8623%" height="15" fill="rgb(241,175,49)" fg:x="1838" fg:w="165"/><text x="9.8554%" y="543.50"></text></g><g><title>_XReply (158 samples, 0.83%)</title><rect x="9.6420%" y="517" width="0.8257%" height="15" fill="rgb(247,38,35)" fg:x="1845" fg:w="158"/><text x="9.8920%" y="527.50"></text></g><g><title>xcb_wait_for_reply64 (61 samples, 0.32%)</title><rect x="10.1489%" y="501" width="0.3188%" height="15" fill="rgb(228,39,49)" fg:x="1942" fg:w="61"/><text x="10.3989%" y="511.50"></text></g><g><title>ggez::graphics::gpu::growing::GrowingBufferArena::allocate (2 samples, 0.01%)</title><rect x="10.4677%" y="629" width="0.0105%" height="15" fill="rgb(226,101,26)" fg:x="2003" fg:w="2"/><text x="10.7177%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_begin_render_pass (3 samples, 0.02%)</title><rect x="10.4782%" y="581" width="0.0157%" height="15" fill="rgb(206,141,19)" fg:x="2005" fg:w="3"/><text x="10.7282%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="10.4939%" y="501" width="0.0105%" height="15" fill="rgb(211,200,13)" fg:x="2008" fg:w="2"/><text x="10.7439%" y="511.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="10.4939%" y="485" width="0.0105%" height="15" fill="rgb(241,121,6)" fg:x="2008" fg:w="2"/><text x="10.7439%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_begin_render_pass (6 samples, 0.03%)</title><rect x="10.4782%" y="597" width="0.0314%" height="15" fill="rgb(234,221,29)" fg:x="2005" fg:w="6"/><text x="10.7282%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="10.4939%" y="581" width="0.0157%" height="15" fill="rgb(229,136,5)" fg:x="2008" fg:w="3"/><text x="10.7439%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="10.4939%" y="565" width="0.0157%" height="15" fill="rgb(238,36,11)" fg:x="2008" fg:w="3"/><text x="10.7439%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="10.4939%" y="549" width="0.0157%" height="15" fill="rgb(251,55,41)" fg:x="2008" fg:w="3"/><text x="10.7439%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="10.4939%" y="533" width="0.0157%" height="15" fill="rgb(242,34,40)" fg:x="2008" fg:w="3"/><text x="10.7439%" y="543.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="10.4939%" y="517" width="0.0157%" height="15" fill="rgb(215,42,17)" fg:x="2008" fg:w="3"/><text x="10.7439%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image::{{closure}} (7 samples, 0.04%)</title><rect x="10.4782%" y="629" width="0.0366%" height="15" fill="rgb(207,44,46)" fg:x="2005" fg:w="7"/><text x="10.7282%" y="639.50"></text></g><g><title>wgpu::CommandEncoder::begin_render_pass (7 samples, 0.04%)</title><rect x="10.4782%" y="613" width="0.0366%" height="15" fill="rgb(211,206,28)" fg:x="2005" fg:w="7"/><text x="10.7282%" y="623.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="10.5252%" y="533" width="0.0105%" height="15" fill="rgb(237,167,16)" fg:x="2014" fg:w="2"/><text x="10.7752%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (6 samples, 0.03%)</title><rect x="10.5252%" y="549" width="0.0314%" height="15" fill="rgb(233,66,6)" fg:x="2014" fg:w="6"/><text x="10.7752%" y="559.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (4 samples, 0.02%)</title><rect x="10.5357%" y="533" width="0.0209%" height="15" fill="rgb(246,123,29)" fg:x="2016" fg:w="4"/><text x="10.7857%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="10.5357%" y="517" width="0.0209%" height="15" fill="rgb(209,62,40)" fg:x="2016" fg:w="4"/><text x="10.7857%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="10.5409%" y="501" width="0.0157%" height="15" fill="rgb(218,4,25)" fg:x="2017" fg:w="3"/><text x="10.7909%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="10.5409%" y="485" width="0.0157%" height="15" fill="rgb(253,91,49)" fg:x="2017" fg:w="3"/><text x="10.7909%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="10.5461%" y="469" width="0.0105%" height="15" fill="rgb(228,155,29)" fg:x="2018" fg:w="2"/><text x="10.7961%" y="479.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (9 samples, 0.05%)</title><rect x="10.5148%" y="565" width="0.0470%" height="15" fill="rgb(243,57,37)" fg:x="2012" fg:w="9"/><text x="10.7648%" y="575.50"></text></g><g><title>&lt;ash::vk::definitions::DebugMarkerObjectTagInfoEXTBuilder as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="10.5618%" y="533" width="0.0105%" height="15" fill="rgb(244,167,17)" fg:x="2021" fg:w="2"/><text x="10.8118%" y="543.50"></text></g><g><title>syscall (2 samples, 0.01%)</title><rect x="10.5932%" y="469" width="0.0105%" height="15" fill="rgb(207,181,38)" fg:x="2027" fg:w="2"/><text x="10.8432%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.5932%" y="453" width="0.0105%" height="15" fill="rgb(211,8,23)" fg:x="2027" fg:w="2"/><text x="10.8432%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (6 samples, 0.03%)</title><rect x="10.5775%" y="501" width="0.0314%" height="15" fill="rgb(235,11,44)" fg:x="2024" fg:w="6"/><text x="10.8275%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="10.5932%" y="485" width="0.0157%" height="15" fill="rgb(248,18,52)" fg:x="2027" fg:w="3"/><text x="10.8432%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="10.6193%" y="485" width="0.0105%" height="15" fill="rgb(208,4,7)" fg:x="2032" fg:w="2"/><text x="10.8693%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="10.6193%" y="469" width="0.0105%" height="15" fill="rgb(240,17,39)" fg:x="2032" fg:w="2"/><text x="10.8693%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="10.6193%" y="453" width="0.0105%" height="15" fill="rgb(207,170,3)" fg:x="2032" fg:w="2"/><text x="10.8693%" y="463.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (12 samples, 0.06%)</title><rect x="10.5722%" y="533" width="0.0627%" height="15" fill="rgb(236,100,52)" fg:x="2023" fg:w="12"/><text x="10.8222%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (12 samples, 0.06%)</title><rect x="10.5722%" y="517" width="0.0627%" height="15" fill="rgb(246,78,51)" fg:x="2023" fg:w="12"/><text x="10.8222%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="10.6088%" y="501" width="0.0261%" height="15" fill="rgb(211,17,15)" fg:x="2030" fg:w="5"/><text x="10.8588%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (19 samples, 0.10%)</title><rect x="10.5618%" y="549" width="0.0993%" height="15" fill="rgb(209,59,46)" fg:x="2021" fg:w="19"/><text x="10.8118%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (4 samples, 0.02%)</title><rect x="10.6402%" y="533" width="0.0209%" height="15" fill="rgb(210,92,25)" fg:x="2036" fg:w="4"/><text x="10.8902%" y="543.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (4 samples, 0.02%)</title><rect x="10.6402%" y="517" width="0.0209%" height="15" fill="rgb(238,174,52)" fg:x="2036" fg:w="4"/><text x="10.8902%" y="527.50"></text></g><g><title>wgpu::Queue::write_buffer (29 samples, 0.15%)</title><rect x="10.5148%" y="629" width="0.1516%" height="15" fill="rgb(230,73,7)" fg:x="2012" fg:w="29"/><text x="10.7648%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (29 samples, 0.15%)</title><rect x="10.5148%" y="613" width="0.1516%" height="15" fill="rgb(243,124,40)" fg:x="2012" fg:w="29"/><text x="10.7648%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (29 samples, 0.15%)</title><rect x="10.5148%" y="597" width="0.1516%" height="15" fill="rgb(244,170,11)" fg:x="2012" fg:w="29"/><text x="10.7648%" y="607.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (29 samples, 0.15%)</title><rect x="10.5148%" y="581" width="0.1516%" height="15" fill="rgb(207,114,54)" fg:x="2012" fg:w="29"/><text x="10.7648%" y="591.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (20 samples, 0.10%)</title><rect x="10.5618%" y="565" width="0.1045%" height="15" fill="rgb(205,42,20)" fg:x="2021" fg:w="20"/><text x="10.8118%" y="575.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (217 samples, 1.13%)</title><rect x="9.5532%" y="661" width="1.1340%" height="15" fill="rgb(230,30,28)" fg:x="1828" fg:w="217"/><text x="9.8032%" y="671.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (217 samples, 1.13%)</title><rect x="9.5532%" y="645" width="1.1340%" height="15" fill="rgb(205,73,54)" fg:x="1828" fg:w="217"/><text x="9.8032%" y="655.50"></text></g><g><title>wgpu::RenderPass::set_blend_constant (4 samples, 0.02%)</title><rect x="10.6663%" y="629" width="0.0209%" height="15" fill="rgb(254,227,23)" fg:x="2041" fg:w="4"/><text x="10.9163%" y="639.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (3 samples, 0.02%)</title><rect x="10.6872%" y="581" width="0.0157%" height="15" fill="rgb(228,202,34)" fg:x="2045" fg:w="3"/><text x="10.9372%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (2 samples, 0.01%)</title><rect x="10.6924%" y="565" width="0.0105%" height="15" fill="rgb(222,225,37)" fg:x="2046" fg:w="2"/><text x="10.9424%" y="575.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (2 samples, 0.01%)</title><rect x="10.7081%" y="549" width="0.0105%" height="15" fill="rgb(221,14,54)" fg:x="2049" fg:w="2"/><text x="10.9581%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="10.7081%" y="533" width="0.0105%" height="15" fill="rgb(254,102,2)" fg:x="2049" fg:w="2"/><text x="10.9581%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (3 samples, 0.02%)</title><rect x="10.7081%" y="565" width="0.0157%" height="15" fill="rgb(232,104,17)" fg:x="2049" fg:w="3"/><text x="10.9581%" y="575.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_projection (8 samples, 0.04%)</title><rect x="10.6872%" y="661" width="0.0418%" height="15" fill="rgb(250,220,14)" fg:x="2045" fg:w="8"/><text x="10.9372%" y="671.50"></text></g><g><title>wgpu::Queue::write_buffer (8 samples, 0.04%)</title><rect x="10.6872%" y="645" width="0.0418%" height="15" fill="rgb(241,158,9)" fg:x="2045" fg:w="8"/><text x="10.9372%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (8 samples, 0.04%)</title><rect x="10.6872%" y="629" width="0.0418%" height="15" fill="rgb(246,9,43)" fg:x="2045" fg:w="8"/><text x="10.9372%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (8 samples, 0.04%)</title><rect x="10.6872%" y="613" width="0.0418%" height="15" fill="rgb(206,73,33)" fg:x="2045" fg:w="8"/><text x="10.9372%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (8 samples, 0.04%)</title><rect x="10.6872%" y="597" width="0.0418%" height="15" fill="rgb(222,79,8)" fg:x="2045" fg:w="8"/><text x="10.9372%" y="607.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (4 samples, 0.02%)</title><rect x="10.7081%" y="581" width="0.0209%" height="15" fill="rgb(234,8,54)" fg:x="2049" fg:w="4"/><text x="10.9581%" y="591.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (466 samples, 2.44%)</title><rect x="8.3042%" y="693" width="2.4353%" height="15" fill="rgb(209,134,38)" fg:x="1589" fg:w="466"/><text x="8.5542%" y="703.50">gg..</text></g><g><title>ggez::graphics::canvas::Canvas::finalize (458 samples, 2.39%)</title><rect x="8.3460%" y="677" width="2.3935%" height="15" fill="rgb(230,127,29)" fg:x="1597" fg:w="458"/><text x="8.5960%" y="687.50">gg..</text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_scissor_rect (2 samples, 0.01%)</title><rect x="10.7290%" y="661" width="0.0105%" height="15" fill="rgb(242,44,41)" fg:x="2053" fg:w="2"/><text x="10.9790%" y="671.50"></text></g><g><title>wgpu::RenderPass::set_scissor_rect (2 samples, 0.01%)</title><rect x="10.7290%" y="645" width="0.0105%" height="15" fill="rgb(222,56,43)" fg:x="2053" fg:w="2"/><text x="10.9790%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_scissor_rect (2 samples, 0.01%)</title><rect x="10.7290%" y="629" width="0.0105%" height="15" fill="rgb(238,39,47)" fg:x="2053" fg:w="2"/><text x="10.9790%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::render_pass_set_scissor_rect (2 samples, 0.01%)</title><rect x="10.7290%" y="613" width="0.0105%" height="15" fill="rgb(226,79,43)" fg:x="2053" fg:w="2"/><text x="10.9790%" y="623.50"></text></g><g><title>ggez::graphics::canvas::Canvas::from_frame (4 samples, 0.02%)</title><rect x="10.7395%" y="693" width="0.0209%" height="15" fill="rgb(242,105,53)" fg:x="2055" fg:w="4"/><text x="10.9895%" y="703.50"></text></g><g><title>ggez::graphics::canvas::Canvas::new (4 samples, 0.02%)</title><rect x="10.7395%" y="677" width="0.0209%" height="15" fill="rgb(251,132,46)" fg:x="2055" fg:w="4"/><text x="10.9895%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="10.7865%" y="597" width="0.0105%" height="15" fill="rgb(231,77,14)" fg:x="2064" fg:w="2"/><text x="11.0365%" y="607.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (2 samples, 0.01%)</title><rect x="10.7865%" y="581" width="0.0105%" height="15" fill="rgb(240,135,9)" fg:x="2064" fg:w="2"/><text x="11.0365%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="10.7970%" y="597" width="0.0105%" height="15" fill="rgb(248,109,14)" fg:x="2066" fg:w="2"/><text x="11.0470%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="10.7970%" y="581" width="0.0105%" height="15" fill="rgb(227,146,52)" fg:x="2066" fg:w="2"/><text x="11.0470%" y="591.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="10.7708%" y="613" width="0.0627%" height="15" fill="rgb(232,54,3)" fg:x="2061" fg:w="12"/><text x="11.0208%" y="623.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::get (4 samples, 0.02%)</title><rect x="10.8126%" y="597" width="0.0209%" height="15" fill="rgb(229,201,43)" fg:x="2069" fg:w="4"/><text x="11.0626%" y="607.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::occupied (4 samples, 0.02%)</title><rect x="10.8126%" y="581" width="0.0209%" height="15" fill="rgb(252,161,33)" fg:x="2069" fg:w="4"/><text x="11.0626%" y="591.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="11.1419%" y="549" width="0.0105%" height="15" fill="rgb(226,146,40)" fg:x="2132" fg:w="2"/><text x="11.3919%" y="559.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (33 samples, 0.17%)</title><rect x="10.9851%" y="565" width="0.1725%" height="15" fill="rgb(219,47,25)" fg:x="2102" fg:w="33"/><text x="11.2351%" y="575.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (9 samples, 0.05%)</title><rect x="11.1576%" y="565" width="0.0470%" height="15" fill="rgb(250,135,13)" fg:x="2135" fg:w="9"/><text x="11.4076%" y="575.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (7 samples, 0.04%)</title><rect x="11.1680%" y="549" width="0.0366%" height="15" fill="rgb(219,229,18)" fg:x="2137" fg:w="7"/><text x="11.4180%" y="559.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (26 samples, 0.14%)</title><rect x="11.2046%" y="565" width="0.1359%" height="15" fill="rgb(217,152,27)" fg:x="2144" fg:w="26"/><text x="11.4546%" y="575.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (77 samples, 0.40%)</title><rect x="10.9694%" y="581" width="0.4024%" height="15" fill="rgb(225,71,47)" fg:x="2099" fg:w="77"/><text x="11.2194%" y="591.50"></text></g><g><title>ggez::graphics::draw::DrawParam::scale (6 samples, 0.03%)</title><rect x="11.3405%" y="565" width="0.0314%" height="15" fill="rgb(220,139,14)" fg:x="2170" fg:w="6"/><text x="11.5905%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.61%)</title><rect x="10.7708%" y="629" width="0.6114%" height="15" fill="rgb(247,54,32)" fg:x="2061" fg:w="117"/><text x="11.0208%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (105 samples, 0.55%)</title><rect x="10.8336%" y="613" width="0.5487%" height="15" fill="rgb(252,131,39)" fg:x="2073" fg:w="105"/><text x="11.0836%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (81 samples, 0.42%)</title><rect x="10.9590%" y="597" width="0.4233%" height="15" fill="rgb(210,108,39)" fg:x="2097" fg:w="81"/><text x="11.2090%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="11.3718%" y="581" width="0.0105%" height="15" fill="rgb(205,23,29)" fg:x="2176" fg:w="2"/><text x="11.6218%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (126 samples, 0.66%)</title><rect x="10.7656%" y="645" width="0.6585%" height="15" fill="rgb(246,139,46)" fg:x="2060" fg:w="126"/><text x="11.0156%" y="655.50"></text></g><g><title>core::ptr::write (8 samples, 0.04%)</title><rect x="11.3823%" y="629" width="0.0418%" height="15" fill="rgb(250,81,26)" fg:x="2178" fg:w="8"/><text x="11.6323%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.04%)</title><rect x="11.4293%" y="565" width="0.0418%" height="15" fill="rgb(214,104,7)" fg:x="2187" fg:w="8"/><text x="11.6793%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (8 samples, 0.04%)</title><rect x="11.4293%" y="549" width="0.0418%" height="15" fill="rgb(233,189,8)" fg:x="2187" fg:w="8"/><text x="11.6793%" y="559.50"></text></g><g><title>core::ptr::write (8 samples, 0.04%)</title><rect x="11.4293%" y="533" width="0.0418%" height="15" fill="rgb(228,141,17)" fg:x="2187" fg:w="8"/><text x="11.6793%" y="543.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (19 samples, 0.10%)</title><rect x="11.4764%" y="549" width="0.0993%" height="15" fill="rgb(247,157,1)" fg:x="2196" fg:w="19"/><text x="11.7264%" y="559.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (9 samples, 0.05%)</title><rect x="11.5286%" y="533" width="0.0470%" height="15" fill="rgb(249,225,5)" fg:x="2206" fg:w="9"/><text x="11.7786%" y="543.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (9 samples, 0.05%)</title><rect x="11.5286%" y="517" width="0.0470%" height="15" fill="rgb(242,55,13)" fg:x="2206" fg:w="9"/><text x="11.7786%" y="527.50"></text></g><g><title>asuint (6 samples, 0.03%)</title><rect x="11.8108%" y="469" width="0.0314%" height="15" fill="rgb(230,49,50)" fg:x="2260" fg:w="6"/><text x="12.0608%" y="479.50"></text></g><g><title>exp2_inline (28 samples, 0.15%)</title><rect x="11.8422%" y="469" width="0.1463%" height="15" fill="rgb(241,111,38)" fg:x="2266" fg:w="28"/><text x="12.0922%" y="479.50"></text></g><g><title>log2_inline (20 samples, 0.10%)</title><rect x="11.9885%" y="469" width="0.1045%" height="15" fill="rgb(252,155,4)" fg:x="2294" fg:w="20"/><text x="12.2385%" y="479.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (87 samples, 0.45%)</title><rect x="11.6436%" y="533" width="0.4547%" height="15" fill="rgb(212,69,32)" fg:x="2228" fg:w="87"/><text x="11.8936%" y="543.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (87 samples, 0.45%)</title><rect x="11.6436%" y="517" width="0.4547%" height="15" fill="rgb(243,107,47)" fg:x="2228" fg:w="87"/><text x="11.8936%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (82 samples, 0.43%)</title><rect x="11.6697%" y="501" width="0.4285%" height="15" fill="rgb(247,130,12)" fg:x="2233" fg:w="82"/><text x="11.9197%" y="511.50"></text></g><g><title>__powf_fma (82 samples, 0.43%)</title><rect x="11.6697%" y="485" width="0.4285%" height="15" fill="rgb(233,74,16)" fg:x="2233" fg:w="82"/><text x="11.9197%" y="495.50"></text></g><g><title>reduce_fast (2 samples, 0.01%)</title><rect x="12.2184%" y="469" width="0.0105%" height="15" fill="rgb(208,58,18)" fg:x="2338" fg:w="2"/><text x="12.4684%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (284 samples, 1.48%)</title><rect x="10.7656%" y="677" width="1.4842%" height="15" fill="rgb(242,225,1)" fg:x="2060" fg:w="284"/><text x="11.0156%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (284 samples, 1.48%)</title><rect x="10.7656%" y="661" width="1.4842%" height="15" fill="rgb(249,39,40)" fg:x="2060" fg:w="284"/><text x="11.0156%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (158 samples, 0.83%)</title><rect x="11.4241%" y="645" width="0.8257%" height="15" fill="rgb(207,72,44)" fg:x="2186" fg:w="158"/><text x="11.6741%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (158 samples, 0.83%)</title><rect x="11.4241%" y="629" width="0.8257%" height="15" fill="rgb(215,193,12)" fg:x="2186" fg:w="158"/><text x="11.6741%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (158 samples, 0.83%)</title><rect x="11.4241%" y="613" width="0.8257%" height="15" fill="rgb(248,41,39)" fg:x="2186" fg:w="158"/><text x="11.6741%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (158 samples, 0.83%)</title><rect x="11.4241%" y="597" width="0.8257%" height="15" fill="rgb(253,85,4)" fg:x="2186" fg:w="158"/><text x="11.6741%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (157 samples, 0.82%)</title><rect x="11.4293%" y="581" width="0.8205%" height="15" fill="rgb(243,70,31)" fg:x="2187" fg:w="157"/><text x="11.6793%" y="591.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (149 samples, 0.78%)</title><rect x="11.4711%" y="565" width="0.7787%" height="15" fill="rgb(253,195,26)" fg:x="2195" fg:w="149"/><text x="11.7211%" y="575.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (129 samples, 0.67%)</title><rect x="11.5756%" y="549" width="0.6742%" height="15" fill="rgb(243,42,11)" fg:x="2215" fg:w="129"/><text x="11.8256%" y="559.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (28 samples, 0.15%)</title><rect x="12.1035%" y="533" width="0.1463%" height="15" fill="rgb(239,66,17)" fg:x="2316" fg:w="28"/><text x="12.3535%" y="543.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (12 samples, 0.06%)</title><rect x="12.1871%" y="517" width="0.0627%" height="15" fill="rgb(217,132,21)" fg:x="2332" fg:w="12"/><text x="12.4371%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (12 samples, 0.06%)</title><rect x="12.1871%" y="501" width="0.0627%" height="15" fill="rgb(252,202,21)" fg:x="2332" fg:w="12"/><text x="12.4371%" y="511.50"></text></g><g><title>__sincosf_fma (12 samples, 0.06%)</title><rect x="12.1871%" y="485" width="0.0627%" height="15" fill="rgb(233,98,36)" fg:x="2332" fg:w="12"/><text x="12.4371%" y="495.50"></text></g><g><title>sincosf_poly (4 samples, 0.02%)</title><rect x="12.2289%" y="469" width="0.0209%" height="15" fill="rgb(216,153,54)" fg:x="2340" fg:w="4"/><text x="12.4789%" y="479.50"></text></g><g><title>v2df_to_sf (2 samples, 0.01%)</title><rect x="12.2394%" y="453" width="0.0105%" height="15" fill="rgb(250,99,7)" fg:x="2342" fg:w="2"/><text x="12.4894%" y="463.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (975 samples, 5.10%)</title><rect x="7.1597%" y="709" width="5.0954%" height="15" fill="rgb(207,56,50)" fg:x="1370" fg:w="975"/><text x="7.4097%" y="719.50">&lt;neura..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (285 samples, 1.49%)</title><rect x="10.7656%" y="693" width="1.4894%" height="15" fill="rgb(244,61,34)" fg:x="2060" fg:w="285"/><text x="11.0156%" y="703.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (2 samples, 0.01%)</title><rect x="12.2550%" y="693" width="0.0105%" height="15" fill="rgb(241,50,38)" fg:x="2345" fg:w="2"/><text x="12.5050%" y="703.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (1,967 samples, 10.28%)</title><rect x="12.2655%" y="677" width="10.2796%" height="15" fill="rgb(212,166,30)" fg:x="2347" fg:w="1967"/><text x="12.5155%" y="687.50">&lt;neuralang::Mai..</text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="22.5294%" y="661" width="0.0157%" height="15" fill="rgb(249,127,32)" fg:x="4311" fg:w="3"/><text x="22.7794%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.13%)</title><rect x="22.7384%" y="645" width="0.1307%" height="15" fill="rgb(209,103,0)" fg:x="4351" fg:w="25"/><text x="22.9884%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.10%)</title><rect x="22.7698%" y="629" width="0.0993%" height="15" fill="rgb(238,209,51)" fg:x="4357" fg:w="19"/><text x="23.0198%" y="639.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (5 samples, 0.03%)</title><rect x="22.8430%" y="613" width="0.0261%" height="15" fill="rgb(237,56,23)" fg:x="4371" fg:w="5"/><text x="23.0930%" y="623.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.26%)</title><rect x="22.6182%" y="661" width="0.2561%" height="15" fill="rgb(215,153,46)" fg:x="4328" fg:w="49"/><text x="22.8682%" y="671.50"></text></g><g><title>neuralang::World::age_foods (64 samples, 0.33%)</title><rect x="22.5451%" y="677" width="0.3345%" height="15" fill="rgb(224,49,31)" fg:x="4314" fg:w="64"/><text x="22.7951%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.11%)</title><rect x="23.2715%" y="645" width="0.1150%" height="15" fill="rgb(250,18,42)" fg:x="4453" fg:w="22"/><text x="23.5215%" y="655.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (9 samples, 0.05%)</title><rect x="23.3394%" y="629" width="0.0470%" height="15" fill="rgb(215,176,39)" fg:x="4466" fg:w="9"/><text x="23.5894%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.04%)</title><rect x="23.3865%" y="645" width="0.0418%" height="15" fill="rgb(223,77,29)" fg:x="4475" fg:w="8"/><text x="23.6365%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="23.3917%" y="629" width="0.0366%" height="15" fill="rgb(234,94,52)" fg:x="4476" fg:w="7"/><text x="23.6417%" y="639.50"></text></g><g><title>slotmap::KeyData::new (7 samples, 0.04%)</title><rect x="23.4283%" y="645" width="0.0366%" height="15" fill="rgb(220,154,50)" fg:x="4483" fg:w="7"/><text x="23.6783%" y="655.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.50%)</title><rect x="23.0050%" y="661" width="0.5017%" height="15" fill="rgb(212,11,10)" fg:x="4402" fg:w="96"/><text x="23.2550%" y="671.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::get_mut (8 samples, 0.04%)</title><rect x="23.4649%" y="645" width="0.0418%" height="15" fill="rgb(205,166,19)" fg:x="4490" fg:w="8"/><text x="23.7149%" y="655.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::occupied (8 samples, 0.04%)</title><rect x="23.4649%" y="629" width="0.0418%" height="15" fill="rgb(244,198,16)" fg:x="4490" fg:w="8"/><text x="23.7149%" y="639.50"></text></g><g><title>neuralang::World::age_obstructs (122 samples, 0.64%)</title><rect x="22.8795%" y="677" width="0.6376%" height="15" fill="rgb(219,69,12)" fg:x="4378" fg:w="122"/><text x="23.1295%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (2 samples, 0.01%)</title><rect x="23.5067%" y="661" width="0.0105%" height="15" fill="rgb(245,30,7)" fg:x="4498" fg:w="2"/><text x="23.7567%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,445 samples, 12.78%)</title><rect x="29.0149%" y="645" width="12.7776%" height="15" fill="rgb(218,221,48)" fg:x="5552" fg:w="2445"/><text x="29.2649%" y="655.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,495 samples, 13.04%)</title><rect x="29.0149%" y="661" width="13.0389%" height="15" fill="rgb(216,66,15)" fg:x="5552" fg:w="2495"/><text x="29.2649%" y="671.50">&lt;&amp;alloc::vec::Vec&lt;T,..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (50 samples, 0.26%)</title><rect x="41.7925%" y="645" width="0.2613%" height="15" fill="rgb(226,122,50)" fg:x="7997" fg:w="50"/><text x="42.0425%" y="655.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (21 samples, 0.11%)</title><rect x="42.0538%" y="629" width="0.1097%" height="15" fill="rgb(239,156,16)" fg:x="8047" fg:w="21"/><text x="42.3038%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (117 samples, 0.61%)</title><rect x="42.0538%" y="661" width="0.6114%" height="15" fill="rgb(224,27,38)" fg:x="8047" fg:w="117"/><text x="42.3038%" y="671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (117 samples, 0.61%)</title><rect x="42.0538%" y="645" width="0.6114%" height="15" fill="rgb(224,39,27)" fg:x="8047" fg:w="117"/><text x="42.3038%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (96 samples, 0.50%)</title><rect x="42.1636%" y="629" width="0.5017%" height="15" fill="rgb(215,92,29)" fg:x="8068" fg:w="96"/><text x="42.4136%" y="639.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.30%)</title><rect x="42.6653%" y="645" width="0.3031%" height="15" fill="rgb(207,159,16)" fg:x="8164" fg:w="58"/><text x="42.9153%" y="655.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (52 samples, 0.27%)</title><rect x="42.6966%" y="629" width="0.2718%" height="15" fill="rgb(238,163,47)" fg:x="8170" fg:w="52"/><text x="42.9466%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (10 samples, 0.05%)</title><rect x="42.9684%" y="581" width="0.0523%" height="15" fill="rgb(219,91,49)" fg:x="8222" fg:w="10"/><text x="43.2184%" y="591.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.40%)</title><rect x="42.6653%" y="661" width="0.3972%" height="15" fill="rgb(227,167,31)" fg:x="8164" fg:w="76"/><text x="42.9153%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.09%)</title><rect x="42.9684%" y="645" width="0.0941%" height="15" fill="rgb(234,80,54)" fg:x="8222" fg:w="18"/><text x="43.2184%" y="655.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (18 samples, 0.09%)</title><rect x="42.9684%" y="629" width="0.0941%" height="15" fill="rgb(212,114,2)" fg:x="8222" fg:w="18"/><text x="43.2184%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (18 samples, 0.09%)</title><rect x="42.9684%" y="613" width="0.0941%" height="15" fill="rgb(234,50,24)" fg:x="8222" fg:w="18"/><text x="43.2184%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (18 samples, 0.09%)</title><rect x="42.9684%" y="597" width="0.0941%" height="15" fill="rgb(221,68,8)" fg:x="8222" fg:w="18"/><text x="43.2184%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.04%)</title><rect x="43.0206%" y="581" width="0.0418%" height="15" fill="rgb(254,180,31)" fg:x="8232" fg:w="8"/><text x="43.2706%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="48.0272%" y="645" width="0.0314%" height="15" fill="rgb(247,130,50)" fg:x="9190" fg:w="6"/><text x="48.2772%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="48.0429%" y="629" width="0.0157%" height="15" fill="rgb(211,109,4)" fg:x="9193" fg:w="3"/><text x="48.2929%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="48.0429%" y="613" width="0.0157%" height="15" fill="rgb(238,50,21)" fg:x="9193" fg:w="3"/><text x="48.2929%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="48.0429%" y="597" width="0.0157%" height="15" fill="rgb(225,57,45)" fg:x="9193" fg:w="3"/><text x="48.2929%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="48.0481%" y="581" width="0.0105%" height="15" fill="rgb(209,196,50)" fg:x="9194" fg:w="2"/><text x="48.2981%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="48.0481%" y="565" width="0.0105%" height="15" fill="rgb(242,140,13)" fg:x="9194" fg:w="2"/><text x="48.2981%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="48.0481%" y="549" width="0.0105%" height="15" fill="rgb(217,111,7)" fg:x="9194" fg:w="2"/><text x="48.2981%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="48.0481%" y="533" width="0.0105%" height="15" fill="rgb(253,193,51)" fg:x="9194" fg:w="2"/><text x="48.2981%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (969 samples, 5.06%)</title><rect x="43.0625%" y="661" width="5.0640%" height="15" fill="rgb(252,70,29)" fg:x="8240" fg:w="969"/><text x="43.3125%" y="671.50">&lt;core:..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (13 samples, 0.07%)</title><rect x="48.0585%" y="645" width="0.0679%" height="15" fill="rgb(232,127,12)" fg:x="9196" fg:w="13"/><text x="48.3085%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (13 samples, 0.07%)</title><rect x="48.0585%" y="629" width="0.0679%" height="15" fill="rgb(211,180,21)" fg:x="9196" fg:w="13"/><text x="48.3085%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (13 samples, 0.07%)</title><rect x="48.0585%" y="613" width="0.0679%" height="15" fill="rgb(229,72,13)" fg:x="9196" fg:w="13"/><text x="48.3085%" y="623.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Div&lt;f32&gt;&gt;::div (37 samples, 0.19%)</title><rect x="48.1265%" y="661" width="0.1934%" height="15" fill="rgb(240,211,49)" fg:x="9209" fg:w="37"/><text x="48.3765%" y="671.50"></text></g><g><title>&lt;f32 as core::ops::arith::Div&gt;::div (37 samples, 0.19%)</title><rect x="48.1265%" y="645" width="0.1934%" height="15" fill="rgb(219,149,40)" fg:x="9209" fg:w="37"/><text x="48.3765%" y="655.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (9 samples, 0.05%)</title><rect x="48.3198%" y="661" width="0.0470%" height="15" fill="rgb(210,127,46)" fg:x="9246" fg:w="9"/><text x="48.5698%" y="671.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (9 samples, 0.05%)</title><rect x="48.3198%" y="645" width="0.0470%" height="15" fill="rgb(220,106,7)" fg:x="9246" fg:w="9"/><text x="48.5698%" y="655.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::SubAssign&gt;::sub_assign (52 samples, 0.27%)</title><rect x="48.3669%" y="661" width="0.2718%" height="15" fill="rgb(249,31,22)" fg:x="9255" fg:w="52"/><text x="48.6169%" y="671.50"></text></g><g><title>&lt;f32 as core::ops::arith::SubAssign&gt;::sub_assign (52 samples, 0.27%)</title><rect x="48.3669%" y="645" width="0.2718%" height="15" fill="rgb(253,1,49)" fg:x="9255" fg:w="52"/><text x="48.6169%" y="655.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (130 samples, 0.68%)</title><rect x="48.6386%" y="661" width="0.6794%" height="15" fill="rgb(227,144,33)" fg:x="9307" fg:w="130"/><text x="48.8886%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="49.3180%" y="661" width="0.0209%" height="15" fill="rgb(249,163,44)" fg:x="9437" fg:w="4"/><text x="49.5680%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="49.3180%" y="645" width="0.0209%" height="15" fill="rgb(234,15,39)" fg:x="9437" fg:w="4"/><text x="49.5680%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="49.3180%" y="629" width="0.0209%" height="15" fill="rgb(207,66,16)" fg:x="9437" fg:w="4"/><text x="49.5680%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="49.3180%" y="613" width="0.0209%" height="15" fill="rgb(233,112,24)" fg:x="9437" fg:w="4"/><text x="49.5680%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.3232%" y="597" width="0.0157%" height="15" fill="rgb(230,90,22)" fg:x="9438" fg:w="3"/><text x="49.5732%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.3232%" y="581" width="0.0157%" height="15" fill="rgb(229,61,13)" fg:x="9438" fg:w="3"/><text x="49.5732%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.3232%" y="565" width="0.0157%" height="15" fill="rgb(225,57,24)" fg:x="9438" fg:w="3"/><text x="49.5732%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.3232%" y="549" width="0.0157%" height="15" fill="rgb(208,169,48)" fg:x="9438" fg:w="3"/><text x="49.5732%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="49.3285%" y="533" width="0.0105%" height="15" fill="rgb(244,218,51)" fg:x="9439" fg:w="2"/><text x="49.5785%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (50 samples, 0.26%)</title><rect x="49.3389%" y="661" width="0.2613%" height="15" fill="rgb(214,148,10)" fg:x="9441" fg:w="50"/><text x="49.5889%" y="671.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (50 samples, 0.26%)</title><rect x="49.3389%" y="645" width="0.2613%" height="15" fill="rgb(225,174,27)" fg:x="9441" fg:w="50"/><text x="49.5889%" y="655.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (50 samples, 0.26%)</title><rect x="49.3389%" y="629" width="0.2613%" height="15" fill="rgb(230,96,26)" fg:x="9441" fg:w="50"/><text x="49.5889%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (28 samples, 0.15%)</title><rect x="49.9033%" y="613" width="0.1463%" height="15" fill="rgb(232,10,30)" fg:x="9549" fg:w="28"/><text x="50.1533%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (32 samples, 0.17%)</title><rect x="49.9033%" y="629" width="0.1672%" height="15" fill="rgb(222,8,50)" fg:x="9549" fg:w="32"/><text x="50.1533%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (4 samples, 0.02%)</title><rect x="50.0496%" y="613" width="0.0209%" height="15" fill="rgb(213,81,27)" fg:x="9577" fg:w="4"/><text x="50.2996%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (863 samples, 4.51%)</title><rect x="49.6002%" y="661" width="4.5101%" height="15" fill="rgb(245,50,10)" fg:x="9491" fg:w="863"/><text x="49.8502%" y="671.50">core:..</text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (863 samples, 4.51%)</title><rect x="49.6002%" y="645" width="4.5101%" height="15" fill="rgb(216,100,18)" fg:x="9491" fg:w="863"/><text x="49.8502%" y="655.50">&lt;core..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (773 samples, 4.04%)</title><rect x="50.0706%" y="629" width="4.0397%" height="15" fill="rgb(236,147,54)" fg:x="9581" fg:w="773"/><text x="50.3206%" y="639.50">core..</text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="54.0841%" y="613" width="0.0261%" height="15" fill="rgb(205,143,26)" fg:x="10349" fg:w="5"/><text x="54.3341%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="597" width="0.0157%" height="15" fill="rgb(236,26,9)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="581" width="0.0157%" height="15" fill="rgb(221,165,53)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="565" width="0.0157%" height="15" fill="rgb(214,110,17)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="549" width="0.0157%" height="15" fill="rgb(237,197,12)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="533" width="0.0157%" height="15" fill="rgb(205,84,17)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="517" width="0.0157%" height="15" fill="rgb(237,18,45)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="54.0946%" y="501" width="0.0157%" height="15" fill="rgb(221,87,14)" fg:x="10351" fg:w="3"/><text x="54.3446%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.0998%" y="485" width="0.0105%" height="15" fill="rgb(238,186,15)" fg:x="10352" fg:w="2"/><text x="54.3498%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="54.0998%" y="469" width="0.0105%" height="15" fill="rgb(208,115,11)" fg:x="10352" fg:w="2"/><text x="54.3498%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.06%)</title><rect x="54.1103%" y="661" width="0.0627%" height="15" fill="rgb(254,175,0)" fg:x="10354" fg:w="12"/><text x="54.3603%" y="671.50"></text></g><g><title>glam::f32::vec2::&lt;impl core::ops::arith::Mul&lt;glam::f32::vec2::Vec2&gt; for f32&gt;::mul (48 samples, 0.25%)</title><rect x="54.1730%" y="661" width="0.2508%" height="15" fill="rgb(227,24,42)" fg:x="10366" fg:w="48"/><text x="54.4230%" y="671.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (48 samples, 0.25%)</title><rect x="54.1730%" y="645" width="0.2508%" height="15" fill="rgb(223,211,37)" fg:x="10366" fg:w="48"/><text x="54.4230%" y="655.50"></text></g><g><title>glam::f32::math::std_math::sqrt (2 samples, 0.01%)</title><rect x="54.5127%" y="629" width="0.0105%" height="15" fill="rgb(235,49,27)" fg:x="10431" fg:w="2"/><text x="54.7627%" y="639.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2 samples, 0.01%)</title><rect x="54.5127%" y="613" width="0.0105%" height="15" fill="rgb(254,97,51)" fg:x="10431" fg:w="2"/><text x="54.7627%" y="623.50"></text></g><g><title>neuralang::b_collides_b (27 samples, 0.14%)</title><rect x="54.4238%" y="661" width="0.1411%" height="15" fill="rgb(249,51,40)" fg:x="10414" fg:w="27"/><text x="54.6738%" y="671.50"></text></g><g><title>glam::f32::vec2::Vec2::length (10 samples, 0.05%)</title><rect x="54.5127%" y="645" width="0.0523%" height="15" fill="rgb(210,128,45)" fg:x="10431" fg:w="10"/><text x="54.7627%" y="655.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (8 samples, 0.04%)</title><rect x="54.5231%" y="629" width="0.0418%" height="15" fill="rgb(224,137,50)" fg:x="10433" fg:w="8"/><text x="54.7731%" y="639.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (3 samples, 0.02%)</title><rect x="54.5963%" y="629" width="0.0157%" height="15" fill="rgb(242,15,9)" fg:x="10447" fg:w="3"/><text x="54.8463%" y="639.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (3 samples, 0.02%)</title><rect x="54.5963%" y="613" width="0.0157%" height="15" fill="rgb(233,187,41)" fg:x="10447" fg:w="3"/><text x="54.8463%" y="623.50"></text></g><g><title>glam::f32::math::std_math::sqrt (6 samples, 0.03%)</title><rect x="54.6120%" y="613" width="0.0314%" height="15" fill="rgb(227,2,29)" fg:x="10450" fg:w="6"/><text x="54.8620%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (6 samples, 0.03%)</title><rect x="54.6120%" y="597" width="0.0314%" height="15" fill="rgb(222,70,3)" fg:x="10450" fg:w="6"/><text x="54.8620%" y="607.50"></text></g><g><title>neuralang::b_collides_f (18 samples, 0.09%)</title><rect x="54.5649%" y="661" width="0.0941%" height="15" fill="rgb(213,11,42)" fg:x="10441" fg:w="18"/><text x="54.8149%" y="671.50"></text></g><g><title>glam::f32::vec2::Vec2::distance (12 samples, 0.06%)</title><rect x="54.5963%" y="645" width="0.0627%" height="15" fill="rgb(225,150,9)" fg:x="10447" fg:w="12"/><text x="54.8463%" y="655.50"></text></g><g><title>glam::f32::vec2::Vec2::length (9 samples, 0.05%)</title><rect x="54.6120%" y="629" width="0.0470%" height="15" fill="rgb(230,162,45)" fg:x="10450" fg:w="9"/><text x="54.8620%" y="639.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (3 samples, 0.02%)</title><rect x="54.6433%" y="613" width="0.0157%" height="15" fill="rgb(222,14,52)" fg:x="10456" fg:w="3"/><text x="54.8933%" y="623.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (51 samples, 0.27%)</title><rect x="56.0700%" y="645" width="0.2665%" height="15" fill="rgb(254,198,14)" fg:x="10729" fg:w="51"/><text x="56.3200%" y="655.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (51 samples, 0.27%)</title><rect x="56.0700%" y="629" width="0.2665%" height="15" fill="rgb(220,217,30)" fg:x="10729" fg:w="51"/><text x="56.3200%" y="639.50"></text></g><g><title>glam::f32::math::std_math::sqrt (126 samples, 0.66%)</title><rect x="56.3366%" y="629" width="0.6585%" height="15" fill="rgb(215,146,41)" fg:x="10780" fg:w="126"/><text x="56.5866%" y="639.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (126 samples, 0.66%)</title><rect x="56.3366%" y="613" width="0.6585%" height="15" fill="rgb(217,27,36)" fg:x="10780" fg:w="126"/><text x="56.5866%" y="623.50"></text></g><g><title>neuralang::b_collides_o (591 samples, 3.09%)</title><rect x="54.6590%" y="661" width="3.0886%" height="15" fill="rgb(219,218,39)" fg:x="10459" fg:w="591"/><text x="54.9090%" y="671.50">neu..</text></g><g><title>glam::f32::vec2::Vec2::length (270 samples, 1.41%)</title><rect x="56.3366%" y="645" width="1.4110%" height="15" fill="rgb(219,4,42)" fg:x="10780" fg:w="270"/><text x="56.5866%" y="655.50"></text></g><g><title>glam::f32::vec2::Vec2::dot (144 samples, 0.75%)</title><rect x="56.9950%" y="629" width="0.7525%" height="15" fill="rgb(249,119,36)" fg:x="10906" fg:w="144"/><text x="57.2450%" y="639.50"></text></g><g><title>neuralang::oob (2 samples, 0.01%)</title><rect x="57.7476%" y="661" width="0.0105%" height="15" fill="rgb(209,23,33)" fg:x="11050" fg:w="2"/><text x="57.9976%" y="671.50"></text></g><g><title>neuralang::two_to_one (25 samples, 0.13%)</title><rect x="57.7580%" y="661" width="0.1307%" height="15" fill="rgb(211,10,0)" fg:x="11052" fg:w="25"/><text x="58.0080%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (16 samples, 0.08%)</title><rect x="57.8939%" y="645" width="0.0836%" height="15" fill="rgb(208,99,37)" fg:x="11078" fg:w="16"/><text x="58.1439%" y="655.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get::{{closure}} (16 samples, 0.08%)</title><rect x="57.8939%" y="629" width="0.0836%" height="15" fill="rgb(213,132,31)" fg:x="11078" fg:w="16"/><text x="58.1439%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="57.9775%" y="645" width="0.0105%" height="15" fill="rgb(243,129,40)" fg:x="11094" fg:w="2"/><text x="58.2275%" y="655.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (21 samples, 0.11%)</title><rect x="57.8887%" y="661" width="0.1097%" height="15" fill="rgb(210,66,33)" fg:x="11077" fg:w="21"/><text x="58.1387%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.01%)</title><rect x="57.9880%" y="645" width="0.0105%" height="15" fill="rgb(209,189,4)" fg:x="11096" fg:w="2"/><text x="58.2380%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.01%)</title><rect x="57.9880%" y="629" width="0.0105%" height="15" fill="rgb(214,107,37)" fg:x="11096" fg:w="2"/><text x="58.2380%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (5 samples, 0.03%)</title><rect x="58.0246%" y="645" width="0.0261%" height="15" fill="rgb(245,88,54)" fg:x="11103" fg:w="5"/><text x="58.2746%" y="655.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (42 samples, 0.22%)</title><rect x="58.0507%" y="645" width="0.2195%" height="15" fill="rgb(205,146,20)" fg:x="11108" fg:w="42"/><text x="58.3007%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="629" width="0.0157%" height="15" fill="rgb(220,161,25)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="613" width="0.0157%" height="15" fill="rgb(215,152,15)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="597" width="0.0157%" height="15" fill="rgb(233,192,44)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="581" width="0.0157%" height="15" fill="rgb(240,170,46)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="565" width="0.0157%" height="15" fill="rgb(207,104,33)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="549" width="0.0157%" height="15" fill="rgb(219,21,39)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="58.6256%" y="533" width="0.0157%" height="15" fill="rgb(214,133,29)" fg:x="11218" fg:w="3"/><text x="58.8756%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (768 samples, 4.01%)</title><rect x="58.2702%" y="645" width="4.0136%" height="15" fill="rgb(226,93,6)" fg:x="11150" fg:w="768"/><text x="58.5202%" y="655.50">core..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut::{{closure}} (697 samples, 3.64%)</title><rect x="58.6412%" y="629" width="3.6425%" height="15" fill="rgb(252,222,34)" fg:x="11221" fg:w="697"/><text x="58.8912%" y="639.50">slot..</text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.13%)</title><rect x="62.2838%" y="645" width="0.1307%" height="15" fill="rgb(252,92,48)" fg:x="11918" fg:w="25"/><text x="62.5338%" y="655.50"></text></g><g><title>neuralang::World::check_collisions (7,470 samples, 39.04%)</title><rect x="23.5171%" y="677" width="39.0384%" height="15" fill="rgb(245,223,24)" fg:x="4500" fg:w="7470"/><text x="23.7671%" y="687.50">neuralang::World::check_collisions</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (872 samples, 4.56%)</title><rect x="57.9984%" y="661" width="4.5571%" height="15" fill="rgb(205,176,3)" fg:x="11098" fg:w="872"/><text x="58.2484%" y="671.50">slotm..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (27 samples, 0.14%)</title><rect x="62.4144%" y="645" width="0.1411%" height="15" fill="rgb(235,151,15)" fg:x="11943" fg:w="27"/><text x="62.6644%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (27 samples, 0.14%)</title><rect x="62.4144%" y="629" width="0.1411%" height="15" fill="rgb(237,209,11)" fg:x="11943" fg:w="27"/><text x="62.6644%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="62.5398%" y="613" width="0.0157%" height="15" fill="rgb(243,227,24)" fg:x="11967" fg:w="3"/><text x="62.7898%" y="623.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (47 samples, 0.25%)</title><rect x="62.5555%" y="645" width="0.2456%" height="15" fill="rgb(239,193,16)" fg:x="11970" fg:w="47"/><text x="62.8055%" y="655.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (35 samples, 0.18%)</title><rect x="62.8273%" y="629" width="0.1829%" height="15" fill="rgb(231,27,9)" fg:x="12022" fg:w="35"/><text x="63.0773%" y="639.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (48 samples, 0.25%)</title><rect x="63.1095%" y="613" width="0.2508%" height="15" fill="rgb(219,169,10)" fg:x="12076" fg:w="48"/><text x="63.3595%" y="623.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (6 samples, 0.03%)</title><rect x="63.3290%" y="597" width="0.0314%" height="15" fill="rgb(244,229,43)" fg:x="12118" fg:w="6"/><text x="63.5790%" y="607.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.60%)</title><rect x="63.0102%" y="629" width="0.5958%" height="15" fill="rgb(254,38,20)" fg:x="12057" fg:w="114"/><text x="63.2602%" y="639.50"></text></g><g><title>slotmap::KeyData::new (47 samples, 0.25%)</title><rect x="63.3603%" y="613" width="0.2456%" height="15" fill="rgb(250,47,30)" fg:x="12124" fg:w="47"/><text x="63.6103%" y="623.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (624 samples, 3.26%)</title><rect x="64.0031%" y="597" width="3.2610%" height="15" fill="rgb(224,124,36)" fg:x="12247" fg:w="624"/><text x="64.2531%" y="607.50">&lt;gl..</text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (624 samples, 3.26%)</title><rect x="64.0031%" y="581" width="3.2610%" height="15" fill="rgb(246,68,51)" fg:x="12247" fg:w="624"/><text x="64.2531%" y="591.50">&lt;f3..</text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (210 samples, 1.10%)</title><rect x="67.2642%" y="597" width="1.0975%" height="15" fill="rgb(253,43,49)" fg:x="12871" fg:w="210"/><text x="67.5142%" y="607.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (210 samples, 1.10%)</title><rect x="67.2642%" y="581" width="1.0975%" height="15" fill="rgb(219,54,36)" fg:x="12871" fg:w="210"/><text x="67.5142%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="69.7570%" y="549" width="0.0105%" height="15" fill="rgb(227,133,34)" fg:x="13348" fg:w="2"/><text x="70.0070%" y="559.50"></text></g><g><title>abstop12 (77 samples, 0.40%)</title><rect x="69.7674%" y="549" width="0.4024%" height="15" fill="rgb(247,227,15)" fg:x="13350" fg:w="77"/><text x="70.0174%" y="559.50"></text></g><g><title>asuint (39 samples, 0.20%)</title><rect x="69.9660%" y="533" width="0.2038%" height="15" fill="rgb(229,96,14)" fg:x="13388" fg:w="39"/><text x="70.2160%" y="543.50"></text></g><g><title>reduce_fast (99 samples, 0.52%)</title><rect x="70.1698%" y="549" width="0.5174%" height="15" fill="rgb(220,79,17)" fg:x="13427" fg:w="99"/><text x="70.4198%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="72.3073%" y="533" width="0.0157%" height="15" fill="rgb(205,131,53)" fg:x="13836" fg:w="3"/><text x="72.5573%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="517" width="0.0105%" height="15" fill="rgb(209,50,29)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="501" width="0.0105%" height="15" fill="rgb(245,86,46)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="485" width="0.0105%" height="15" fill="rgb(235,66,46)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="469" width="0.0105%" height="15" fill="rgb(232,148,31)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="453" width="0.0105%" height="15" fill="rgb(217,149,8)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="437" width="0.0105%" height="15" fill="rgb(209,183,11)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="421" width="0.0105%" height="15" fill="rgb(208,55,20)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="405" width="0.0105%" height="15" fill="rgb(218,39,14)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="389" width="0.0105%" height="15" fill="rgb(216,169,33)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="72.3125%" y="373" width="0.0105%" height="15" fill="rgb(233,80,24)" fg:x="13837" fg:w="2"/><text x="72.5625%" y="383.50"></text></g><g><title>neuralang::dir_from_theta (892 samples, 4.66%)</title><rect x="68.3616%" y="597" width="4.6616%" height="15" fill="rgb(213,179,31)" fg:x="13081" fg:w="892"/><text x="68.6116%" y="607.50">neura..</text></g><g><title>std::f32::&lt;impl f32&gt;::cos (892 samples, 4.66%)</title><rect x="68.3616%" y="581" width="4.6616%" height="15" fill="rgb(209,19,5)" fg:x="13081" fg:w="892"/><text x="68.6116%" y="591.50">std::..</text></g><g><title>__sincosf_fma (842 samples, 4.40%)</title><rect x="68.6229%" y="565" width="4.4003%" height="15" fill="rgb(219,18,35)" fg:x="13131" fg:w="842"/><text x="68.8729%" y="575.50">__sin..</text></g><g><title>sincosf_poly (447 samples, 2.34%)</title><rect x="70.6872%" y="549" width="2.3360%" height="15" fill="rgb(209,169,16)" fg:x="13526" fg:w="447"/><text x="70.9372%" y="559.50">s..</text></g><g><title>v2df_to_sf (134 samples, 0.70%)</title><rect x="72.3230%" y="533" width="0.7003%" height="15" fill="rgb(245,90,51)" fg:x="13839" fg:w="134"/><text x="72.5730%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,110 samples, 11.03%)</title><rect x="62.5555%" y="661" width="11.0269%" height="15" fill="rgb(220,99,45)" fg:x="11970" fg:w="2110"/><text x="62.8055%" y="671.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,063 samples, 10.78%)</title><rect x="62.8011%" y="645" width="10.7813%" height="15" fill="rgb(249,89,25)" fg:x="12017" fg:w="2063"/><text x="63.0511%" y="655.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,908 samples, 9.97%)</title><rect x="63.6112%" y="629" width="9.9713%" height="15" fill="rgb(239,193,0)" fg:x="12172" fg:w="1908"/><text x="63.8612%" y="639.50">core::iter::tr..</text></g><g><title>neuralang::World::move_beings::{{closure}} (1,908 samples, 9.97%)</title><rect x="63.6112%" y="613" width="9.9713%" height="15" fill="rgb(231,126,1)" fg:x="12172" fg:w="1908"/><text x="63.8612%" y="623.50">neuralang::Wor..</text></g><g><title>neuralang::oob (107 samples, 0.56%)</title><rect x="73.0233%" y="597" width="0.5592%" height="15" fill="rgb(243,166,3)" fg:x="13973" fg:w="107"/><text x="73.2733%" y="607.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (3 samples, 0.02%)</title><rect x="73.5824%" y="613" width="0.0157%" height="15" fill="rgb(223,22,34)" fg:x="14080" fg:w="3"/><text x="73.8324%" y="623.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="73.5824%" y="597" width="0.0157%" height="15" fill="rgb(251,52,51)" fg:x="14080" fg:w="3"/><text x="73.8324%" y="607.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="73.5824%" y="581" width="0.0157%" height="15" fill="rgb(221,165,28)" fg:x="14080" fg:w="3"/><text x="73.8324%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="73.5824%" y="565" width="0.0157%" height="15" fill="rgb(218,121,47)" fg:x="14080" fg:w="3"/><text x="73.8324%" y="575.50"></text></g><g><title>neuralang::World::move_beings (2,116 samples, 11.06%)</title><rect x="62.5555%" y="677" width="11.0583%" height="15" fill="rgb(209,120,9)" fg:x="11970" fg:w="2116"/><text x="62.8055%" y="687.50">neuralang::World..</text></g><g><title>rand::rngs::thread::thread_rng (6 samples, 0.03%)</title><rect x="73.5824%" y="661" width="0.0314%" height="15" fill="rgb(236,68,12)" fg:x="14080" fg:w="6"/><text x="73.8324%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.03%)</title><rect x="73.5824%" y="645" width="0.0314%" height="15" fill="rgb(225,194,26)" fg:x="14080" fg:w="6"/><text x="73.8324%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.03%)</title><rect x="73.5824%" y="629" width="0.0314%" height="15" fill="rgb(231,84,39)" fg:x="14080" fg:w="6"/><text x="73.8324%" y="639.50"></text></g><g><title>rand::rngs::thread::thread_rng::{{closure}} (3 samples, 0.02%)</title><rect x="73.5981%" y="613" width="0.0157%" height="15" fill="rgb(210,11,45)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="73.5981%" y="597" width="0.0157%" height="15" fill="rgb(224,54,52)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="607.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (3 samples, 0.02%)</title><rect x="73.5981%" y="581" width="0.0157%" height="15" fill="rgb(238,102,14)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.02%)</title><rect x="73.5981%" y="565" width="0.0157%" height="15" fill="rgb(243,160,52)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.02%)</title><rect x="73.5981%" y="549" width="0.0157%" height="15" fill="rgb(216,114,19)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="559.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="73.5981%" y="533" width="0.0157%" height="15" fill="rgb(244,166,37)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="543.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="73.5981%" y="517" width="0.0157%" height="15" fill="rgb(246,29,44)" fg:x="14083" fg:w="3"/><text x="73.8481%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.02%)</title><rect x="73.6452%" y="645" width="0.0209%" height="15" fill="rgb(215,56,53)" fg:x="14092" fg:w="4"/><text x="73.8952%" y="655.50"></text></g><g><title>neuralang::World::tire_beings (11 samples, 0.06%)</title><rect x="73.6138%" y="677" width="0.0575%" height="15" fill="rgb(217,60,2)" fg:x="14086" fg:w="11"/><text x="73.8638%" y="687.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="73.6242%" y="661" width="0.0470%" height="15" fill="rgb(207,26,24)" fg:x="14088" fg:w="9"/><text x="73.8742%" y="671.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (12 samples, 0.06%)</title><rect x="73.8594%" y="661" width="0.0627%" height="15" fill="rgb(252,210,15)" fg:x="14133" fg:w="12"/><text x="74.1094%" y="671.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (12 samples, 0.06%)</title><rect x="73.8594%" y="645" width="0.0627%" height="15" fill="rgb(253,209,26)" fg:x="14133" fg:w="12"/><text x="74.1094%" y="655.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (92 samples, 0.48%)</title><rect x="73.9221%" y="661" width="0.4808%" height="15" fill="rgb(238,170,14)" fg:x="14145" fg:w="92"/><text x="74.1721%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="74.4552%" y="645" width="0.0157%" height="15" fill="rgb(216,178,15)" fg:x="14247" fg:w="3"/><text x="74.7052%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="74.4709%" y="645" width="0.0261%" height="15" fill="rgb(250,197,2)" fg:x="14250" fg:w="5"/><text x="74.7209%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="74.4709%" y="629" width="0.0261%" height="15" fill="rgb(212,70,42)" fg:x="14250" fg:w="5"/><text x="74.7209%" y="639.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.12%)</title><rect x="74.4029%" y="661" width="0.1202%" height="15" fill="rgb(227,213,9)" fg:x="14237" fg:w="23"/><text x="74.6529%" y="671.50"></text></g><g><title>slotmap::KeyData::new (5 samples, 0.03%)</title><rect x="74.4970%" y="645" width="0.0261%" height="15" fill="rgb(245,99,25)" fg:x="14255" fg:w="5"/><text x="74.7470%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (18 samples, 0.09%)</title><rect x="74.5231%" y="629" width="0.0941%" height="15" fill="rgb(250,82,29)" fg:x="14260" fg:w="18"/><text x="74.7731%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (35 samples, 0.18%)</title><rect x="74.5231%" y="661" width="0.1829%" height="15" fill="rgb(241,226,54)" fg:x="14260" fg:w="35"/><text x="74.7731%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (35 samples, 0.18%)</title><rect x="74.5231%" y="645" width="0.1829%" height="15" fill="rgb(221,99,41)" fg:x="14260" fg:w="35"/><text x="74.7731%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (16 samples, 0.08%)</title><rect x="74.6224%" y="629" width="0.0836%" height="15" fill="rgb(213,90,21)" fg:x="14279" fg:w="16"/><text x="74.8724%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (16 samples, 0.08%)</title><rect x="74.6224%" y="613" width="0.0836%" height="15" fill="rgb(205,208,24)" fg:x="14279" fg:w="16"/><text x="74.8724%" y="623.50"></text></g><g><title>neuralang::World::update_cells::{{closure}} (16 samples, 0.08%)</title><rect x="74.6224%" y="597" width="0.0836%" height="15" fill="rgb(246,31,12)" fg:x="14279" fg:w="16"/><text x="74.8724%" y="607.50"></text></g><g><title>core::cmp::PartialEq::ne (16 samples, 0.08%)</title><rect x="74.6224%" y="581" width="0.0836%" height="15" fill="rgb(213,154,6)" fg:x="14279" fg:w="16"/><text x="74.8724%" y="591.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (16 samples, 0.08%)</title><rect x="74.6224%" y="565" width="0.0836%" height="15" fill="rgb(222,163,29)" fg:x="14279" fg:w="16"/><text x="74.8724%" y="575.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (16 samples, 0.08%)</title><rect x="74.6224%" y="549" width="0.0836%" height="15" fill="rgb(227,201,8)" fg:x="14279" fg:w="16"/><text x="74.8724%" y="559.50"></text></g><g><title>neuralang::oob (7 samples, 0.04%)</title><rect x="74.7060%" y="661" width="0.0366%" height="15" fill="rgb(233,9,32)" fg:x="14295" fg:w="7"/><text x="74.9560%" y="671.50"></text></g><g><title>__fmodf (101 samples, 0.53%)</title><rect x="75.7826%" y="645" width="0.5278%" height="15" fill="rgb(217,54,24)" fg:x="14501" fg:w="101"/><text x="76.0326%" y="655.50"></text></g><g><title>neuralang::pos_to_cell (1,672 samples, 8.74%)</title><rect x="74.7426%" y="661" width="8.7379%" height="15" fill="rgb(235,192,0)" fg:x="14302" fg:w="1672"/><text x="74.9926%" y="671.50">neuralang::p..</text></g><g><title>__ieee754_fmodf (1,372 samples, 7.17%)</title><rect x="76.3104%" y="645" width="7.1701%" height="15" fill="rgb(235,45,9)" fg:x="14602" fg:w="1372"/><text x="76.5604%" y="655.50">__ieee754_..</text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="83.4544%" y="629" width="0.0261%" height="15" fill="rgb(246,42,40)" fg:x="15969" fg:w="5"/><text x="83.7044%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="613" width="0.0105%" height="15" fill="rgb(248,111,24)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="597" width="0.0105%" height="15" fill="rgb(249,65,22)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="581" width="0.0105%" height="15" fill="rgb(238,111,51)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="565" width="0.0105%" height="15" fill="rgb(250,118,22)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="549" width="0.0105%" height="15" fill="rgb(234,84,26)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="533" width="0.0105%" height="15" fill="rgb(243,172,12)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="517" width="0.0105%" height="15" fill="rgb(236,150,49)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="501" width="0.0105%" height="15" fill="rgb(225,197,26)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="485" width="0.0105%" height="15" fill="rgb(214,17,42)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="469" width="0.0105%" height="15" fill="rgb(224,165,40)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4701%" y="453" width="0.0105%" height="15" fill="rgb(246,100,4)" fg:x="15972" fg:w="2"/><text x="83.7201%" y="463.50"></text></g><g><title>neuralang::World::step (13,633 samples, 71.25%)</title><rect x="12.2655%" y="693" width="71.2464%" height="15" fill="rgb(222,103,0)" fg:x="2347" fg:w="13633"/><text x="12.5155%" y="703.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (1,883 samples, 9.84%)</title><rect x="73.6713%" y="677" width="9.8406%" height="15" fill="rgb(227,189,26)" fg:x="14097" fg:w="1883"/><text x="73.9213%" y="687.50">neuralang::Wor..</text></g><g><title>neuralang::same_partition_index (6 samples, 0.03%)</title><rect x="83.4805%" y="661" width="0.0314%" height="15" fill="rgb(214,202,17)" fg:x="15974" fg:w="6"/><text x="83.7305%" y="671.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (13,636 samples, 71.26%)</title><rect x="12.2550%" y="709" width="71.2621%" height="15" fill="rgb(229,111,3)" fg:x="2345" fg:w="13636"/><text x="12.5050%" y="719.50">&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update</text></g><g><title>&lt;ggez::graphics::context::FrameArenas as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="83.5380%" y="693" width="0.0105%" height="15" fill="rgb(229,172,15)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="703.50"></text></g><g><title>&lt;typed_arena::Arena&lt;T&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="83.5380%" y="677" width="0.0105%" height="15" fill="rgb(230,224,35)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="687.50"></text></g><g><title>typed_arena::Arena&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="83.5380%" y="661" width="0.0105%" height="15" fill="rgb(251,141,6)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="671.50"></text></g><g><title>typed_arena::Arena&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="83.5380%" y="645" width="0.0105%" height="15" fill="rgb(225,208,6)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="83.5380%" y="629" width="0.0105%" height="15" fill="rgb(246,181,16)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="83.5380%" y="613" width="0.0105%" height="15" fill="rgb(227,129,36)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="83.5380%" y="597" width="0.0105%" height="15" fill="rgb(248,117,24)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="83.5380%" y="581" width="0.0105%" height="15" fill="rgb(214,185,35)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="83.5380%" y="565" width="0.0105%" height="15" fill="rgb(236,150,34)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="83.5380%" y="549" width="0.0105%" height="15" fill="rgb(243,228,27)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="83.5380%" y="533" width="0.0105%" height="15" fill="rgb(245,77,44)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="83.5380%" y="517" width="0.0105%" height="15" fill="rgb(235,214,42)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="527.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="83.5380%" y="501" width="0.0105%" height="15" fill="rgb(221,74,3)" fg:x="15985" fg:w="2"/><text x="83.7880%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="83.5641%" y="645" width="0.0105%" height="15" fill="rgb(206,121,29)" fg:x="15990" fg:w="2"/><text x="83.8141%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="83.5641%" y="629" width="0.0105%" height="15" fill="rgb(249,131,53)" fg:x="15990" fg:w="2"/><text x="83.8141%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="83.5641%" y="613" width="0.0105%" height="15" fill="rgb(236,170,29)" fg:x="15990" fg:w="2"/><text x="83.8141%" y="623.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="83.5851%" y="629" width="0.0105%" height="15" fill="rgb(247,96,15)" fg:x="15994" fg:w="2"/><text x="83.8351%" y="639.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (4 samples, 0.02%)</title><rect x="83.6007%" y="629" width="0.0209%" height="15" fill="rgb(211,210,7)" fg:x="15997" fg:w="4"/><text x="83.8507%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (3 samples, 0.02%)</title><rect x="83.6060%" y="613" width="0.0157%" height="15" fill="rgb(240,88,50)" fg:x="15998" fg:w="3"/><text x="83.8560%" y="623.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (3 samples, 0.02%)</title><rect x="83.6060%" y="597" width="0.0157%" height="15" fill="rgb(209,229,26)" fg:x="15998" fg:w="3"/><text x="83.8560%" y="607.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="83.6060%" y="581" width="0.0157%" height="15" fill="rgb(210,68,23)" fg:x="15998" fg:w="3"/><text x="83.8560%" y="591.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="83.6060%" y="565" width="0.0157%" height="15" fill="rgb(229,180,13)" fg:x="15998" fg:w="3"/><text x="83.8560%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="83.6060%" y="549" width="0.0157%" height="15" fill="rgb(236,53,44)" fg:x="15998" fg:w="3"/><text x="83.8560%" y="559.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (6 samples, 0.03%)</title><rect x="83.6216%" y="629" width="0.0314%" height="15" fill="rgb(244,214,29)" fg:x="16001" fg:w="6"/><text x="83.8716%" y="639.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (3 samples, 0.02%)</title><rect x="83.6373%" y="613" width="0.0157%" height="15" fill="rgb(220,75,29)" fg:x="16004" fg:w="3"/><text x="83.8873%" y="623.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (3 samples, 0.02%)</title><rect x="83.6373%" y="597" width="0.0157%" height="15" fill="rgb(214,183,37)" fg:x="16004" fg:w="3"/><text x="83.8873%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.01%)</title><rect x="83.6425%" y="581" width="0.0105%" height="15" fill="rgb(239,117,29)" fg:x="16005" fg:w="2"/><text x="83.8925%" y="591.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="83.6425%" y="565" width="0.0105%" height="15" fill="rgb(237,171,35)" fg:x="16005" fg:w="2"/><text x="83.8925%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_command_encoder (19 samples, 0.10%)</title><rect x="83.5589%" y="661" width="0.0993%" height="15" fill="rgb(229,178,53)" fg:x="15989" fg:w="19"/><text x="83.8089%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (16 samples, 0.08%)</title><rect x="83.5746%" y="645" width="0.0836%" height="15" fill="rgb(210,102,19)" fg:x="15992" fg:w="16"/><text x="83.8246%" y="655.50"></text></g><g><title>wgpu::Device::create_command_encoder (21 samples, 0.11%)</title><rect x="83.5589%" y="693" width="0.1097%" height="15" fill="rgb(235,127,22)" fg:x="15989" fg:w="21"/><text x="83.8089%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (21 samples, 0.11%)</title><rect x="83.5589%" y="677" width="0.1097%" height="15" fill="rgb(244,31,31)" fg:x="15989" fg:w="21"/><text x="83.8089%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="83.6582%" y="661" width="0.0105%" height="15" fill="rgb(231,43,21)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="83.6582%" y="645" width="0.0105%" height="15" fill="rgb(217,131,35)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="83.6582%" y="629" width="0.0105%" height="15" fill="rgb(221,149,4)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="83.6582%" y="613" width="0.0105%" height="15" fill="rgb(232,170,28)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="83.6582%" y="597" width="0.0105%" height="15" fill="rgb(238,56,10)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="83.6582%" y="581" width="0.0105%" height="15" fill="rgb(235,196,14)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="591.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="83.6582%" y="565" width="0.0105%" height="15" fill="rgb(216,45,48)" fg:x="16008" fg:w="2"/><text x="83.9082%" y="575.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (3 samples, 0.02%)</title><rect x="83.7366%" y="629" width="0.0157%" height="15" fill="rgb(238,213,17)" fg:x="16023" fg:w="3"/><text x="83.9866%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (2 samples, 0.01%)</title><rect x="83.7418%" y="613" width="0.0105%" height="15" fill="rgb(212,13,2)" fg:x="16024" fg:w="2"/><text x="83.9918%" y="623.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (2 samples, 0.01%)</title><rect x="83.7418%" y="597" width="0.0105%" height="15" fill="rgb(240,114,20)" fg:x="16024" fg:w="2"/><text x="83.9918%" y="607.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="83.7418%" y="581" width="0.0105%" height="15" fill="rgb(228,41,40)" fg:x="16024" fg:w="2"/><text x="83.9918%" y="591.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="83.7418%" y="565" width="0.0105%" height="15" fill="rgb(244,132,35)" fg:x="16024" fg:w="2"/><text x="83.9918%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="83.7418%" y="549" width="0.0105%" height="15" fill="rgb(253,189,4)" fg:x="16024" fg:w="2"/><text x="83.9918%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="83.7627%" y="613" width="0.0157%" height="15" fill="rgb(224,37,19)" fg:x="16028" fg:w="3"/><text x="84.0127%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (3 samples, 0.02%)</title><rect x="83.7627%" y="597" width="0.0157%" height="15" fill="rgb(235,223,18)" fg:x="16028" fg:w="3"/><text x="84.0127%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (3 samples, 0.02%)</title><rect x="83.7627%" y="581" width="0.0157%" height="15" fill="rgb(235,163,25)" fg:x="16028" fg:w="3"/><text x="84.0127%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.08%)</title><rect x="83.8829%" y="549" width="0.0784%" height="15" fill="rgb(217,145,28)" fg:x="16051" fg:w="15"/><text x="84.1329%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="83.9195%" y="533" width="0.0418%" height="15" fill="rgb(223,223,32)" fg:x="16058" fg:w="8"/><text x="84.1695%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="83.9352%" y="517" width="0.0261%" height="15" fill="rgb(227,189,39)" fg:x="16061" fg:w="5"/><text x="84.1852%" y="527.50"></text></g><g><title>ash::device::Device::create_image_view (38 samples, 0.20%)</title><rect x="83.7784%" y="613" width="0.1986%" height="15" fill="rgb(248,10,22)" fg:x="16031" fg:w="38"/><text x="84.0284%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (38 samples, 0.20%)</title><rect x="83.7784%" y="597" width="0.1986%" height="15" fill="rgb(248,46,39)" fg:x="16031" fg:w="38"/><text x="84.0284%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (35 samples, 0.18%)</title><rect x="83.7941%" y="581" width="0.1829%" height="15" fill="rgb(248,113,48)" fg:x="16034" fg:w="35"/><text x="84.0441%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.15%)</title><rect x="83.8255%" y="565" width="0.1516%" height="15" fill="rgb(245,16,25)" fg:x="16040" fg:w="29"/><text x="84.0755%" y="575.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="83.9613%" y="549" width="0.0157%" height="15" fill="rgb(249,152,16)" fg:x="16066" fg:w="3"/><text x="84.2113%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::conv::&lt;impl wgpu_hal::vulkan::PrivateCapabilities&gt;::map_texture_format (2 samples, 0.01%)</title><rect x="83.9770%" y="613" width="0.0105%" height="15" fill="rgb(250,16,1)" fg:x="16069" fg:w="2"/><text x="84.2270%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_subresource_range (2 samples, 0.01%)</title><rect x="83.9875%" y="613" width="0.0105%" height="15" fill="rgb(249,138,3)" fg:x="16071" fg:w="2"/><text x="84.2375%" y="623.50"></text></g><g><title>wgpu_hal::FormatAspects::new (2 samples, 0.01%)</title><rect x="83.9875%" y="597" width="0.0105%" height="15" fill="rgb(227,71,41)" fg:x="16071" fg:w="2"/><text x="84.2375%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (47 samples, 0.25%)</title><rect x="83.7575%" y="629" width="0.2456%" height="15" fill="rgb(209,184,23)" fg:x="16027" fg:w="47"/><text x="84.0075%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="84.0136%" y="613" width="0.0105%" height="15" fill="rgb(223,215,31)" fg:x="16076" fg:w="2"/><text x="84.2636%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.01%)</title><rect x="84.0136%" y="597" width="0.0105%" height="15" fill="rgb(210,146,28)" fg:x="16076" fg:w="2"/><text x="84.2636%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="84.0136%" y="581" width="0.0105%" height="15" fill="rgb(209,183,41)" fg:x="16076" fg:w="2"/><text x="84.2636%" y="591.50"></text></g><g><title>[[vdso]] (3 samples, 0.02%)</title><rect x="84.2801%" y="501" width="0.0157%" height="15" fill="rgb(209,224,45)" fg:x="16127" fg:w="3"/><text x="84.5301%" y="511.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="84.2853%" y="485" width="0.0105%" height="15" fill="rgb(224,209,51)" fg:x="16128" fg:w="2"/><text x="84.5353%" y="495.50"></text></g><g><title>__GI___clock_gettime (9 samples, 0.05%)</title><rect x="84.2592%" y="517" width="0.0470%" height="15" fill="rgb(223,17,39)" fg:x="16123" fg:w="9"/><text x="84.5092%" y="527.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="84.2958%" y="501" width="0.0105%" height="15" fill="rgb(234,204,37)" fg:x="16130" fg:w="2"/><text x="84.5458%" y="511.50"></text></g><g><title>__GI___libc_free (6 samples, 0.03%)</title><rect x="84.3062%" y="517" width="0.0314%" height="15" fill="rgb(236,120,5)" fg:x="16132" fg:w="6"/><text x="84.5562%" y="527.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="84.3271%" y="501" width="0.0105%" height="15" fill="rgb(248,97,27)" fg:x="16136" fg:w="2"/><text x="84.5771%" y="511.50"></text></g><g><title>[unknown] (117 samples, 0.61%)</title><rect x="84.3585%" y="501" width="0.6114%" height="15" fill="rgb(240,66,17)" fg:x="16142" fg:w="117"/><text x="84.6085%" y="511.50"></text></g><g><title>[unknown] (108 samples, 0.56%)</title><rect x="84.4055%" y="485" width="0.5644%" height="15" fill="rgb(210,79,3)" fg:x="16151" fg:w="108"/><text x="84.6555%" y="495.50"></text></g><g><title>[unknown] (105 samples, 0.55%)</title><rect x="84.4212%" y="469" width="0.5487%" height="15" fill="rgb(214,176,27)" fg:x="16154" fg:w="105"/><text x="84.6712%" y="479.50"></text></g><g><title>[unknown] (96 samples, 0.50%)</title><rect x="84.4683%" y="453" width="0.5017%" height="15" fill="rgb(235,185,3)" fg:x="16163" fg:w="96"/><text x="84.7183%" y="463.50"></text></g><g><title>[unknown] (84 samples, 0.44%)</title><rect x="84.5310%" y="437" width="0.4390%" height="15" fill="rgb(227,24,12)" fg:x="16175" fg:w="84"/><text x="84.7810%" y="447.50"></text></g><g><title>[unknown] (78 samples, 0.41%)</title><rect x="84.5623%" y="421" width="0.4076%" height="15" fill="rgb(252,169,48)" fg:x="16181" fg:w="78"/><text x="84.8123%" y="431.50"></text></g><g><title>[unknown] (69 samples, 0.36%)</title><rect x="84.6094%" y="405" width="0.3606%" height="15" fill="rgb(212,65,1)" fg:x="16190" fg:w="69"/><text x="84.8594%" y="415.50"></text></g><g><title>[unknown] (57 samples, 0.30%)</title><rect x="84.6721%" y="389" width="0.2979%" height="15" fill="rgb(242,39,24)" fg:x="16202" fg:w="57"/><text x="84.9221%" y="399.50"></text></g><g><title>[unknown] (44 samples, 0.23%)</title><rect x="84.7400%" y="373" width="0.2299%" height="15" fill="rgb(249,32,23)" fg:x="16215" fg:w="44"/><text x="84.9900%" y="383.50"></text></g><g><title>[unknown] (41 samples, 0.21%)</title><rect x="84.7557%" y="357" width="0.2143%" height="15" fill="rgb(251,195,23)" fg:x="16218" fg:w="41"/><text x="85.0057%" y="367.50"></text></g><g><title>[unknown] (35 samples, 0.18%)</title><rect x="84.7870%" y="341" width="0.1829%" height="15" fill="rgb(236,174,8)" fg:x="16224" fg:w="35"/><text x="85.0370%" y="351.50"></text></g><g><title>[unknown] (20 samples, 0.10%)</title><rect x="84.8654%" y="325" width="0.1045%" height="15" fill="rgb(220,197,8)" fg:x="16239" fg:w="20"/><text x="85.1154%" y="335.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="84.8916%" y="309" width="0.0784%" height="15" fill="rgb(240,108,37)" fg:x="16244" fg:w="15"/><text x="85.1416%" y="319.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="84.9020%" y="293" width="0.0679%" height="15" fill="rgb(232,176,24)" fg:x="16246" fg:w="13"/><text x="85.1520%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (157 samples, 0.82%)</title><rect x="84.1547%" y="533" width="0.8205%" height="15" fill="rgb(243,35,29)" fg:x="16103" fg:w="157"/><text x="84.4047%" y="543.50"></text></g><g><title>__GI___poll (122 samples, 0.64%)</title><rect x="84.3376%" y="517" width="0.6376%" height="15" fill="rgb(210,37,18)" fg:x="16138" fg:w="122"/><text x="84.5876%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (181 samples, 0.95%)</title><rect x="84.0345%" y="597" width="0.9459%" height="15" fill="rgb(224,184,40)" fg:x="16080" fg:w="181"/><text x="84.2845%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (181 samples, 0.95%)</title><rect x="84.0345%" y="581" width="0.9459%" height="15" fill="rgb(236,39,29)" fg:x="16080" fg:w="181"/><text x="84.2845%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (180 samples, 0.94%)</title><rect x="84.0397%" y="565" width="0.9407%" height="15" fill="rgb(232,48,39)" fg:x="16081" fg:w="180"/><text x="84.2897%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (175 samples, 0.91%)</title><rect x="84.0658%" y="549" width="0.9146%" height="15" fill="rgb(236,34,42)" fg:x="16086" fg:w="175"/><text x="84.3158%" y="559.50"></text></g><g><title>ash::device::Device::wait_for_fences (182 samples, 0.95%)</title><rect x="84.0345%" y="613" width="0.9511%" height="15" fill="rgb(243,106,37)" fg:x="16080" fg:w="182"/><text x="84.2845%" y="623.50"></text></g><g><title>syscall (6 samples, 0.03%)</title><rect x="84.9909%" y="549" width="0.0314%" height="15" fill="rgb(218,96,6)" fg:x="16263" fg:w="6"/><text x="85.2409%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="84.9909%" y="533" width="0.0314%" height="15" fill="rgb(235,130,12)" fg:x="16263" fg:w="6"/><text x="85.2409%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="85.0013%" y="517" width="0.0209%" height="15" fill="rgb(231,95,0)" fg:x="16265" fg:w="4"/><text x="85.2513%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="85.0013%" y="501" width="0.0209%" height="15" fill="rgb(228,12,23)" fg:x="16265" fg:w="4"/><text x="85.2513%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.05%)</title><rect x="84.9856%" y="581" width="0.0470%" height="15" fill="rgb(216,12,1)" fg:x="16262" fg:w="9"/><text x="85.2356%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="84.9909%" y="565" width="0.0418%" height="15" fill="rgb(219,59,3)" fg:x="16263" fg:w="8"/><text x="85.2409%" y="575.50"></text></g><g><title>syscall@plt (2 samples, 0.01%)</title><rect x="85.0222%" y="549" width="0.0105%" height="15" fill="rgb(215,208,46)" fg:x="16269" fg:w="2"/><text x="85.2722%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (268 samples, 1.40%)</title><rect x="83.6896%" y="661" width="1.4006%" height="15" fill="rgb(254,224,29)" fg:x="16014" fg:w="268"/><text x="83.9396%" y="671.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (265 samples, 1.38%)</title><rect x="83.7053%" y="645" width="1.3849%" height="15" fill="rgb(232,14,29)" fg:x="16017" fg:w="265"/><text x="83.9553%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (208 samples, 1.09%)</title><rect x="84.0031%" y="629" width="1.0870%" height="15" fill="rgb(208,45,52)" fg:x="16074" fg:w="208"/><text x="84.2531%" y="639.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (20 samples, 0.10%)</title><rect x="84.9856%" y="613" width="0.1045%" height="15" fill="rgb(234,191,28)" fg:x="16262" fg:w="20"/><text x="85.2356%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (20 samples, 0.10%)</title><rect x="84.9856%" y="597" width="0.1045%" height="15" fill="rgb(244,67,43)" fg:x="16262" fg:w="20"/><text x="85.2356%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="85.0327%" y="581" width="0.0575%" height="15" fill="rgb(236,189,24)" fg:x="16271" fg:w="11"/><text x="85.2827%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="85.0588%" y="565" width="0.0314%" height="15" fill="rgb(239,214,33)" fg:x="16276" fg:w="6"/><text x="85.3088%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (270 samples, 1.41%)</title><rect x="83.6843%" y="677" width="1.4110%" height="15" fill="rgb(226,176,41)" fg:x="16013" fg:w="270"/><text x="83.9343%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="85.1058%" y="677" width="0.0105%" height="15" fill="rgb(248,47,8)" fg:x="16285" fg:w="2"/><text x="85.3558%" y="687.50"></text></g><g><title>wgpu::Surface::get_current_texture::{{closure}} (2 samples, 0.01%)</title><rect x="85.1058%" y="661" width="0.0105%" height="15" fill="rgb(218,81,44)" fg:x="16285" fg:w="2"/><text x="85.3558%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="85.1058%" y="645" width="0.0105%" height="15" fill="rgb(213,98,6)" fg:x="16285" fg:w="2"/><text x="85.3558%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="85.1058%" y="629" width="0.0105%" height="15" fill="rgb(222,85,22)" fg:x="16285" fg:w="2"/><text x="85.3558%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="85.1058%" y="613" width="0.0105%" height="15" fill="rgb(239,46,39)" fg:x="16285" fg:w="2"/><text x="85.3558%" y="623.50"></text></g><g><title>wgpu::Surface::get_current_texture (278 samples, 1.45%)</title><rect x="83.6687%" y="693" width="1.4528%" height="15" fill="rgb(237,12,29)" fg:x="16010" fg:w="278"/><text x="83.9187%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (5 samples, 0.03%)</title><rect x="85.1372%" y="613" width="0.0261%" height="15" fill="rgb(214,77,8)" fg:x="16291" fg:w="5"/><text x="85.3872%" y="623.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view::{{closure}} (5 samples, 0.03%)</title><rect x="85.1372%" y="597" width="0.0261%" height="15" fill="rgb(217,168,37)" fg:x="16291" fg:w="5"/><text x="85.3872%" y="607.50"></text></g><g><title>wgpu_types::TextureFormat::aspect_specific_format (5 samples, 0.03%)</title><rect x="85.1372%" y="581" width="0.0261%" height="15" fill="rgb(221,217,23)" fg:x="16291" fg:w="5"/><text x="85.3872%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="85.1790%" y="517" width="0.0105%" height="15" fill="rgb(243,229,36)" fg:x="16299" fg:w="2"/><text x="85.4290%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="85.1738%" y="549" width="0.0209%" height="15" fill="rgb(251,163,40)" fg:x="16298" fg:w="4"/><text x="85.4238%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="85.1790%" y="533" width="0.0157%" height="15" fill="rgb(237,222,12)" fg:x="16299" fg:w="3"/><text x="85.4290%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (5 samples, 0.03%)</title><rect x="85.1738%" y="613" width="0.0261%" height="15" fill="rgb(248,132,6)" fg:x="16298" fg:w="5"/><text x="85.4238%" y="623.50"></text></g><g><title>ash::device::Device::create_image_view (5 samples, 0.03%)</title><rect x="85.1738%" y="597" width="0.0261%" height="15" fill="rgb(227,167,50)" fg:x="16298" fg:w="5"/><text x="85.4238%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="85.1738%" y="581" width="0.0261%" height="15" fill="rgb(242,84,37)" fg:x="16298" fg:w="5"/><text x="85.4238%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="85.1738%" y="565" width="0.0261%" height="15" fill="rgb(212,4,50)" fg:x="16298" fg:w="5"/><text x="85.4238%" y="575.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (14 samples, 0.07%)</title><rect x="85.1320%" y="629" width="0.0732%" height="15" fill="rgb(230,228,32)" fg:x="16290" fg:w="14"/><text x="85.3820%" y="639.50"></text></g><g><title>wgpu::Texture::create_view (20 samples, 0.10%)</title><rect x="85.1215%" y="693" width="0.1045%" height="15" fill="rgb(248,217,23)" fg:x="16288" fg:w="20"/><text x="85.3715%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (20 samples, 0.10%)</title><rect x="85.1215%" y="677" width="0.1045%" height="15" fill="rgb(238,197,32)" fg:x="16288" fg:w="20"/><text x="85.3715%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (20 samples, 0.10%)</title><rect x="85.1215%" y="661" width="0.1045%" height="15" fill="rgb(236,106,1)" fg:x="16288" fg:w="20"/><text x="85.3715%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (19 samples, 0.10%)</title><rect x="85.1267%" y="645" width="0.0993%" height="15" fill="rgb(219,228,13)" fg:x="16289" fg:w="19"/><text x="85.3767%" y="655.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::insert_single (3 samples, 0.02%)</title><rect x="85.2103%" y="629" width="0.0157%" height="15" fill="rgb(238,30,35)" fg:x="16305" fg:w="3"/><text x="85.4603%" y="639.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::insert (3 samples, 0.02%)</title><rect x="85.2103%" y="613" width="0.0157%" height="15" fill="rgb(236,70,23)" fg:x="16305" fg:w="3"/><text x="85.4603%" y="623.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::set (3 samples, 0.02%)</title><rect x="85.2103%" y="597" width="0.0157%" height="15" fill="rgb(249,104,48)" fg:x="16305" fg:w="3"/><text x="85.4603%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="85.2260%" y="645" width="0.0105%" height="15" fill="rgb(254,117,50)" fg:x="16308" fg:w="2"/><text x="85.4760%" y="655.50"></text></g><g><title>&lt;winit::dpi::PhysicalSize&lt;P&gt; as core::convert::From&lt;(X,X)&gt;&gt;::from (2 samples, 0.01%)</title><rect x="85.2260%" y="629" width="0.0105%" height="15" fill="rgb(223,152,4)" fg:x="16308" fg:w="2"/><text x="85.4760%" y="639.50"></text></g><g><title>winit::dpi::Pixel::cast (2 samples, 0.01%)</title><rect x="85.2260%" y="613" width="0.0105%" height="15" fill="rgb(245,6,2)" fg:x="16308" fg:w="2"/><text x="85.4760%" y="623.50"></text></g><g><title>&lt;u32 as winit::dpi::Pixel&gt;::from_f64 (2 samples, 0.01%)</title><rect x="85.2260%" y="597" width="0.0105%" height="15" fill="rgb(249,150,24)" fg:x="16308" fg:w="2"/><text x="85.4760%" y="607.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.01%)</title><rect x="85.2469%" y="597" width="0.0105%" height="15" fill="rgb(228,185,42)" fg:x="16312" fg:w="2"/><text x="85.4969%" y="607.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="85.2469%" y="581" width="0.0105%" height="15" fill="rgb(226,39,33)" fg:x="16312" fg:w="2"/><text x="85.4969%" y="591.50"></text></g><g><title>[libxcb.so.1.1.0] (8 samples, 0.04%)</title><rect x="85.2940%" y="549" width="0.0418%" height="15" fill="rgb(221,166,19)" fg:x="16321" fg:w="8"/><text x="85.5440%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (8 samples, 0.04%)</title><rect x="85.2940%" y="533" width="0.0418%" height="15" fill="rgb(209,109,2)" fg:x="16321" fg:w="8"/><text x="85.5440%" y="543.50"></text></g><g><title>__libc_recvmsg (8 samples, 0.04%)</title><rect x="85.2940%" y="517" width="0.0418%" height="15" fill="rgb(252,216,26)" fg:x="16321" fg:w="8"/><text x="85.5440%" y="527.50"></text></g><g><title>__recvmsg_syscall (8 samples, 0.04%)</title><rect x="85.2940%" y="501" width="0.0418%" height="15" fill="rgb(227,173,36)" fg:x="16321" fg:w="8"/><text x="85.5440%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="85.2940%" y="485" width="0.0418%" height="15" fill="rgb(209,90,7)" fg:x="16321" fg:w="8"/><text x="85.5440%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="85.3096%" y="469" width="0.0261%" height="15" fill="rgb(250,194,11)" fg:x="16324" fg:w="5"/><text x="85.5596%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="85.3096%" y="453" width="0.0261%" height="15" fill="rgb(220,72,50)" fg:x="16324" fg:w="5"/><text x="85.5596%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.3253%" y="437" width="0.0105%" height="15" fill="rgb(222,106,48)" fg:x="16327" fg:w="2"/><text x="85.5753%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.3253%" y="421" width="0.0105%" height="15" fill="rgb(216,220,45)" fg:x="16327" fg:w="2"/><text x="85.5753%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.3253%" y="405" width="0.0105%" height="15" fill="rgb(234,112,18)" fg:x="16327" fg:w="2"/><text x="85.5753%" y="415.50"></text></g><g><title>[libX11.so.6.4.0] (11 samples, 0.06%)</title><rect x="85.2835%" y="565" width="0.0575%" height="15" fill="rgb(206,179,9)" fg:x="16319" fg:w="11"/><text x="85.5335%" y="575.50"></text></g><g><title>[libX11.so.6.4.0] (13 samples, 0.07%)</title><rect x="85.2783%" y="581" width="0.0679%" height="15" fill="rgb(215,115,40)" fg:x="16318" fg:w="13"/><text x="85.5283%" y="591.50"></text></g><g><title>__GI___poll (10 samples, 0.05%)</title><rect x="85.3619%" y="517" width="0.0523%" height="15" fill="rgb(222,69,34)" fg:x="16334" fg:w="10"/><text x="85.6119%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="85.3671%" y="501" width="0.0470%" height="15" fill="rgb(209,161,10)" fg:x="16335" fg:w="9"/><text x="85.6171%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="85.3828%" y="485" width="0.0314%" height="15" fill="rgb(217,6,38)" fg:x="16338" fg:w="6"/><text x="85.6328%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="85.3828%" y="469" width="0.0314%" height="15" fill="rgb(229,229,48)" fg:x="16338" fg:w="6"/><text x="85.6328%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="85.3828%" y="453" width="0.0314%" height="15" fill="rgb(225,21,28)" fg:x="16338" fg:w="6"/><text x="85.6328%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="85.3880%" y="437" width="0.0261%" height="15" fill="rgb(206,33,13)" fg:x="16339" fg:w="5"/><text x="85.6380%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="85.3880%" y="421" width="0.0261%" height="15" fill="rgb(242,178,17)" fg:x="16339" fg:w="5"/><text x="85.6380%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.4037%" y="405" width="0.0105%" height="15" fill="rgb(220,162,5)" fg:x="16342" fg:w="2"/><text x="85.6537%" y="415.50"></text></g><g><title>_XSend (38 samples, 0.20%)</title><rect x="85.3462%" y="581" width="0.1986%" height="15" fill="rgb(210,33,43)" fg:x="16331" fg:w="38"/><text x="85.5962%" y="591.50"></text></g><g><title>xcb_writev (38 samples, 0.20%)</title><rect x="85.3462%" y="565" width="0.1986%" height="15" fill="rgb(216,116,54)" fg:x="16331" fg:w="38"/><text x="85.5962%" y="575.50"></text></g><g><title>[libxcb.so.1.1.0] (38 samples, 0.20%)</title><rect x="85.3462%" y="549" width="0.1986%" height="15" fill="rgb(249,92,24)" fg:x="16331" fg:w="38"/><text x="85.5962%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (38 samples, 0.20%)</title><rect x="85.3462%" y="533" width="0.1986%" height="15" fill="rgb(231,189,14)" fg:x="16331" fg:w="38"/><text x="85.5962%" y="543.50"></text></g><g><title>__GI___writev (25 samples, 0.13%)</title><rect x="85.4142%" y="517" width="0.1307%" height="15" fill="rgb(230,8,41)" fg:x="16344" fg:w="25"/><text x="85.6642%" y="527.50"></text></g><g><title>__GI___writev (25 samples, 0.13%)</title><rect x="85.4142%" y="501" width="0.1307%" height="15" fill="rgb(249,7,27)" fg:x="16344" fg:w="25"/><text x="85.6642%" y="511.50"></text></g><g><title>[unknown] (25 samples, 0.13%)</title><rect x="85.4142%" y="485" width="0.1307%" height="15" fill="rgb(232,86,5)" fg:x="16344" fg:w="25"/><text x="85.6642%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.12%)</title><rect x="85.4246%" y="469" width="0.1202%" height="15" fill="rgb(224,175,18)" fg:x="16346" fg:w="23"/><text x="85.6746%" y="479.50"></text></g><g><title>[unknown] (23 samples, 0.12%)</title><rect x="85.4246%" y="453" width="0.1202%" height="15" fill="rgb(220,129,12)" fg:x="16346" fg:w="23"/><text x="85.6746%" y="463.50"></text></g><g><title>[unknown] (21 samples, 0.11%)</title><rect x="85.4351%" y="437" width="0.1097%" height="15" fill="rgb(210,19,36)" fg:x="16348" fg:w="21"/><text x="85.6851%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.11%)</title><rect x="85.4351%" y="421" width="0.1097%" height="15" fill="rgb(219,96,14)" fg:x="16348" fg:w="21"/><text x="85.6851%" y="431.50"></text></g><g><title>[unknown] (21 samples, 0.11%)</title><rect x="85.4351%" y="405" width="0.1097%" height="15" fill="rgb(249,106,1)" fg:x="16348" fg:w="21"/><text x="85.6851%" y="415.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="85.4507%" y="389" width="0.0941%" height="15" fill="rgb(249,155,20)" fg:x="16351" fg:w="18"/><text x="85.7007%" y="399.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.4664%" y="373" width="0.0784%" height="15" fill="rgb(244,168,9)" fg:x="16354" fg:w="15"/><text x="85.7164%" y="383.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.4664%" y="357" width="0.0784%" height="15" fill="rgb(216,23,50)" fg:x="16354" fg:w="15"/><text x="85.7164%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="85.4769%" y="341" width="0.0679%" height="15" fill="rgb(224,219,20)" fg:x="16356" fg:w="13"/><text x="85.7269%" y="351.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="85.4821%" y="325" width="0.0627%" height="15" fill="rgb(222,156,15)" fg:x="16357" fg:w="12"/><text x="85.7321%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="85.4978%" y="309" width="0.0470%" height="15" fill="rgb(231,97,17)" fg:x="16360" fg:w="9"/><text x="85.7478%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="85.4978%" y="293" width="0.0470%" height="15" fill="rgb(218,70,48)" fg:x="16360" fg:w="9"/><text x="85.7478%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="85.4978%" y="277" width="0.0470%" height="15" fill="rgb(212,196,52)" fg:x="16360" fg:w="9"/><text x="85.7478%" y="287.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="85.5030%" y="261" width="0.0418%" height="15" fill="rgb(243,203,18)" fg:x="16361" fg:w="8"/><text x="85.7530%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="85.5082%" y="245" width="0.0366%" height="15" fill="rgb(252,125,41)" fg:x="16362" fg:w="7"/><text x="85.7582%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="85.5291%" y="229" width="0.0157%" height="15" fill="rgb(223,180,33)" fg:x="16366" fg:w="3"/><text x="85.7791%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="85.5291%" y="213" width="0.0157%" height="15" fill="rgb(254,159,46)" fg:x="16366" fg:w="3"/><text x="85.7791%" y="223.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="85.5605%" y="517" width="0.0157%" height="15" fill="rgb(254,38,10)" fg:x="16372" fg:w="3"/><text x="85.8105%" y="527.50"></text></g><g><title>[libxcb.so.1.1.0] (18 samples, 0.09%)</title><rect x="85.5553%" y="533" width="0.0941%" height="15" fill="rgb(208,217,32)" fg:x="16371" fg:w="18"/><text x="85.8053%" y="543.50"></text></g><g><title>__libc_recvmsg (14 samples, 0.07%)</title><rect x="85.5762%" y="517" width="0.0732%" height="15" fill="rgb(221,120,13)" fg:x="16375" fg:w="14"/><text x="85.8262%" y="527.50"></text></g><g><title>__recvmsg_syscall (14 samples, 0.07%)</title><rect x="85.5762%" y="501" width="0.0732%" height="15" fill="rgb(246,54,52)" fg:x="16375" fg:w="14"/><text x="85.8262%" y="511.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="85.5762%" y="485" width="0.0732%" height="15" fill="rgb(242,34,25)" fg:x="16375" fg:w="14"/><text x="85.8262%" y="495.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="85.5814%" y="469" width="0.0679%" height="15" fill="rgb(247,209,9)" fg:x="16376" fg:w="13"/><text x="85.8314%" y="479.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="85.5814%" y="453" width="0.0679%" height="15" fill="rgb(228,71,26)" fg:x="16376" fg:w="13"/><text x="85.8314%" y="463.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="85.5814%" y="437" width="0.0679%" height="15" fill="rgb(222,145,49)" fg:x="16376" fg:w="13"/><text x="85.8314%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="85.5814%" y="421" width="0.0679%" height="15" fill="rgb(218,121,17)" fg:x="16376" fg:w="13"/><text x="85.8314%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="85.5814%" y="405" width="0.0679%" height="15" fill="rgb(244,50,7)" fg:x="16376" fg:w="13"/><text x="85.8314%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="85.5866%" y="389" width="0.0627%" height="15" fill="rgb(246,229,37)" fg:x="16377" fg:w="12"/><text x="85.8366%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="85.5866%" y="373" width="0.0627%" height="15" fill="rgb(225,18,5)" fg:x="16377" fg:w="12"/><text x="85.8366%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="85.5866%" y="357" width="0.0627%" height="15" fill="rgb(213,204,8)" fg:x="16377" fg:w="12"/><text x="85.8366%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="85.6023%" y="341" width="0.0470%" height="15" fill="rgb(238,103,6)" fg:x="16380" fg:w="9"/><text x="85.8523%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="85.6128%" y="325" width="0.0366%" height="15" fill="rgb(222,25,35)" fg:x="16382" fg:w="7"/><text x="85.8628%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="85.6128%" y="309" width="0.0366%" height="15" fill="rgb(213,203,35)" fg:x="16382" fg:w="7"/><text x="85.8628%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="85.6180%" y="293" width="0.0314%" height="15" fill="rgb(221,79,53)" fg:x="16383" fg:w="6"/><text x="85.8680%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="85.6232%" y="277" width="0.0261%" height="15" fill="rgb(243,200,35)" fg:x="16384" fg:w="5"/><text x="85.8732%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="85.6232%" y="261" width="0.0261%" height="15" fill="rgb(248,60,25)" fg:x="16384" fg:w="5"/><text x="85.8732%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="85.6337%" y="245" width="0.0157%" height="15" fill="rgb(227,53,46)" fg:x="16386" fg:w="3"/><text x="85.8837%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.6389%" y="229" width="0.0105%" height="15" fill="rgb(216,120,32)" fg:x="16387" fg:w="2"/><text x="85.8889%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.6389%" y="213" width="0.0105%" height="15" fill="rgb(220,134,1)" fg:x="16387" fg:w="2"/><text x="85.8889%" y="223.50"></text></g><g><title>__GI___poll (21 samples, 0.11%)</title><rect x="85.6493%" y="533" width="0.1097%" height="15" fill="rgb(237,168,5)" fg:x="16389" fg:w="21"/><text x="85.8993%" y="543.50"></text></g><g><title>[unknown] (21 samples, 0.11%)</title><rect x="85.6493%" y="517" width="0.1097%" height="15" fill="rgb(231,100,33)" fg:x="16389" fg:w="21"/><text x="85.8993%" y="527.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="85.6598%" y="501" width="0.0993%" height="15" fill="rgb(236,177,47)" fg:x="16391" fg:w="19"/><text x="85.9098%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="85.6650%" y="485" width="0.0941%" height="15" fill="rgb(235,7,49)" fg:x="16392" fg:w="18"/><text x="85.9150%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="85.6702%" y="469" width="0.0888%" height="15" fill="rgb(232,119,22)" fg:x="16393" fg:w="17"/><text x="85.9202%" y="479.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="85.6755%" y="453" width="0.0836%" height="15" fill="rgb(254,73,53)" fg:x="16394" fg:w="16"/><text x="85.9255%" y="463.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.6807%" y="437" width="0.0784%" height="15" fill="rgb(251,35,20)" fg:x="16395" fg:w="15"/><text x="85.9307%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.6807%" y="421" width="0.0784%" height="15" fill="rgb(241,119,20)" fg:x="16395" fg:w="15"/><text x="85.9307%" y="431.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.6807%" y="405" width="0.0784%" height="15" fill="rgb(207,102,14)" fg:x="16395" fg:w="15"/><text x="85.9307%" y="415.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.6807%" y="389" width="0.0784%" height="15" fill="rgb(248,201,50)" fg:x="16395" fg:w="15"/><text x="85.9307%" y="399.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="85.6807%" y="373" width="0.0784%" height="15" fill="rgb(222,185,44)" fg:x="16395" fg:w="15"/><text x="85.9307%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="85.6859%" y="357" width="0.0732%" height="15" fill="rgb(218,107,18)" fg:x="16396" fg:w="14"/><text x="85.9359%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="85.7173%" y="341" width="0.0418%" height="15" fill="rgb(237,177,39)" fg:x="16402" fg:w="8"/><text x="85.9673%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="85.7382%" y="325" width="0.0209%" height="15" fill="rgb(246,69,6)" fg:x="16406" fg:w="4"/><text x="85.9882%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (42 samples, 0.22%)</title><rect x="85.5553%" y="549" width="0.2195%" height="15" fill="rgb(234,208,37)" fg:x="16371" fg:w="42"/><text x="85.8053%" y="559.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="85.7591%" y="533" width="0.0157%" height="15" fill="rgb(225,4,6)" fg:x="16410" fg:w="3"/><text x="86.0091%" y="543.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (433 samples, 2.26%)</title><rect x="83.5171%" y="709" width="2.2629%" height="15" fill="rgb(233,45,0)" fg:x="15981" fg:w="433"/><text x="83.7671%" y="719.50">g..</text></g><g><title>winit::window::Window::inner_size (106 samples, 0.55%)</title><rect x="85.2260%" y="693" width="0.5540%" height="15" fill="rgb(226,136,5)" fg:x="16308" fg:w="106"/><text x="85.4760%" y="703.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (106 samples, 0.55%)</title><rect x="85.2260%" y="677" width="0.5540%" height="15" fill="rgb(211,91,47)" fg:x="16308" fg:w="106"/><text x="85.4760%" y="687.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (106 samples, 0.55%)</title><rect x="85.2260%" y="661" width="0.5540%" height="15" fill="rgb(242,88,51)" fg:x="16308" fg:w="106"/><text x="85.4760%" y="671.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (104 samples, 0.54%)</title><rect x="85.2365%" y="645" width="0.5435%" height="15" fill="rgb(230,91,28)" fg:x="16310" fg:w="104"/><text x="85.4865%" y="655.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (103 samples, 0.54%)</title><rect x="85.2417%" y="629" width="0.5383%" height="15" fill="rgb(254,186,29)" fg:x="16311" fg:w="103"/><text x="85.4917%" y="639.50"></text></g><g><title>XGetGeometry (103 samples, 0.54%)</title><rect x="85.2417%" y="613" width="0.5383%" height="15" fill="rgb(238,6,4)" fg:x="16311" fg:w="103"/><text x="85.4917%" y="623.50"></text></g><g><title>_XReply (99 samples, 0.52%)</title><rect x="85.2626%" y="597" width="0.5174%" height="15" fill="rgb(221,151,16)" fg:x="16315" fg:w="99"/><text x="85.5126%" y="607.50"></text></g><g><title>xcb_wait_for_reply64 (44 samples, 0.23%)</title><rect x="85.5500%" y="581" width="0.2299%" height="15" fill="rgb(251,143,52)" fg:x="16370" fg:w="44"/><text x="85.8000%" y="591.50"></text></g><g><title>[libxcb.so.1.1.0] (44 samples, 0.23%)</title><rect x="85.5500%" y="565" width="0.2299%" height="15" fill="rgb(206,90,15)" fg:x="16370" fg:w="44"/><text x="85.8000%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="85.8009%" y="581" width="0.0418%" height="15" fill="rgb(218,35,8)" fg:x="16418" fg:w="8"/><text x="86.0509%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="85.8113%" y="565" width="0.0314%" height="15" fill="rgb(239,215,6)" fg:x="16420" fg:w="6"/><text x="86.0613%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="85.8218%" y="549" width="0.0209%" height="15" fill="rgb(245,116,39)" fg:x="16422" fg:w="4"/><text x="86.0718%" y="559.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (5 samples, 0.03%)</title><rect x="85.8584%" y="533" width="0.0261%" height="15" fill="rgb(242,65,28)" fg:x="16429" fg:w="5"/><text x="86.1084%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="85.8584%" y="517" width="0.0261%" height="15" fill="rgb(252,132,53)" fg:x="16429" fg:w="5"/><text x="86.1084%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="85.8584%" y="501" width="0.0261%" height="15" fill="rgb(224,159,50)" fg:x="16429" fg:w="5"/><text x="86.1084%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="85.8636%" y="485" width="0.0209%" height="15" fill="rgb(224,93,4)" fg:x="16430" fg:w="4"/><text x="86.1136%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="85.8741%" y="469" width="0.0105%" height="15" fill="rgb(208,81,34)" fg:x="16432" fg:w="2"/><text x="86.1241%" y="479.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (8 samples, 0.04%)</title><rect x="85.8531%" y="565" width="0.0418%" height="15" fill="rgb(233,92,54)" fg:x="16428" fg:w="8"/><text x="86.1031%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (8 samples, 0.04%)</title><rect x="85.8531%" y="549" width="0.0418%" height="15" fill="rgb(237,21,14)" fg:x="16428" fg:w="8"/><text x="86.1031%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_subresource_range (2 samples, 0.01%)</title><rect x="85.8845%" y="533" width="0.0105%" height="15" fill="rgb(249,128,51)" fg:x="16434" fg:w="2"/><text x="86.1345%" y="543.50"></text></g><g><title>wgpu_hal::FormatAspects::new (2 samples, 0.01%)</title><rect x="85.8845%" y="517" width="0.0105%" height="15" fill="rgb(223,129,24)" fg:x="16434" fg:w="2"/><text x="86.1345%" y="527.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (11 samples, 0.06%)</title><rect x="85.8531%" y="581" width="0.0575%" height="15" fill="rgb(231,168,25)" fg:x="16428" fg:w="11"/><text x="86.1031%" y="591.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (2 samples, 0.01%)</title><rect x="85.9002%" y="565" width="0.0105%" height="15" fill="rgb(224,39,20)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="575.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (2 samples, 0.01%)</title><rect x="85.9002%" y="549" width="0.0105%" height="15" fill="rgb(225,152,53)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="559.50"></text></g><g><title>wgpu_core::track::texture::barrier (2 samples, 0.01%)</title><rect x="85.9002%" y="533" width="0.0105%" height="15" fill="rgb(252,17,24)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="85.9002%" y="517" width="0.0105%" height="15" fill="rgb(250,114,30)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="85.9002%" y="501" width="0.0105%" height="15" fill="rgb(229,5,4)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="85.9002%" y="485" width="0.0105%" height="15" fill="rgb(225,176,49)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="85.9002%" y="469" width="0.0105%" height="15" fill="rgb(224,221,49)" fg:x="16437" fg:w="2"/><text x="86.1502%" y="479.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (2 samples, 0.01%)</title><rect x="85.9106%" y="581" width="0.0105%" height="15" fill="rgb(253,169,27)" fg:x="16439" fg:w="2"/><text x="86.1606%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (2 samples, 0.01%)</title><rect x="85.9106%" y="565" width="0.0105%" height="15" fill="rgb(211,206,16)" fg:x="16439" fg:w="2"/><text x="86.1606%" y="575.50"></text></g><g><title>ash::device::Device::end_command_buffer (2 samples, 0.01%)</title><rect x="85.9106%" y="549" width="0.0105%" height="15" fill="rgb(244,87,35)" fg:x="16439" fg:w="2"/><text x="86.1606%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="85.9106%" y="533" width="0.0105%" height="15" fill="rgb(246,28,10)" fg:x="16439" fg:w="2"/><text x="86.1606%" y="543.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (2 samples, 0.01%)</title><rect x="85.9211%" y="581" width="0.0105%" height="15" fill="rgb(229,12,44)" fg:x="16441" fg:w="2"/><text x="86.1711%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (2 samples, 0.01%)</title><rect x="85.9211%" y="565" width="0.0105%" height="15" fill="rgb(210,145,37)" fg:x="16441" fg:w="2"/><text x="86.1711%" y="575.50"></text></g><g><title>ash::device::Device::begin_command_buffer (2 samples, 0.01%)</title><rect x="85.9211%" y="549" width="0.0105%" height="15" fill="rgb(227,112,52)" fg:x="16441" fg:w="2"/><text x="86.1711%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="85.9211%" y="533" width="0.0105%" height="15" fill="rgb(238,155,34)" fg:x="16441" fg:w="2"/><text x="86.1711%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="85.9211%" y="517" width="0.0105%" height="15" fill="rgb(239,226,36)" fg:x="16441" fg:w="2"/><text x="86.1711%" y="527.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (10 samples, 0.05%)</title><rect x="85.9315%" y="581" width="0.0523%" height="15" fill="rgb(230,16,23)" fg:x="16443" fg:w="10"/><text x="86.1815%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (10 samples, 0.05%)</title><rect x="85.9315%" y="565" width="0.0523%" height="15" fill="rgb(236,171,36)" fg:x="16443" fg:w="10"/><text x="86.1815%" y="575.50"></text></g><g><title>ash::device::Device::begin_command_buffer (10 samples, 0.05%)</title><rect x="85.9315%" y="549" width="0.0523%" height="15" fill="rgb(221,22,14)" fg:x="16443" fg:w="10"/><text x="86.1815%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.05%)</title><rect x="85.9315%" y="533" width="0.0523%" height="15" fill="rgb(242,43,11)" fg:x="16443" fg:w="10"/><text x="86.1815%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="85.9420%" y="517" width="0.0418%" height="15" fill="rgb(232,69,23)" fg:x="16445" fg:w="8"/><text x="86.1920%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="85.9524%" y="501" width="0.0314%" height="15" fill="rgb(216,180,54)" fg:x="16447" fg:w="6"/><text x="86.2024%" y="511.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (2 samples, 0.01%)</title><rect x="85.9890%" y="581" width="0.0105%" height="15" fill="rgb(216,5,24)" fg:x="16454" fg:w="2"/><text x="86.2390%" y="591.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (4 samples, 0.02%)</title><rect x="86.0047%" y="549" width="0.0209%" height="15" fill="rgb(225,89,9)" fg:x="16457" fg:w="4"/><text x="86.2547%" y="559.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="86.0152%" y="533" width="0.0105%" height="15" fill="rgb(243,75,33)" fg:x="16459" fg:w="2"/><text x="86.2652%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="86.0152%" y="517" width="0.0105%" height="15" fill="rgb(247,141,45)" fg:x="16459" fg:w="2"/><text x="86.2652%" y="527.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (6 samples, 0.03%)</title><rect x="86.0047%" y="565" width="0.0314%" height="15" fill="rgb(232,177,36)" fg:x="16457" fg:w="6"/><text x="86.2547%" y="575.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="86.0256%" y="549" width="0.0105%" height="15" fill="rgb(219,125,36)" fg:x="16461" fg:w="2"/><text x="86.2756%" y="559.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="86.0256%" y="533" width="0.0105%" height="15" fill="rgb(227,94,9)" fg:x="16461" fg:w="2"/><text x="86.2756%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="86.0256%" y="517" width="0.0105%" height="15" fill="rgb(240,34,52)" fg:x="16461" fg:w="2"/><text x="86.2756%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="86.0256%" y="501" width="0.0105%" height="15" fill="rgb(216,45,12)" fg:x="16461" fg:w="2"/><text x="86.2756%" y="511.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (7 samples, 0.04%)</title><rect x="86.0047%" y="581" width="0.0366%" height="15" fill="rgb(246,21,19)" fg:x="16457" fg:w="7"/><text x="86.2547%" y="591.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (52 samples, 0.27%)</title><rect x="85.7904%" y="661" width="0.2718%" height="15" fill="rgb(213,98,42)" fg:x="16416" fg:w="52"/><text x="86.0404%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (52 samples, 0.27%)</title><rect x="85.7904%" y="645" width="0.2718%" height="15" fill="rgb(250,136,47)" fg:x="16416" fg:w="52"/><text x="86.0404%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (52 samples, 0.27%)</title><rect x="85.7904%" y="629" width="0.2718%" height="15" fill="rgb(251,124,27)" fg:x="16416" fg:w="52"/><text x="86.0404%" y="639.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (52 samples, 0.27%)</title><rect x="85.7904%" y="613" width="0.2718%" height="15" fill="rgb(229,180,14)" fg:x="16416" fg:w="52"/><text x="86.0404%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (52 samples, 0.27%)</title><rect x="85.7904%" y="597" width="0.2718%" height="15" fill="rgb(245,216,25)" fg:x="16416" fg:w="52"/><text x="86.0404%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (4 samples, 0.02%)</title><rect x="86.0413%" y="581" width="0.0209%" height="15" fill="rgb(251,43,5)" fg:x="16464" fg:w="4"/><text x="86.2913%" y="591.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (4 samples, 0.02%)</title><rect x="86.0413%" y="565" width="0.0209%" height="15" fill="rgb(250,128,24)" fg:x="16464" fg:w="4"/><text x="86.2913%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="86.0413%" y="549" width="0.0209%" height="15" fill="rgb(217,117,27)" fg:x="16464" fg:w="4"/><text x="86.2913%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="86.0413%" y="533" width="0.0209%" height="15" fill="rgb(245,147,4)" fg:x="16464" fg:w="4"/><text x="86.2913%" y="543.50"></text></g><g><title>core::mem::drop (53 samples, 0.28%)</title><rect x="85.7904%" y="693" width="0.2770%" height="15" fill="rgb(242,201,35)" fg:x="16416" fg:w="53"/><text x="86.0404%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (53 samples, 0.28%)</title><rect x="85.7904%" y="677" width="0.2770%" height="15" fill="rgb(218,181,1)" fg:x="16416" fg:w="53"/><text x="86.0404%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::context::FrameArenas&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="693" width="0.0105%" height="15" fill="rgb(222,6,29)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::Arena&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="677" width="0.0105%" height="15" fill="rgb(208,186,3)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="661" width="0.0105%" height="15" fill="rgb(216,36,26)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="645" width="0.0105%" height="15" fill="rgb(248,201,23)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="629" width="0.0105%" height="15" fill="rgb(251,170,31)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="613" width="0.0105%" height="15" fill="rgb(207,110,25)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="86.0674%" y="597" width="0.0105%" height="15" fill="rgb(250,54,15)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;]&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="581" width="0.0105%" height="15" fill="rgb(227,68,33)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="565" width="0.0105%" height="15" fill="rgb(238,34,41)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::BindGroup&gt;&gt; (2 samples, 0.01%)</title><rect x="86.0674%" y="549" width="0.0105%" height="15" fill="rgb(220,11,15)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="86.0674%" y="533" width="0.0105%" height="15" fill="rgb(246,111,35)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="86.0674%" y="517" width="0.0105%" height="15" fill="rgb(209,88,53)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="86.0674%" y="501" width="0.0105%" height="15" fill="rgb(231,185,47)" fg:x="16469" fg:w="2"/><text x="86.3174%" y="511.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_view_drop (3 samples, 0.02%)</title><rect x="86.0831%" y="677" width="0.0157%" height="15" fill="rgb(233,154,1)" fg:x="16472" fg:w="3"/><text x="86.3331%" y="687.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_view_drop (2 samples, 0.01%)</title><rect x="86.0883%" y="661" width="0.0105%" height="15" fill="rgb(225,15,46)" fg:x="16473" fg:w="2"/><text x="86.3383%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (4 samples, 0.02%)</title><rect x="86.0831%" y="693" width="0.0209%" height="15" fill="rgb(211,135,41)" fg:x="16472" fg:w="4"/><text x="86.3331%" y="703.50"></text></g><g><title>&lt;wgpu_types::BindingType as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="86.1092%" y="501" width="0.0105%" height="15" fill="rgb(208,54,0)" fg:x="16477" fg:w="2"/><text x="86.3592%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.01%)</title><rect x="86.1092%" y="485" width="0.0105%" height="15" fill="rgb(244,136,14)" fg:x="16477" fg:w="2"/><text x="86.3592%" y="495.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.01%)</title><rect x="86.1092%" y="469" width="0.0105%" height="15" fill="rgb(241,56,14)" fg:x="16477" fg:w="2"/><text x="86.3592%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.01%)</title><rect x="86.1092%" y="453" width="0.0105%" height="15" fill="rgb(205,80,24)" fg:x="16477" fg:w="2"/><text x="86.3592%" y="463.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (3 samples, 0.02%)</title><rect x="86.1092%" y="677" width="0.0157%" height="15" fill="rgb(220,57,4)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.02%)</title><rect x="86.1092%" y="661" width="0.0157%" height="15" fill="rgb(226,193,50)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.02%)</title><rect x="86.1092%" y="645" width="0.0157%" height="15" fill="rgb(231,168,22)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.02%)</title><rect x="86.1092%" y="629" width="0.0157%" height="15" fill="rgb(254,215,14)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="86.1092%" y="613" width="0.0157%" height="15" fill="rgb(211,115,16)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.02%)</title><rect x="86.1092%" y="597" width="0.0157%" height="15" fill="rgb(236,210,16)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (3 samples, 0.02%)</title><rect x="86.1092%" y="581" width="0.0157%" height="15" fill="rgb(221,94,12)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="86.1092%" y="565" width="0.0157%" height="15" fill="rgb(235,218,49)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.02%)</title><rect x="86.1092%" y="549" width="0.0157%" height="15" fill="rgb(217,114,14)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="559.50"></text></g><g><title>core::hash::Hash::hash_slice (3 samples, 0.02%)</title><rect x="86.1092%" y="533" width="0.0157%" height="15" fill="rgb(216,145,22)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="543.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="86.1092%" y="517" width="0.0157%" height="15" fill="rgb(217,112,39)" fg:x="16477" fg:w="3"/><text x="86.3592%" y="527.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::bind_group (6 samples, 0.03%)</title><rect x="86.1040%" y="693" width="0.0314%" height="15" fill="rgb(225,85,32)" fg:x="16476" fg:w="6"/><text x="86.3540%" y="703.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::image (2 samples, 0.01%)</title><rect x="86.1249%" y="677" width="0.0105%" height="15" fill="rgb(245,209,47)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="86.1249%" y="661" width="0.0105%" height="15" fill="rgb(218,220,15)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="86.1249%" y="645" width="0.0105%" height="15" fill="rgb(222,202,31)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="86.1249%" y="629" width="0.0105%" height="15" fill="rgb(243,203,4)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="86.1249%" y="613" width="0.0105%" height="15" fill="rgb(237,92,17)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="86.1249%" y="597" width="0.0105%" height="15" fill="rgb(231,119,7)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="607.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="86.1249%" y="581" width="0.0105%" height="15" fill="rgb(237,82,41)" fg:x="16480" fg:w="2"/><text x="86.3749%" y="591.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="86.1406%" y="677" width="0.0105%" height="15" fill="rgb(226,81,48)" fg:x="16483" fg:w="2"/><text x="86.3906%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="86.1406%" y="661" width="0.0105%" height="15" fill="rgb(234,70,51)" fg:x="16483" fg:w="2"/><text x="86.3906%" y="671.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="86.1510%" y="597" width="0.0105%" height="15" fill="rgb(251,86,4)" fg:x="16485" fg:w="2"/><text x="86.4010%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.02%)</title><rect x="86.1510%" y="645" width="0.0209%" height="15" fill="rgb(244,144,28)" fg:x="16485" fg:w="4"/><text x="86.4010%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="86.1510%" y="629" width="0.0209%" height="15" fill="rgb(232,161,39)" fg:x="16485" fg:w="4"/><text x="86.4010%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.02%)</title><rect x="86.1510%" y="613" width="0.0209%" height="15" fill="rgb(247,34,51)" fg:x="16485" fg:w="4"/><text x="86.4010%" y="623.50"></text></g><g><title>&lt;wgpu::VertexBufferLayout as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="86.1615%" y="597" width="0.0105%" height="15" fill="rgb(225,132,2)" fg:x="16487" fg:w="2"/><text x="86.4115%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="86.1615%" y="581" width="0.0105%" height="15" fill="rgb(209,159,44)" fg:x="16487" fg:w="2"/><text x="86.4115%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.01%)</title><rect x="86.1615%" y="565" width="0.0105%" height="15" fill="rgb(251,214,1)" fg:x="16487" fg:w="2"/><text x="86.4115%" y="575.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.01%)</title><rect x="86.1615%" y="549" width="0.0105%" height="15" fill="rgb(247,84,47)" fg:x="16487" fg:w="2"/><text x="86.4115%" y="559.50"></text></g><g><title>&lt;wgpu_types::VertexAttribute as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="86.1615%" y="533" width="0.0105%" height="15" fill="rgb(240,111,43)" fg:x="16487" fg:w="2"/><text x="86.4115%" y="543.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::render_pipeline (7 samples, 0.04%)</title><rect x="86.1406%" y="693" width="0.0366%" height="15" fill="rgb(215,214,35)" fg:x="16483" fg:w="7"/><text x="86.3906%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.03%)</title><rect x="86.1510%" y="677" width="0.0261%" height="15" fill="rgb(248,207,23)" fg:x="16485" fg:w="5"/><text x="86.4010%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.03%)</title><rect x="86.1510%" y="661" width="0.0261%" height="15" fill="rgb(214,186,4)" fg:x="16485" fg:w="5"/><text x="86.4010%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="86.1772%" y="645" width="0.0105%" height="15" fill="rgb(220,133,22)" fg:x="16490" fg:w="2"/><text x="86.4272%" y="655.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="86.1772%" y="629" width="0.0105%" height="15" fill="rgb(239,134,19)" fg:x="16490" fg:w="2"/><text x="86.4272%" y="639.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="86.1772%" y="613" width="0.0105%" height="15" fill="rgb(250,140,9)" fg:x="16490" fg:w="2"/><text x="86.4272%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="86.2085%" y="581" width="0.0105%" height="15" fill="rgb(225,59,14)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.01%)</title><rect x="86.2085%" y="565" width="0.0105%" height="15" fill="rgb(214,152,51)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="575.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (2 samples, 0.01%)</title><rect x="86.2085%" y="549" width="0.0105%" height="15" fill="rgb(251,227,43)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.01%)</title><rect x="86.2085%" y="533" width="0.0105%" height="15" fill="rgb(241,96,17)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="86.2085%" y="517" width="0.0105%" height="15" fill="rgb(234,198,43)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="86.2085%" y="501" width="0.0105%" height="15" fill="rgb(220,108,29)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.01%)</title><rect x="86.2085%" y="485" width="0.0105%" height="15" fill="rgb(226,163,33)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="86.2085%" y="469" width="0.0105%" height="15" fill="rgb(205,194,45)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="86.2085%" y="453" width="0.0105%" height="15" fill="rgb(206,143,44)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="463.50"></text></g><g><title>&lt;bit_vec::Blocks&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="86.2085%" y="437" width="0.0105%" height="15" fill="rgb(236,136,36)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="86.2085%" y="421" width="0.0105%" height="15" fill="rgb(249,172,42)" fg:x="16496" fg:w="2"/><text x="86.4585%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="86.2085%" y="629" width="0.0157%" height="15" fill="rgb(216,139,23)" fg:x="16496" fg:w="3"/><text x="86.4585%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="86.2085%" y="613" width="0.0157%" height="15" fill="rgb(207,166,20)" fg:x="16496" fg:w="3"/><text x="86.4585%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="86.2085%" y="597" width="0.0157%" height="15" fill="rgb(210,209,22)" fg:x="16496" fg:w="3"/><text x="86.4585%" y="607.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (2 samples, 0.01%)</title><rect x="86.2242%" y="629" width="0.0105%" height="15" fill="rgb(232,118,20)" fg:x="16499" fg:w="2"/><text x="86.4742%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="86.2242%" y="613" width="0.0105%" height="15" fill="rgb(238,113,42)" fg:x="16499" fg:w="2"/><text x="86.4742%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (7 samples, 0.04%)</title><rect x="86.2399%" y="581" width="0.0366%" height="15" fill="rgb(231,42,5)" fg:x="16502" fg:w="7"/><text x="86.4899%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="86.2451%" y="565" width="0.0314%" height="15" fill="rgb(243,166,24)" fg:x="16503" fg:w="6"/><text x="86.4951%" y="575.50"></text></g><g><title>syscall (6 samples, 0.03%)</title><rect x="86.2451%" y="549" width="0.0314%" height="15" fill="rgb(237,226,12)" fg:x="16503" fg:w="6"/><text x="86.4951%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="86.2451%" y="533" width="0.0314%" height="15" fill="rgb(229,133,24)" fg:x="16503" fg:w="6"/><text x="86.4951%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="86.2556%" y="517" width="0.0209%" height="15" fill="rgb(238,33,43)" fg:x="16505" fg:w="4"/><text x="86.5056%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="86.2556%" y="501" width="0.0209%" height="15" fill="rgb(227,59,38)" fg:x="16505" fg:w="4"/><text x="86.5056%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="86.2608%" y="485" width="0.0157%" height="15" fill="rgb(230,97,0)" fg:x="16506" fg:w="3"/><text x="86.5108%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (5 samples, 0.03%)</title><rect x="86.2765%" y="565" width="0.0261%" height="15" fill="rgb(250,173,50)" fg:x="16509" fg:w="5"/><text x="86.5265%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="86.2869%" y="549" width="0.0157%" height="15" fill="rgb(240,15,50)" fg:x="16511" fg:w="3"/><text x="86.5369%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="86.2869%" y="533" width="0.0157%" height="15" fill="rgb(221,93,22)" fg:x="16511" fg:w="3"/><text x="86.5369%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.13%)</title><rect x="86.6736%" y="421" width="0.1254%" height="15" fill="rgb(245,180,53)" fg:x="16585" fg:w="24"/><text x="86.9236%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="86.7729%" y="405" width="0.0261%" height="15" fill="rgb(231,88,51)" fg:x="16604" fg:w="5"/><text x="87.0229%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="86.7729%" y="389" width="0.0261%" height="15" fill="rgb(240,58,21)" fg:x="16604" fg:w="5"/><text x="87.0229%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (43 samples, 0.22%)</title><rect x="86.6005%" y="437" width="0.2247%" height="15" fill="rgb(237,21,10)" fg:x="16571" fg:w="43"/><text x="86.8505%" y="447.50"></text></g><g><title>___pthread_rwlock_unlock (4 samples, 0.02%)</title><rect x="86.8043%" y="421" width="0.0209%" height="15" fill="rgb(218,43,11)" fg:x="16610" fg:w="4"/><text x="87.0543%" y="431.50"></text></g><g><title>__pthread_rwlock_wrunlock (2 samples, 0.01%)</title><rect x="86.8147%" y="405" width="0.0105%" height="15" fill="rgb(218,221,29)" fg:x="16612" fg:w="2"/><text x="87.0647%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (46 samples, 0.24%)</title><rect x="86.5952%" y="453" width="0.2404%" height="15" fill="rgb(214,118,42)" fg:x="16570" fg:w="46"/><text x="86.8452%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (73 samples, 0.38%)</title><rect x="86.4646%" y="469" width="0.3815%" height="15" fill="rgb(251,200,26)" fg:x="16545" fg:w="73"/><text x="86.7146%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (77 samples, 0.40%)</title><rect x="86.4489%" y="485" width="0.4024%" height="15" fill="rgb(237,101,39)" fg:x="16542" fg:w="77"/><text x="86.6989%" y="495.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (119 samples, 0.62%)</title><rect x="86.2346%" y="629" width="0.6219%" height="15" fill="rgb(251,117,11)" fg:x="16501" fg:w="119"/><text x="86.4846%" y="639.50"></text></g><g><title>ash::device::Device::queue_submit (118 samples, 0.62%)</title><rect x="86.2399%" y="613" width="0.6167%" height="15" fill="rgb(216,223,23)" fg:x="16502" fg:w="118"/><text x="86.4899%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (118 samples, 0.62%)</title><rect x="86.2399%" y="597" width="0.6167%" height="15" fill="rgb(251,54,12)" fg:x="16502" fg:w="118"/><text x="86.4899%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (111 samples, 0.58%)</title><rect x="86.2765%" y="581" width="0.5801%" height="15" fill="rgb(254,176,54)" fg:x="16509" fg:w="111"/><text x="86.5265%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (106 samples, 0.55%)</title><rect x="86.3026%" y="565" width="0.5540%" height="15" fill="rgb(210,32,8)" fg:x="16514" fg:w="106"/><text x="86.5526%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (104 samples, 0.54%)</title><rect x="86.3130%" y="549" width="0.5435%" height="15" fill="rgb(235,52,38)" fg:x="16516" fg:w="104"/><text x="86.5630%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (100 samples, 0.52%)</title><rect x="86.3339%" y="533" width="0.5226%" height="15" fill="rgb(231,4,44)" fg:x="16520" fg:w="100"/><text x="86.5839%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (88 samples, 0.46%)</title><rect x="86.3967%" y="517" width="0.4599%" height="15" fill="rgb(249,2,32)" fg:x="16532" fg:w="88"/><text x="86.6467%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (81 samples, 0.42%)</title><rect x="86.4332%" y="501" width="0.4233%" height="15" fill="rgb(224,65,26)" fg:x="16539" fg:w="81"/><text x="86.6832%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (3 samples, 0.02%)</title><rect x="86.8565%" y="629" width="0.0157%" height="15" fill="rgb(250,73,40)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="86.8565%" y="613" width="0.0157%" height="15" fill="rgb(253,177,16)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="86.8565%" y="597" width="0.0157%" height="15" fill="rgb(217,32,34)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="86.8565%" y="581" width="0.0157%" height="15" fill="rgb(212,7,10)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="86.8565%" y="565" width="0.0157%" height="15" fill="rgb(245,89,8)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="86.8565%" y="549" width="0.0157%" height="15" fill="rgb(237,16,53)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="86.8565%" y="533" width="0.0157%" height="15" fill="rgb(250,204,30)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="86.8565%" y="517" width="0.0157%" height="15" fill="rgb(208,77,27)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="527.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="86.8565%" y="501" width="0.0157%" height="15" fill="rgb(250,204,28)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="511.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="86.8565%" y="485" width="0.0157%" height="15" fill="rgb(244,63,21)" fg:x="16620" fg:w="3"/><text x="87.1065%" y="495.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="86.8618%" y="469" width="0.0105%" height="15" fill="rgb(236,85,44)" fg:x="16621" fg:w="2"/><text x="87.1118%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="86.8618%" y="453" width="0.0105%" height="15" fill="rgb(215,98,4)" fg:x="16621" fg:w="2"/><text x="87.1118%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="86.8827%" y="629" width="0.0105%" height="15" fill="rgb(235,38,11)" fg:x="16625" fg:w="2"/><text x="87.1327%" y="639.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.01%)</title><rect x="86.9193%" y="581" width="0.0105%" height="15" fill="rgb(254,186,25)" fg:x="16632" fg:w="2"/><text x="87.1693%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="86.9193%" y="565" width="0.0105%" height="15" fill="rgb(225,55,31)" fg:x="16632" fg:w="2"/><text x="87.1693%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="86.9193%" y="549" width="0.0105%" height="15" fill="rgb(211,15,21)" fg:x="16632" fg:w="2"/><text x="87.1693%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="86.9193%" y="533" width="0.0105%" height="15" fill="rgb(215,187,41)" fg:x="16632" fg:w="2"/><text x="87.1693%" y="543.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (8 samples, 0.04%)</title><rect x="86.8984%" y="613" width="0.0418%" height="15" fill="rgb(248,69,32)" fg:x="16628" fg:w="8"/><text x="87.1484%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (7 samples, 0.04%)</title><rect x="86.9036%" y="597" width="0.0366%" height="15" fill="rgb(252,102,52)" fg:x="16629" fg:w="7"/><text x="87.1536%" y="607.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (3 samples, 0.02%)</title><rect x="86.9402%" y="613" width="0.0157%" height="15" fill="rgb(253,140,32)" fg:x="16636" fg:w="3"/><text x="87.1902%" y="623.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (3 samples, 0.02%)</title><rect x="86.9611%" y="597" width="0.0157%" height="15" fill="rgb(216,56,42)" fg:x="16640" fg:w="3"/><text x="87.2111%" y="607.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::contains_unchecked (2 samples, 0.01%)</title><rect x="86.9767%" y="581" width="0.0105%" height="15" fill="rgb(216,184,14)" fg:x="16643" fg:w="2"/><text x="87.2267%" y="591.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::get (2 samples, 0.01%)</title><rect x="86.9767%" y="565" width="0.0105%" height="15" fill="rgb(237,187,27)" fg:x="16643" fg:w="2"/><text x="87.2267%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="86.9767%" y="549" width="0.0105%" height="15" fill="rgb(219,65,3)" fg:x="16643" fg:w="2"/><text x="87.2267%" y="559.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (21 samples, 0.11%)</title><rect x="86.8984%" y="629" width="0.1097%" height="15" fill="rgb(245,83,25)" fg:x="16628" fg:w="21"/><text x="87.1484%" y="639.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (10 samples, 0.05%)</title><rect x="86.9558%" y="613" width="0.0523%" height="15" fill="rgb(214,205,45)" fg:x="16639" fg:w="10"/><text x="87.2058%" y="623.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (6 samples, 0.03%)</title><rect x="86.9767%" y="597" width="0.0314%" height="15" fill="rgb(241,20,18)" fg:x="16643" fg:w="6"/><text x="87.2267%" y="607.50"></text></g><g><title>wgpu_core::track::texture::update (4 samples, 0.02%)</title><rect x="86.9872%" y="581" width="0.0209%" height="15" fill="rgb(232,163,23)" fg:x="16645" fg:w="4"/><text x="87.2372%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.01%)</title><rect x="86.9976%" y="565" width="0.0105%" height="15" fill="rgb(214,5,46)" fg:x="16647" fg:w="2"/><text x="87.2476%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="86.9976%" y="549" width="0.0105%" height="15" fill="rgb(229,78,17)" fg:x="16647" fg:w="2"/><text x="87.2476%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.01%)</title><rect x="86.9976%" y="533" width="0.0105%" height="15" fill="rgb(248,89,10)" fg:x="16647" fg:w="2"/><text x="87.2476%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.01%)</title><rect x="86.9976%" y="517" width="0.0105%" height="15" fill="rgb(248,54,15)" fg:x="16647" fg:w="2"/><text x="87.2476%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (2 samples, 0.01%)</title><rect x="86.9976%" y="501" width="0.0105%" height="15" fill="rgb(223,116,6)" fg:x="16647" fg:w="2"/><text x="87.2476%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="87.0133%" y="613" width="0.0209%" height="15" fill="rgb(205,125,38)" fg:x="16650" fg:w="4"/><text x="87.2633%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="87.0186%" y="597" width="0.0157%" height="15" fill="rgb(251,78,38)" fg:x="16651" fg:w="3"/><text x="87.2686%" y="607.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_buffer_memory (8 samples, 0.04%)</title><rect x="87.0081%" y="629" width="0.0418%" height="15" fill="rgb(253,78,28)" fg:x="16649" fg:w="8"/><text x="87.2581%" y="639.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::free (3 samples, 0.02%)</title><rect x="87.0656%" y="549" width="0.0157%" height="15" fill="rgb(209,120,3)" fg:x="16660" fg:w="3"/><text x="87.3156%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::dealloc_descriptor_sets (3 samples, 0.02%)</title><rect x="87.0656%" y="533" width="0.0157%" height="15" fill="rgb(238,229,9)" fg:x="16660" fg:w="3"/><text x="87.3156%" y="543.50"></text></g><g><title>ash::device::Device::free_descriptor_sets (2 samples, 0.01%)</title><rect x="87.0708%" y="517" width="0.0105%" height="15" fill="rgb(253,159,18)" fg:x="16661" fg:w="2"/><text x="87.3208%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="87.0708%" y="501" width="0.0105%" height="15" fill="rgb(244,42,34)" fg:x="16661" fg:w="2"/><text x="87.3208%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="87.0708%" y="485" width="0.0105%" height="15" fill="rgb(224,8,7)" fg:x="16661" fg:w="2"/><text x="87.3208%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="87.0708%" y="469" width="0.0105%" height="15" fill="rgb(210,201,45)" fg:x="16661" fg:w="2"/><text x="87.3208%" y="479.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (4 samples, 0.02%)</title><rect x="87.0656%" y="565" width="0.0209%" height="15" fill="rgb(252,185,21)" fg:x="16660" fg:w="4"/><text x="87.3156%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_bind_group (5 samples, 0.03%)</title><rect x="87.0656%" y="581" width="0.0261%" height="15" fill="rgb(223,131,1)" fg:x="16660" fg:w="5"/><text x="87.3156%" y="591.50"></text></g><g><title>ash::device::Device::destroy_buffer (8 samples, 0.04%)</title><rect x="87.0917%" y="565" width="0.0418%" height="15" fill="rgb(245,141,16)" fg:x="16665" fg:w="8"/><text x="87.3417%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="87.0917%" y="549" width="0.0418%" height="15" fill="rgb(229,55,45)" fg:x="16665" fg:w="8"/><text x="87.3417%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="87.1231%" y="533" width="0.0105%" height="15" fill="rgb(208,92,15)" fg:x="16671" fg:w="2"/><text x="87.3731%" y="543.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (3 samples, 0.02%)</title><rect x="87.1388%" y="549" width="0.0157%" height="15" fill="rgb(234,185,47)" fg:x="16674" fg:w="3"/><text x="87.3888%" y="559.50"></text></g><g><title>gpu_alloc::buddy::Size::release (2 samples, 0.01%)</title><rect x="87.1440%" y="533" width="0.0105%" height="15" fill="rgb(253,104,50)" fg:x="16675" fg:w="2"/><text x="87.3940%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (17 samples, 0.09%)</title><rect x="87.0917%" y="581" width="0.0888%" height="15" fill="rgb(205,70,7)" fg:x="16665" fg:w="17"/><text x="87.3417%" y="591.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (9 samples, 0.05%)</title><rect x="87.1335%" y="565" width="0.0470%" height="15" fill="rgb(240,178,43)" fg:x="16673" fg:w="9"/><text x="87.3835%" y="575.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (5 samples, 0.03%)</title><rect x="87.1544%" y="549" width="0.0261%" height="15" fill="rgb(214,112,2)" fg:x="16677" fg:w="5"/><text x="87.4044%" y="559.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::insert_block (4 samples, 0.02%)</title><rect x="87.1597%" y="533" width="0.0209%" height="15" fill="rgb(206,46,17)" fg:x="16678" fg:w="4"/><text x="87.4097%" y="543.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (27 samples, 0.14%)</title><rect x="87.0604%" y="613" width="0.1411%" height="15" fill="rgb(225,220,16)" fg:x="16659" fg:w="27"/><text x="87.3104%" y="623.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (27 samples, 0.14%)</title><rect x="87.0604%" y="597" width="0.1411%" height="15" fill="rgb(238,65,40)" fg:x="16659" fg:w="27"/><text x="87.3104%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (4 samples, 0.02%)</title><rect x="87.1806%" y="581" width="0.0209%" height="15" fill="rgb(230,151,21)" fg:x="16682" fg:w="4"/><text x="87.4306%" y="591.50"></text></g><g><title>ash::device::Device::destroy_image_view (3 samples, 0.02%)</title><rect x="87.1858%" y="565" width="0.0157%" height="15" fill="rgb(218,58,49)" fg:x="16683" fg:w="3"/><text x="87.4358%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="87.1858%" y="549" width="0.0157%" height="15" fill="rgb(219,179,14)" fg:x="16683" fg:w="3"/><text x="87.4358%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="87.1910%" y="533" width="0.0105%" height="15" fill="rgb(223,72,1)" fg:x="16684" fg:w="2"/><text x="87.4410%" y="543.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (2 samples, 0.01%)</title><rect x="87.2276%" y="597" width="0.0105%" height="15" fill="rgb(238,126,10)" fg:x="16691" fg:w="2"/><text x="87.4776%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="87.2276%" y="581" width="0.0105%" height="15" fill="rgb(224,206,38)" fg:x="16691" fg:w="2"/><text x="87.4776%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="87.2276%" y="565" width="0.0105%" height="15" fill="rgb(212,201,54)" fg:x="16691" fg:w="2"/><text x="87.4776%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;wgpu_hal::vulkan::Texture&gt;&gt; (2 samples, 0.01%)</title><rect x="87.2276%" y="549" width="0.0105%" height="15" fill="rgb(218,154,48)" fg:x="16691" fg:w="2"/><text x="87.4776%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="87.2276%" y="533" width="0.0105%" height="15" fill="rgb(232,93,24)" fg:x="16691" fg:w="2"/><text x="87.4776%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="87.2380%" y="565" width="0.0105%" height="15" fill="rgb(245,30,21)" fg:x="16693" fg:w="2"/><text x="87.4880%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="87.2380%" y="549" width="0.0105%" height="15" fill="rgb(242,148,29)" fg:x="16693" fg:w="2"/><text x="87.4880%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="87.2380%" y="533" width="0.0105%" height="15" fill="rgb(244,153,54)" fg:x="16693" fg:w="2"/><text x="87.4880%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="87.2380%" y="517" width="0.0105%" height="15" fill="rgb(252,87,22)" fg:x="16693" fg:w="2"/><text x="87.4880%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="87.2380%" y="501" width="0.0105%" height="15" fill="rgb(210,51,29)" fg:x="16693" fg:w="2"/><text x="87.4880%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="87.2380%" y="485" width="0.0105%" height="15" fill="rgb(242,136,47)" fg:x="16693" fg:w="2"/><text x="87.4880%" y="495.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (49 samples, 0.26%)</title><rect x="87.2067%" y="613" width="0.2561%" height="15" fill="rgb(238,68,4)" fg:x="16687" fg:w="49"/><text x="87.4567%" y="623.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (43 samples, 0.22%)</title><rect x="87.2380%" y="597" width="0.2247%" height="15" fill="rgb(242,161,30)" fg:x="16693" fg:w="43"/><text x="87.4880%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (43 samples, 0.22%)</title><rect x="87.2380%" y="581" width="0.2247%" height="15" fill="rgb(218,58,44)" fg:x="16693" fg:w="43"/><text x="87.4880%" y="591.50"></text></g><g><title>ash::device::Device::reset_command_pool (41 samples, 0.21%)</title><rect x="87.2485%" y="565" width="0.2143%" height="15" fill="rgb(252,125,32)" fg:x="16695" fg:w="41"/><text x="87.4985%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (41 samples, 0.21%)</title><rect x="87.2485%" y="549" width="0.2143%" height="15" fill="rgb(219,178,0)" fg:x="16695" fg:w="41"/><text x="87.4985%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (39 samples, 0.20%)</title><rect x="87.2589%" y="533" width="0.2038%" height="15" fill="rgb(213,152,7)" fg:x="16697" fg:w="39"/><text x="87.5089%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.10%)</title><rect x="87.3582%" y="517" width="0.1045%" height="15" fill="rgb(249,109,34)" fg:x="16716" fg:w="20"/><text x="87.6082%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.05%)</title><rect x="87.4105%" y="501" width="0.0523%" height="15" fill="rgb(232,96,21)" fg:x="16726" fg:w="10"/><text x="87.6605%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="87.4471%" y="485" width="0.0157%" height="15" fill="rgb(228,27,39)" fg:x="16733" fg:w="3"/><text x="87.6971%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="87.4784%" y="597" width="0.0209%" height="15" fill="rgb(211,182,52)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="87.4784%" y="581" width="0.0209%" height="15" fill="rgb(234,178,38)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="87.4784%" y="565" width="0.0209%" height="15" fill="rgb(221,111,3)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="87.4784%" y="549" width="0.0209%" height="15" fill="rgb(228,175,21)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="87.4784%" y="533" width="0.0209%" height="15" fill="rgb(228,174,43)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="87.4784%" y="517" width="0.0209%" height="15" fill="rgb(211,191,0)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="87.4784%" y="501" width="0.0209%" height="15" fill="rgb(253,117,3)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="87.4784%" y="485" width="0.0209%" height="15" fill="rgb(241,127,19)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="87.4784%" y="469" width="0.0209%" height="15" fill="rgb(218,103,12)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="87.4784%" y="453" width="0.0209%" height="15" fill="rgb(236,214,43)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="463.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="87.4784%" y="437" width="0.0209%" height="15" fill="rgb(244,144,19)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="447.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="87.4784%" y="421" width="0.0209%" height="15" fill="rgb(246,188,10)" fg:x="16739" fg:w="4"/><text x="87.7284%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="87.4993%" y="597" width="0.0105%" height="15" fill="rgb(212,193,33)" fg:x="16743" fg:w="2"/><text x="87.7493%" y="607.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::free (2 samples, 0.01%)</title><rect x="87.5255%" y="581" width="0.0105%" height="15" fill="rgb(241,51,29)" fg:x="16748" fg:w="2"/><text x="87.7755%" y="591.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (4 samples, 0.02%)</title><rect x="87.5255%" y="597" width="0.0209%" height="15" fill="rgb(211,58,19)" fg:x="16748" fg:w="4"/><text x="87.7755%" y="607.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (2 samples, 0.01%)</title><rect x="87.5359%" y="581" width="0.0105%" height="15" fill="rgb(229,111,26)" fg:x="16750" fg:w="2"/><text x="87.7859%" y="591.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="87.5359%" y="565" width="0.0105%" height="15" fill="rgb(213,115,40)" fg:x="16750" fg:w="2"/><text x="87.7859%" y="575.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="87.5359%" y="549" width="0.0105%" height="15" fill="rgb(209,56,44)" fg:x="16750" fg:w="2"/><text x="87.7859%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="87.5359%" y="533" width="0.0105%" height="15" fill="rgb(230,108,32)" fg:x="16750" fg:w="2"/><text x="87.7859%" y="543.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::remove_abandoned (2 samples, 0.01%)</title><rect x="87.5464%" y="597" width="0.0105%" height="15" fill="rgb(216,165,31)" fg:x="16752" fg:w="2"/><text x="87.7964%" y="607.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::remove (2 samples, 0.01%)</title><rect x="87.5464%" y="581" width="0.0105%" height="15" fill="rgb(218,122,21)" fg:x="16752" fg:w="2"/><text x="87.7964%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (2 samples, 0.01%)</title><rect x="87.5464%" y="565" width="0.0105%" height="15" fill="rgb(223,224,47)" fg:x="16752" fg:w="2"/><text x="87.7964%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="87.5464%" y="549" width="0.0105%" height="15" fill="rgb(238,102,44)" fg:x="16752" fg:w="2"/><text x="87.7964%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="87.5464%" y="533" width="0.0105%" height="15" fill="rgb(236,46,40)" fg:x="16752" fg:w="2"/><text x="87.7964%" y="543.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (21 samples, 0.11%)</title><rect x="87.4628%" y="613" width="0.1097%" height="15" fill="rgb(247,202,50)" fg:x="16736" fg:w="21"/><text x="87.7128%" y="623.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::remove_abandoned (3 samples, 0.02%)</title><rect x="87.5568%" y="597" width="0.0157%" height="15" fill="rgb(209,99,20)" fg:x="16754" fg:w="3"/><text x="87.8068%" y="607.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::extend (2 samples, 0.01%)</title><rect x="87.5725%" y="613" width="0.0105%" height="15" fill="rgb(252,27,34)" fg:x="16757" fg:w="2"/><text x="87.8225%" y="623.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (103 samples, 0.54%)</title><rect x="87.0604%" y="629" width="0.5383%" height="15" fill="rgb(215,206,23)" fg:x="16659" fg:w="103"/><text x="87.3104%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::get_fence_value (3 samples, 0.02%)</title><rect x="87.5830%" y="613" width="0.0157%" height="15" fill="rgb(212,135,36)" fg:x="16759" fg:w="3"/><text x="87.8330%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::Fence::get_latest (3 samples, 0.02%)</title><rect x="87.5830%" y="597" width="0.0157%" height="15" fill="rgb(240,189,1)" fg:x="16759" fg:w="3"/><text x="87.8330%" y="607.50"></text></g><g><title>ash::device::Device::get_semaphore_counter_value (3 samples, 0.02%)</title><rect x="87.5830%" y="581" width="0.0157%" height="15" fill="rgb(242,56,20)" fg:x="16759" fg:w="3"/><text x="87.8330%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="87.5830%" y="565" width="0.0157%" height="15" fill="rgb(247,132,33)" fg:x="16759" fg:w="3"/><text x="87.8330%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="87.5830%" y="549" width="0.0157%" height="15" fill="rgb(208,149,11)" fg:x="16759" fg:w="3"/><text x="87.8330%" y="559.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (4 samples, 0.02%)</title><rect x="87.6039%" y="629" width="0.0209%" height="15" fill="rgb(211,33,11)" fg:x="16763" fg:w="4"/><text x="87.8539%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (4 samples, 0.02%)</title><rect x="87.6039%" y="613" width="0.0209%" height="15" fill="rgb(221,29,38)" fg:x="16763" fg:w="4"/><text x="87.8539%" y="623.50"></text></g><g><title>ash::device::Device::end_command_buffer (4 samples, 0.02%)</title><rect x="87.6039%" y="597" width="0.0209%" height="15" fill="rgb(206,182,49)" fg:x="16763" fg:w="4"/><text x="87.8539%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="87.6039%" y="581" width="0.0209%" height="15" fill="rgb(216,140,1)" fg:x="16763" fg:w="4"/><text x="87.8539%" y="591.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (4 samples, 0.02%)</title><rect x="87.6248%" y="629" width="0.0209%" height="15" fill="rgb(232,57,40)" fg:x="16767" fg:w="4"/><text x="87.8748%" y="639.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (4 samples, 0.02%)</title><rect x="87.6248%" y="613" width="0.0209%" height="15" fill="rgb(224,186,18)" fg:x="16767" fg:w="4"/><text x="87.8748%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (4 samples, 0.02%)</title><rect x="87.6248%" y="597" width="0.0209%" height="15" fill="rgb(215,121,11)" fg:x="16767" fg:w="4"/><text x="87.8748%" y="607.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (4 samples, 0.02%)</title><rect x="87.6248%" y="581" width="0.0209%" height="15" fill="rgb(245,147,10)" fg:x="16767" fg:w="4"/><text x="87.8748%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="87.6248%" y="565" width="0.0209%" height="15" fill="rgb(238,153,13)" fg:x="16767" fg:w="4"/><text x="87.8748%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="87.6248%" y="549" width="0.0209%" height="15" fill="rgb(233,108,0)" fg:x="16767" fg:w="4"/><text x="87.8748%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (2 samples, 0.01%)</title><rect x="87.6457%" y="597" width="0.0105%" height="15" fill="rgb(212,157,17)" fg:x="16771" fg:w="2"/><text x="87.8957%" y="607.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (2 samples, 0.01%)</title><rect x="87.6457%" y="581" width="0.0105%" height="15" fill="rgb(225,213,38)" fg:x="16771" fg:w="2"/><text x="87.8957%" y="591.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::used (3 samples, 0.02%)</title><rect x="87.6457%" y="629" width="0.0157%" height="15" fill="rgb(248,16,11)" fg:x="16771" fg:w="3"/><text x="87.8957%" y="639.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::owned_ids (3 samples, 0.02%)</title><rect x="87.6457%" y="613" width="0.0157%" height="15" fill="rgb(241,33,4)" fg:x="16771" fg:w="3"/><text x="87.8957%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="87.6614%" y="613" width="0.0105%" height="15" fill="rgb(222,26,43)" fg:x="16774" fg:w="2"/><text x="87.9114%" y="623.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (3 samples, 0.02%)</title><rect x="87.6614%" y="629" width="0.0157%" height="15" fill="rgb(243,29,36)" fg:x="16774" fg:w="3"/><text x="87.9114%" y="639.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (3 samples, 0.02%)</title><rect x="87.6823%" y="629" width="0.0157%" height="15" fill="rgb(241,9,27)" fg:x="16778" fg:w="3"/><text x="87.9323%" y="639.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="87.6875%" y="613" width="0.0105%" height="15" fill="rgb(205,117,26)" fg:x="16779" fg:w="2"/><text x="87.9375%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="87.6875%" y="597" width="0.0105%" height="15" fill="rgb(209,80,39)" fg:x="16779" fg:w="2"/><text x="87.9375%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (11 samples, 0.06%)</title><rect x="87.6979%" y="629" width="0.0575%" height="15" fill="rgb(239,155,6)" fg:x="16781" fg:w="11"/><text x="87.9479%" y="639.50"></text></g><g><title>ash::device::Device::begin_command_buffer (11 samples, 0.06%)</title><rect x="87.6979%" y="613" width="0.0575%" height="15" fill="rgb(212,104,12)" fg:x="16781" fg:w="11"/><text x="87.9479%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="87.6979%" y="597" width="0.0575%" height="15" fill="rgb(234,204,3)" fg:x="16781" fg:w="11"/><text x="87.9479%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.05%)</title><rect x="87.7032%" y="581" width="0.0523%" height="15" fill="rgb(251,218,7)" fg:x="16782" fg:w="10"/><text x="87.9532%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="87.7188%" y="565" width="0.0366%" height="15" fill="rgb(221,81,32)" fg:x="16785" fg:w="7"/><text x="87.9688%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.01%)</title><rect x="87.7659%" y="613" width="0.0105%" height="15" fill="rgb(214,152,26)" fg:x="16794" fg:w="2"/><text x="88.0159%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="87.7659%" y="597" width="0.0105%" height="15" fill="rgb(223,22,3)" fg:x="16794" fg:w="2"/><text x="88.0159%" y="607.50"></text></g><g><title>wgpu::Queue::submit (307 samples, 1.60%)</title><rect x="86.1772%" y="693" width="1.6044%" height="15" fill="rgb(207,174,7)" fg:x="16490" fg:w="307"/><text x="86.4272%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (307 samples, 1.60%)</title><rect x="86.1772%" y="677" width="1.6044%" height="15" fill="rgb(224,19,52)" fg:x="16490" fg:w="307"/><text x="86.4272%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (307 samples, 1.60%)</title><rect x="86.1772%" y="661" width="1.6044%" height="15" fill="rgb(228,24,14)" fg:x="16490" fg:w="307"/><text x="86.4272%" y="671.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (304 samples, 1.59%)</title><rect x="86.1928%" y="645" width="1.5887%" height="15" fill="rgb(230,153,43)" fg:x="16493" fg:w="304"/><text x="86.4428%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (4 samples, 0.02%)</title><rect x="87.7606%" y="629" width="0.0209%" height="15" fill="rgb(231,106,12)" fg:x="16793" fg:w="4"/><text x="88.0106%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (5 samples, 0.03%)</title><rect x="87.8077%" y="581" width="0.0261%" height="15" fill="rgb(215,92,2)" fg:x="16802" fg:w="5"/><text x="88.0577%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="87.8129%" y="565" width="0.0209%" height="15" fill="rgb(249,143,25)" fg:x="16803" fg:w="4"/><text x="88.0629%" y="575.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="87.8129%" y="549" width="0.0209%" height="15" fill="rgb(252,7,35)" fg:x="16803" fg:w="4"/><text x="88.0629%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="87.8129%" y="533" width="0.0209%" height="15" fill="rgb(216,69,40)" fg:x="16803" fg:w="4"/><text x="88.0629%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="87.8181%" y="517" width="0.0157%" height="15" fill="rgb(240,36,33)" fg:x="16804" fg:w="3"/><text x="88.0681%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="87.8181%" y="501" width="0.0157%" height="15" fill="rgb(231,128,14)" fg:x="16804" fg:w="3"/><text x="88.0681%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (8 samples, 0.04%)</title><rect x="88.0063%" y="501" width="0.0418%" height="15" fill="rgb(245,143,14)" fg:x="16840" fg:w="8"/><text x="88.2563%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (7 samples, 0.04%)</title><rect x="88.0115%" y="485" width="0.0366%" height="15" fill="rgb(222,130,28)" fg:x="16841" fg:w="7"/><text x="88.2615%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (7 samples, 0.04%)</title><rect x="88.0115%" y="469" width="0.0366%" height="15" fill="rgb(212,10,48)" fg:x="16841" fg:w="7"/><text x="88.2615%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="88.0219%" y="453" width="0.0261%" height="15" fill="rgb(254,118,45)" fg:x="16843" fg:w="5"/><text x="88.2719%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="88.0219%" y="437" width="0.0261%" height="15" fill="rgb(228,6,45)" fg:x="16843" fg:w="5"/><text x="88.2719%" y="447.50"></text></g><g><title>__GI___sched_yield (5 samples, 0.03%)</title><rect x="88.0219%" y="421" width="0.0261%" height="15" fill="rgb(241,18,35)" fg:x="16843" fg:w="5"/><text x="88.2719%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="88.0219%" y="405" width="0.0261%" height="15" fill="rgb(227,214,53)" fg:x="16843" fg:w="5"/><text x="88.2719%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="88.0219%" y="389" width="0.0261%" height="15" fill="rgb(224,107,51)" fg:x="16843" fg:w="5"/><text x="88.2719%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="88.0272%" y="373" width="0.0209%" height="15" fill="rgb(248,60,28)" fg:x="16844" fg:w="4"/><text x="88.2772%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0324%" y="357" width="0.0157%" height="15" fill="rgb(249,101,23)" fg:x="16845" fg:w="3"/><text x="88.2824%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0324%" y="341" width="0.0157%" height="15" fill="rgb(228,51,19)" fg:x="16845" fg:w="3"/><text x="88.2824%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.0324%" y="325" width="0.0157%" height="15" fill="rgb(213,20,6)" fg:x="16845" fg:w="3"/><text x="88.2824%" y="335.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="88.1108%" y="469" width="0.0105%" height="15" fill="rgb(212,124,10)" fg:x="16860" fg:w="2"/><text x="88.3608%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="88.1369%" y="437" width="0.0105%" height="15" fill="rgb(248,3,40)" fg:x="16865" fg:w="2"/><text x="88.3869%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="88.1369%" y="453" width="0.0627%" height="15" fill="rgb(223,178,23)" fg:x="16865" fg:w="12"/><text x="88.3869%" y="463.50"></text></g><g><title>__GI___sched_yield (10 samples, 0.05%)</title><rect x="88.1474%" y="437" width="0.0523%" height="15" fill="rgb(240,132,45)" fg:x="16867" fg:w="10"/><text x="88.3974%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="88.1578%" y="421" width="0.0418%" height="15" fill="rgb(245,164,36)" fg:x="16869" fg:w="8"/><text x="88.4078%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="88.1578%" y="405" width="0.0418%" height="15" fill="rgb(231,188,53)" fg:x="16869" fg:w="8"/><text x="88.4078%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="88.1578%" y="389" width="0.0418%" height="15" fill="rgb(237,198,39)" fg:x="16869" fg:w="8"/><text x="88.4078%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="88.1683%" y="373" width="0.0314%" height="15" fill="rgb(223,120,35)" fg:x="16871" fg:w="6"/><text x="88.4183%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="88.1683%" y="357" width="0.0314%" height="15" fill="rgb(253,107,49)" fg:x="16871" fg:w="6"/><text x="88.4183%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="88.1683%" y="341" width="0.0314%" height="15" fill="rgb(216,44,31)" fg:x="16871" fg:w="6"/><text x="88.4183%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="88.1683%" y="325" width="0.0314%" height="15" fill="rgb(253,87,21)" fg:x="16871" fg:w="6"/><text x="88.4183%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="88.1683%" y="309" width="0.0314%" height="15" fill="rgb(226,18,2)" fg:x="16871" fg:w="6"/><text x="88.4183%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="88.1735%" y="293" width="0.0261%" height="15" fill="rgb(216,8,46)" fg:x="16872" fg:w="5"/><text x="88.4235%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="88.1840%" y="277" width="0.0157%" height="15" fill="rgb(226,140,39)" fg:x="16874" fg:w="3"/><text x="88.4340%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (18 samples, 0.09%)</title><rect x="88.1108%" y="485" width="0.0941%" height="15" fill="rgb(221,194,54)" fg:x="16860" fg:w="18"/><text x="88.3608%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.08%)</title><rect x="88.1212%" y="469" width="0.0836%" height="15" fill="rgb(213,92,11)" fg:x="16862" fg:w="16"/><text x="88.3712%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="88.4191%" y="469" width="0.0209%" height="15" fill="rgb(229,162,46)" fg:x="16919" fg:w="4"/><text x="88.6691%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="88.4191%" y="453" width="0.0209%" height="15" fill="rgb(214,111,36)" fg:x="16919" fg:w="4"/><text x="88.6691%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="88.4296%" y="437" width="0.0105%" height="15" fill="rgb(207,6,21)" fg:x="16921" fg:w="2"/><text x="88.6796%" y="447.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.01%)</title><rect x="88.4296%" y="421" width="0.0105%" height="15" fill="rgb(213,127,38)" fg:x="16921" fg:w="2"/><text x="88.6796%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="88.4296%" y="405" width="0.0105%" height="15" fill="rgb(238,118,32)" fg:x="16921" fg:w="2"/><text x="88.6796%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="89.6368%" y="325" width="0.0105%" height="15" fill="rgb(240,139,39)" fg:x="17152" fg:w="2"/><text x="89.8868%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.09%)</title><rect x="89.5584%" y="341" width="0.0941%" height="15" fill="rgb(235,10,37)" fg:x="17137" fg:w="18"/><text x="89.8084%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (31 samples, 0.16%)</title><rect x="89.4957%" y="357" width="0.1620%" height="15" fill="rgb(249,171,38)" fg:x="17125" fg:w="31"/><text x="89.7457%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (77 samples, 0.40%)</title><rect x="89.2605%" y="373" width="0.4024%" height="15" fill="rgb(242,144,32)" fg:x="17080" fg:w="77"/><text x="89.5105%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (104 samples, 0.54%)</title><rect x="89.1403%" y="389" width="0.5435%" height="15" fill="rgb(217,117,21)" fg:x="17057" fg:w="104"/><text x="89.3903%" y="399.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 0.02%)</title><rect x="89.6681%" y="373" width="0.0157%" height="15" fill="rgb(249,87,1)" fg:x="17158" fg:w="3"/><text x="89.9181%" y="383.50"></text></g><g><title>__pthread_rwlock_wrunlock (3 samples, 0.02%)</title><rect x="89.6681%" y="357" width="0.0157%" height="15" fill="rgb(248,196,48)" fg:x="17158" fg:w="3"/><text x="89.9181%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (224 samples, 1.17%)</title><rect x="88.5236%" y="437" width="1.1706%" height="15" fill="rgb(251,206,33)" fg:x="16939" fg:w="224"/><text x="88.7736%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (220 samples, 1.15%)</title><rect x="88.5446%" y="421" width="1.1497%" height="15" fill="rgb(232,141,28)" fg:x="16943" fg:w="220"/><text x="88.7946%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (201 samples, 1.05%)</title><rect x="88.6438%" y="405" width="1.0504%" height="15" fill="rgb(209,167,14)" fg:x="16962" fg:w="201"/><text x="88.8938%" y="415.50"></text></g><g><title>__GI___ioctl (479 samples, 2.50%)</title><rect x="89.6995%" y="437" width="2.5033%" height="15" fill="rgb(225,11,50)" fg:x="17164" fg:w="479"/><text x="89.9495%" y="447.50">__..</text></g><g><title>[unknown] (479 samples, 2.50%)</title><rect x="89.6995%" y="421" width="2.5033%" height="15" fill="rgb(209,50,20)" fg:x="17164" fg:w="479"/><text x="89.9495%" y="431.50">[u..</text></g><g><title>[unknown] (34 samples, 0.18%)</title><rect x="92.0251%" y="405" width="0.1777%" height="15" fill="rgb(212,17,46)" fg:x="17609" fg:w="34"/><text x="92.2751%" y="415.50"></text></g><g><title>[unknown] (20 samples, 0.10%)</title><rect x="92.0982%" y="389" width="0.1045%" height="15" fill="rgb(216,101,39)" fg:x="17623" fg:w="20"/><text x="92.3482%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="92.1087%" y="373" width="0.0941%" height="15" fill="rgb(212,228,48)" fg:x="17625" fg:w="18"/><text x="92.3587%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="92.1610%" y="357" width="0.0418%" height="15" fill="rgb(250,6,50)" fg:x="17635" fg:w="8"/><text x="92.4110%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="92.1766%" y="341" width="0.0261%" height="15" fill="rgb(250,160,48)" fg:x="17638" fg:w="5"/><text x="92.4266%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="92.1766%" y="325" width="0.0261%" height="15" fill="rgb(244,216,33)" fg:x="17638" fg:w="5"/><text x="92.4266%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="92.1766%" y="309" width="0.0261%" height="15" fill="rgb(207,157,5)" fg:x="17638" fg:w="5"/><text x="92.4266%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.1871%" y="293" width="0.0157%" height="15" fill="rgb(228,199,8)" fg:x="17640" fg:w="3"/><text x="92.4371%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.1923%" y="277" width="0.0105%" height="15" fill="rgb(227,80,20)" fg:x="17641" fg:w="2"/><text x="92.4423%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.1923%" y="261" width="0.0105%" height="15" fill="rgb(222,9,33)" fg:x="17641" fg:w="2"/><text x="92.4423%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (721 samples, 3.77%)</title><rect x="88.4400%" y="469" width="3.7680%" height="15" fill="rgb(239,44,28)" fg:x="16923" fg:w="721"/><text x="88.6900%" y="479.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (710 samples, 3.71%)</title><rect x="88.4975%" y="453" width="3.7105%" height="15" fill="rgb(249,187,43)" fg:x="16934" fg:w="710"/><text x="88.7475%" y="463.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (767 samples, 4.01%)</title><rect x="88.2049%" y="485" width="4.0084%" height="15" fill="rgb(216,141,28)" fg:x="16878" fg:w="767"/><text x="88.4549%" y="495.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (820 samples, 4.29%)</title><rect x="87.9436%" y="517" width="4.2853%" height="15" fill="rgb(230,154,53)" fg:x="16828" fg:w="820"/><text x="88.1936%" y="527.50">[libn..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (800 samples, 4.18%)</title><rect x="88.0481%" y="501" width="4.1808%" height="15" fill="rgb(227,82,4)" fg:x="16848" fg:w="800"/><text x="88.2981%" y="511.50">[libn..</text></g><g><title>___pthread_cond_broadcast (20 samples, 0.10%)</title><rect x="92.2289%" y="517" width="0.1045%" height="15" fill="rgb(220,107,16)" fg:x="17648" fg:w="20"/><text x="92.4789%" y="527.50"></text></g><g><title>futex_wake (20 samples, 0.10%)</title><rect x="92.2289%" y="501" width="0.1045%" height="15" fill="rgb(207,187,2)" fg:x="17648" fg:w="20"/><text x="92.4789%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.10%)</title><rect x="92.2289%" y="485" width="0.1045%" height="15" fill="rgb(210,162,52)" fg:x="17648" fg:w="20"/><text x="92.4789%" y="495.50"></text></g><g><title>[unknown] (20 samples, 0.10%)</title><rect x="92.2289%" y="469" width="0.1045%" height="15" fill="rgb(217,216,49)" fg:x="17648" fg:w="20"/><text x="92.4789%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="92.2394%" y="453" width="0.0941%" height="15" fill="rgb(218,146,49)" fg:x="17650" fg:w="18"/><text x="92.4894%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="92.2498%" y="437" width="0.0836%" height="15" fill="rgb(216,55,40)" fg:x="17652" fg:w="16"/><text x="92.4998%" y="447.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="92.2498%" y="421" width="0.0836%" height="15" fill="rgb(208,196,21)" fg:x="17652" fg:w="16"/><text x="92.4998%" y="431.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="92.2550%" y="405" width="0.0784%" height="15" fill="rgb(242,117,42)" fg:x="17653" fg:w="15"/><text x="92.5050%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="92.2968%" y="389" width="0.0366%" height="15" fill="rgb(210,11,23)" fg:x="17661" fg:w="7"/><text x="92.5468%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.3177%" y="373" width="0.0157%" height="15" fill="rgb(217,110,2)" fg:x="17665" fg:w="3"/><text x="92.5677%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (857 samples, 4.48%)</title><rect x="87.8808%" y="533" width="4.4787%" height="15" fill="rgb(229,77,54)" fg:x="16816" fg:w="857"/><text x="88.1308%" y="543.50">[libn..</text></g><g><title>___pthread_mutex_lock (5 samples, 0.03%)</title><rect x="92.3334%" y="517" width="0.0261%" height="15" fill="rgb(218,53,16)" fg:x="17668" fg:w="5"/><text x="92.5834%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (862 samples, 4.50%)</title><rect x="87.8599%" y="565" width="4.5048%" height="15" fill="rgb(215,38,13)" fg:x="16812" fg:w="862"/><text x="88.1099%" y="575.50">[libn..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (862 samples, 4.50%)</title><rect x="87.8599%" y="549" width="4.5048%" height="15" fill="rgb(235,42,18)" fg:x="16812" fg:w="862"/><text x="88.1099%" y="559.50">[libn..</text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (874 samples, 4.57%)</title><rect x="87.8025%" y="629" width="4.5675%" height="15" fill="rgb(219,66,54)" fg:x="16801" fg:w="874"/><text x="88.0525%" y="639.50">&lt;wgpu..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (874 samples, 4.57%)</title><rect x="87.8025%" y="613" width="4.5675%" height="15" fill="rgb(222,205,4)" fg:x="16801" fg:w="874"/><text x="88.0525%" y="623.50">ash::..</text></g><g><title>[libGLX_nvidia.so.530.30.02] (874 samples, 4.57%)</title><rect x="87.8025%" y="597" width="4.5675%" height="15" fill="rgb(227,213,46)" fg:x="16801" fg:w="874"/><text x="88.0525%" y="607.50">[libG..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (868 samples, 4.54%)</title><rect x="87.8338%" y="581" width="4.5362%" height="15" fill="rgb(250,145,42)" fg:x="16807" fg:w="868"/><text x="88.0838%" y="591.50">[libn..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="92.3752%" y="629" width="0.0105%" height="15" fill="rgb(219,15,2)" fg:x="17676" fg:w="2"/><text x="92.6252%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="92.3752%" y="613" width="0.0105%" height="15" fill="rgb(231,181,52)" fg:x="17676" fg:w="2"/><text x="92.6252%" y="623.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="92.3752%" y="597" width="0.0105%" height="15" fill="rgb(235,1,42)" fg:x="17676" fg:w="2"/><text x="92.6252%" y="607.50"></text></g><g><title>wgpu::SurfaceTexture::present (885 samples, 4.63%)</title><rect x="87.7816%" y="693" width="4.6250%" height="15" fill="rgb(249,88,27)" fg:x="16797" fg:w="885"/><text x="88.0316%" y="703.50">wgpu:..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (885 samples, 4.63%)</title><rect x="87.7816%" y="677" width="4.6250%" height="15" fill="rgb(235,145,16)" fg:x="16797" fg:w="885"/><text x="88.0316%" y="687.50">&lt;T as..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (884 samples, 4.62%)</title><rect x="87.7868%" y="661" width="4.6198%" height="15" fill="rgb(237,114,19)" fg:x="16798" fg:w="884"/><text x="88.0368%" y="671.50">&lt;wgpu..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (883 samples, 4.61%)</title><rect x="87.7920%" y="645" width="4.6146%" height="15" fill="rgb(238,51,50)" fg:x="16799" fg:w="883"/><text x="88.0420%" y="655.50">wgpu_..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (2 samples, 0.01%)</title><rect x="92.3961%" y="629" width="0.0105%" height="15" fill="rgb(205,194,25)" fg:x="17680" fg:w="2"/><text x="92.6461%" y="639.50"></text></g><g><title>ash::device::Device::destroy_image_view (2 samples, 0.01%)</title><rect x="92.3961%" y="613" width="0.0105%" height="15" fill="rgb(215,203,17)" fg:x="17680" fg:w="2"/><text x="92.6461%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.3961%" y="597" width="0.0105%" height="15" fill="rgb(233,112,49)" fg:x="17680" fg:w="2"/><text x="92.6461%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.3961%" y="581" width="0.0105%" height="15" fill="rgb(241,130,26)" fg:x="17680" fg:w="2"/><text x="92.6461%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu::util::belt::Chunk&gt;&gt; (2 samples, 0.01%)</title><rect x="92.4066%" y="677" width="0.0105%" height="15" fill="rgb(252,223,19)" fg:x="17682" fg:w="2"/><text x="92.6566%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="92.4066%" y="661" width="0.0105%" height="15" fill="rgb(211,95,25)" fg:x="17682" fg:w="2"/><text x="92.6566%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu::util::belt::Chunk,alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="92.4066%" y="645" width="0.0105%" height="15" fill="rgb(251,182,27)" fg:x="17682" fg:w="2"/><text x="92.6566%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="92.4066%" y="629" width="0.0105%" height="15" fill="rgb(238,24,4)" fg:x="17682" fg:w="2"/><text x="92.6566%" y="639.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (1,273 samples, 6.65%)</title><rect x="85.7800%" y="709" width="6.6527%" height="15" fill="rgb(224,220,25)" fg:x="16414" fg:w="1273"/><text x="86.0300%" y="719.50">ggez::gra..</text></g><g><title>wgpu::util::belt::StagingBelt::recall (5 samples, 0.03%)</title><rect x="92.4066%" y="693" width="0.0261%" height="15" fill="rgb(239,133,26)" fg:x="17682" fg:w="5"/><text x="92.6566%" y="703.50"></text></g><g><title>wgpu::util::belt::StagingBelt::receive_chunks (3 samples, 0.02%)</title><rect x="92.4170%" y="677" width="0.0157%" height="15" fill="rgb(211,94,48)" fg:x="17684" fg:w="3"/><text x="92.6670%" y="687.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.4170%" y="661" width="0.0157%" height="15" fill="rgb(239,87,6)" fg:x="17684" fg:w="3"/><text x="92.6670%" y="671.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.4170%" y="645" width="0.0157%" height="15" fill="rgb(227,62,0)" fg:x="17684" fg:w="3"/><text x="92.6670%" y="655.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.4170%" y="629" width="0.0157%" height="15" fill="rgb(211,226,4)" fg:x="17684" fg:w="3"/><text x="92.6670%" y="639.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (2 samples, 0.01%)</title><rect x="92.4223%" y="613" width="0.0105%" height="15" fill="rgb(253,38,52)" fg:x="17685" fg:w="2"/><text x="92.6723%" y="623.50"></text></g><g><title>nix::sys::epoll::EpollEvent::new (2 samples, 0.01%)</title><rect x="92.4432%" y="597" width="0.0105%" height="15" fill="rgb(229,126,40)" fg:x="17689" fg:w="2"/><text x="92.6932%" y="607.50"></text></g><g><title>epoll_wait (8 samples, 0.04%)</title><rect x="92.4536%" y="581" width="0.0418%" height="15" fill="rgb(229,165,44)" fg:x="17691" fg:w="8"/><text x="92.7036%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="92.4536%" y="565" width="0.0418%" height="15" fill="rgb(247,95,47)" fg:x="17691" fg:w="8"/><text x="92.7036%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="92.4693%" y="549" width="0.0261%" height="15" fill="rgb(216,140,30)" fg:x="17694" fg:w="5"/><text x="92.7193%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="92.4745%" y="533" width="0.0209%" height="15" fill="rgb(246,214,8)" fg:x="17695" fg:w="4"/><text x="92.7245%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.4797%" y="517" width="0.0157%" height="15" fill="rgb(227,224,15)" fg:x="17696" fg:w="3"/><text x="92.7297%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.4850%" y="501" width="0.0105%" height="15" fill="rgb(233,175,4)" fg:x="17697" fg:w="2"/><text x="92.7350%" y="511.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::next_event (14 samples, 0.07%)</title><rect x="92.4327%" y="709" width="0.0732%" height="15" fill="rgb(221,66,45)" fg:x="17687" fg:w="14"/><text x="92.6827%" y="719.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event (14 samples, 0.07%)</title><rect x="92.4327%" y="693" width="0.0732%" height="15" fill="rgb(221,178,18)" fg:x="17687" fg:w="14"/><text x="92.6827%" y="703.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_inner (14 samples, 0.07%)</title><rect x="92.4327%" y="677" width="0.0732%" height="15" fill="rgb(213,81,29)" fg:x="17687" fg:w="14"/><text x="92.6827%" y="687.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_priv (13 samples, 0.07%)</title><rect x="92.4379%" y="661" width="0.0679%" height="15" fill="rgb(220,89,49)" fg:x="17688" fg:w="13"/><text x="92.6879%" y="671.50"></text></g><g><title>gilrs_core::Gilrs::next_event (13 samples, 0.07%)</title><rect x="92.4379%" y="645" width="0.0679%" height="15" fill="rgb(227,60,33)" fg:x="17688" fg:w="13"/><text x="92.6879%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event (13 samples, 0.07%)</title><rect x="92.4379%" y="629" width="0.0679%" height="15" fill="rgb(205,113,12)" fg:x="17688" fg:w="13"/><text x="92.6879%" y="639.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event_impl (13 samples, 0.07%)</title><rect x="92.4379%" y="613" width="0.0679%" height="15" fill="rgb(211,32,1)" fg:x="17688" fg:w="13"/><text x="92.6879%" y="623.50"></text></g><g><title>nix::sys::epoll::epoll_wait (10 samples, 0.05%)</title><rect x="92.4536%" y="597" width="0.0523%" height="15" fill="rgb(246,2,12)" fg:x="17691" fg:w="10"/><text x="92.7036%" y="607.50"></text></g><g><title>nix::errno::&lt;impl nix::errno::consts::Errno&gt;::result (2 samples, 0.01%)</title><rect x="92.4954%" y="581" width="0.0105%" height="15" fill="rgb(243,37,27)" fg:x="17699" fg:w="2"/><text x="92.7454%" y="591.50"></text></g><g><title>&lt;i32 as nix::errno::ErrnoSentinel&gt;::sentinel (2 samples, 0.01%)</title><rect x="92.4954%" y="565" width="0.0105%" height="15" fill="rgb(248,211,31)" fg:x="17699" fg:w="2"/><text x="92.7454%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.03%)</title><rect x="92.5059%" y="629" width="0.0314%" height="15" fill="rgb(242,146,47)" fg:x="17701" fg:w="6"/><text x="92.7559%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (6 samples, 0.03%)</title><rect x="92.5059%" y="613" width="0.0314%" height="15" fill="rgb(206,70,20)" fg:x="17701" fg:w="6"/><text x="92.7559%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="92.5059%" y="597" width="0.0314%" height="15" fill="rgb(215,10,51)" fg:x="17701" fg:w="6"/><text x="92.7559%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (6 samples, 0.03%)</title><rect x="92.5059%" y="581" width="0.0314%" height="15" fill="rgb(243,178,53)" fg:x="17701" fg:w="6"/><text x="92.7559%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.5477%" y="501" width="0.0157%" height="15" fill="rgb(233,221,20)" fg:x="17709" fg:w="3"/><text x="92.7977%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.5477%" y="485" width="0.0157%" height="15" fill="rgb(218,95,35)" fg:x="17709" fg:w="3"/><text x="92.7977%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.5477%" y="469" width="0.0157%" height="15" fill="rgb(229,13,5)" fg:x="17709" fg:w="3"/><text x="92.7977%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.5477%" y="453" width="0.0157%" height="15" fill="rgb(252,164,30)" fg:x="17709" fg:w="3"/><text x="92.7977%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.5477%" y="437" width="0.0157%" height="15" fill="rgb(232,68,36)" fg:x="17709" fg:w="3"/><text x="92.7977%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.5529%" y="421" width="0.0105%" height="15" fill="rgb(219,59,54)" fg:x="17710" fg:w="2"/><text x="92.8029%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.5529%" y="405" width="0.0105%" height="15" fill="rgb(250,92,33)" fg:x="17710" fg:w="2"/><text x="92.8029%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.5529%" y="389" width="0.0105%" height="15" fill="rgb(229,162,54)" fg:x="17710" fg:w="2"/><text x="92.8029%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.5529%" y="373" width="0.0105%" height="15" fill="rgb(244,114,52)" fg:x="17710" fg:w="2"/><text x="92.8029%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.5529%" y="357" width="0.0105%" height="15" fill="rgb(212,211,43)" fg:x="17710" fg:w="2"/><text x="92.8029%" y="367.50"></text></g><g><title>_int_malloc (13 samples, 0.07%)</title><rect x="92.5425%" y="517" width="0.0679%" height="15" fill="rgb(226,147,8)" fg:x="17708" fg:w="13"/><text x="92.7925%" y="527.50"></text></g><g><title>malloc_consolidate (9 samples, 0.05%)</title><rect x="92.5634%" y="501" width="0.0470%" height="15" fill="rgb(226,23,13)" fg:x="17712" fg:w="9"/><text x="92.8134%" y="511.50"></text></g><g><title>ggez::input::keyboard::KeyboardContext::save_keyboard_state (21 samples, 0.11%)</title><rect x="92.5059%" y="709" width="0.1097%" height="15" fill="rgb(240,63,4)" fg:x="17701" fg:w="21"/><text x="92.7559%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (21 samples, 0.11%)</title><rect x="92.5059%" y="693" width="0.1097%" height="15" fill="rgb(221,1,32)" fg:x="17701" fg:w="21"/><text x="92.7559%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.11%)</title><rect x="92.5059%" y="677" width="0.1097%" height="15" fill="rgb(242,117,10)" fg:x="17701" fg:w="21"/><text x="92.7559%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.11%)</title><rect x="92.5059%" y="661" width="0.1097%" height="15" fill="rgb(249,172,44)" fg:x="17701" fg:w="21"/><text x="92.7559%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.11%)</title><rect x="92.5059%" y="645" width="0.1097%" height="15" fill="rgb(244,46,45)" fg:x="17701" fg:w="21"/><text x="92.7559%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (15 samples, 0.08%)</title><rect x="92.5372%" y="629" width="0.0784%" height="15" fill="rgb(206,43,17)" fg:x="17707" fg:w="15"/><text x="92.7872%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (15 samples, 0.08%)</title><rect x="92.5372%" y="613" width="0.0784%" height="15" fill="rgb(239,218,39)" fg:x="17707" fg:w="15"/><text x="92.7872%" y="623.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14 samples, 0.07%)</title><rect x="92.5425%" y="597" width="0.0732%" height="15" fill="rgb(208,169,54)" fg:x="17708" fg:w="14"/><text x="92.7925%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.07%)</title><rect x="92.5425%" y="581" width="0.0732%" height="15" fill="rgb(247,25,42)" fg:x="17708" fg:w="14"/><text x="92.7925%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.07%)</title><rect x="92.5425%" y="565" width="0.0732%" height="15" fill="rgb(226,23,31)" fg:x="17708" fg:w="14"/><text x="92.7925%" y="575.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.07%)</title><rect x="92.5425%" y="549" width="0.0732%" height="15" fill="rgb(247,16,28)" fg:x="17708" fg:w="14"/><text x="92.7925%" y="559.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.07%)</title><rect x="92.5425%" y="533" width="0.0732%" height="15" fill="rgb(231,147,38)" fg:x="17708" fg:w="14"/><text x="92.7925%" y="543.50"></text></g><g><title>ggez::input::mouse::MouseContext::save_mouse_state (2 samples, 0.01%)</title><rect x="92.6209%" y="709" width="0.0105%" height="15" fill="rgb(253,81,48)" fg:x="17723" fg:w="2"/><text x="92.8709%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.6209%" y="693" width="0.0105%" height="15" fill="rgb(249,222,43)" fg:x="17723" fg:w="2"/><text x="92.8709%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.6209%" y="677" width="0.0105%" height="15" fill="rgb(221,3,27)" fg:x="17723" fg:w="2"/><text x="92.8709%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="92.6209%" y="661" width="0.0105%" height="15" fill="rgb(228,180,5)" fg:x="17723" fg:w="2"/><text x="92.8709%" y="671.50"></text></g><g><title>ggez::event::run (16,384 samples, 85.62%)</title><rect x="7.0133%" y="837" width="85.6232%" height="15" fill="rgb(227,131,42)" fg:x="1342" fg:w="16384"/><text x="7.2633%" y="847.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (16,384 samples, 85.62%)</title><rect x="7.0133%" y="821" width="85.6232%" height="15" fill="rgb(212,3,39)" fg:x="1342" fg:w="16384"/><text x="7.2633%" y="831.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (16,384 samples, 85.62%)</title><rect x="7.0133%" y="805" width="85.6232%" height="15" fill="rgb(226,45,5)" fg:x="1342" fg:w="16384"/><text x="7.2633%" y="815.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (16,384 samples, 85.62%)</title><rect x="7.0133%" y="789" width="85.6232%" height="15" fill="rgb(215,167,45)" fg:x="1342" fg:w="16384"/><text x="7.2633%" y="799.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (16,384 samples, 85.62%)</title><rect x="7.0133%" y="773" width="85.6232%" height="15" fill="rgb(250,218,53)" fg:x="1342" fg:w="16384"/><text x="7.2633%" y="783.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (16,384 samples, 85.62%)</title><rect x="7.0133%" y="757" width="85.6232%" height="15" fill="rgb(207,140,0)" fg:x="1342" fg:w="16384"/><text x="7.2633%" y="767.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (16,360 samples, 85.50%)</title><rect x="7.1388%" y="741" width="85.4978%" height="15" fill="rgb(238,133,51)" fg:x="1366" fg:w="16360"/><text x="7.3888%" y="751.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (16,359 samples, 85.49%)</title><rect x="7.1440%" y="725" width="85.4926%" height="15" fill="rgb(218,203,53)" fg:x="1367" fg:w="16359"/><text x="7.3940%" y="735.50">ggez::event::run::{{closure}}</text></g><g><title>neuralang::main (16,482 samples, 86.14%)</title><rect x="6.5064%" y="869" width="86.1354%" height="15" fill="rgb(226,184,25)" fg:x="1245" fg:w="16482"/><text x="6.7564%" y="879.50">neuralang::main</text></g><g><title>neuralang::run (16,482 samples, 86.14%)</title><rect x="6.5064%" y="853" width="86.1354%" height="15" fill="rgb(231,121,21)" fg:x="1245" fg:w="16482"/><text x="6.7564%" y="863.50">neuralang::run</text></g><g><title>slotmap::KeyData::new (10 samples, 0.05%)</title><rect x="92.6418%" y="869" width="0.0523%" height="15" fill="rgb(251,14,34)" fg:x="17727" fg:w="10"/><text x="92.8918%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="92.7149%" y="549" width="0.0105%" height="15" fill="rgb(249,193,11)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="92.7149%" y="533" width="0.0105%" height="15" fill="rgb(220,172,37)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="543.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="92.7149%" y="517" width="0.0105%" height="15" fill="rgb(231,229,43)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="92.7149%" y="501" width="0.0105%" height="15" fill="rgb(250,161,5)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="92.7149%" y="485" width="0.0105%" height="15" fill="rgb(218,225,18)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="495.50"></text></g><g><title>std::collections::hash::map::RandomState::new (2 samples, 0.01%)</title><rect x="92.7149%" y="469" width="0.0105%" height="15" fill="rgb(245,45,42)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="92.7149%" y="453" width="0.0105%" height="15" fill="rgb(211,115,1)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="92.7149%" y="437" width="0.0105%" height="15" fill="rgb(248,133,52)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="447.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (2 samples, 0.01%)</title><rect x="92.7149%" y="421" width="0.0105%" height="15" fill="rgb(238,100,21)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="431.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="92.7149%" y="405" width="0.0105%" height="15" fill="rgb(247,144,11)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="415.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="92.7149%" y="389" width="0.0105%" height="15" fill="rgb(206,164,16)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="92.7149%" y="373" width="0.0105%" height="15" fill="rgb(222,34,3)" fg:x="17741" fg:w="2"/><text x="92.9649%" y="383.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (8 samples, 0.04%)</title><rect x="92.7045%" y="565" width="0.0418%" height="15" fill="rgb(248,82,4)" fg:x="17739" fg:w="8"/><text x="92.9545%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::PeekableReceiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.7306%" y="549" width="0.0157%" height="15" fill="rgb(228,81,46)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="559.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.7306%" y="533" width="0.0157%" height="15" fill="rgb(227,67,47)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="543.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.7306%" y="517" width="0.0157%" height="15" fill="rgb(215,93,53)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="527.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="92.7306%" y="501" width="0.0157%" height="15" fill="rgb(248,194,39)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="511.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (3 samples, 0.02%)</title><rect x="92.7306%" y="485" width="0.0157%" height="15" fill="rgb(215,5,19)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="92.7306%" y="469" width="0.0157%" height="15" fill="rgb(226,215,51)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="92.7306%" y="453" width="0.0157%" height="15" fill="rgb(225,56,26)" fg:x="17744" fg:w="3"/><text x="92.9806%" y="463.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="92.7515%" y="421" width="0.0888%" height="15" fill="rgb(222,75,29)" fg:x="17748" fg:w="17"/><text x="93.0015%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="92.7515%" y="405" width="0.0888%" height="15" fill="rgb(236,139,6)" fg:x="17748" fg:w="17"/><text x="93.0015%" y="415.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="92.7515%" y="389" width="0.0888%" height="15" fill="rgb(223,137,36)" fg:x="17748" fg:w="17"/><text x="93.0015%" y="399.50"></text></g><g><title>[unknown] (16 samples, 0.08%)</title><rect x="92.7567%" y="373" width="0.0836%" height="15" fill="rgb(226,99,2)" fg:x="17749" fg:w="16"/><text x="93.0067%" y="383.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="92.7620%" y="357" width="0.0784%" height="15" fill="rgb(206,133,23)" fg:x="17750" fg:w="15"/><text x="93.0120%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="92.7724%" y="341" width="0.0679%" height="15" fill="rgb(243,173,15)" fg:x="17752" fg:w="13"/><text x="93.0224%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="92.7881%" y="325" width="0.0523%" height="15" fill="rgb(228,69,28)" fg:x="17755" fg:w="10"/><text x="93.0381%" y="335.50"></text></g><g><title>[unknown] (8 samples, 0.04%)</title><rect x="92.7985%" y="309" width="0.0418%" height="15" fill="rgb(212,51,22)" fg:x="17757" fg:w="8"/><text x="93.0485%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.8247%" y="293" width="0.0157%" height="15" fill="rgb(227,113,0)" fg:x="17762" fg:w="3"/><text x="93.0747%" y="303.50"></text></g><g><title>[libX11.so.6.4.0] (20 samples, 0.10%)</title><rect x="92.7463%" y="501" width="0.1045%" height="15" fill="rgb(252,84,27)" fg:x="17747" fg:w="20"/><text x="92.9963%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (20 samples, 0.10%)</title><rect x="92.7463%" y="485" width="0.1045%" height="15" fill="rgb(223,145,39)" fg:x="17747" fg:w="20"/><text x="92.9963%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (20 samples, 0.10%)</title><rect x="92.7463%" y="469" width="0.1045%" height="15" fill="rgb(239,219,30)" fg:x="17747" fg:w="20"/><text x="92.9963%" y="479.50"></text></g><g><title>__libc_recvmsg (20 samples, 0.10%)</title><rect x="92.7463%" y="453" width="0.1045%" height="15" fill="rgb(224,196,39)" fg:x="17747" fg:w="20"/><text x="92.9963%" y="463.50"></text></g><g><title>__recvmsg_syscall (19 samples, 0.10%)</title><rect x="92.7515%" y="437" width="0.0993%" height="15" fill="rgb(205,35,43)" fg:x="17748" fg:w="19"/><text x="93.0015%" y="447.50"></text></g><g><title>__GI___pthread_enable_asynccancel (2 samples, 0.01%)</title><rect x="92.8403%" y="421" width="0.0105%" height="15" fill="rgb(228,201,21)" fg:x="17765" fg:w="2"/><text x="93.0903%" y="431.50"></text></g><g><title>std::rt::lang_start_internal (33 samples, 0.17%)</title><rect x="92.7045%" y="869" width="0.1725%" height="15" fill="rgb(237,118,16)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="879.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.17%)</title><rect x="92.7045%" y="853" width="0.1725%" height="15" fill="rgb(241,17,19)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="863.50"></text></g><g><title>std::panicking::try (33 samples, 0.17%)</title><rect x="92.7045%" y="837" width="0.1725%" height="15" fill="rgb(214,10,25)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="847.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.17%)</title><rect x="92.7045%" y="821" width="0.1725%" height="15" fill="rgb(238,37,29)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="831.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (33 samples, 0.17%)</title><rect x="92.7045%" y="805" width="0.1725%" height="15" fill="rgb(253,83,25)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="815.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.17%)</title><rect x="92.7045%" y="789" width="0.1725%" height="15" fill="rgb(234,192,12)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="799.50"></text></g><g><title>std::panicking::try (33 samples, 0.17%)</title><rect x="92.7045%" y="773" width="0.1725%" height="15" fill="rgb(241,216,45)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="783.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.17%)</title><rect x="92.7045%" y="757" width="0.1725%" height="15" fill="rgb(242,22,33)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (33 samples, 0.17%)</title><rect x="92.7045%" y="741" width="0.1725%" height="15" fill="rgb(231,105,49)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="751.50"></text></g><g><title>std::rt::lang_start::{{closure}} (33 samples, 0.17%)</title><rect x="92.7045%" y="725" width="0.1725%" height="15" fill="rgb(218,204,15)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33 samples, 0.17%)</title><rect x="92.7045%" y="709" width="0.1725%" height="15" fill="rgb(235,138,41)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (33 samples, 0.17%)</title><rect x="92.7045%" y="693" width="0.1725%" height="15" fill="rgb(246,0,9)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="703.50"></text></g><g><title>neuralang::main (33 samples, 0.17%)</title><rect x="92.7045%" y="677" width="0.1725%" height="15" fill="rgb(210,74,4)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="687.50"></text></g><g><title>neuralang::run (33 samples, 0.17%)</title><rect x="92.7045%" y="661" width="0.1725%" height="15" fill="rgb(250,60,41)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="671.50"></text></g><g><title>ggez::event::run (33 samples, 0.17%)</title><rect x="92.7045%" y="645" width="0.1725%" height="15" fill="rgb(220,115,12)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="655.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (33 samples, 0.17%)</title><rect x="92.7045%" y="629" width="0.1725%" height="15" fill="rgb(237,100,13)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="639.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (33 samples, 0.17%)</title><rect x="92.7045%" y="613" width="0.1725%" height="15" fill="rgb(213,55,26)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="623.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (33 samples, 0.17%)</title><rect x="92.7045%" y="597" width="0.1725%" height="15" fill="rgb(216,17,4)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="607.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (33 samples, 0.17%)</title><rect x="92.7045%" y="581" width="0.1725%" height="15" fill="rgb(220,153,47)" fg:x="17739" fg:w="33"/><text x="92.9545%" y="591.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (25 samples, 0.13%)</title><rect x="92.7463%" y="565" width="0.1307%" height="15" fill="rgb(215,131,9)" fg:x="17747" fg:w="25"/><text x="92.9963%" y="575.50"></text></g><g><title>XPending (25 samples, 0.13%)</title><rect x="92.7463%" y="549" width="0.1307%" height="15" fill="rgb(233,46,42)" fg:x="17747" fg:w="25"/><text x="92.9963%" y="559.50"></text></g><g><title>_XEventsQueued (25 samples, 0.13%)</title><rect x="92.7463%" y="533" width="0.1307%" height="15" fill="rgb(226,86,7)" fg:x="17747" fg:w="25"/><text x="92.9963%" y="543.50"></text></g><g><title>[libX11.so.6.4.0] (25 samples, 0.13%)</title><rect x="92.7463%" y="517" width="0.1307%" height="15" fill="rgb(239,226,21)" fg:x="17747" fg:w="25"/><text x="92.9963%" y="527.50"></text></g><g><title>xcb_poll_for_reply64 (5 samples, 0.03%)</title><rect x="92.8508%" y="501" width="0.0261%" height="15" fill="rgb(244,137,22)" fg:x="17767" fg:w="5"/><text x="93.1008%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (5 samples, 0.03%)</title><rect x="92.8508%" y="485" width="0.0261%" height="15" fill="rgb(211,139,35)" fg:x="17767" fg:w="5"/><text x="93.1008%" y="495.50"></text></g><g><title>__libc_recvmsg (5 samples, 0.03%)</title><rect x="92.8508%" y="469" width="0.0261%" height="15" fill="rgb(214,62,50)" fg:x="17767" fg:w="5"/><text x="93.1008%" y="479.50"></text></g><g><title>__recvmsg_syscall (5 samples, 0.03%)</title><rect x="92.8508%" y="453" width="0.0261%" height="15" fill="rgb(212,113,44)" fg:x="17767" fg:w="5"/><text x="93.1008%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="92.8508%" y="437" width="0.0261%" height="15" fill="rgb(226,150,43)" fg:x="17767" fg:w="5"/><text x="93.1008%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.8612%" y="421" width="0.0157%" height="15" fill="rgb(250,71,37)" fg:x="17769" fg:w="3"/><text x="93.1112%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.8612%" y="405" width="0.0157%" height="15" fill="rgb(219,76,19)" fg:x="17769" fg:w="3"/><text x="93.1112%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.8612%" y="389" width="0.0157%" height="15" fill="rgb(250,39,11)" fg:x="17769" fg:w="3"/><text x="93.1112%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.8665%" y="373" width="0.0105%" height="15" fill="rgb(230,64,31)" fg:x="17770" fg:w="2"/><text x="93.1165%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.8665%" y="357" width="0.0105%" height="15" fill="rgb(208,222,23)" fg:x="17770" fg:w="2"/><text x="93.1165%" y="367.50"></text></g><g><title>syscall (2 samples, 0.01%)</title><rect x="92.8822%" y="869" width="0.0105%" height="15" fill="rgb(227,125,18)" fg:x="17773" fg:w="2"/><text x="93.1322%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="693" width="0.0105%" height="15" fill="rgb(234,210,9)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="677" width="0.0105%" height="15" fill="rgb(217,127,24)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="661" width="0.0105%" height="15" fill="rgb(239,141,48)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="645" width="0.0105%" height="15" fill="rgb(227,109,8)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="629" width="0.0105%" height="15" fill="rgb(235,184,23)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="613" width="0.0105%" height="15" fill="rgb(227,226,48)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="92.8926%" y="597" width="0.0105%" height="15" fill="rgb(206,150,11)" fg:x="17775" fg:w="2"/><text x="93.1426%" y="607.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (4 samples, 0.02%)</title><rect x="92.8926%" y="725" width="0.0209%" height="15" fill="rgb(254,2,33)" fg:x="17775" fg:w="4"/><text x="93.1426%" y="735.50"></text></g><g><title>[libvulkan.so.1.3.204] (4 samples, 0.02%)</title><rect x="92.8926%" y="709" width="0.0209%" height="15" fill="rgb(243,160,20)" fg:x="17775" fg:w="4"/><text x="93.1426%" y="719.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.01%)</title><rect x="92.9031%" y="693" width="0.0105%" height="15" fill="rgb(218,208,30)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="703.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.01%)</title><rect x="92.9031%" y="677" width="0.0105%" height="15" fill="rgb(224,120,49)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="687.50"></text></g><g><title>[libvulkan_radeon.so] (2 samples, 0.01%)</title><rect x="92.9031%" y="661" width="0.0105%" height="15" fill="rgb(246,12,2)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="671.50"></text></g><g><title>XML_ParseBuffer (2 samples, 0.01%)</title><rect x="92.9031%" y="645" width="0.0105%" height="15" fill="rgb(236,117,3)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="655.50"></text></g><g><title>[libexpat.so.1.8.7] (2 samples, 0.01%)</title><rect x="92.9031%" y="629" width="0.0105%" height="15" fill="rgb(216,128,52)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="639.50"></text></g><g><title>[libexpat.so.1.8.7] (2 samples, 0.01%)</title><rect x="92.9031%" y="613" width="0.0105%" height="15" fill="rgb(246,145,19)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="623.50"></text></g><g><title>[libexpat.so.1.8.7] (2 samples, 0.01%)</title><rect x="92.9031%" y="597" width="0.0105%" height="15" fill="rgb(222,11,46)" fg:x="17777" fg:w="2"/><text x="93.1531%" y="607.50"></text></g><g><title>ash::entry::Entry::create_instance (5 samples, 0.03%)</title><rect x="92.8926%" y="773" width="0.0261%" height="15" fill="rgb(245,82,36)" fg:x="17775" fg:w="5"/><text x="93.1426%" y="783.50"></text></g><g><title>vkCreateInstance (5 samples, 0.03%)</title><rect x="92.8926%" y="757" width="0.0261%" height="15" fill="rgb(250,73,51)" fg:x="17775" fg:w="5"/><text x="93.1426%" y="767.50"></text></g><g><title>[libvulkan.so.1.3.204] (5 samples, 0.03%)</title><rect x="92.8926%" y="741" width="0.0261%" height="15" fill="rgb(221,189,23)" fg:x="17775" fg:w="5"/><text x="93.1426%" y="751.50"></text></g><g><title>elf_machine_rela (3 samples, 0.02%)</title><rect x="92.9396%" y="453" width="0.0157%" height="15" fill="rgb(210,33,7)" fg:x="17784" fg:w="3"/><text x="93.1896%" y="463.50"></text></g><g><title>_dl_lookup_symbol_x (3 samples, 0.02%)</title><rect x="92.9396%" y="437" width="0.0157%" height="15" fill="rgb(210,107,22)" fg:x="17784" fg:w="3"/><text x="93.1896%" y="447.50"></text></g><g><title>do_lookup_x (2 samples, 0.01%)</title><rect x="92.9449%" y="421" width="0.0105%" height="15" fill="rgb(222,116,37)" fg:x="17785" fg:w="2"/><text x="93.1949%" y="431.50"></text></g><g><title>__GI__dl_catch_exception (11 samples, 0.06%)</title><rect x="92.9240%" y="517" width="0.0575%" height="15" fill="rgb(254,17,48)" fg:x="17781" fg:w="11"/><text x="93.1740%" y="527.50"></text></g><g><title>dl_open_worker_begin (11 samples, 0.06%)</title><rect x="92.9240%" y="501" width="0.0575%" height="15" fill="rgb(224,36,32)" fg:x="17781" fg:w="11"/><text x="93.1740%" y="511.50"></text></g><g><title>_dl_relocate_object (11 samples, 0.06%)</title><rect x="92.9240%" y="485" width="0.0575%" height="15" fill="rgb(232,90,46)" fg:x="17781" fg:w="11"/><text x="93.1740%" y="495.50"></text></g><g><title>elf_dynamic_do_Rela (10 samples, 0.05%)</title><rect x="92.9292%" y="469" width="0.0523%" height="15" fill="rgb(241,66,40)" fg:x="17782" fg:w="10"/><text x="93.1792%" y="479.50"></text></g><g><title>elf_machine_rela_relative (5 samples, 0.03%)</title><rect x="92.9553%" y="453" width="0.0261%" height="15" fill="rgb(249,184,29)" fg:x="17787" fg:w="5"/><text x="93.2053%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="92.9553%" y="437" width="0.0261%" height="15" fill="rgb(231,181,1)" fg:x="17787" fg:w="5"/><text x="93.2053%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.9658%" y="421" width="0.0157%" height="15" fill="rgb(224,94,2)" fg:x="17789" fg:w="3"/><text x="93.2158%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.9658%" y="405" width="0.0157%" height="15" fill="rgb(229,170,15)" fg:x="17789" fg:w="3"/><text x="93.2158%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.9658%" y="389" width="0.0157%" height="15" fill="rgb(240,127,35)" fg:x="17789" fg:w="3"/><text x="93.2158%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.9658%" y="373" width="0.0157%" height="15" fill="rgb(248,196,34)" fg:x="17789" fg:w="3"/><text x="93.2158%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.9658%" y="357" width="0.0157%" height="15" fill="rgb(236,137,7)" fg:x="17789" fg:w="3"/><text x="93.2158%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.9710%" y="341" width="0.0105%" height="15" fill="rgb(235,127,16)" fg:x="17790" fg:w="2"/><text x="93.2210%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.9710%" y="325" width="0.0105%" height="15" fill="rgb(250,192,54)" fg:x="17790" fg:w="2"/><text x="93.2210%" y="335.50"></text></g><g><title>[libLLVM-15.so.1] (2 samples, 0.01%)</title><rect x="92.9814%" y="437" width="0.0105%" height="15" fill="rgb(218,98,20)" fg:x="17792" fg:w="2"/><text x="93.2314%" y="447.50"></text></g><g><title>wgpu::Instance::new (20 samples, 0.10%)</title><rect x="92.8926%" y="869" width="0.1045%" height="15" fill="rgb(230,176,47)" fg:x="17775" fg:w="20"/><text x="93.1426%" y="879.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (20 samples, 0.10%)</title><rect x="92.8926%" y="853" width="0.1045%" height="15" fill="rgb(244,2,33)" fg:x="17775" fg:w="20"/><text x="93.1426%" y="863.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (20 samples, 0.10%)</title><rect x="92.8926%" y="837" width="0.1045%" height="15" fill="rgb(231,100,17)" fg:x="17775" fg:w="20"/><text x="93.1426%" y="847.50"></text></g><g><title>wgpu_core::instance::Instance::new (20 samples, 0.10%)</title><rect x="92.8926%" y="821" width="0.1045%" height="15" fill="rgb(245,23,12)" fg:x="17775" fg:w="20"/><text x="93.1426%" y="831.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (20 samples, 0.10%)</title><rect x="92.8926%" y="805" width="0.1045%" height="15" fill="rgb(249,55,22)" fg:x="17775" fg:w="20"/><text x="93.1426%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (20 samples, 0.10%)</title><rect x="92.8926%" y="789" width="0.1045%" height="15" fill="rgb(207,134,9)" fg:x="17775" fg:w="20"/><text x="93.1426%" y="799.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (15 samples, 0.08%)</title><rect x="92.9187%" y="773" width="0.0784%" height="15" fill="rgb(218,134,0)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="783.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (15 samples, 0.08%)</title><rect x="92.9187%" y="757" width="0.0784%" height="15" fill="rgb(213,212,33)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="767.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (15 samples, 0.08%)</title><rect x="92.9187%" y="741" width="0.0784%" height="15" fill="rgb(252,106,18)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="751.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (15 samples, 0.08%)</title><rect x="92.9187%" y="725" width="0.0784%" height="15" fill="rgb(208,126,42)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="735.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (15 samples, 0.08%)</title><rect x="92.9187%" y="709" width="0.0784%" height="15" fill="rgb(246,175,29)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.204] (15 samples, 0.08%)</title><rect x="92.9187%" y="693" width="0.0784%" height="15" fill="rgb(215,13,50)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.204] (15 samples, 0.08%)</title><rect x="92.9187%" y="677" width="0.0784%" height="15" fill="rgb(216,172,15)" fg:x="17780" fg:w="15"/><text x="93.1687%" y="687.50"></text></g><g><title>___dlopen (14 samples, 0.07%)</title><rect x="92.9240%" y="661" width="0.0732%" height="15" fill="rgb(212,103,13)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="671.50"></text></g><g><title>dlopen_implementation (14 samples, 0.07%)</title><rect x="92.9240%" y="645" width="0.0732%" height="15" fill="rgb(231,171,36)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="655.50"></text></g><g><title>_dlerror_run (14 samples, 0.07%)</title><rect x="92.9240%" y="629" width="0.0732%" height="15" fill="rgb(250,123,20)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="639.50"></text></g><g><title>__GI__dl_catch_error (14 samples, 0.07%)</title><rect x="92.9240%" y="613" width="0.0732%" height="15" fill="rgb(212,53,50)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="623.50"></text></g><g><title>__GI__dl_catch_exception (14 samples, 0.07%)</title><rect x="92.9240%" y="597" width="0.0732%" height="15" fill="rgb(243,54,12)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="607.50"></text></g><g><title>dlopen_doit (14 samples, 0.07%)</title><rect x="92.9240%" y="581" width="0.0732%" height="15" fill="rgb(234,101,34)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="591.50"></text></g><g><title>_dl_open (14 samples, 0.07%)</title><rect x="92.9240%" y="565" width="0.0732%" height="15" fill="rgb(254,67,22)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="575.50"></text></g><g><title>__GI__dl_catch_exception (14 samples, 0.07%)</title><rect x="92.9240%" y="549" width="0.0732%" height="15" fill="rgb(250,35,47)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="559.50"></text></g><g><title>dl_open_worker (14 samples, 0.07%)</title><rect x="92.9240%" y="533" width="0.0732%" height="15" fill="rgb(226,126,38)" fg:x="17781" fg:w="14"/><text x="93.1740%" y="543.50"></text></g><g><title>dl_open_worker (3 samples, 0.02%)</title><rect x="92.9814%" y="517" width="0.0157%" height="15" fill="rgb(216,138,53)" fg:x="17792" fg:w="3"/><text x="93.2314%" y="527.50"></text></g><g><title>__GI__dl_catch_exception (3 samples, 0.02%)</title><rect x="92.9814%" y="501" width="0.0157%" height="15" fill="rgb(246,199,43)" fg:x="17792" fg:w="3"/><text x="93.2314%" y="511.50"></text></g><g><title>_dl_init (3 samples, 0.02%)</title><rect x="92.9814%" y="485" width="0.0157%" height="15" fill="rgb(232,125,11)" fg:x="17792" fg:w="3"/><text x="93.2314%" y="495.50"></text></g><g><title>call_init (3 samples, 0.02%)</title><rect x="92.9814%" y="469" width="0.0157%" height="15" fill="rgb(218,219,45)" fg:x="17792" fg:w="3"/><text x="93.2314%" y="479.50"></text></g><g><title>call_init (3 samples, 0.02%)</title><rect x="92.9814%" y="453" width="0.0157%" height="15" fill="rgb(216,102,54)" fg:x="17792" fg:w="3"/><text x="93.2314%" y="463.50"></text></g><g><title>wgpu::Queue::write_buffer (2 samples, 0.01%)</title><rect x="92.9971%" y="869" width="0.0105%" height="15" fill="rgb(250,228,7)" fg:x="17795" fg:w="2"/><text x="93.2471%" y="879.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;A&gt;::reset_queries (2 samples, 0.01%)</title><rect x="93.0076%" y="869" width="0.0105%" height="15" fill="rgb(226,125,25)" fg:x="17797" fg:w="2"/><text x="93.2576%" y="879.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.04%)</title><rect x="93.0180%" y="869" width="0.0366%" height="15" fill="rgb(224,165,27)" fg:x="17799" fg:w="7"/><text x="93.2680%" y="879.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (2 samples, 0.01%)</title><rect x="93.0598%" y="869" width="0.0105%" height="15" fill="rgb(233,86,3)" fg:x="17807" fg:w="2"/><text x="93.3098%" y="879.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (2 samples, 0.01%)</title><rect x="93.0703%" y="869" width="0.0105%" height="15" fill="rgb(228,116,20)" fg:x="17809" fg:w="2"/><text x="93.3203%" y="879.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (2 samples, 0.01%)</title><rect x="93.1069%" y="869" width="0.0105%" height="15" fill="rgb(209,192,17)" fg:x="17816" fg:w="2"/><text x="93.3569%" y="879.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.02%)</title><rect x="93.1173%" y="869" width="0.0209%" height="15" fill="rgb(224,88,34)" fg:x="17818" fg:w="4"/><text x="93.3673%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="93.1539%" y="421" width="0.0105%" height="15" fill="rgb(233,38,6)" fg:x="17825" fg:w="2"/><text x="93.4039%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="93.1539%" y="437" width="0.0209%" height="15" fill="rgb(212,59,30)" fg:x="17825" fg:w="4"/><text x="93.4039%" y="447.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="93.1644%" y="421" width="0.0105%" height="15" fill="rgb(213,80,3)" fg:x="17827" fg:w="2"/><text x="93.4144%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1644%" y="405" width="0.0105%" height="15" fill="rgb(251,178,7)" fg:x="17827" fg:w="2"/><text x="93.4144%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="93.1539%" y="453" width="0.0314%" height="15" fill="rgb(213,154,26)" fg:x="17825" fg:w="6"/><text x="93.4039%" y="463.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="93.1748%" y="437" width="0.0105%" height="15" fill="rgb(238,165,49)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="421" width="0.0105%" height="15" fill="rgb(248,91,46)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="405" width="0.0105%" height="15" fill="rgb(244,21,52)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="389" width="0.0105%" height="15" fill="rgb(247,122,20)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="373" width="0.0105%" height="15" fill="rgb(218,27,9)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="357" width="0.0105%" height="15" fill="rgb(246,7,6)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="341" width="0.0105%" height="15" fill="rgb(227,135,54)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="325" width="0.0105%" height="15" fill="rgb(247,14,11)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="309" width="0.0105%" height="15" fill="rgb(206,149,34)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1748%" y="293" width="0.0105%" height="15" fill="rgb(227,228,4)" fg:x="17829" fg:w="2"/><text x="93.4248%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="93.1539%" y="469" width="0.0418%" height="15" fill="rgb(238,218,28)" fg:x="17825" fg:w="8"/><text x="93.4039%" y="479.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="93.1853%" y="453" width="0.0105%" height="15" fill="rgb(252,86,40)" fg:x="17831" fg:w="2"/><text x="93.4353%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1853%" y="437" width="0.0105%" height="15" fill="rgb(251,225,11)" fg:x="17831" fg:w="2"/><text x="93.4353%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.05%)</title><rect x="93.1539%" y="485" width="0.0523%" height="15" fill="rgb(206,46,49)" fg:x="17825" fg:w="10"/><text x="93.4039%" y="495.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="93.1957%" y="469" width="0.0105%" height="15" fill="rgb(245,128,24)" fg:x="17833" fg:w="2"/><text x="93.4457%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.1957%" y="453" width="0.0105%" height="15" fill="rgb(219,177,34)" fg:x="17833" fg:w="2"/><text x="93.4457%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.06%)</title><rect x="93.1539%" y="501" width="0.0627%" height="15" fill="rgb(218,60,48)" fg:x="17825" fg:w="12"/><text x="93.4039%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="93.1539%" y="533" width="0.0679%" height="15" fill="rgb(221,11,5)" fg:x="17825" fg:w="13"/><text x="93.4039%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="93.1539%" y="517" width="0.0679%" height="15" fill="rgb(220,148,13)" fg:x="17825" fg:w="13"/><text x="93.4039%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.08%)</title><rect x="93.1539%" y="549" width="0.0836%" height="15" fill="rgb(210,16,3)" fg:x="17825" fg:w="16"/><text x="93.4039%" y="559.50"></text></g><g><title>__GI___ioctl (3 samples, 0.02%)</title><rect x="93.2218%" y="533" width="0.0157%" height="15" fill="rgb(236,80,2)" fg:x="17838" fg:w="3"/><text x="93.4718%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="93.2218%" y="517" width="0.0157%" height="15" fill="rgb(239,129,19)" fg:x="17838" fg:w="3"/><text x="93.4718%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.09%)</title><rect x="93.1539%" y="565" width="0.0941%" height="15" fill="rgb(220,106,35)" fg:x="17825" fg:w="18"/><text x="93.4039%" y="575.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="93.2375%" y="549" width="0.0105%" height="15" fill="rgb(252,139,45)" fg:x="17841" fg:w="2"/><text x="93.4875%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="93.2375%" y="533" width="0.0105%" height="15" fill="rgb(229,8,36)" fg:x="17841" fg:w="2"/><text x="93.4875%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (35 samples, 0.18%)</title><rect x="93.1539%" y="581" width="0.1829%" height="15" fill="rgb(230,126,33)" fg:x="17825" fg:w="35"/><text x="93.4039%" y="591.50"></text></g><g><title>__GI___ioctl (17 samples, 0.09%)</title><rect x="93.2480%" y="565" width="0.0888%" height="15" fill="rgb(239,140,21)" fg:x="17843" fg:w="17"/><text x="93.4980%" y="575.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="93.2480%" y="549" width="0.0888%" height="15" fill="rgb(254,104,9)" fg:x="17843" fg:w="17"/><text x="93.4980%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.19%)</title><rect x="93.1539%" y="613" width="0.1881%" height="15" fill="rgb(239,52,14)" fg:x="17825" fg:w="36"/><text x="93.4039%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.19%)</title><rect x="93.1539%" y="597" width="0.1881%" height="15" fill="rgb(208,227,44)" fg:x="17825" fg:w="36"/><text x="93.4039%" y="607.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (45 samples, 0.24%)</title><rect x="93.1539%" y="869" width="0.2352%" height="15" fill="rgb(246,18,19)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (45 samples, 0.24%)</title><rect x="93.1539%" y="853" width="0.2352%" height="15" fill="rgb(235,228,25)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="863.50"></text></g><g><title>ash::instance::Instance::create_device (45 samples, 0.24%)</title><rect x="93.1539%" y="837" width="0.2352%" height="15" fill="rgb(240,156,20)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="847.50"></text></g><g><title>vkCreateDevice (45 samples, 0.24%)</title><rect x="93.1539%" y="821" width="0.2352%" height="15" fill="rgb(224,8,20)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="831.50"></text></g><g><title>[libvulkan.so.1.3.204] (45 samples, 0.24%)</title><rect x="93.1539%" y="805" width="0.2352%" height="15" fill="rgb(214,12,52)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="815.50"></text></g><g><title>[libvulkan.so.1.3.204] (45 samples, 0.24%)</title><rect x="93.1539%" y="789" width="0.2352%" height="15" fill="rgb(211,220,47)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="799.50"></text></g><g><title>[libvulkan.so.1.3.204] (45 samples, 0.24%)</title><rect x="93.1539%" y="773" width="0.2352%" height="15" fill="rgb(250,173,5)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="783.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="757" width="0.2352%" height="15" fill="rgb(250,125,52)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="741" width="0.2352%" height="15" fill="rgb(209,133,18)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="725" width="0.2352%" height="15" fill="rgb(216,173,22)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="709" width="0.2352%" height="15" fill="rgb(205,3,22)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="693" width="0.2352%" height="15" fill="rgb(248,22,20)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="677" width="0.2352%" height="15" fill="rgb(233,6,29)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="661" width="0.2352%" height="15" fill="rgb(240,22,54)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="645" width="0.2352%" height="15" fill="rgb(231,133,32)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.24%)</title><rect x="93.1539%" y="629" width="0.2352%" height="15" fill="rgb(248,193,4)" fg:x="17825" fg:w="45"/><text x="93.4039%" y="639.50"></text></g><g><title>__GI___ioctl (9 samples, 0.05%)</title><rect x="93.3420%" y="613" width="0.0470%" height="15" fill="rgb(211,178,46)" fg:x="17861" fg:w="9"/><text x="93.5920%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="93.3420%" y="597" width="0.0470%" height="15" fill="rgb(224,5,42)" fg:x="17861" fg:w="9"/><text x="93.5920%" y="607.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (2 samples, 0.01%)</title><rect x="93.3891%" y="869" width="0.0105%" height="15" fill="rgb(239,176,25)" fg:x="17870" fg:w="2"/><text x="93.6391%" y="879.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (2 samples, 0.01%)</title><rect x="93.3995%" y="869" width="0.0105%" height="15" fill="rgb(245,187,50)" fg:x="17872" fg:w="2"/><text x="93.6495%" y="879.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (2 samples, 0.01%)</title><rect x="93.4100%" y="869" width="0.0105%" height="15" fill="rgb(248,24,15)" fg:x="17874" fg:w="2"/><text x="93.6600%" y="879.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::owned_indices (2 samples, 0.01%)</title><rect x="93.4100%" y="853" width="0.0105%" height="15" fill="rgb(205,166,13)" fg:x="17874" fg:w="2"/><text x="93.6600%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (3 samples, 0.02%)</title><rect x="93.4466%" y="869" width="0.0157%" height="15" fill="rgb(208,114,23)" fg:x="17881" fg:w="3"/><text x="93.6966%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (3 samples, 0.02%)</title><rect x="93.4622%" y="869" width="0.0157%" height="15" fill="rgb(239,127,18)" fg:x="17884" fg:w="3"/><text x="93.7122%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (3 samples, 0.02%)</title><rect x="93.4831%" y="869" width="0.0157%" height="15" fill="rgb(219,154,28)" fg:x="17888" fg:w="3"/><text x="93.7331%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.01%)</title><rect x="93.4884%" y="853" width="0.0105%" height="15" fill="rgb(225,157,23)" fg:x="17889" fg:w="2"/><text x="93.7384%" y="863.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (2 samples, 0.01%)</title><rect x="93.5093%" y="661" width="0.0105%" height="15" fill="rgb(219,8,6)" fg:x="17893" fg:w="2"/><text x="93.7593%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="93.5093%" y="645" width="0.0105%" height="15" fill="rgb(212,47,6)" fg:x="17893" fg:w="2"/><text x="93.7593%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="93.5093%" y="629" width="0.0105%" height="15" fill="rgb(224,190,4)" fg:x="17893" fg:w="2"/><text x="93.7593%" y="639.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (5 samples, 0.03%)</title><rect x="93.4988%" y="869" width="0.0261%" height="15" fill="rgb(239,183,29)" fg:x="17891" fg:w="5"/><text x="93.7488%" y="879.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (4 samples, 0.02%)</title><rect x="93.5041%" y="853" width="0.0209%" height="15" fill="rgb(213,57,7)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="863.50"></text></g><g><title>ggez::event::run::{{closure}} (4 samples, 0.02%)</title><rect x="93.5041%" y="837" width="0.0209%" height="15" fill="rgb(216,148,1)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="847.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (4 samples, 0.02%)</title><rect x="93.5041%" y="821" width="0.0209%" height="15" fill="rgb(236,182,29)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="831.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="93.5041%" y="805" width="0.0209%" height="15" fill="rgb(244,120,48)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (4 samples, 0.02%)</title><rect x="93.5041%" y="789" width="0.0209%" height="15" fill="rgb(206,71,34)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="799.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="93.5041%" y="773" width="0.0209%" height="15" fill="rgb(242,32,6)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="783.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (4 samples, 0.02%)</title><rect x="93.5041%" y="757" width="0.0209%" height="15" fill="rgb(241,35,3)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (4 samples, 0.02%)</title><rect x="93.5041%" y="741" width="0.0209%" height="15" fill="rgb(222,62,19)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="751.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (4 samples, 0.02%)</title><rect x="93.5041%" y="725" width="0.0209%" height="15" fill="rgb(223,110,41)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="735.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (4 samples, 0.02%)</title><rect x="93.5041%" y="709" width="0.0209%" height="15" fill="rgb(208,224,4)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="719.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (4 samples, 0.02%)</title><rect x="93.5041%" y="693" width="0.0209%" height="15" fill="rgb(241,137,19)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (4 samples, 0.02%)</title><rect x="93.5041%" y="677" width="0.0209%" height="15" fill="rgb(244,24,17)" fg:x="17892" fg:w="4"/><text x="93.7541%" y="687.50"></text></g><g><title>[unknown] (17,182 samples, 89.79%)</title><rect x="3.7366%" y="885" width="89.7936%" height="15" fill="rgb(245,178,49)" fg:x="715" fg:w="17182"/><text x="3.9866%" y="895.50">[unknown]</text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="93.6817%" y="773" width="0.0157%" height="15" fill="rgb(219,160,38)" fg:x="17926" fg:w="3"/><text x="93.9317%" y="783.50"></text></g><g><title>__GI___clock_gettime (3 samples, 0.02%)</title><rect x="93.6817%" y="757" width="0.0157%" height="15" fill="rgb(228,137,14)" fg:x="17926" fg:w="3"/><text x="93.9317%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.04%)</title><rect x="93.6661%" y="789" width="0.0418%" height="15" fill="rgb(237,134,11)" fg:x="17923" fg:w="8"/><text x="93.9161%" y="799.50"></text></g><g><title>__GI___clock_gettime (6 samples, 0.03%)</title><rect x="93.7131%" y="789" width="0.0314%" height="15" fill="rgb(211,126,44)" fg:x="17932" fg:w="6"/><text x="93.9631%" y="799.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="93.7340%" y="773" width="0.0105%" height="15" fill="rgb(226,171,33)" fg:x="17936" fg:w="2"/><text x="93.9840%" y="783.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (55 samples, 0.29%)</title><rect x="93.7497%" y="757" width="0.2874%" height="15" fill="rgb(253,99,13)" fg:x="17939" fg:w="55"/><text x="93.9997%" y="767.50"></text></g><g><title>__futex_abstimed_wait_common (55 samples, 0.29%)</title><rect x="93.7497%" y="741" width="0.2874%" height="15" fill="rgb(244,48,7)" fg:x="17939" fg:w="55"/><text x="93.9997%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common64 (55 samples, 0.29%)</title><rect x="93.7497%" y="725" width="0.2874%" height="15" fill="rgb(244,217,54)" fg:x="17939" fg:w="55"/><text x="93.9997%" y="735.50"></text></g><g><title>[unknown] (53 samples, 0.28%)</title><rect x="93.7601%" y="709" width="0.2770%" height="15" fill="rgb(224,15,18)" fg:x="17941" fg:w="53"/><text x="94.0101%" y="719.50"></text></g><g><title>[unknown] (49 samples, 0.26%)</title><rect x="93.7810%" y="693" width="0.2561%" height="15" fill="rgb(244,99,12)" fg:x="17945" fg:w="49"/><text x="94.0310%" y="703.50"></text></g><g><title>[unknown] (49 samples, 0.26%)</title><rect x="93.7810%" y="677" width="0.2561%" height="15" fill="rgb(233,226,8)" fg:x="17945" fg:w="49"/><text x="94.0310%" y="687.50"></text></g><g><title>[unknown] (45 samples, 0.24%)</title><rect x="93.8019%" y="661" width="0.2352%" height="15" fill="rgb(229,211,3)" fg:x="17949" fg:w="45"/><text x="94.0519%" y="671.50"></text></g><g><title>[unknown] (45 samples, 0.24%)</title><rect x="93.8019%" y="645" width="0.2352%" height="15" fill="rgb(216,140,21)" fg:x="17949" fg:w="45"/><text x="94.0519%" y="655.50"></text></g><g><title>[unknown] (40 samples, 0.21%)</title><rect x="93.8281%" y="629" width="0.2090%" height="15" fill="rgb(234,122,30)" fg:x="17954" fg:w="40"/><text x="94.0781%" y="639.50"></text></g><g><title>[unknown] (35 samples, 0.18%)</title><rect x="93.8542%" y="613" width="0.1829%" height="15" fill="rgb(236,25,46)" fg:x="17959" fg:w="35"/><text x="94.1042%" y="623.50"></text></g><g><title>[unknown] (32 samples, 0.17%)</title><rect x="93.8699%" y="597" width="0.1672%" height="15" fill="rgb(217,52,54)" fg:x="17962" fg:w="32"/><text x="94.1199%" y="607.50"></text></g><g><title>[unknown] (27 samples, 0.14%)</title><rect x="93.8960%" y="581" width="0.1411%" height="15" fill="rgb(222,29,26)" fg:x="17967" fg:w="27"/><text x="94.1460%" y="591.50"></text></g><g><title>[unknown] (27 samples, 0.14%)</title><rect x="93.8960%" y="565" width="0.1411%" height="15" fill="rgb(216,177,29)" fg:x="17967" fg:w="27"/><text x="94.1460%" y="575.50"></text></g><g><title>[unknown] (19 samples, 0.10%)</title><rect x="93.9378%" y="549" width="0.0993%" height="15" fill="rgb(247,136,51)" fg:x="17975" fg:w="19"/><text x="94.1878%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.09%)</title><rect x="93.9430%" y="533" width="0.0941%" height="15" fill="rgb(231,47,47)" fg:x="17976" fg:w="18"/><text x="94.1930%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="93.9744%" y="517" width="0.0627%" height="15" fill="rgb(211,192,36)" fg:x="17982" fg:w="12"/><text x="94.2244%" y="527.50"></text></g><g><title>___pthread_cond_timedwait64 (57 samples, 0.30%)</title><rect x="93.7444%" y="789" width="0.2979%" height="15" fill="rgb(229,156,32)" fg:x="17938" fg:w="57"/><text x="93.9944%" y="799.50"></text></g><g><title>__pthread_cond_wait_common (56 samples, 0.29%)</title><rect x="93.7497%" y="773" width="0.2927%" height="15" fill="rgb(248,213,20)" fg:x="17939" fg:w="56"/><text x="93.9997%" y="783.50"></text></g><g><title>___pthread_mutex_unlock (8 samples, 0.04%)</title><rect x="94.0423%" y="789" width="0.0418%" height="15" fill="rgb(217,64,7)" fg:x="17995" fg:w="8"/><text x="94.2923%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (8 samples, 0.04%)</title><rect x="94.0423%" y="773" width="0.0418%" height="15" fill="rgb(232,142,8)" fg:x="17995" fg:w="8"/><text x="94.2923%" y="783.50"></text></g><g><title>lll_mutex_unlock_optimized (8 samples, 0.04%)</title><rect x="94.0423%" y="757" width="0.0418%" height="15" fill="rgb(224,92,44)" fg:x="17995" fg:w="8"/><text x="94.2923%" y="767.50"></text></g><g><title>__GI___lll_lock_wake (7 samples, 0.04%)</title><rect x="94.0476%" y="741" width="0.0366%" height="15" fill="rgb(214,169,17)" fg:x="17996" fg:w="7"/><text x="94.2976%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="94.0476%" y="725" width="0.0366%" height="15" fill="rgb(210,59,37)" fg:x="17996" fg:w="7"/><text x="94.2976%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="94.0580%" y="709" width="0.0261%" height="15" fill="rgb(214,116,48)" fg:x="17998" fg:w="5"/><text x="94.3080%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="94.0580%" y="693" width="0.0261%" height="15" fill="rgb(244,191,6)" fg:x="17998" fg:w="5"/><text x="94.3080%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="94.0685%" y="677" width="0.0157%" height="15" fill="rgb(241,50,52)" fg:x="18000" fg:w="3"/><text x="94.3185%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="94.0685%" y="661" width="0.0157%" height="15" fill="rgb(236,75,39)" fg:x="18000" fg:w="3"/><text x="94.3185%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (91 samples, 0.48%)</title><rect x="93.6138%" y="805" width="0.4756%" height="15" fill="rgb(236,99,0)" fg:x="17913" fg:w="91"/><text x="93.8638%" y="815.50"></text></g><g><title>[unknown] (53 samples, 0.28%)</title><rect x="94.0894%" y="789" width="0.2770%" height="15" fill="rgb(207,202,15)" fg:x="18004" fg:w="53"/><text x="94.3394%" y="799.50"></text></g><g><title>[unknown] (48 samples, 0.25%)</title><rect x="94.1155%" y="773" width="0.2508%" height="15" fill="rgb(233,207,14)" fg:x="18009" fg:w="48"/><text x="94.3655%" y="783.50"></text></g><g><title>[unknown] (47 samples, 0.25%)</title><rect x="94.1207%" y="757" width="0.2456%" height="15" fill="rgb(226,27,51)" fg:x="18010" fg:w="47"/><text x="94.3707%" y="767.50"></text></g><g><title>[unknown] (44 samples, 0.23%)</title><rect x="94.1364%" y="741" width="0.2299%" height="15" fill="rgb(206,104,42)" fg:x="18013" fg:w="44"/><text x="94.3864%" y="751.50"></text></g><g><title>[unknown] (42 samples, 0.22%)</title><rect x="94.1469%" y="725" width="0.2195%" height="15" fill="rgb(212,225,4)" fg:x="18015" fg:w="42"/><text x="94.3969%" y="735.50"></text></g><g><title>[unknown] (38 samples, 0.20%)</title><rect x="94.1678%" y="709" width="0.1986%" height="15" fill="rgb(233,96,42)" fg:x="18019" fg:w="38"/><text x="94.4178%" y="719.50"></text></g><g><title>[unknown] (35 samples, 0.18%)</title><rect x="94.1834%" y="693" width="0.1829%" height="15" fill="rgb(229,21,32)" fg:x="18022" fg:w="35"/><text x="94.4334%" y="703.50"></text></g><g><title>[unknown] (33 samples, 0.17%)</title><rect x="94.1939%" y="677" width="0.1725%" height="15" fill="rgb(226,216,24)" fg:x="18024" fg:w="33"/><text x="94.4439%" y="687.50"></text></g><g><title>[unknown] (28 samples, 0.15%)</title><rect x="94.2200%" y="661" width="0.1463%" height="15" fill="rgb(221,163,17)" fg:x="18029" fg:w="28"/><text x="94.4700%" y="671.50"></text></g><g><title>[unknown] (22 samples, 0.11%)</title><rect x="94.2514%" y="645" width="0.1150%" height="15" fill="rgb(216,216,42)" fg:x="18035" fg:w="22"/><text x="94.5014%" y="655.50"></text></g><g><title>[unknown] (17 samples, 0.09%)</title><rect x="94.2775%" y="629" width="0.0888%" height="15" fill="rgb(240,118,7)" fg:x="18040" fg:w="17"/><text x="94.5275%" y="639.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="94.2880%" y="613" width="0.0784%" height="15" fill="rgb(221,67,37)" fg:x="18042" fg:w="15"/><text x="94.5380%" y="623.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="94.3089%" y="597" width="0.0575%" height="15" fill="rgb(241,32,44)" fg:x="18046" fg:w="11"/><text x="94.5589%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="94.3141%" y="581" width="0.0523%" height="15" fill="rgb(235,204,43)" fg:x="18047" fg:w="10"/><text x="94.5641%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="94.3193%" y="565" width="0.0470%" height="15" fill="rgb(213,116,10)" fg:x="18048" fg:w="9"/><text x="94.5693%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="94.3298%" y="549" width="0.0366%" height="15" fill="rgb(239,15,48)" fg:x="18050" fg:w="7"/><text x="94.5798%" y="559.50"></text></g><g><title>__GI___close (54 samples, 0.28%)</title><rect x="94.0894%" y="805" width="0.2822%" height="15" fill="rgb(207,123,36)" fg:x="18004" fg:w="54"/><text x="94.3394%" y="815.50"></text></g><g><title>__GI___libc_read (402 samples, 2.10%)</title><rect x="94.3716%" y="805" width="2.1009%" height="15" fill="rgb(209,103,30)" fg:x="18058" fg:w="402"/><text x="94.6216%" y="815.50">_..</text></g><g><title>__GI___libc_read (402 samples, 2.10%)</title><rect x="94.3716%" y="789" width="2.1009%" height="15" fill="rgb(238,100,19)" fg:x="18058" fg:w="402"/><text x="94.6216%" y="799.50">_..</text></g><g><title>[unknown] (401 samples, 2.10%)</title><rect x="94.3768%" y="773" width="2.0956%" height="15" fill="rgb(244,30,14)" fg:x="18059" fg:w="401"/><text x="94.6268%" y="783.50">[..</text></g><g><title>[unknown] (394 samples, 2.06%)</title><rect x="94.4134%" y="757" width="2.0591%" height="15" fill="rgb(249,174,6)" fg:x="18066" fg:w="394"/><text x="94.6634%" y="767.50">[..</text></g><g><title>[unknown] (394 samples, 2.06%)</title><rect x="94.4134%" y="741" width="2.0591%" height="15" fill="rgb(235,213,41)" fg:x="18066" fg:w="394"/><text x="94.6634%" y="751.50">[..</text></g><g><title>[unknown] (392 samples, 2.05%)</title><rect x="94.4238%" y="725" width="2.0486%" height="15" fill="rgb(213,118,6)" fg:x="18068" fg:w="392"/><text x="94.6738%" y="735.50">[..</text></g><g><title>[unknown] (390 samples, 2.04%)</title><rect x="94.4343%" y="709" width="2.0381%" height="15" fill="rgb(235,44,51)" fg:x="18070" fg:w="390"/><text x="94.6843%" y="719.50">[..</text></g><g><title>[unknown] (388 samples, 2.03%)</title><rect x="94.4447%" y="693" width="2.0277%" height="15" fill="rgb(217,9,53)" fg:x="18072" fg:w="388"/><text x="94.6947%" y="703.50">[..</text></g><g><title>[unknown] (383 samples, 2.00%)</title><rect x="94.4709%" y="677" width="2.0016%" height="15" fill="rgb(237,172,34)" fg:x="18077" fg:w="383"/><text x="94.7209%" y="687.50">[..</text></g><g><title>[unknown] (383 samples, 2.00%)</title><rect x="94.4709%" y="661" width="2.0016%" height="15" fill="rgb(206,206,11)" fg:x="18077" fg:w="383"/><text x="94.7209%" y="671.50">[..</text></g><g><title>[unknown] (376 samples, 1.96%)</title><rect x="94.5074%" y="645" width="1.9650%" height="15" fill="rgb(214,149,29)" fg:x="18084" fg:w="376"/><text x="94.7574%" y="655.50">[..</text></g><g><title>[unknown] (293 samples, 1.53%)</title><rect x="94.9412%" y="629" width="1.5312%" height="15" fill="rgb(208,123,3)" fg:x="18167" fg:w="293"/><text x="95.1912%" y="639.50"></text></g><g><title>[unknown] (133 samples, 0.70%)</title><rect x="95.7774%" y="613" width="0.6951%" height="15" fill="rgb(229,126,4)" fg:x="18327" fg:w="133"/><text x="96.0274%" y="623.50"></text></g><g><title>[unknown] (80 samples, 0.42%)</title><rect x="96.0544%" y="597" width="0.4181%" height="15" fill="rgb(222,92,36)" fg:x="18380" fg:w="80"/><text x="96.3044%" y="607.50"></text></g><g><title>[unknown] (15 samples, 0.08%)</title><rect x="96.3940%" y="581" width="0.0784%" height="15" fill="rgb(216,39,41)" fg:x="18445" fg:w="15"/><text x="96.6440%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="96.4149%" y="565" width="0.0575%" height="15" fill="rgb(253,127,28)" fg:x="18449" fg:w="11"/><text x="96.6649%" y="575.50"></text></g><g><title>[unknown] (110 samples, 0.57%)</title><rect x="96.5195%" y="773" width="0.5749%" height="15" fill="rgb(249,152,51)" fg:x="18469" fg:w="110"/><text x="96.7695%" y="783.50"></text></g><g><title>[unknown] (95 samples, 0.50%)</title><rect x="96.5979%" y="757" width="0.4965%" height="15" fill="rgb(209,123,42)" fg:x="18484" fg:w="95"/><text x="96.8479%" y="767.50"></text></g><g><title>[unknown] (91 samples, 0.48%)</title><rect x="96.6188%" y="741" width="0.4756%" height="15" fill="rgb(241,118,22)" fg:x="18488" fg:w="91"/><text x="96.8688%" y="751.50"></text></g><g><title>[unknown] (78 samples, 0.41%)</title><rect x="96.6867%" y="725" width="0.4076%" height="15" fill="rgb(208,25,7)" fg:x="18501" fg:w="78"/><text x="96.9367%" y="735.50"></text></g><g><title>[unknown] (74 samples, 0.39%)</title><rect x="96.7076%" y="709" width="0.3867%" height="15" fill="rgb(243,144,39)" fg:x="18505" fg:w="74"/><text x="96.9576%" y="719.50"></text></g><g><title>[unknown] (69 samples, 0.36%)</title><rect x="96.7337%" y="693" width="0.3606%" height="15" fill="rgb(250,50,5)" fg:x="18510" fg:w="69"/><text x="96.9837%" y="703.50"></text></g><g><title>[unknown] (66 samples, 0.34%)</title><rect x="96.7494%" y="677" width="0.3449%" height="15" fill="rgb(207,67,11)" fg:x="18513" fg:w="66"/><text x="96.9994%" y="687.50"></text></g><g><title>[unknown] (61 samples, 0.32%)</title><rect x="96.7755%" y="661" width="0.3188%" height="15" fill="rgb(245,204,40)" fg:x="18518" fg:w="61"/><text x="97.0255%" y="671.50"></text></g><g><title>[unknown] (49 samples, 0.26%)</title><rect x="96.8383%" y="645" width="0.2561%" height="15" fill="rgb(238,228,24)" fg:x="18530" fg:w="49"/><text x="97.0883%" y="655.50"></text></g><g><title>[unknown] (43 samples, 0.22%)</title><rect x="96.8696%" y="629" width="0.2247%" height="15" fill="rgb(217,116,22)" fg:x="18536" fg:w="43"/><text x="97.1196%" y="639.50"></text></g><g><title>[unknown] (26 samples, 0.14%)</title><rect x="96.9585%" y="613" width="0.1359%" height="15" fill="rgb(234,98,12)" fg:x="18553" fg:w="26"/><text x="97.2085%" y="623.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="97.0212%" y="597" width="0.0732%" height="15" fill="rgb(242,170,50)" fg:x="18565" fg:w="14"/><text x="97.2712%" y="607.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="97.0264%" y="581" width="0.0679%" height="15" fill="rgb(235,7,5)" fg:x="18566" fg:w="13"/><text x="97.2764%" y="591.50"></text></g><g><title>__GI___nanosleep (123 samples, 0.64%)</title><rect x="96.4724%" y="805" width="0.6428%" height="15" fill="rgb(241,114,28)" fg:x="18460" fg:w="123"/><text x="96.7224%" y="815.50"></text></g><g><title>__GI___clock_nanosleep (122 samples, 0.64%)</title><rect x="96.4777%" y="789" width="0.6376%" height="15" fill="rgb(246,112,42)" fg:x="18461" fg:w="122"/><text x="96.7277%" y="799.50"></text></g><g><title>__GI___pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="97.0943%" y="773" width="0.0209%" height="15" fill="rgb(248,228,14)" fg:x="18579" fg:w="4"/><text x="97.3443%" y="783.50"></text></g><g><title>[unknown] (281 samples, 1.47%)</title><rect x="97.1152%" y="789" width="1.4685%" height="15" fill="rgb(208,133,18)" fg:x="18583" fg:w="281"/><text x="97.3652%" y="799.50"></text></g><g><title>[unknown] (277 samples, 1.45%)</title><rect x="97.1361%" y="773" width="1.4476%" height="15" fill="rgb(207,35,49)" fg:x="18587" fg:w="277"/><text x="97.3861%" y="783.50"></text></g><g><title>[unknown] (275 samples, 1.44%)</title><rect x="97.1466%" y="757" width="1.4372%" height="15" fill="rgb(205,68,36)" fg:x="18589" fg:w="275"/><text x="97.3966%" y="767.50"></text></g><g><title>[unknown] (270 samples, 1.41%)</title><rect x="97.1727%" y="741" width="1.4110%" height="15" fill="rgb(245,62,40)" fg:x="18594" fg:w="270"/><text x="97.4227%" y="751.50"></text></g><g><title>[unknown] (262 samples, 1.37%)</title><rect x="97.2145%" y="725" width="1.3692%" height="15" fill="rgb(228,27,24)" fg:x="18602" fg:w="262"/><text x="97.4645%" y="735.50"></text></g><g><title>[unknown] (257 samples, 1.34%)</title><rect x="97.2407%" y="709" width="1.3431%" height="15" fill="rgb(253,19,12)" fg:x="18607" fg:w="257"/><text x="97.4907%" y="719.50"></text></g><g><title>[unknown] (245 samples, 1.28%)</title><rect x="97.3034%" y="693" width="1.2804%" height="15" fill="rgb(232,28,20)" fg:x="18619" fg:w="245"/><text x="97.5534%" y="703.50"></text></g><g><title>[unknown] (211 samples, 1.10%)</title><rect x="97.4811%" y="677" width="1.1027%" height="15" fill="rgb(218,35,51)" fg:x="18653" fg:w="211"/><text x="97.7311%" y="687.50"></text></g><g><title>[unknown] (180 samples, 0.94%)</title><rect x="97.6431%" y="661" width="0.9407%" height="15" fill="rgb(212,90,40)" fg:x="18684" fg:w="180"/><text x="97.8931%" y="671.50"></text></g><g><title>[unknown] (120 samples, 0.63%)</title><rect x="97.9566%" y="645" width="0.6271%" height="15" fill="rgb(220,172,12)" fg:x="18744" fg:w="120"/><text x="98.2066%" y="655.50"></text></g><g><title>[unknown] (75 samples, 0.39%)</title><rect x="98.1918%" y="629" width="0.3920%" height="15" fill="rgb(226,159,20)" fg:x="18789" fg:w="75"/><text x="98.4418%" y="639.50"></text></g><g><title>[unknown] (62 samples, 0.32%)</title><rect x="98.2597%" y="613" width="0.3240%" height="15" fill="rgb(234,205,16)" fg:x="18802" fg:w="62"/><text x="98.5097%" y="623.50"></text></g><g><title>[unknown] (56 samples, 0.29%)</title><rect x="98.2911%" y="597" width="0.2927%" height="15" fill="rgb(207,9,39)" fg:x="18808" fg:w="56"/><text x="98.5411%" y="607.50"></text></g><g><title>[unknown] (54 samples, 0.28%)</title><rect x="98.3015%" y="581" width="0.2822%" height="15" fill="rgb(249,143,15)" fg:x="18810" fg:w="54"/><text x="98.5515%" y="591.50"></text></g><g><title>[unknown] (33 samples, 0.17%)</title><rect x="98.4113%" y="565" width="0.1725%" height="15" fill="rgb(253,133,29)" fg:x="18831" fg:w="33"/><text x="98.6613%" y="575.50"></text></g><g><title>[unknown] (22 samples, 0.11%)</title><rect x="98.4688%" y="549" width="0.1150%" height="15" fill="rgb(221,187,0)" fg:x="18842" fg:w="22"/><text x="98.7188%" y="559.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="98.5158%" y="533" width="0.0679%" height="15" fill="rgb(205,204,26)" fg:x="18851" fg:w="13"/><text x="98.7658%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="98.5315%" y="517" width="0.0523%" height="15" fill="rgb(224,68,54)" fg:x="18854" fg:w="10"/><text x="98.7815%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.5681%" y="501" width="0.0157%" height="15" fill="rgb(209,67,4)" fg:x="18861" fg:w="3"/><text x="98.8181%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.5681%" y="485" width="0.0157%" height="15" fill="rgb(228,229,18)" fg:x="18861" fg:w="3"/><text x="98.8181%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.5733%" y="469" width="0.0105%" height="15" fill="rgb(231,89,13)" fg:x="18862" fg:w="2"/><text x="98.8233%" y="479.50"></text></g><g><title>__libc_open64 (283 samples, 1.48%)</title><rect x="97.1152%" y="805" width="1.4790%" height="15" fill="rgb(210,182,18)" fg:x="18583" fg:w="283"/><text x="97.3652%" y="815.50"></text></g><g><title>__GI___pthread_enable_asynccancel (2 samples, 0.01%)</title><rect x="98.5837%" y="789" width="0.0105%" height="15" fill="rgb(240,105,2)" fg:x="18864" fg:w="2"/><text x="98.8337%" y="799.50"></text></g><g><title>_IO_no_init (5 samples, 0.03%)</title><rect x="98.6151%" y="773" width="0.0261%" height="15" fill="rgb(207,170,50)" fg:x="18870" fg:w="5"/><text x="98.8651%" y="783.50"></text></g><g><title>_IO_old_init (3 samples, 0.02%)</title><rect x="98.6256%" y="757" width="0.0157%" height="15" fill="rgb(232,133,24)" fg:x="18872" fg:w="3"/><text x="98.8756%" y="767.50"></text></g><g><title>[libc.so.6] (4 samples, 0.02%)</title><rect x="98.6465%" y="757" width="0.0209%" height="15" fill="rgb(235,166,27)" fg:x="18876" fg:w="4"/><text x="98.8965%" y="767.50"></text></g><g><title>__GI__IO_setb (5 samples, 0.03%)</title><rect x="98.6674%" y="757" width="0.0261%" height="15" fill="rgb(209,19,13)" fg:x="18880" fg:w="5"/><text x="98.9174%" y="767.50"></text></g><g><title>_IO_strfile_read (19 samples, 0.10%)</title><rect x="98.6151%" y="789" width="0.0993%" height="15" fill="rgb(226,79,39)" fg:x="18870" fg:w="19"/><text x="98.8651%" y="799.50"></text></g><g><title>_IO_str_init_static_internal (14 samples, 0.07%)</title><rect x="98.6412%" y="773" width="0.0732%" height="15" fill="rgb(222,163,10)" fg:x="18875" fg:w="14"/><text x="98.8912%" y="783.50"></text></g><g><title>__rawmemchr_avx2 (4 samples, 0.02%)</title><rect x="98.6935%" y="757" width="0.0209%" height="15" fill="rgb(214,44,19)" fg:x="18885" fg:w="4"/><text x="98.9435%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="773" width="0.0105%" height="15" fill="rgb(210,217,13)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="757" width="0.0105%" height="15" fill="rgb(237,61,54)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="741" width="0.0105%" height="15" fill="rgb(226,184,24)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="725" width="0.0105%" height="15" fill="rgb(223,226,4)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="709" width="0.0105%" height="15" fill="rgb(210,26,41)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="693" width="0.0105%" height="15" fill="rgb(220,221,6)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9130%" y="677" width="0.0105%" height="15" fill="rgb(225,89,49)" fg:x="18927" fg:w="2"/><text x="99.1630%" y="687.50"></text></g><g><title>__GI_____strtol_l_internal (5 samples, 0.03%)</title><rect x="98.9234%" y="773" width="0.0261%" height="15" fill="rgb(218,70,45)" fg:x="18929" fg:w="5"/><text x="99.1734%" y="783.50"></text></g><g><title>__sscanf (69 samples, 0.36%)</title><rect x="98.5942%" y="805" width="0.3606%" height="15" fill="rgb(238,166,21)" fg:x="18866" fg:w="69"/><text x="98.8442%" y="815.50"></text></g><g><title>__vfscanf_internal (46 samples, 0.24%)</title><rect x="98.7144%" y="789" width="0.2404%" height="15" fill="rgb(224,141,44)" fg:x="18889" fg:w="46"/><text x="98.9644%" y="799.50"></text></g><g><title>nanosleep@plt (2 samples, 0.01%)</title><rect x="98.9600%" y="805" width="0.0105%" height="15" fill="rgb(230,12,49)" fg:x="18936" fg:w="2"/><text x="99.2100%" y="815.50"></text></g><g><title>read@plt (3 samples, 0.02%)</title><rect x="98.9705%" y="805" width="0.0157%" height="15" fill="rgb(212,174,12)" fg:x="18938" fg:w="3"/><text x="99.2205%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,045 samples, 5.46%)</title><rect x="93.5406%" y="853" width="5.4612%" height="15" fill="rgb(246,67,9)" fg:x="17899" fg:w="1045"/><text x="93.7906%" y="863.50">[libnvi..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,045 samples, 5.46%)</title><rect x="93.5406%" y="837" width="5.4612%" height="15" fill="rgb(239,35,23)" fg:x="17899" fg:w="1045"/><text x="93.7906%" y="847.50">[libnvi..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,042 samples, 5.45%)</title><rect x="93.5563%" y="821" width="5.4455%" height="15" fill="rgb(211,167,0)" fg:x="17902" fg:w="1042"/><text x="93.8063%" y="831.50">[libnvi..</text></g><g><title>sscanf@plt (3 samples, 0.02%)</title><rect x="98.9862%" y="805" width="0.0157%" height="15" fill="rgb(225,119,45)" fg:x="18941" fg:w="3"/><text x="99.2362%" y="815.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (6 samples, 0.03%)</title><rect x="99.0018%" y="677" width="0.0314%" height="15" fill="rgb(210,162,6)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="687.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (6 samples, 0.03%)</title><rect x="99.0018%" y="661" width="0.0314%" height="15" fill="rgb(208,118,35)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="671.50"></text></g><g><title>rayon_core::registry::main_loop (6 samples, 0.03%)</title><rect x="99.0018%" y="645" width="0.0314%" height="15" fill="rgb(239,4,53)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="655.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.03%)</title><rect x="99.0018%" y="629" width="0.0314%" height="15" fill="rgb(213,130,21)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.03%)</title><rect x="99.0018%" y="613" width="0.0314%" height="15" fill="rgb(235,148,0)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="623.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (6 samples, 0.03%)</title><rect x="99.0018%" y="597" width="0.0314%" height="15" fill="rgb(244,224,18)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="607.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (6 samples, 0.03%)</title><rect x="99.0018%" y="581" width="0.0314%" height="15" fill="rgb(211,214,4)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="591.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.03%)</title><rect x="99.0018%" y="565" width="0.0314%" height="15" fill="rgb(206,119,25)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="575.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (6 samples, 0.03%)</title><rect x="99.0018%" y="549" width="0.0314%" height="15" fill="rgb(243,93,47)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (6 samples, 0.03%)</title><rect x="99.0018%" y="533" width="0.0314%" height="15" fill="rgb(224,194,6)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 0.03%)</title><rect x="99.0018%" y="517" width="0.0314%" height="15" fill="rgb(243,229,6)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="527.50"></text></g><g><title>syscall (6 samples, 0.03%)</title><rect x="99.0018%" y="501" width="0.0314%" height="15" fill="rgb(207,23,50)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="485" width="0.0314%" height="15" fill="rgb(253,192,32)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="469" width="0.0314%" height="15" fill="rgb(213,21,6)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="453" width="0.0314%" height="15" fill="rgb(243,151,13)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="437" width="0.0314%" height="15" fill="rgb(233,165,41)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="421" width="0.0314%" height="15" fill="rgb(246,176,45)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="405" width="0.0314%" height="15" fill="rgb(217,170,52)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="389" width="0.0314%" height="15" fill="rgb(214,203,54)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="373" width="0.0314%" height="15" fill="rgb(248,215,49)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="357" width="0.0314%" height="15" fill="rgb(208,46,10)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="341" width="0.0314%" height="15" fill="rgb(254,5,31)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="325" width="0.0314%" height="15" fill="rgb(222,104,33)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="309" width="0.0314%" height="15" fill="rgb(248,49,16)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0018%" y="293" width="0.0314%" height="15" fill="rgb(232,198,41)" fg:x="18944" fg:w="6"/><text x="99.2518%" y="303.50"></text></g><g><title>std::thread::sleep (14 samples, 0.07%)</title><rect x="99.0384%" y="645" width="0.0732%" height="15" fill="rgb(214,125,3)" fg:x="18951" fg:w="14"/><text x="99.2884%" y="655.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (14 samples, 0.07%)</title><rect x="99.0384%" y="629" width="0.0732%" height="15" fill="rgb(229,220,28)" fg:x="18951" fg:w="14"/><text x="99.2884%" y="639.50"></text></g><g><title>__GI___nanosleep (14 samples, 0.07%)</title><rect x="99.0384%" y="613" width="0.0732%" height="15" fill="rgb(222,64,37)" fg:x="18951" fg:w="14"/><text x="99.2884%" y="623.50"></text></g><g><title>__GI___clock_nanosleep (14 samples, 0.07%)</title><rect x="99.0384%" y="597" width="0.0732%" height="15" fill="rgb(249,184,13)" fg:x="18951" fg:w="14"/><text x="99.2884%" y="607.50"></text></g><g><title>[unknown] (14 samples, 0.07%)</title><rect x="99.0384%" y="581" width="0.0732%" height="15" fill="rgb(252,176,6)" fg:x="18951" fg:w="14"/><text x="99.2884%" y="591.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="99.0489%" y="565" width="0.0627%" height="15" fill="rgb(228,153,7)" fg:x="18953" fg:w="12"/><text x="99.2989%" y="575.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="99.0489%" y="549" width="0.0627%" height="15" fill="rgb(242,193,5)" fg:x="18953" fg:w="12"/><text x="99.2989%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="99.0489%" y="533" width="0.0627%" height="15" fill="rgb(232,140,9)" fg:x="18953" fg:w="12"/><text x="99.2989%" y="543.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="99.0489%" y="517" width="0.0627%" height="15" fill="rgb(213,222,16)" fg:x="18953" fg:w="12"/><text x="99.2989%" y="527.50"></text></g><g><title>[unknown] (12 samples, 0.06%)</title><rect x="99.0489%" y="501" width="0.0627%" height="15" fill="rgb(222,75,50)" fg:x="18953" fg:w="12"/><text x="99.2989%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="99.0541%" y="485" width="0.0575%" height="15" fill="rgb(205,180,2)" fg:x="18954" fg:w="11"/><text x="99.3041%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="99.0541%" y="469" width="0.0575%" height="15" fill="rgb(216,34,7)" fg:x="18954" fg:w="11"/><text x="99.3041%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="99.0593%" y="453" width="0.0523%" height="15" fill="rgb(253,16,32)" fg:x="18955" fg:w="10"/><text x="99.3093%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.05%)</title><rect x="99.0593%" y="437" width="0.0523%" height="15" fill="rgb(208,97,28)" fg:x="18955" fg:w="10"/><text x="99.3093%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.0802%" y="421" width="0.0314%" height="15" fill="rgb(225,92,11)" fg:x="18959" fg:w="6"/><text x="99.3302%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.0854%" y="405" width="0.0261%" height="15" fill="rgb(243,38,12)" fg:x="18960" fg:w="5"/><text x="99.3354%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.0854%" y="389" width="0.0261%" height="15" fill="rgb(208,139,16)" fg:x="18960" fg:w="5"/><text x="99.3354%" y="399.50"></text></g><g><title>__clone3 (1,068 samples, 5.58%)</title><rect x="93.5354%" y="885" width="5.5814%" height="15" fill="rgb(227,24,9)" fg:x="17898" fg:w="1068"/><text x="93.7854%" y="895.50">__clone3</text></g><g><title>start_thread (1,067 samples, 5.58%)</title><rect x="93.5406%" y="869" width="5.5762%" height="15" fill="rgb(206,62,11)" fg:x="17899" fg:w="1067"/><text x="93.7906%" y="879.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22 samples, 0.11%)</title><rect x="99.0018%" y="853" width="0.1150%" height="15" fill="rgb(228,134,27)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.11%)</title><rect x="99.0018%" y="837" width="0.1150%" height="15" fill="rgb(205,55,33)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.11%)</title><rect x="99.0018%" y="821" width="0.1150%" height="15" fill="rgb(243,75,43)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22 samples, 0.11%)</title><rect x="99.0018%" y="805" width="0.1150%" height="15" fill="rgb(223,27,42)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="815.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (22 samples, 0.11%)</title><rect x="99.0018%" y="789" width="0.1150%" height="15" fill="rgb(232,189,33)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="799.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.11%)</title><rect x="99.0018%" y="773" width="0.1150%" height="15" fill="rgb(210,9,39)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="783.50"></text></g><g><title>std::panicking::try (22 samples, 0.11%)</title><rect x="99.0018%" y="757" width="0.1150%" height="15" fill="rgb(242,85,26)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="767.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.11%)</title><rect x="99.0018%" y="741" width="0.1150%" height="15" fill="rgb(248,44,4)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="751.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.11%)</title><rect x="99.0018%" y="725" width="0.1150%" height="15" fill="rgb(250,96,46)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="735.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (22 samples, 0.11%)</title><rect x="99.0018%" y="709" width="0.1150%" height="15" fill="rgb(229,116,26)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 0.11%)</title><rect x="99.0018%" y="693" width="0.1150%" height="15" fill="rgb(246,94,34)" fg:x="18944" fg:w="22"/><text x="99.2518%" y="703.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (16 samples, 0.08%)</title><rect x="99.0332%" y="677" width="0.0836%" height="15" fill="rgb(251,73,21)" fg:x="18950" fg:w="16"/><text x="99.2832%" y="687.50"></text></g><g><title>gilrs::ff::server::run (16 samples, 0.08%)</title><rect x="99.0332%" y="661" width="0.0836%" height="15" fill="rgb(254,121,25)" fg:x="18950" fg:w="16"/><text x="99.2832%" y="671.50"></text></g><g><title>winit::platform_impl::platform::x11::PeekableReceiver&lt;T&gt;::has_incoming (3 samples, 0.02%)</title><rect x="99.1429%" y="517" width="0.0157%" height="15" fill="rgb(215,161,49)" fg:x="18971" fg:w="3"/><text x="99.3929%" y="527.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="99.1429%" y="501" width="0.0157%" height="15" fill="rgb(221,43,13)" fg:x="18971" fg:w="3"/><text x="99.3929%" y="511.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="99.1429%" y="485" width="0.0157%" height="15" fill="rgb(249,5,37)" fg:x="18971" fg:w="3"/><text x="99.3929%" y="495.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (3 samples, 0.02%)</title><rect x="99.1429%" y="469" width="0.0157%" height="15" fill="rgb(226,25,44)" fg:x="18971" fg:w="3"/><text x="99.3929%" y="479.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (3 samples, 0.02%)</title><rect x="99.1429%" y="453" width="0.0157%" height="15" fill="rgb(238,189,16)" fg:x="18971" fg:w="3"/><text x="99.3929%" y="463.50"></text></g><g><title>ggez::event::run (10 samples, 0.05%)</title><rect x="99.1168%" y="597" width="0.0523%" height="15" fill="rgb(251,186,8)" fg:x="18966" fg:w="10"/><text x="99.3668%" y="607.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (10 samples, 0.05%)</title><rect x="99.1168%" y="581" width="0.0523%" height="15" fill="rgb(254,34,31)" fg:x="18966" fg:w="10"/><text x="99.3668%" y="591.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (10 samples, 0.05%)</title><rect x="99.1168%" y="565" width="0.0523%" height="15" fill="rgb(225,215,27)" fg:x="18966" fg:w="10"/><text x="99.3668%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (10 samples, 0.05%)</title><rect x="99.1168%" y="549" width="0.0523%" height="15" fill="rgb(221,192,48)" fg:x="18966" fg:w="10"/><text x="99.3668%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (10 samples, 0.05%)</title><rect x="99.1168%" y="533" width="0.0523%" height="15" fill="rgb(219,137,20)" fg:x="18966" fg:w="10"/><text x="99.3668%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="99.1586%" y="517" width="0.0105%" height="15" fill="rgb(219,84,11)" fg:x="18974" fg:w="2"/><text x="99.4086%" y="527.50"></text></g><g><title>__libc_start_main_impl (11 samples, 0.06%)</title><rect x="99.1168%" y="869" width="0.0575%" height="15" fill="rgb(224,10,23)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="879.50"></text></g><g><title>__libc_start_call_main (11 samples, 0.06%)</title><rect x="99.1168%" y="853" width="0.0575%" height="15" fill="rgb(248,22,39)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="863.50"></text></g><g><title>main (11 samples, 0.06%)</title><rect x="99.1168%" y="837" width="0.0575%" height="15" fill="rgb(212,154,20)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (11 samples, 0.06%)</title><rect x="99.1168%" y="821" width="0.0575%" height="15" fill="rgb(236,199,50)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="831.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.06%)</title><rect x="99.1168%" y="805" width="0.0575%" height="15" fill="rgb(211,9,17)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="815.50"></text></g><g><title>std::panicking::try (11 samples, 0.06%)</title><rect x="99.1168%" y="789" width="0.0575%" height="15" fill="rgb(243,216,36)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="799.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.06%)</title><rect x="99.1168%" y="773" width="0.0575%" height="15" fill="rgb(250,2,10)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (11 samples, 0.06%)</title><rect x="99.1168%" y="757" width="0.0575%" height="15" fill="rgb(226,50,48)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="767.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.06%)</title><rect x="99.1168%" y="741" width="0.0575%" height="15" fill="rgb(243,81,16)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="751.50"></text></g><g><title>std::panicking::try (11 samples, 0.06%)</title><rect x="99.1168%" y="725" width="0.0575%" height="15" fill="rgb(250,14,2)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="735.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.06%)</title><rect x="99.1168%" y="709" width="0.0575%" height="15" fill="rgb(233,135,29)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11 samples, 0.06%)</title><rect x="99.1168%" y="693" width="0.0575%" height="15" fill="rgb(224,64,43)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="703.50"></text></g><g><title>std::rt::lang_start::{{closure}} (11 samples, 0.06%)</title><rect x="99.1168%" y="677" width="0.0575%" height="15" fill="rgb(238,84,13)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.06%)</title><rect x="99.1168%" y="661" width="0.0575%" height="15" fill="rgb(253,48,26)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.06%)</title><rect x="99.1168%" y="645" width="0.0575%" height="15" fill="rgb(205,223,31)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="655.50"></text></g><g><title>neuralang::main (11 samples, 0.06%)</title><rect x="99.1168%" y="629" width="0.0575%" height="15" fill="rgb(221,41,32)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="639.50"></text></g><g><title>neuralang::run (11 samples, 0.06%)</title><rect x="99.1168%" y="613" width="0.0575%" height="15" fill="rgb(213,158,31)" fg:x="18966" fg:w="11"/><text x="99.3668%" y="623.50"></text></g><g><title>_start (12 samples, 0.06%)</title><rect x="99.1168%" y="885" width="0.0627%" height="15" fill="rgb(245,126,43)" fg:x="18966" fg:w="12"/><text x="99.3668%" y="895.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (4 samples, 0.02%)</title><rect x="99.2056%" y="885" width="0.0209%" height="15" fill="rgb(227,7,22)" fg:x="18983" fg:w="4"/><text x="99.4556%" y="895.50"></text></g><g><title>neuralang (18,762 samples, 98.05%)</title><rect x="1.2020%" y="901" width="98.0507%" height="15" fill="rgb(252,90,44)" fg:x="230" fg:w="18762"/><text x="1.4520%" y="911.50">neuralang</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (2 samples, 0.01%)</title><rect x="99.2422%" y="885" width="0.0105%" height="15" fill="rgb(253,91,0)" fg:x="18990" fg:w="2"/><text x="99.4922%" y="895.50"></text></g><g><title>perf-exec (5 samples, 0.03%)</title><rect x="99.2527%" y="901" width="0.0261%" height="15" fill="rgb(252,175,49)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="885" width="0.0261%" height="15" fill="rgb(246,150,1)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="869" width="0.0261%" height="15" fill="rgb(241,192,25)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="853" width="0.0261%" height="15" fill="rgb(239,187,11)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="837" width="0.0261%" height="15" fill="rgb(218,202,51)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="821" width="0.0261%" height="15" fill="rgb(225,176,8)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="805" width="0.0261%" height="15" fill="rgb(219,122,41)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="789" width="0.0261%" height="15" fill="rgb(248,140,20)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="773" width="0.0261%" height="15" fill="rgb(245,41,37)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="757" width="0.0261%" height="15" fill="rgb(235,82,39)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="741" width="0.0261%" height="15" fill="rgb(230,108,42)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="725" width="0.0261%" height="15" fill="rgb(215,150,50)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="709" width="0.0261%" height="15" fill="rgb(233,212,5)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="693" width="0.0261%" height="15" fill="rgb(245,80,22)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="677" width="0.0261%" height="15" fill="rgb(238,129,16)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="661" width="0.0261%" height="15" fill="rgb(240,19,0)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2527%" y="645" width="0.0261%" height="15" fill="rgb(232,42,35)" fg:x="18992" fg:w="5"/><text x="99.5027%" y="655.50"></text></g><g><title>[anon] (2 samples, 0.01%)</title><rect x="99.2840%" y="885" width="0.0105%" height="15" fill="rgb(223,130,24)" fg:x="18998" fg:w="2"/><text x="99.5340%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="869" width="0.0157%" height="15" fill="rgb(237,16,22)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="853" width="0.0157%" height="15" fill="rgb(248,192,20)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="837" width="0.0157%" height="15" fill="rgb(233,167,2)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="821" width="0.0157%" height="15" fill="rgb(252,71,44)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="805" width="0.0157%" height="15" fill="rgb(238,37,47)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="789" width="0.0157%" height="15" fill="rgb(214,202,54)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.2997%" y="773" width="0.0157%" height="15" fill="rgb(254,165,40)" fg:x="19001" fg:w="3"/><text x="99.5497%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.3049%" y="757" width="0.0105%" height="15" fill="rgb(246,173,38)" fg:x="19002" fg:w="2"/><text x="99.5549%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.3049%" y="741" width="0.0105%" height="15" fill="rgb(215,3,27)" fg:x="19002" fg:w="2"/><text x="99.5549%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.2945%" y="885" width="0.0261%" height="15" fill="rgb(239,169,51)" fg:x="19000" fg:w="5"/><text x="99.5445%" y="895.50"></text></g><g><title>pa_stream_writable_size (2 samples, 0.01%)</title><rect x="99.3677%" y="629" width="0.0105%" height="15" fill="rgb(212,5,25)" fg:x="19014" fg:w="2"/><text x="99.6177%" y="639.50"></text></g><g><title>pa_detect_fork (2 samples, 0.01%)</title><rect x="99.3677%" y="613" width="0.0105%" height="15" fill="rgb(243,45,17)" fg:x="19014" fg:w="2"/><text x="99.6177%" y="623.50"></text></g><g><title>__GI___getpid (2 samples, 0.01%)</title><rect x="99.3677%" y="597" width="0.0105%" height="15" fill="rgb(242,97,9)" fg:x="19014" fg:w="2"/><text x="99.6177%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.3677%" y="581" width="0.0105%" height="15" fill="rgb(228,71,31)" fg:x="19014" fg:w="2"/><text x="99.6177%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.3677%" y="565" width="0.0105%" height="15" fill="rgb(252,184,16)" fg:x="19014" fg:w="2"/><text x="99.6177%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.3677%" y="549" width="0.0105%" height="15" fill="rgb(236,169,46)" fg:x="19014" fg:w="2"/><text x="99.6177%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.03%)</title><rect x="99.3624%" y="645" width="0.0314%" height="15" fill="rgb(207,17,47)" fg:x="19013" fg:w="6"/><text x="99.6124%" y="655.50"></text></g><g><title>pulse_check_connection (3 samples, 0.02%)</title><rect x="99.3781%" y="629" width="0.0157%" height="15" fill="rgb(206,201,28)" fg:x="19016" fg:w="3"/><text x="99.6281%" y="639.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.01%)</title><rect x="99.3833%" y="613" width="0.0105%" height="15" fill="rgb(224,184,23)" fg:x="19017" fg:w="2"/><text x="99.6333%" y="623.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (11 samples, 0.06%)</title><rect x="99.3624%" y="661" width="0.0575%" height="15" fill="rgb(208,139,48)" fg:x="19013" fg:w="11"/><text x="99.6124%" y="671.50"></text></g><g><title>__GI___libc_write (5 samples, 0.03%)</title><rect x="99.3938%" y="645" width="0.0261%" height="15" fill="rgb(208,130,10)" fg:x="19019" fg:w="5"/><text x="99.6438%" y="655.50"></text></g><g><title>__GI___libc_write (5 samples, 0.03%)</title><rect x="99.3938%" y="629" width="0.0261%" height="15" fill="rgb(211,213,45)" fg:x="19019" fg:w="5"/><text x="99.6438%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.3938%" y="613" width="0.0261%" height="15" fill="rgb(235,100,30)" fg:x="19019" fg:w="5"/><text x="99.6438%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.3938%" y="597" width="0.0261%" height="15" fill="rgb(206,144,31)" fg:x="19019" fg:w="5"/><text x="99.6438%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.3938%" y="581" width="0.0261%" height="15" fill="rgb(224,200,26)" fg:x="19019" fg:w="5"/><text x="99.6438%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.3938%" y="565" width="0.0261%" height="15" fill="rgb(247,104,53)" fg:x="19019" fg:w="5"/><text x="99.6438%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.3990%" y="549" width="0.0209%" height="15" fill="rgb(220,14,17)" fg:x="19020" fg:w="4"/><text x="99.6490%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.4042%" y="533" width="0.0157%" height="15" fill="rgb(230,140,40)" fg:x="19021" fg:w="3"/><text x="99.6542%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.4042%" y="517" width="0.0157%" height="15" fill="rgb(229,2,41)" fg:x="19021" fg:w="3"/><text x="99.6542%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4095%" y="501" width="0.0105%" height="15" fill="rgb(232,89,16)" fg:x="19022" fg:w="2"/><text x="99.6595%" y="511.50"></text></g><g><title>[libpulse.so.0.24.1] (14 samples, 0.07%)</title><rect x="99.3572%" y="677" width="0.0732%" height="15" fill="rgb(247,59,52)" fg:x="19012" fg:w="14"/><text x="99.6072%" y="687.50"></text></g><g><title>[libpulse.so.0.24.1] (15 samples, 0.08%)</title><rect x="99.3572%" y="709" width="0.0784%" height="15" fill="rgb(226,110,21)" fg:x="19012" fg:w="15"/><text x="99.6072%" y="719.50"></text></g><g><title>pa_pdispatch_run (15 samples, 0.08%)</title><rect x="99.3572%" y="693" width="0.0784%" height="15" fill="rgb(224,176,43)" fg:x="19012" fg:w="15"/><text x="99.6072%" y="703.50"></text></g><g><title>pa_memexport_process_release (2 samples, 0.01%)</title><rect x="99.4356%" y="709" width="0.0105%" height="15" fill="rgb(221,73,6)" fg:x="19027" fg:w="2"/><text x="99.6856%" y="719.50"></text></g><g><title>[libpulsecommon-15.99.so] (20 samples, 0.10%)</title><rect x="99.3467%" y="741" width="0.1045%" height="15" fill="rgb(232,78,19)" fg:x="19010" fg:w="20"/><text x="99.5967%" y="751.50"></text></g><g><title>[libpulsecommon-15.99.so] (19 samples, 0.10%)</title><rect x="99.3520%" y="725" width="0.0993%" height="15" fill="rgb(233,112,48)" fg:x="19011" fg:w="19"/><text x="99.6020%" y="735.50"></text></g><g><title>pa_memblock_get_pool (2 samples, 0.01%)</title><rect x="99.4513%" y="741" width="0.0105%" height="15" fill="rgb(243,131,47)" fg:x="19030" fg:w="2"/><text x="99.7013%" y="751.50"></text></g><g><title>[libpulsecommon-15.99.so] (27 samples, 0.14%)</title><rect x="99.3415%" y="757" width="0.1411%" height="15" fill="rgb(226,51,1)" fg:x="19009" fg:w="27"/><text x="99.5915%" y="767.50"></text></g><g><title>pa_srbchannel_write (3 samples, 0.02%)</title><rect x="99.4669%" y="741" width="0.0157%" height="15" fill="rgb(247,58,7)" fg:x="19033" fg:w="3"/><text x="99.7169%" y="751.50"></text></g><g><title>[libpulsecommon-15.99.so] (36 samples, 0.19%)</title><rect x="99.3311%" y="773" width="0.1881%" height="15" fill="rgb(209,7,32)" fg:x="19007" fg:w="36"/><text x="99.5811%" y="783.50"></text></g><g><title>pa_fdsem_after_poll (7 samples, 0.04%)</title><rect x="99.4826%" y="757" width="0.0366%" height="15" fill="rgb(209,39,41)" fg:x="19036" fg:w="7"/><text x="99.7326%" y="767.50"></text></g><g><title>[libpulsecommon-15.99.so] (6 samples, 0.03%)</title><rect x="99.4878%" y="741" width="0.0314%" height="15" fill="rgb(226,182,46)" fg:x="19037" fg:w="6"/><text x="99.7378%" y="751.50"></text></g><g><title>pa_read (6 samples, 0.03%)</title><rect x="99.4878%" y="725" width="0.0314%" height="15" fill="rgb(230,219,10)" fg:x="19037" fg:w="6"/><text x="99.7378%" y="735.50"></text></g><g><title>__GI___libc_read (6 samples, 0.03%)</title><rect x="99.4878%" y="709" width="0.0314%" height="15" fill="rgb(227,175,30)" fg:x="19037" fg:w="6"/><text x="99.7378%" y="719.50"></text></g><g><title>__GI___libc_read (6 samples, 0.03%)</title><rect x="99.4878%" y="693" width="0.0314%" height="15" fill="rgb(217,2,50)" fg:x="19037" fg:w="6"/><text x="99.7378%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.4878%" y="677" width="0.0314%" height="15" fill="rgb(229,160,0)" fg:x="19037" fg:w="6"/><text x="99.7378%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.4878%" y="661" width="0.0314%" height="15" fill="rgb(207,78,37)" fg:x="19037" fg:w="6"/><text x="99.7378%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.4931%" y="645" width="0.0261%" height="15" fill="rgb(225,57,0)" fg:x="19038" fg:w="5"/><text x="99.7431%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.4983%" y="629" width="0.0209%" height="15" fill="rgb(232,154,2)" fg:x="19039" fg:w="4"/><text x="99.7483%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.5035%" y="613" width="0.0157%" height="15" fill="rgb(241,212,25)" fg:x="19040" fg:w="3"/><text x="99.7535%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.5088%" y="597" width="0.0105%" height="15" fill="rgb(226,69,20)" fg:x="19041" fg:w="2"/><text x="99.7588%" y="607.50"></text></g><g><title>__GI___poll (3 samples, 0.02%)</title><rect x="99.5192%" y="773" width="0.0157%" height="15" fill="rgb(247,184,54)" fg:x="19043" fg:w="3"/><text x="99.7692%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.5192%" y="757" width="0.0157%" height="15" fill="rgb(210,145,0)" fg:x="19043" fg:w="3"/><text x="99.7692%" y="767.50"></text></g><g><title>pa_mainloop_dispatch (43 samples, 0.22%)</title><rect x="99.3206%" y="789" width="0.2247%" height="15" fill="rgb(253,82,12)" fg:x="19005" fg:w="43"/><text x="99.5706%" y="799.50"></text></g><g><title>__GI___poll (73 samples, 0.38%)</title><rect x="99.5610%" y="757" width="0.3815%" height="15" fill="rgb(245,42,11)" fg:x="19051" fg:w="73"/><text x="99.8110%" y="767.50"></text></g><g><title>[unknown] (73 samples, 0.38%)</title><rect x="99.5610%" y="741" width="0.3815%" height="15" fill="rgb(219,147,32)" fg:x="19051" fg:w="73"/><text x="99.8110%" y="751.50"></text></g><g><title>[unknown] (71 samples, 0.37%)</title><rect x="99.5715%" y="725" width="0.3710%" height="15" fill="rgb(246,12,7)" fg:x="19053" fg:w="71"/><text x="99.8215%" y="735.50"></text></g><g><title>[unknown] (71 samples, 0.37%)</title><rect x="99.5715%" y="709" width="0.3710%" height="15" fill="rgb(243,50,9)" fg:x="19053" fg:w="71"/><text x="99.8215%" y="719.50"></text></g><g><title>[unknown] (70 samples, 0.37%)</title><rect x="99.5767%" y="693" width="0.3658%" height="15" fill="rgb(219,149,6)" fg:x="19054" fg:w="70"/><text x="99.8267%" y="703.50"></text></g><g><title>[unknown] (69 samples, 0.36%)</title><rect x="99.5819%" y="677" width="0.3606%" height="15" fill="rgb(241,51,42)" fg:x="19055" fg:w="69"/><text x="99.8319%" y="687.50"></text></g><g><title>[unknown] (64 samples, 0.33%)</title><rect x="99.6080%" y="661" width="0.3345%" height="15" fill="rgb(226,128,27)" fg:x="19060" fg:w="64"/><text x="99.8580%" y="671.50"></text></g><g><title>[unknown] (59 samples, 0.31%)</title><rect x="99.6342%" y="645" width="0.3083%" height="15" fill="rgb(244,144,4)" fg:x="19065" fg:w="59"/><text x="99.8842%" y="655.50"></text></g><g><title>[unknown] (53 samples, 0.28%)</title><rect x="99.6655%" y="629" width="0.2770%" height="15" fill="rgb(221,4,13)" fg:x="19071" fg:w="53"/><text x="99.9155%" y="639.50"></text></g><g><title>[unknown] (48 samples, 0.25%)</title><rect x="99.6917%" y="613" width="0.2508%" height="15" fill="rgb(208,170,28)" fg:x="19076" fg:w="48"/><text x="99.9417%" y="623.50"></text></g><g><title>[unknown] (47 samples, 0.25%)</title><rect x="99.6969%" y="597" width="0.2456%" height="15" fill="rgb(226,131,13)" fg:x="19077" fg:w="47"/><text x="99.9469%" y="607.50"></text></g><g><title>[unknown] (42 samples, 0.22%)</title><rect x="99.7230%" y="581" width="0.2195%" height="15" fill="rgb(215,72,41)" fg:x="19082" fg:w="42"/><text x="99.9730%" y="591.50"></text></g><g><title>[unknown] (36 samples, 0.19%)</title><rect x="99.7544%" y="565" width="0.1881%" height="15" fill="rgb(243,108,20)" fg:x="19088" fg:w="36"/><text x="100.0044%" y="575.50"></text></g><g><title>[unknown] (36 samples, 0.19%)</title><rect x="99.7544%" y="549" width="0.1881%" height="15" fill="rgb(230,189,17)" fg:x="19088" fg:w="36"/><text x="100.0044%" y="559.50"></text></g><g><title>[unknown] (33 samples, 0.17%)</title><rect x="99.7701%" y="533" width="0.1725%" height="15" fill="rgb(220,50,17)" fg:x="19091" fg:w="33"/><text x="100.0201%" y="543.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.01%)</title><rect x="99.9477%" y="741" width="0.0105%" height="15" fill="rgb(248,152,48)" fg:x="19125" fg:w="2"/><text x="100.1977%" y="751.50"></text></g><g><title>pa_mainloop_poll (80 samples, 0.42%)</title><rect x="99.5453%" y="789" width="0.4181%" height="15" fill="rgb(244,91,11)" fg:x="19048" fg:w="80"/><text x="99.7953%" y="799.50"></text></g><g><title>[libpulse.so.0.24.1] (78 samples, 0.41%)</title><rect x="99.5558%" y="773" width="0.4076%" height="15" fill="rgb(220,157,5)" fg:x="19050" fg:w="78"/><text x="99.8058%" y="783.50"></text></g><g><title>pa_mutex_lock (3 samples, 0.02%)</title><rect x="99.9477%" y="757" width="0.0157%" height="15" fill="rgb(253,137,8)" fg:x="19125" fg:w="3"/><text x="100.1977%" y="767.50"></text></g><g><title>all (19,135 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(217,137,51)" fg:x="0" fg:w="19135"/><text x="0.2500%" y="927.50"></text></g><g><title>threaded-ml (138 samples, 0.72%)</title><rect x="99.2788%" y="901" width="0.7212%" height="15" fill="rgb(218,209,53)" fg:x="18997" fg:w="138"/><text x="99.5288%" y="911.50"></text></g><g><title>__clone3 (130 samples, 0.68%)</title><rect x="99.3206%" y="885" width="0.6794%" height="15" fill="rgb(249,137,25)" fg:x="19005" fg:w="130"/><text x="99.5706%" y="895.50"></text></g><g><title>start_thread (130 samples, 0.68%)</title><rect x="99.3206%" y="869" width="0.6794%" height="15" fill="rgb(239,155,26)" fg:x="19005" fg:w="130"/><text x="99.5706%" y="879.50"></text></g><g><title>[libpulsecommon-15.99.so] (130 samples, 0.68%)</title><rect x="99.3206%" y="853" width="0.6794%" height="15" fill="rgb(227,85,46)" fg:x="19005" fg:w="130"/><text x="99.5706%" y="863.50"></text></g><g><title>[libpulse.so.0.24.1] (130 samples, 0.68%)</title><rect x="99.3206%" y="837" width="0.6794%" height="15" fill="rgb(251,107,43)" fg:x="19005" fg:w="130"/><text x="99.5706%" y="847.50"></text></g><g><title>pa_mainloop_run (130 samples, 0.68%)</title><rect x="99.3206%" y="821" width="0.6794%" height="15" fill="rgb(234,170,33)" fg:x="19005" fg:w="130"/><text x="99.5706%" y="831.50"></text></g><g><title>pa_mainloop_iterate (130 samples, 0.68%)</title><rect x="99.3206%" y="805" width="0.6794%" height="15" fill="rgb(206,29,35)" fg:x="19005" fg:w="130"/><text x="99.5706%" y="815.50"></text></g><g><title>pa_mainloop_prepare (7 samples, 0.04%)</title><rect x="99.9634%" y="789" width="0.0366%" height="15" fill="rgb(227,138,25)" fg:x="19128" fg:w="7"/><text x="100.2134%" y="799.50"></text></g><g><title>pa_read (7 samples, 0.04%)</title><rect x="99.9634%" y="773" width="0.0366%" height="15" fill="rgb(249,131,35)" fg:x="19128" fg:w="7"/><text x="100.2134%" y="783.50"></text></g><g><title>__GI___libc_read (6 samples, 0.03%)</title><rect x="99.9686%" y="757" width="0.0314%" height="15" fill="rgb(239,6,40)" fg:x="19129" fg:w="6"/><text x="100.2186%" y="767.50"></text></g><g><title>__GI___libc_read (6 samples, 0.03%)</title><rect x="99.9686%" y="741" width="0.0314%" height="15" fill="rgb(246,136,47)" fg:x="19129" fg:w="6"/><text x="100.2186%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="99.9686%" y="725" width="0.0314%" height="15" fill="rgb(253,58,26)" fg:x="19129" fg:w="6"/><text x="100.2186%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9895%" y="709" width="0.0105%" height="15" fill="rgb(237,141,10)" fg:x="19133" fg:w="2"/><text x="100.2395%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9895%" y="693" width="0.0105%" height="15" fill="rgb(234,156,12)" fg:x="19133" fg:w="2"/><text x="100.2395%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9895%" y="677" width="0.0105%" height="15" fill="rgb(243,224,36)" fg:x="19133" fg:w="2"/><text x="100.2395%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9895%" y="661" width="0.0105%" height="15" fill="rgb(205,229,51)" fg:x="19133" fg:w="2"/><text x="100.2395%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.9895%" y="645" width="0.0105%" height="15" fill="rgb(223,189,4)" fg:x="19133" fg:w="2"/><text x="100.2395%" y="655.50"></text></g></svg></svg>