<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="950" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="933.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="933.00"> </text><svg id="frames" x="10" width="1180" total_samples="17626"><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="0.0000%" y="869" width="0.0170%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="0.0000%" y="853" width="0.0170%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="869" width="0.0170%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="3"/><text x="0.2670%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="853" width="0.0170%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="3"/><text x="0.2670%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="837" width="0.0170%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="3"/><text x="0.2670%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="821" width="0.0170%" height="15" fill="rgb(232,128,0)" fg:x="3" fg:w="3"/><text x="0.2670%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="805" width="0.0170%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="3"/><text x="0.2670%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="789" width="0.0170%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="3"/><text x="0.2670%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="773" width="0.0170%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="3"/><text x="0.2670%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.0170%" y="757" width="0.0170%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="3"/><text x="0.2670%" y="767.50"></text></g><g><title>[unknown] (101 samples, 0.57%)</title><rect x="0.1759%" y="709" width="0.5730%" height="15" fill="rgb(250,228,42)" fg:x="31" fg:w="101"/><text x="0.4259%" y="719.50"></text></g><g><title>[unknown] (87 samples, 0.49%)</title><rect x="0.2553%" y="693" width="0.4936%" height="15" fill="rgb(240,193,28)" fg:x="45" fg:w="87"/><text x="0.5053%" y="703.50"></text></g><g><title>[unknown] (87 samples, 0.49%)</title><rect x="0.2553%" y="677" width="0.4936%" height="15" fill="rgb(216,20,37)" fg:x="45" fg:w="87"/><text x="0.5053%" y="687.50"></text></g><g><title>[unknown] (81 samples, 0.46%)</title><rect x="0.2893%" y="661" width="0.4595%" height="15" fill="rgb(206,188,39)" fg:x="51" fg:w="81"/><text x="0.5393%" y="671.50"></text></g><g><title>[unknown] (79 samples, 0.45%)</title><rect x="0.3007%" y="645" width="0.4482%" height="15" fill="rgb(217,207,13)" fg:x="53" fg:w="79"/><text x="0.5507%" y="655.50"></text></g><g><title>[unknown] (69 samples, 0.39%)</title><rect x="0.3574%" y="629" width="0.3915%" height="15" fill="rgb(231,73,38)" fg:x="63" fg:w="69"/><text x="0.6074%" y="639.50"></text></g><g><title>[unknown] (64 samples, 0.36%)</title><rect x="0.3858%" y="613" width="0.3631%" height="15" fill="rgb(225,20,46)" fg:x="68" fg:w="64"/><text x="0.6358%" y="623.50"></text></g><g><title>[unknown] (55 samples, 0.31%)</title><rect x="0.4369%" y="597" width="0.3120%" height="15" fill="rgb(210,31,41)" fg:x="77" fg:w="55"/><text x="0.6869%" y="607.50"></text></g><g><title>[unknown] (47 samples, 0.27%)</title><rect x="0.4822%" y="581" width="0.2667%" height="15" fill="rgb(221,200,47)" fg:x="85" fg:w="47"/><text x="0.7322%" y="591.50"></text></g><g><title>[unknown] (39 samples, 0.22%)</title><rect x="0.5276%" y="565" width="0.2213%" height="15" fill="rgb(226,26,5)" fg:x="93" fg:w="39"/><text x="0.7776%" y="575.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="0.6014%" y="549" width="0.1475%" height="15" fill="rgb(249,33,26)" fg:x="106" fg:w="26"/><text x="0.8514%" y="559.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="0.6524%" y="533" width="0.0964%" height="15" fill="rgb(235,183,28)" fg:x="115" fg:w="17"/><text x="0.9024%" y="543.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="0.6695%" y="517" width="0.0794%" height="15" fill="rgb(221,5,38)" fg:x="118" fg:w="14"/><text x="0.9195%" y="527.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (107 samples, 0.61%)</title><rect x="0.1645%" y="757" width="0.6071%" height="15" fill="rgb(247,18,42)" fg:x="29" fg:w="107"/><text x="0.4145%" y="767.50"></text></g><g><title>__futex_abstimed_wait_common (106 samples, 0.60%)</title><rect x="0.1702%" y="741" width="0.6014%" height="15" fill="rgb(241,131,45)" fg:x="30" fg:w="106"/><text x="0.4202%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common64 (106 samples, 0.60%)</title><rect x="0.1702%" y="725" width="0.6014%" height="15" fill="rgb(249,31,29)" fg:x="30" fg:w="106"/><text x="0.4202%" y="735.50"></text></g><g><title>__GI___pthread_disable_asynccancel (4 samples, 0.02%)</title><rect x="0.7489%" y="709" width="0.0227%" height="15" fill="rgb(225,111,53)" fg:x="132" fg:w="4"/><text x="0.9989%" y="719.50"></text></g><g><title>__condvar_dec_grefs (3 samples, 0.02%)</title><rect x="0.7773%" y="757" width="0.0170%" height="15" fill="rgb(238,160,17)" fg:x="137" fg:w="3"/><text x="1.0273%" y="767.50"></text></g><g><title>___pthread_cond_timedwait64 (120 samples, 0.68%)</title><rect x="0.1248%" y="789" width="0.6808%" height="15" fill="rgb(214,148,48)" fg:x="22" fg:w="120"/><text x="0.3748%" y="799.50"></text></g><g><title>__pthread_cond_wait_common (117 samples, 0.66%)</title><rect x="0.1418%" y="773" width="0.6638%" height="15" fill="rgb(232,36,49)" fg:x="25" fg:w="117"/><text x="0.3918%" y="783.50"></text></g><g><title>__pthread_mutex_cond_lock (2 samples, 0.01%)</title><rect x="0.7943%" y="757" width="0.0113%" height="15" fill="rgb(209,103,24)" fg:x="140" fg:w="2"/><text x="1.0443%" y="767.50"></text></g><g><title>___pthread_mutex_unlock (14 samples, 0.08%)</title><rect x="0.8056%" y="789" width="0.0794%" height="15" fill="rgb(229,88,8)" fg:x="142" fg:w="14"/><text x="1.0556%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (14 samples, 0.08%)</title><rect x="0.8056%" y="773" width="0.0794%" height="15" fill="rgb(213,181,19)" fg:x="142" fg:w="14"/><text x="1.0556%" y="783.50"></text></g><g><title>lll_mutex_unlock_optimized (12 samples, 0.07%)</title><rect x="0.8170%" y="757" width="0.0681%" height="15" fill="rgb(254,191,54)" fg:x="144" fg:w="12"/><text x="1.0670%" y="767.50"></text></g><g><title>__GI___lll_lock_wake (12 samples, 0.07%)</title><rect x="0.8170%" y="741" width="0.0681%" height="15" fill="rgb(241,83,37)" fg:x="144" fg:w="12"/><text x="1.0670%" y="751.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="0.8170%" y="725" width="0.0681%" height="15" fill="rgb(233,36,39)" fg:x="144" fg:w="12"/><text x="1.0670%" y="735.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="0.8283%" y="709" width="0.0567%" height="15" fill="rgb(226,3,54)" fg:x="146" fg:w="10"/><text x="1.0783%" y="719.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="0.8340%" y="693" width="0.0511%" height="15" fill="rgb(245,192,40)" fg:x="147" fg:w="9"/><text x="1.0840%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.8567%" y="677" width="0.0284%" height="15" fill="rgb(238,167,29)" fg:x="151" fg:w="5"/><text x="1.1067%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.8567%" y="661" width="0.0284%" height="15" fill="rgb(232,182,51)" fg:x="151" fg:w="5"/><text x="1.1067%" y="671.50"></text></g><g><title>[vkrt]_Analysis (161 samples, 0.91%)</title><rect x="0.0000%" y="885" width="0.9134%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="161"/><text x="0.2500%" y="895.50"></text></g><g><title>__clone3 (155 samples, 0.88%)</title><rect x="0.0340%" y="869" width="0.8794%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="155"/><text x="0.2840%" y="879.50"></text></g><g><title>start_thread (155 samples, 0.88%)</title><rect x="0.0340%" y="853" width="0.8794%" height="15" fill="rgb(235,93,37)" fg:x="6" fg:w="155"/><text x="0.2840%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (155 samples, 0.88%)</title><rect x="0.0340%" y="837" width="0.8794%" height="15" fill="rgb(213,116,39)" fg:x="6" fg:w="155"/><text x="0.2840%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (155 samples, 0.88%)</title><rect x="0.0340%" y="821" width="0.8794%" height="15" fill="rgb(222,207,29)" fg:x="6" fg:w="155"/><text x="0.2840%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (146 samples, 0.83%)</title><rect x="0.0851%" y="805" width="0.8283%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="146"/><text x="0.3351%" y="815.50"></text></g><g><title>gettimeofday@plt (3 samples, 0.02%)</title><rect x="0.8964%" y="789" width="0.0170%" height="15" fill="rgb(218,138,4)" fg:x="158" fg:w="3"/><text x="1.1464%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.07%)</title><rect x="0.9248%" y="853" width="0.0681%" height="15" fill="rgb(250,191,14)" fg:x="163" fg:w="12"/><text x="1.1748%" y="863.50"></text></g><g><title>[[heap]] (16 samples, 0.09%)</title><rect x="0.9248%" y="869" width="0.0908%" height="15" fill="rgb(239,60,40)" fg:x="163" fg:w="16"/><text x="1.1748%" y="879.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (5 samples, 0.03%)</title><rect x="1.0212%" y="853" width="0.0284%" height="15" fill="rgb(206,27,48)" fg:x="180" fg:w="5"/><text x="1.2712%" y="863.50"></text></g><g><title>[anon] (16 samples, 0.09%)</title><rect x="1.0155%" y="869" width="0.0908%" height="15" fill="rgb(225,35,8)" fg:x="179" fg:w="16"/><text x="1.2655%" y="879.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (10 samples, 0.06%)</title><rect x="1.0496%" y="853" width="0.0567%" height="15" fill="rgb(250,213,24)" fg:x="185" fg:w="10"/><text x="1.2996%" y="863.50"></text></g><g><title>[neuralang] (5 samples, 0.03%)</title><rect x="1.1063%" y="869" width="0.0284%" height="15" fill="rgb(247,123,22)" fg:x="195" fg:w="5"/><text x="1.3563%" y="879.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (5 samples, 0.03%)</title><rect x="1.1063%" y="853" width="0.0284%" height="15" fill="rgb(231,138,38)" fg:x="195" fg:w="5"/><text x="1.3563%" y="863.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.13%)</title><rect x="1.1460%" y="853" width="0.1305%" height="15" fill="rgb(231,145,46)" fg:x="202" fg:w="23"/><text x="1.3960%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="1.2879%" y="853" width="0.0284%" height="15" fill="rgb(251,118,11)" fg:x="227" fg:w="5"/><text x="1.5379%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="1.2879%" y="837" width="0.0284%" height="15" fill="rgb(217,147,25)" fg:x="227" fg:w="5"/><text x="1.5379%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="1.2879%" y="821" width="0.0284%" height="15" fill="rgb(247,81,37)" fg:x="227" fg:w="5"/><text x="1.5379%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="1.2935%" y="805" width="0.0227%" height="15" fill="rgb(209,12,38)" fg:x="228" fg:w="4"/><text x="1.5435%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="1.2935%" y="789" width="0.0227%" height="15" fill="rgb(227,1,9)" fg:x="228" fg:w="4"/><text x="1.5435%" y="799.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="1.2935%" y="773" width="0.0227%" height="15" fill="rgb(248,47,43)" fg:x="228" fg:w="4"/><text x="1.5435%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="1.3049%" y="757" width="0.0113%" height="15" fill="rgb(221,10,30)" fg:x="230" fg:w="2"/><text x="1.5549%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="1.3049%" y="741" width="0.0113%" height="15" fill="rgb(210,229,1)" fg:x="230" fg:w="2"/><text x="1.5549%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="1.3049%" y="725" width="0.0113%" height="15" fill="rgb(222,148,37)" fg:x="230" fg:w="2"/><text x="1.5549%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="1.3049%" y="709" width="0.0113%" height="15" fill="rgb(234,67,33)" fg:x="230" fg:w="2"/><text x="1.5549%" y="719.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (3 samples, 0.02%)</title><rect x="1.3333%" y="853" width="0.0170%" height="15" fill="rgb(247,98,35)" fg:x="235" fg:w="3"/><text x="1.5833%" y="863.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (3 samples, 0.02%)</title><rect x="1.3333%" y="837" width="0.0170%" height="15" fill="rgb(247,138,52)" fg:x="235" fg:w="3"/><text x="1.5833%" y="847.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (3 samples, 0.02%)</title><rect x="1.3333%" y="821" width="0.0170%" height="15" fill="rgb(213,79,30)" fg:x="235" fg:w="3"/><text x="1.5833%" y="831.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="1.3333%" y="805" width="0.0170%" height="15" fill="rgb(246,177,23)" fg:x="235" fg:w="3"/><text x="1.5833%" y="815.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="1.3333%" y="789" width="0.0170%" height="15" fill="rgb(230,62,27)" fg:x="235" fg:w="3"/><text x="1.5833%" y="799.50"></text></g><g><title>[unknown] (45 samples, 0.26%)</title><rect x="1.1347%" y="869" width="0.2553%" height="15" fill="rgb(216,154,8)" fg:x="200" fg:w="45"/><text x="1.3847%" y="879.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (7 samples, 0.04%)</title><rect x="1.3503%" y="853" width="0.0397%" height="15" fill="rgb(244,35,45)" fg:x="238" fg:w="7"/><text x="1.6003%" y="863.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::fill (4 samples, 0.02%)</title><rect x="1.3957%" y="613" width="0.0227%" height="15" fill="rgb(251,115,12)" fg:x="246" fg:w="4"/><text x="1.6457%" y="623.50"></text></g><g><title>snd_pcm_poll_descriptors (4 samples, 0.02%)</title><rect x="1.3957%" y="597" width="0.0227%" height="15" fill="rgb(240,54,50)" fg:x="246" fg:w="4"/><text x="1.6457%" y="607.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (7 samples, 0.04%)</title><rect x="1.4467%" y="549" width="0.0397%" height="15" fill="rgb(233,84,52)" fg:x="255" fg:w="7"/><text x="1.6967%" y="559.50"></text></g><g><title>pa_stream_writable_size (7 samples, 0.04%)</title><rect x="1.4467%" y="533" width="0.0397%" height="15" fill="rgb(207,117,47)" fg:x="255" fg:w="7"/><text x="1.6967%" y="543.50"></text></g><g><title>pa_detect_fork (6 samples, 0.03%)</title><rect x="1.4524%" y="517" width="0.0340%" height="15" fill="rgb(249,43,39)" fg:x="256" fg:w="6"/><text x="1.7024%" y="527.50"></text></g><g><title>__GI___getpid (4 samples, 0.02%)</title><rect x="1.4637%" y="501" width="0.0227%" height="15" fill="rgb(209,38,44)" fg:x="258" fg:w="4"/><text x="1.7137%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="1.4637%" y="485" width="0.0227%" height="15" fill="rgb(236,212,23)" fg:x="258" fg:w="4"/><text x="1.7137%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="1.4694%" y="469" width="0.0170%" height="15" fill="rgb(242,79,21)" fg:x="259" fg:w="3"/><text x="1.7194%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="1.4694%" y="453" width="0.0170%" height="15" fill="rgb(211,96,35)" fg:x="259" fg:w="3"/><text x="1.7194%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="1.4751%" y="437" width="0.0113%" height="15" fill="rgb(253,215,40)" fg:x="260" fg:w="2"/><text x="1.7251%" y="447.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (13 samples, 0.07%)</title><rect x="1.4467%" y="565" width="0.0738%" height="15" fill="rgb(211,81,21)" fg:x="255" fg:w="13"/><text x="1.6967%" y="575.50"></text></g><g><title>pa_threaded_mainloop_lock (5 samples, 0.03%)</title><rect x="1.4921%" y="549" width="0.0284%" height="15" fill="rgb(208,190,38)" fg:x="263" fg:w="5"/><text x="1.7421%" y="559.50"></text></g><g><title>pa_thread_self (2 samples, 0.01%)</title><rect x="1.5091%" y="533" width="0.0113%" height="15" fill="rgb(235,213,38)" fg:x="266" fg:w="2"/><text x="1.7591%" y="543.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (21 samples, 0.12%)</title><rect x="1.4184%" y="613" width="0.1191%" height="15" fill="rgb(237,122,38)" fg:x="250" fg:w="21"/><text x="1.6684%" y="623.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (21 samples, 0.12%)</title><rect x="1.4184%" y="597" width="0.1191%" height="15" fill="rgb(244,218,35)" fg:x="250" fg:w="21"/><text x="1.6684%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (18 samples, 0.10%)</title><rect x="1.4354%" y="581" width="0.1021%" height="15" fill="rgb(240,68,47)" fg:x="253" fg:w="18"/><text x="1.6854%" y="591.50"></text></g><g><title>___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="1.5262%" y="565" width="0.0113%" height="15" fill="rgb(210,16,53)" fg:x="269" fg:w="2"/><text x="1.7762%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.01%)</title><rect x="1.5262%" y="549" width="0.0113%" height="15" fill="rgb(235,124,12)" fg:x="269" fg:w="2"/><text x="1.7762%" y="559.50"></text></g><g><title>lll_mutex_unlock_optimized (2 samples, 0.01%)</title><rect x="1.5262%" y="533" width="0.0113%" height="15" fill="rgb(224,169,11)" fg:x="269" fg:w="2"/><text x="1.7762%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.01%)</title><rect x="1.5375%" y="613" width="0.0113%" height="15" fill="rgb(250,166,2)" fg:x="271" fg:w="2"/><text x="1.7875%" y="623.50"></text></g><g><title>alsa::pcm::PCM::avail (7 samples, 0.04%)</title><rect x="1.5488%" y="613" width="0.0397%" height="15" fill="rgb(242,216,29)" fg:x="273" fg:w="7"/><text x="1.7988%" y="623.50"></text></g><g><title>snd_pcm_avail (7 samples, 0.04%)</title><rect x="1.5488%" y="597" width="0.0397%" height="15" fill="rgb(230,116,27)" fg:x="273" fg:w="7"/><text x="1.7988%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (7 samples, 0.04%)</title><rect x="1.5488%" y="581" width="0.0397%" height="15" fill="rgb(228,99,48)" fg:x="273" fg:w="7"/><text x="1.7988%" y="591.50"></text></g><g><title>[libasound.so.2.0.0] (7 samples, 0.04%)</title><rect x="1.5488%" y="565" width="0.0397%" height="15" fill="rgb(253,11,6)" fg:x="273" fg:w="7"/><text x="1.7988%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (7 samples, 0.04%)</title><rect x="1.5488%" y="549" width="0.0397%" height="15" fill="rgb(247,143,39)" fg:x="273" fg:w="7"/><text x="1.7988%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (7 samples, 0.04%)</title><rect x="1.5488%" y="533" width="0.0397%" height="15" fill="rgb(236,97,10)" fg:x="273" fg:w="7"/><text x="1.7988%" y="543.50"></text></g><g><title>pa_stream_writable_size (6 samples, 0.03%)</title><rect x="1.5545%" y="517" width="0.0340%" height="15" fill="rgb(233,208,19)" fg:x="274" fg:w="6"/><text x="1.8045%" y="527.50"></text></g><g><title>pa_detect_fork (6 samples, 0.03%)</title><rect x="1.5545%" y="501" width="0.0340%" height="15" fill="rgb(216,164,2)" fg:x="274" fg:w="6"/><text x="1.8045%" y="511.50"></text></g><g><title>__GI___getpid (6 samples, 0.03%)</title><rect x="1.5545%" y="485" width="0.0340%" height="15" fill="rgb(220,129,5)" fg:x="274" fg:w="6"/><text x="1.8045%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="1.5545%" y="469" width="0.0340%" height="15" fill="rgb(242,17,10)" fg:x="274" fg:w="6"/><text x="1.8045%" y="479.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.02%)</title><rect x="1.6169%" y="517" width="0.0227%" height="15" fill="rgb(242,107,0)" fg:x="285" fg:w="4"/><text x="1.8669%" y="527.50"></text></g><g><title>pa_stream_writable_size (4 samples, 0.02%)</title><rect x="1.6169%" y="501" width="0.0227%" height="15" fill="rgb(251,28,31)" fg:x="285" fg:w="4"/><text x="1.8669%" y="511.50"></text></g><g><title>pa_detect_fork (4 samples, 0.02%)</title><rect x="1.6169%" y="485" width="0.0227%" height="15" fill="rgb(233,223,10)" fg:x="285" fg:w="4"/><text x="1.8669%" y="495.50"></text></g><g><title>__GI___getpid (4 samples, 0.02%)</title><rect x="1.6169%" y="469" width="0.0227%" height="15" fill="rgb(215,21,27)" fg:x="285" fg:w="4"/><text x="1.8669%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="1.6226%" y="453" width="0.0170%" height="15" fill="rgb(232,23,21)" fg:x="286" fg:w="3"/><text x="1.8726%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.03%)</title><rect x="1.6113%" y="549" width="0.0340%" height="15" fill="rgb(244,5,23)" fg:x="284" fg:w="6"/><text x="1.8613%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.03%)</title><rect x="1.6113%" y="533" width="0.0340%" height="15" fill="rgb(226,81,46)" fg:x="284" fg:w="6"/><text x="1.8613%" y="543.50"></text></g><g><title>pa_bytes_to_usec (3 samples, 0.02%)</title><rect x="1.6566%" y="517" width="0.0170%" height="15" fill="rgb(247,70,30)" fg:x="292" fg:w="3"/><text x="1.9066%" y="527.50"></text></g><g><title>pa_sample_spec_valid (3 samples, 0.02%)</title><rect x="1.6566%" y="501" width="0.0170%" height="15" fill="rgb(212,68,19)" fg:x="292" fg:w="3"/><text x="1.9066%" y="511.50"></text></g><g><title>pa_detect_fork (3 samples, 0.02%)</title><rect x="1.6737%" y="517" width="0.0170%" height="15" fill="rgb(240,187,13)" fg:x="295" fg:w="3"/><text x="1.9237%" y="527.50"></text></g><g><title>__GI___getpid (3 samples, 0.02%)</title><rect x="1.6737%" y="501" width="0.0170%" height="15" fill="rgb(223,113,26)" fg:x="295" fg:w="3"/><text x="1.9237%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="1.6737%" y="485" width="0.0170%" height="15" fill="rgb(206,192,2)" fg:x="295" fg:w="3"/><text x="1.9237%" y="495.50"></text></g><g><title>pa_stream_get_latency (14 samples, 0.08%)</title><rect x="1.6510%" y="533" width="0.0794%" height="15" fill="rgb(241,108,4)" fg:x="291" fg:w="14"/><text x="1.9010%" y="543.50"></text></g><g><title>pa_stream_get_time (7 samples, 0.04%)</title><rect x="1.6907%" y="517" width="0.0397%" height="15" fill="rgb(247,173,49)" fg:x="298" fg:w="7"/><text x="1.9407%" y="527.50"></text></g><g><title>pa_detect_fork (7 samples, 0.04%)</title><rect x="1.6907%" y="501" width="0.0397%" height="15" fill="rgb(224,114,35)" fg:x="298" fg:w="7"/><text x="1.9407%" y="511.50"></text></g><g><title>__GI___getpid (7 samples, 0.04%)</title><rect x="1.6907%" y="485" width="0.0397%" height="15" fill="rgb(245,159,27)" fg:x="298" fg:w="7"/><text x="1.9407%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="1.6907%" y="469" width="0.0397%" height="15" fill="rgb(245,172,44)" fg:x="298" fg:w="7"/><text x="1.9407%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="1.7077%" y="453" width="0.0227%" height="15" fill="rgb(236,23,11)" fg:x="301" fg:w="4"/><text x="1.9577%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="1.7077%" y="437" width="0.0227%" height="15" fill="rgb(205,117,38)" fg:x="301" fg:w="4"/><text x="1.9577%" y="447.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (16 samples, 0.09%)</title><rect x="1.6453%" y="549" width="0.0908%" height="15" fill="rgb(237,72,25)" fg:x="290" fg:w="16"/><text x="1.8953%" y="559.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (28 samples, 0.16%)</title><rect x="1.5886%" y="597" width="0.1589%" height="15" fill="rgb(244,70,9)" fg:x="280" fg:w="28"/><text x="1.8386%" y="607.50"></text></g><g><title>snd_pcm_status (27 samples, 0.15%)</title><rect x="1.5942%" y="581" width="0.1532%" height="15" fill="rgb(217,125,39)" fg:x="281" fg:w="27"/><text x="1.8442%" y="591.50"></text></g><g><title>[libasound.so.2.0.0] (26 samples, 0.15%)</title><rect x="1.5999%" y="565" width="0.1475%" height="15" fill="rgb(235,36,10)" fg:x="282" fg:w="26"/><text x="1.8499%" y="575.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="1.7361%" y="549" width="0.0113%" height="15" fill="rgb(251,123,47)" fg:x="306" fg:w="2"/><text x="1.9861%" y="559.50"></text></g><g><title>alsa::pcm::PCM::status (29 samples, 0.16%)</title><rect x="1.5886%" y="613" width="0.1645%" height="15" fill="rgb(221,13,13)" fg:x="280" fg:w="29"/><text x="1.8386%" y="623.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (143 samples, 0.81%)</title><rect x="1.3900%" y="629" width="0.8113%" height="15" fill="rgb(238,131,9)" fg:x="245" fg:w="143"/><text x="1.6400%" y="639.50"></text></g><g><title>alsa::poll::poll (78 samples, 0.44%)</title><rect x="1.7588%" y="613" width="0.4425%" height="15" fill="rgb(211,50,8)" fg:x="310" fg:w="78"/><text x="2.0088%" y="623.50"></text></g><g><title>__GI___poll (76 samples, 0.43%)</title><rect x="1.7701%" y="597" width="0.4312%" height="15" fill="rgb(245,182,24)" fg:x="312" fg:w="76"/><text x="2.0201%" y="607.50"></text></g><g><title>[unknown] (75 samples, 0.43%)</title><rect x="1.7758%" y="581" width="0.4255%" height="15" fill="rgb(242,14,37)" fg:x="313" fg:w="75"/><text x="2.0258%" y="591.50"></text></g><g><title>[unknown] (71 samples, 0.40%)</title><rect x="1.7985%" y="565" width="0.4028%" height="15" fill="rgb(246,228,12)" fg:x="317" fg:w="71"/><text x="2.0485%" y="575.50"></text></g><g><title>[unknown] (70 samples, 0.40%)</title><rect x="1.8042%" y="549" width="0.3971%" height="15" fill="rgb(213,55,15)" fg:x="318" fg:w="70"/><text x="2.0542%" y="559.50"></text></g><g><title>[unknown] (67 samples, 0.38%)</title><rect x="1.8212%" y="533" width="0.3801%" height="15" fill="rgb(209,9,3)" fg:x="321" fg:w="67"/><text x="2.0712%" y="543.50"></text></g><g><title>[unknown] (64 samples, 0.36%)</title><rect x="1.8382%" y="517" width="0.3631%" height="15" fill="rgb(230,59,30)" fg:x="324" fg:w="64"/><text x="2.0882%" y="527.50"></text></g><g><title>[unknown] (57 samples, 0.32%)</title><rect x="1.8779%" y="501" width="0.3234%" height="15" fill="rgb(209,121,21)" fg:x="331" fg:w="57"/><text x="2.1279%" y="511.50"></text></g><g><title>[unknown] (51 samples, 0.29%)</title><rect x="1.9119%" y="485" width="0.2893%" height="15" fill="rgb(220,109,13)" fg:x="337" fg:w="51"/><text x="2.1619%" y="495.50"></text></g><g><title>[unknown] (45 samples, 0.26%)</title><rect x="1.9460%" y="469" width="0.2553%" height="15" fill="rgb(232,18,1)" fg:x="343" fg:w="45"/><text x="2.1960%" y="479.50"></text></g><g><title>[unknown] (44 samples, 0.25%)</title><rect x="1.9517%" y="453" width="0.2496%" height="15" fill="rgb(215,41,42)" fg:x="344" fg:w="44"/><text x="2.2017%" y="463.50"></text></g><g><title>[unknown] (44 samples, 0.25%)</title><rect x="1.9517%" y="437" width="0.2496%" height="15" fill="rgb(224,123,36)" fg:x="344" fg:w="44"/><text x="2.2017%" y="447.50"></text></g><g><title>[unknown] (42 samples, 0.24%)</title><rect x="1.9630%" y="421" width="0.2383%" height="15" fill="rgb(240,125,3)" fg:x="346" fg:w="42"/><text x="2.2130%" y="431.50"></text></g><g><title>[unknown] (36 samples, 0.20%)</title><rect x="1.9970%" y="405" width="0.2042%" height="15" fill="rgb(205,98,50)" fg:x="352" fg:w="36"/><text x="2.2470%" y="415.50"></text></g><g><title>[unknown] (30 samples, 0.17%)</title><rect x="2.0311%" y="389" width="0.1702%" height="15" fill="rgb(205,185,37)" fg:x="358" fg:w="30"/><text x="2.2811%" y="399.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="2.0538%" y="373" width="0.1475%" height="15" fill="rgb(238,207,15)" fg:x="362" fg:w="26"/><text x="2.3038%" y="383.50"></text></g><g><title>[libasound.so.2.0.0] (4 samples, 0.02%)</title><rect x="2.2410%" y="549" width="0.0227%" height="15" fill="rgb(213,199,42)" fg:x="395" fg:w="4"/><text x="2.4910%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.02%)</title><rect x="2.2467%" y="533" width="0.0170%" height="15" fill="rgb(235,201,11)" fg:x="396" fg:w="3"/><text x="2.4967%" y="543.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.02%)</title><rect x="2.2467%" y="517" width="0.0170%" height="15" fill="rgb(207,46,11)" fg:x="396" fg:w="3"/><text x="2.4967%" y="527.50"></text></g><g><title>pa_stream_writable_size (3 samples, 0.02%)</title><rect x="2.2467%" y="501" width="0.0170%" height="15" fill="rgb(241,35,35)" fg:x="396" fg:w="3"/><text x="2.4967%" y="511.50"></text></g><g><title>pa_detect_fork (3 samples, 0.02%)</title><rect x="2.2467%" y="485" width="0.0170%" height="15" fill="rgb(243,32,47)" fg:x="396" fg:w="3"/><text x="2.4967%" y="495.50"></text></g><g><title>__GI___getpid (3 samples, 0.02%)</title><rect x="2.2467%" y="469" width="0.0170%" height="15" fill="rgb(247,202,23)" fg:x="396" fg:w="3"/><text x="2.4967%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.2467%" y="453" width="0.0170%" height="15" fill="rgb(219,102,11)" fg:x="396" fg:w="3"/><text x="2.4967%" y="463.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.01%)</title><rect x="2.2637%" y="517" width="0.0113%" height="15" fill="rgb(243,110,44)" fg:x="399" fg:w="2"/><text x="2.5137%" y="527.50"></text></g><g><title>pa_stream_writable_size (5 samples, 0.03%)</title><rect x="2.2750%" y="517" width="0.0284%" height="15" fill="rgb(222,74,54)" fg:x="401" fg:w="5"/><text x="2.5250%" y="527.50"></text></g><g><title>pa_detect_fork (5 samples, 0.03%)</title><rect x="2.2750%" y="501" width="0.0284%" height="15" fill="rgb(216,99,12)" fg:x="401" fg:w="5"/><text x="2.5250%" y="511.50"></text></g><g><title>__GI___getpid (5 samples, 0.03%)</title><rect x="2.2750%" y="485" width="0.0284%" height="15" fill="rgb(226,22,26)" fg:x="401" fg:w="5"/><text x="2.5250%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="2.2750%" y="469" width="0.0284%" height="15" fill="rgb(217,163,10)" fg:x="401" fg:w="5"/><text x="2.5250%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="2.2921%" y="453" width="0.0113%" height="15" fill="rgb(213,25,53)" fg:x="404" fg:w="2"/><text x="2.5421%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="2.2921%" y="437" width="0.0113%" height="15" fill="rgb(252,105,26)" fg:x="404" fg:w="2"/><text x="2.5421%" y="447.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (15 samples, 0.09%)</title><rect x="2.2637%" y="533" width="0.0851%" height="15" fill="rgb(220,39,43)" fg:x="399" fg:w="15"/><text x="2.5137%" y="543.50"></text></g><g><title>pulse_poll_deactivate (8 samples, 0.05%)</title><rect x="2.3034%" y="517" width="0.0454%" height="15" fill="rgb(229,68,48)" fg:x="406" fg:w="8"/><text x="2.5534%" y="527.50"></text></g><g><title>__GI___libc_read (7 samples, 0.04%)</title><rect x="2.3091%" y="501" width="0.0397%" height="15" fill="rgb(252,8,32)" fg:x="407" fg:w="7"/><text x="2.5591%" y="511.50"></text></g><g><title>__GI___libc_read (7 samples, 0.04%)</title><rect x="2.3091%" y="485" width="0.0397%" height="15" fill="rgb(223,20,43)" fg:x="407" fg:w="7"/><text x="2.5591%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="2.3091%" y="469" width="0.0397%" height="15" fill="rgb(229,81,49)" fg:x="407" fg:w="7"/><text x="2.5591%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.3318%" y="453" width="0.0170%" height="15" fill="rgb(236,28,36)" fg:x="411" fg:w="3"/><text x="2.5818%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.3318%" y="437" width="0.0170%" height="15" fill="rgb(249,185,26)" fg:x="411" fg:w="3"/><text x="2.5818%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.3318%" y="421" width="0.0170%" height="15" fill="rgb(249,174,33)" fg:x="411" fg:w="3"/><text x="2.5818%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.3318%" y="405" width="0.0170%" height="15" fill="rgb(233,201,37)" fg:x="411" fg:w="3"/><text x="2.5818%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.3318%" y="389" width="0.0170%" height="15" fill="rgb(221,78,26)" fg:x="411" fg:w="3"/><text x="2.5818%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.3318%" y="373" width="0.0170%" height="15" fill="rgb(250,127,30)" fg:x="411" fg:w="3"/><text x="2.5818%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="2.3375%" y="357" width="0.0113%" height="15" fill="rgb(230,49,44)" fg:x="412" fg:w="2"/><text x="2.5875%" y="367.50"></text></g><g><title>[libpulse.so.0.24.1] (16 samples, 0.09%)</title><rect x="2.3772%" y="501" width="0.0908%" height="15" fill="rgb(229,67,23)" fg:x="419" fg:w="16"/><text x="2.6272%" y="511.50"></text></g><g><title>pa_mainloop_wakeup (15 samples, 0.09%)</title><rect x="2.3828%" y="485" width="0.0851%" height="15" fill="rgb(249,83,47)" fg:x="420" fg:w="15"/><text x="2.6328%" y="495.50"></text></g><g><title>pa_write (14 samples, 0.08%)</title><rect x="2.3885%" y="469" width="0.0794%" height="15" fill="rgb(215,43,3)" fg:x="421" fg:w="14"/><text x="2.6385%" y="479.50"></text></g><g><title>__GI___libc_write (14 samples, 0.08%)</title><rect x="2.3885%" y="453" width="0.0794%" height="15" fill="rgb(238,154,13)" fg:x="421" fg:w="14"/><text x="2.6385%" y="463.50"></text></g><g><title>__GI___libc_write (14 samples, 0.08%)</title><rect x="2.3885%" y="437" width="0.0794%" height="15" fill="rgb(219,56,2)" fg:x="421" fg:w="14"/><text x="2.6385%" y="447.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="2.3885%" y="421" width="0.0794%" height="15" fill="rgb(233,0,4)" fg:x="421" fg:w="14"/><text x="2.6385%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="2.3999%" y="405" width="0.0681%" height="15" fill="rgb(235,30,7)" fg:x="423" fg:w="12"/><text x="2.6499%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="2.3999%" y="389" width="0.0681%" height="15" fill="rgb(250,79,13)" fg:x="423" fg:w="12"/><text x="2.6499%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="2.4112%" y="373" width="0.0567%" height="15" fill="rgb(211,146,34)" fg:x="425" fg:w="10"/><text x="2.6612%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="2.4112%" y="357" width="0.0567%" height="15" fill="rgb(228,22,38)" fg:x="425" fg:w="10"/><text x="2.6612%" y="367.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="2.4169%" y="341" width="0.0511%" height="15" fill="rgb(235,168,5)" fg:x="426" fg:w="9"/><text x="2.6669%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="2.4169%" y="325" width="0.0511%" height="15" fill="rgb(221,155,16)" fg:x="426" fg:w="9"/><text x="2.6669%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="2.4282%" y="309" width="0.0397%" height="15" fill="rgb(215,215,53)" fg:x="428" fg:w="7"/><text x="2.6782%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="2.4396%" y="293" width="0.0284%" height="15" fill="rgb(223,4,10)" fg:x="430" fg:w="5"/><text x="2.6896%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.4509%" y="277" width="0.0170%" height="15" fill="rgb(234,103,6)" fg:x="432" fg:w="3"/><text x="2.7009%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.4509%" y="261" width="0.0170%" height="15" fill="rgb(227,97,0)" fg:x="432" fg:w="3"/><text x="2.7009%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.4509%" y="245" width="0.0170%" height="15" fill="rgb(234,150,53)" fg:x="432" fg:w="3"/><text x="2.7009%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.4509%" y="229" width="0.0170%" height="15" fill="rgb(228,201,54)" fg:x="432" fg:w="3"/><text x="2.7009%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.4509%" y="213" width="0.0170%" height="15" fill="rgb(222,22,37)" fg:x="432" fg:w="3"/><text x="2.7009%" y="223.50"></text></g><g><title>pa_detect_fork (4 samples, 0.02%)</title><rect x="2.4736%" y="501" width="0.0227%" height="15" fill="rgb(237,53,32)" fg:x="436" fg:w="4"/><text x="2.7236%" y="511.50"></text></g><g><title>__GI___getpid (4 samples, 0.02%)</title><rect x="2.4736%" y="485" width="0.0227%" height="15" fill="rgb(233,25,53)" fg:x="436" fg:w="4"/><text x="2.7236%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="2.4736%" y="469" width="0.0227%" height="15" fill="rgb(210,40,34)" fg:x="436" fg:w="4"/><text x="2.7236%" y="479.50"></text></g><g><title>pa_memblock_release (2 samples, 0.01%)</title><rect x="2.5020%" y="501" width="0.0113%" height="15" fill="rgb(241,220,44)" fg:x="441" fg:w="2"/><text x="2.7520%" y="511.50"></text></g><g><title>pa_flist_pop (4 samples, 0.02%)</title><rect x="2.5360%" y="485" width="0.0227%" height="15" fill="rgb(235,28,35)" fg:x="447" fg:w="4"/><text x="2.7860%" y="495.50"></text></g><g><title>[libpulsecommon-15.99.so] (4 samples, 0.02%)</title><rect x="2.5360%" y="469" width="0.0227%" height="15" fill="rgb(210,56,17)" fg:x="447" fg:w="4"/><text x="2.7860%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (65 samples, 0.37%)</title><rect x="2.2013%" y="597" width="0.3688%" height="15" fill="rgb(224,130,29)" fg:x="388" fg:w="65"/><text x="2.4513%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (63 samples, 0.36%)</title><rect x="2.2126%" y="581" width="0.3574%" height="15" fill="rgb(235,212,8)" fg:x="390" fg:w="63"/><text x="2.4626%" y="591.50"></text></g><g><title>[libasound.so.2.0.0] (60 samples, 0.34%)</title><rect x="2.2297%" y="565" width="0.3404%" height="15" fill="rgb(223,33,50)" fg:x="393" fg:w="60"/><text x="2.4797%" y="575.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (54 samples, 0.31%)</title><rect x="2.2637%" y="549" width="0.3064%" height="15" fill="rgb(219,149,13)" fg:x="399" fg:w="54"/><text x="2.5137%" y="559.50"></text></g><g><title>pa_stream_write (39 samples, 0.22%)</title><rect x="2.3488%" y="533" width="0.2213%" height="15" fill="rgb(250,156,29)" fg:x="414" fg:w="39"/><text x="2.5988%" y="543.50"></text></g><g><title>pa_stream_write_ext_free (38 samples, 0.22%)</title><rect x="2.3545%" y="517" width="0.2156%" height="15" fill="rgb(216,193,19)" fg:x="415" fg:w="38"/><text x="2.6045%" y="527.50"></text></g><g><title>pa_pstream_send_memblock (9 samples, 0.05%)</title><rect x="2.5190%" y="501" width="0.0511%" height="15" fill="rgb(216,135,14)" fg:x="444" fg:w="9"/><text x="2.7690%" y="511.50"></text></g><g><title>pa_queue_push (2 samples, 0.01%)</title><rect x="2.5587%" y="485" width="0.0113%" height="15" fill="rgb(241,47,5)" fg:x="451" fg:w="2"/><text x="2.8087%" y="495.50"></text></g><g><title>pa_flist_pop (2 samples, 0.01%)</title><rect x="2.5587%" y="469" width="0.0113%" height="15" fill="rgb(233,42,35)" fg:x="451" fg:w="2"/><text x="2.8087%" y="479.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.01%)</title><rect x="2.5587%" y="453" width="0.0113%" height="15" fill="rgb(231,13,6)" fg:x="451" fg:w="2"/><text x="2.8087%" y="463.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (70 samples, 0.40%)</title><rect x="2.2013%" y="613" width="0.3971%" height="15" fill="rgb(207,181,40)" fg:x="388" fg:w="70"/><text x="2.4513%" y="623.50"></text></g><g><title>snd_pcm_writei (5 samples, 0.03%)</title><rect x="2.5701%" y="597" width="0.0284%" height="15" fill="rgb(254,173,49)" fg:x="453" fg:w="5"/><text x="2.8201%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (5 samples, 0.03%)</title><rect x="2.5701%" y="581" width="0.0284%" height="15" fill="rgb(221,1,38)" fg:x="453" fg:w="5"/><text x="2.8201%" y="591.50"></text></g><g><title>snd_pcm_state (3 samples, 0.02%)</title><rect x="2.5814%" y="565" width="0.0170%" height="15" fill="rgb(206,124,46)" fg:x="455" fg:w="3"/><text x="2.8314%" y="575.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="2.6041%" y="565" width="0.0227%" height="15" fill="rgb(249,21,11)" fg:x="459" fg:w="4"/><text x="2.8541%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.01%)</title><rect x="2.7630%" y="533" width="0.0113%" height="15" fill="rgb(222,201,40)" fg:x="487" fg:w="2"/><text x="3.0130%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="2.7630%" y="517" width="0.0113%" height="15" fill="rgb(235,61,29)" fg:x="487" fg:w="2"/><text x="3.0130%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="2.8254%" y="517" width="0.0113%" height="15" fill="rgb(219,207,3)" fg:x="498" fg:w="2"/><text x="3.0754%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="2.8254%" y="501" width="0.0113%" height="15" fill="rgb(222,56,46)" fg:x="498" fg:w="2"/><text x="3.0754%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.02%)</title><rect x="2.9048%" y="501" width="0.0170%" height="15" fill="rgb(239,76,54)" fg:x="512" fg:w="3"/><text x="3.1548%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.02%)</title><rect x="2.9048%" y="485" width="0.0170%" height="15" fill="rgb(231,124,27)" fg:x="512" fg:w="3"/><text x="3.1548%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (16 samples, 0.09%)</title><rect x="2.8367%" y="517" width="0.0908%" height="15" fill="rgb(249,195,6)" fg:x="500" fg:w="16"/><text x="3.0867%" y="527.50"></text></g><g><title>core::ptr::read (26 samples, 0.15%)</title><rect x="2.9275%" y="485" width="0.1475%" height="15" fill="rgb(237,174,47)" fg:x="516" fg:w="26"/><text x="3.1775%" y="495.50"></text></g><g><title>core::mem::swap (51 samples, 0.29%)</title><rect x="2.9275%" y="517" width="0.2893%" height="15" fill="rgb(206,201,31)" fg:x="516" fg:w="51"/><text x="3.1775%" y="527.50"></text></g><g><title>core::mem::swap_simple (51 samples, 0.29%)</title><rect x="2.9275%" y="501" width="0.2893%" height="15" fill="rgb(231,57,52)" fg:x="516" fg:w="51"/><text x="3.1775%" y="511.50"></text></g><g><title>core::ptr::write (25 samples, 0.14%)</title><rect x="3.0750%" y="485" width="0.1418%" height="15" fill="rgb(248,177,22)" fg:x="542" fg:w="25"/><text x="3.3250%" y="495.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="3.2225%" y="453" width="0.0170%" height="15" fill="rgb(215,211,37)" fg:x="568" fg:w="3"/><text x="3.4725%" y="463.50"></text></g><g><title>core::mem::take (13 samples, 0.07%)</title><rect x="3.2225%" y="485" width="0.0738%" height="15" fill="rgb(241,128,51)" fg:x="568" fg:w="13"/><text x="3.4725%" y="495.50"></text></g><g><title>core::mem::replace (13 samples, 0.07%)</title><rect x="3.2225%" y="469" width="0.0738%" height="15" fill="rgb(227,165,31)" fg:x="568" fg:w="13"/><text x="3.4725%" y="479.50"></text></g><g><title>core::ptr::write (10 samples, 0.06%)</title><rect x="3.2395%" y="453" width="0.0567%" height="15" fill="rgb(228,167,24)" fg:x="571" fg:w="10"/><text x="3.4895%" y="463.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 samples, 0.70%)</title><rect x="2.6325%" y="549" width="0.7035%" height="15" fill="rgb(228,143,12)" fg:x="464" fg:w="124"/><text x="2.8825%" y="559.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (99 samples, 0.56%)</title><rect x="2.7743%" y="533" width="0.5617%" height="15" fill="rgb(249,149,8)" fg:x="489" fg:w="99"/><text x="3.0243%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;&gt;&gt; (21 samples, 0.12%)</title><rect x="3.2168%" y="517" width="0.1191%" height="15" fill="rgb(243,35,44)" fg:x="567" fg:w="21"/><text x="3.4668%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.12%)</title><rect x="3.2168%" y="501" width="0.1191%" height="15" fill="rgb(246,89,9)" fg:x="567" fg:w="21"/><text x="3.4668%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;,alloc::alloc::Global&gt;&gt; (7 samples, 0.04%)</title><rect x="3.2963%" y="485" width="0.0397%" height="15" fill="rgb(233,213,13)" fg:x="581" fg:w="7"/><text x="3.5463%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="3.2963%" y="469" width="0.0397%" height="15" fill="rgb(233,141,41)" fg:x="581" fg:w="7"/><text x="3.5463%" y="479.50"></text></g><g><title>__clone3 (349 samples, 1.98%)</title><rect x="1.3900%" y="869" width="1.9800%" height="15" fill="rgb(239,167,4)" fg:x="245" fg:w="349"/><text x="1.6400%" y="879.50">_..</text></g><g><title>start_thread (349 samples, 1.98%)</title><rect x="1.3900%" y="853" width="1.9800%" height="15" fill="rgb(209,217,16)" fg:x="245" fg:w="349"/><text x="1.6400%" y="863.50">s..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (349 samples, 1.98%)</title><rect x="1.3900%" y="837" width="1.9800%" height="15" fill="rgb(219,88,35)" fg:x="245" fg:w="349"/><text x="1.6400%" y="847.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (349 samples, 1.98%)</title><rect x="1.3900%" y="821" width="1.9800%" height="15" fill="rgb(220,193,23)" fg:x="245" fg:w="349"/><text x="1.6400%" y="831.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (349 samples, 1.98%)</title><rect x="1.3900%" y="805" width="1.9800%" height="15" fill="rgb(230,90,52)" fg:x="245" fg:w="349"/><text x="1.6400%" y="815.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (349 samples, 1.98%)</title><rect x="1.3900%" y="789" width="1.9800%" height="15" fill="rgb(252,106,19)" fg:x="245" fg:w="349"/><text x="1.6400%" y="799.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (349 samples, 1.98%)</title><rect x="1.3900%" y="773" width="1.9800%" height="15" fill="rgb(206,74,20)" fg:x="245" fg:w="349"/><text x="1.6400%" y="783.50">s..</text></g><g><title>std::panic::catch_unwind (349 samples, 1.98%)</title><rect x="1.3900%" y="757" width="1.9800%" height="15" fill="rgb(230,138,44)" fg:x="245" fg:w="349"/><text x="1.6400%" y="767.50">s..</text></g><g><title>std::panicking::try (349 samples, 1.98%)</title><rect x="1.3900%" y="741" width="1.9800%" height="15" fill="rgb(235,182,43)" fg:x="245" fg:w="349"/><text x="1.6400%" y="751.50">s..</text></g><g><title>std::panicking::try::do_call (349 samples, 1.98%)</title><rect x="1.3900%" y="725" width="1.9800%" height="15" fill="rgb(242,16,51)" fg:x="245" fg:w="349"/><text x="1.6400%" y="735.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (349 samples, 1.98%)</title><rect x="1.3900%" y="709" width="1.9800%" height="15" fill="rgb(248,9,4)" fg:x="245" fg:w="349"/><text x="1.6400%" y="719.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (349 samples, 1.98%)</title><rect x="1.3900%" y="693" width="1.9800%" height="15" fill="rgb(210,31,22)" fg:x="245" fg:w="349"/><text x="1.6400%" y="703.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (349 samples, 1.98%)</title><rect x="1.3900%" y="677" width="1.9800%" height="15" fill="rgb(239,54,39)" fg:x="245" fg:w="349"/><text x="1.6400%" y="687.50">s..</text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (349 samples, 1.98%)</title><rect x="1.3900%" y="661" width="1.9800%" height="15" fill="rgb(230,99,41)" fg:x="245" fg:w="349"/><text x="1.6400%" y="671.50">c..</text></g><g><title>cpal::host::alsa::output_stream_worker (349 samples, 1.98%)</title><rect x="1.3900%" y="645" width="1.9800%" height="15" fill="rgb(253,106,12)" fg:x="245" fg:w="349"/><text x="1.6400%" y="655.50">c..</text></g><g><title>cpal::host::alsa::process_output (206 samples, 1.17%)</title><rect x="2.2013%" y="629" width="1.1687%" height="15" fill="rgb(213,46,41)" fg:x="388" fg:w="206"/><text x="2.4513%" y="639.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (135 samples, 0.77%)</title><rect x="2.6041%" y="613" width="0.7659%" height="15" fill="rgb(215,133,35)" fg:x="459" fg:w="135"/><text x="2.8541%" y="623.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (135 samples, 0.77%)</title><rect x="2.6041%" y="597" width="0.7659%" height="15" fill="rgb(213,28,5)" fg:x="459" fg:w="135"/><text x="2.8541%" y="607.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (135 samples, 0.77%)</title><rect x="2.6041%" y="581" width="0.7659%" height="15" fill="rgb(215,77,49)" fg:x="459" fg:w="135"/><text x="2.8541%" y="591.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (131 samples, 0.74%)</title><rect x="2.6268%" y="565" width="0.7432%" height="15" fill="rgb(248,100,22)" fg:x="463" fg:w="131"/><text x="2.8768%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (5 samples, 0.03%)</title><rect x="3.3417%" y="549" width="0.0284%" height="15" fill="rgb(208,67,9)" fg:x="589" fg:w="5"/><text x="3.5917%" y="559.50"></text></g><g><title>cpal_alsa_out (436 samples, 2.47%)</title><rect x="0.9134%" y="885" width="2.4736%" height="15" fill="rgb(219,133,21)" fg:x="161" fg:w="436"/><text x="1.1634%" y="895.50">cp..</text></g><g><title>cpal::host::alsa::output_stream_worker (3 samples, 0.02%)</title><rect x="3.3700%" y="869" width="0.0170%" height="15" fill="rgb(246,46,29)" fg:x="594" fg:w="3"/><text x="3.6200%" y="879.50"></text></g><g><title>cpal::host::alsa::process_output (3 samples, 0.02%)</title><rect x="3.3700%" y="853" width="0.0170%" height="15" fill="rgb(246,185,52)" fg:x="594" fg:w="3"/><text x="3.6200%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_pipeline (4 samples, 0.02%)</title><rect x="3.4041%" y="853" width="0.0227%" height="15" fill="rgb(252,136,11)" fg:x="600" fg:w="4"/><text x="3.6541%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="3.4438%" y="853" width="0.0113%" height="15" fill="rgb(219,138,53)" fg:x="607" fg:w="2"/><text x="3.6938%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.02%)</title><rect x="3.4778%" y="853" width="0.0170%" height="15" fill="rgb(211,51,23)" fg:x="613" fg:w="3"/><text x="3.7278%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="3.4948%" y="853" width="0.0170%" height="15" fill="rgb(247,221,28)" fg:x="616" fg:w="3"/><text x="3.7448%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (3 samples, 0.02%)</title><rect x="3.4948%" y="837" width="0.0170%" height="15" fill="rgb(251,222,45)" fg:x="616" fg:w="3"/><text x="3.7448%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (3 samples, 0.02%)</title><rect x="3.5232%" y="853" width="0.0170%" height="15" fill="rgb(217,162,53)" fg:x="621" fg:w="3"/><text x="3.7732%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2 samples, 0.01%)</title><rect x="3.5402%" y="853" width="0.0113%" height="15" fill="rgb(229,93,14)" fg:x="624" fg:w="2"/><text x="3.7902%" y="863.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="3.5629%" y="853" width="0.0113%" height="15" fill="rgb(209,67,49)" fg:x="628" fg:w="2"/><text x="3.8129%" y="863.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (2 samples, 0.01%)</title><rect x="3.5856%" y="853" width="0.0113%" height="15" fill="rgb(213,87,29)" fg:x="632" fg:w="2"/><text x="3.8356%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (5 samples, 0.03%)</title><rect x="3.5970%" y="853" width="0.0284%" height="15" fill="rgb(205,151,52)" fg:x="634" fg:w="5"/><text x="3.8470%" y="863.50"></text></g><g><title>[libX11.so.6.4.0] (3 samples, 0.02%)</title><rect x="3.6253%" y="853" width="0.0170%" height="15" fill="rgb(253,215,39)" fg:x="639" fg:w="3"/><text x="3.8753%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (136 samples, 0.77%)</title><rect x="3.6423%" y="853" width="0.7716%" height="15" fill="rgb(221,220,41)" fg:x="642" fg:w="136"/><text x="3.8923%" y="863.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.02%)</title><rect x="4.4196%" y="853" width="0.0170%" height="15" fill="rgb(218,133,21)" fg:x="779" fg:w="3"/><text x="4.6696%" y="863.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="4.4366%" y="853" width="0.0113%" height="15" fill="rgb(221,193,43)" fg:x="782" fg:w="2"/><text x="4.6866%" y="863.50"></text></g><g><title>__GI___lll_lock_wake (2 samples, 0.01%)</title><rect x="4.4593%" y="853" width="0.0113%" height="15" fill="rgb(240,128,52)" fg:x="786" fg:w="2"/><text x="4.7093%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="4.4593%" y="837" width="0.0113%" height="15" fill="rgb(253,114,12)" fg:x="786" fg:w="2"/><text x="4.7093%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.03%)</title><rect x="4.4877%" y="853" width="0.0284%" height="15" fill="rgb(215,223,47)" fg:x="791" fg:w="5"/><text x="4.7377%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="4.4877%" y="837" width="0.0284%" height="15" fill="rgb(248,225,23)" fg:x="791" fg:w="5"/><text x="4.7377%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.03%)</title><rect x="4.4877%" y="821" width="0.0284%" height="15" fill="rgb(250,108,0)" fg:x="791" fg:w="5"/><text x="4.7377%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.03%)</title><rect x="4.4877%" y="805" width="0.0284%" height="15" fill="rgb(228,208,7)" fg:x="791" fg:w="5"/><text x="4.7377%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="4.5161%" y="853" width="0.0113%" height="15" fill="rgb(244,45,10)" fg:x="796" fg:w="2"/><text x="4.7661%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="4.5161%" y="837" width="0.0113%" height="15" fill="rgb(207,125,25)" fg:x="796" fg:w="2"/><text x="4.7661%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="4.5161%" y="821" width="0.0113%" height="15" fill="rgb(210,195,18)" fg:x="796" fg:w="2"/><text x="4.7661%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="4.5161%" y="805" width="0.0113%" height="15" fill="rgb(249,80,12)" fg:x="796" fg:w="2"/><text x="4.7661%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="4.5274%" y="853" width="0.0170%" height="15" fill="rgb(221,65,9)" fg:x="798" fg:w="3"/><text x="4.7774%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="4.5501%" y="853" width="0.0113%" height="15" fill="rgb(235,49,36)" fg:x="802" fg:w="2"/><text x="4.8001%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.02%)</title><rect x="4.5671%" y="853" width="0.0170%" height="15" fill="rgb(225,32,20)" fg:x="805" fg:w="3"/><text x="4.8171%" y="863.50"></text></g><g><title>core::hash::Hash::hash_slice (3 samples, 0.02%)</title><rect x="4.5841%" y="853" width="0.0170%" height="15" fill="rgb(215,141,46)" fg:x="808" fg:w="3"/><text x="4.8341%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="4.5841%" y="837" width="0.0170%" height="15" fill="rgb(250,160,47)" fg:x="808" fg:w="3"/><text x="4.8341%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;()&gt; (2 samples, 0.01%)</title><rect x="4.6012%" y="853" width="0.0113%" height="15" fill="rgb(216,222,40)" fg:x="811" fg:w="2"/><text x="4.8512%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::canvas::DrawCommand&gt; (2 samples, 0.01%)</title><rect x="4.6125%" y="853" width="0.0113%" height="15" fill="rgb(234,217,39)" fg:x="813" fg:w="2"/><text x="4.8625%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::Arena&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="4.6295%" y="853" width="0.0113%" height="15" fill="rgb(207,178,40)" fg:x="816" fg:w="2"/><text x="4.8795%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="4.6522%" y="853" width="0.0113%" height="15" fill="rgb(221,136,13)" fg:x="820" fg:w="2"/><text x="4.9022%" y="863.50"></text></g><g><title>core::slice::sort::merge_sort (3 samples, 0.02%)</title><rect x="4.6806%" y="853" width="0.0170%" height="15" fill="rgb(249,199,10)" fg:x="825" fg:w="3"/><text x="4.9306%" y="863.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (8 samples, 0.05%)</title><rect x="4.7203%" y="837" width="0.0454%" height="15" fill="rgb(249,222,13)" fg:x="832" fg:w="8"/><text x="4.9703%" y="847.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (8 samples, 0.05%)</title><rect x="4.7203%" y="821" width="0.0454%" height="15" fill="rgb(244,185,38)" fg:x="832" fg:w="8"/><text x="4.9703%" y="831.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (8 samples, 0.05%)</title><rect x="4.7203%" y="805" width="0.0454%" height="15" fill="rgb(236,202,9)" fg:x="832" fg:w="8"/><text x="4.9703%" y="815.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (13 samples, 0.07%)</title><rect x="4.6976%" y="853" width="0.0738%" height="15" fill="rgb(250,229,37)" fg:x="828" fg:w="13"/><text x="4.9476%" y="863.50"></text></g><g><title>ggez::graphics::gpu::growing::GrowingBufferArena::allocate (3 samples, 0.02%)</title><rect x="4.7770%" y="853" width="0.0170%" height="15" fill="rgb(206,174,23)" fg:x="842" fg:w="3"/><text x="5.0270%" y="863.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (3 samples, 0.02%)</title><rect x="4.7941%" y="853" width="0.0170%" height="15" fill="rgb(211,33,43)" fg:x="845" fg:w="3"/><text x="5.0441%" y="863.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.02%)</title><rect x="4.8167%" y="853" width="0.0227%" height="15" fill="rgb(245,58,50)" fg:x="849" fg:w="4"/><text x="5.0667%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (4 samples, 0.02%)</title><rect x="4.8451%" y="853" width="0.0227%" height="15" fill="rgb(244,68,36)" fg:x="854" fg:w="4"/><text x="5.0951%" y="863.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (2 samples, 0.01%)</title><rect x="4.8678%" y="853" width="0.0113%" height="15" fill="rgb(232,229,15)" fg:x="858" fg:w="2"/><text x="5.1178%" y="863.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (2 samples, 0.01%)</title><rect x="4.9075%" y="853" width="0.0113%" height="15" fill="rgb(254,30,23)" fg:x="865" fg:w="2"/><text x="5.1575%" y="863.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="4.9189%" y="853" width="0.0113%" height="15" fill="rgb(235,160,14)" fg:x="867" fg:w="2"/><text x="5.1689%" y="863.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (2 samples, 0.01%)</title><rect x="4.9302%" y="853" width="0.0113%" height="15" fill="rgb(212,155,44)" fg:x="869" fg:w="2"/><text x="5.1802%" y="863.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (2 samples, 0.01%)</title><rect x="4.9586%" y="853" width="0.0113%" height="15" fill="rgb(226,2,50)" fg:x="874" fg:w="2"/><text x="5.2086%" y="863.50"></text></g><g><title>wgpu_core::command::render::RenderPass::new (3 samples, 0.02%)</title><rect x="4.9699%" y="853" width="0.0170%" height="15" fill="rgb(234,177,6)" fg:x="876" fg:w="3"/><text x="5.2199%" y="863.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (2 samples, 0.01%)</title><rect x="4.9870%" y="853" width="0.0113%" height="15" fill="rgb(217,24,9)" fg:x="879" fg:w="2"/><text x="5.2370%" y="863.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (6 samples, 0.03%)</title><rect x="4.9983%" y="853" width="0.0340%" height="15" fill="rgb(220,13,46)" fg:x="881" fg:w="6"/><text x="5.2483%" y="863.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (5 samples, 0.03%)</title><rect x="5.0380%" y="853" width="0.0284%" height="15" fill="rgb(239,221,27)" fg:x="888" fg:w="5"/><text x="5.2880%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (2 samples, 0.01%)</title><rect x="5.0664%" y="853" width="0.0113%" height="15" fill="rgb(222,198,25)" fg:x="893" fg:w="2"/><text x="5.3164%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (7 samples, 0.04%)</title><rect x="5.0777%" y="853" width="0.0397%" height="15" fill="rgb(211,99,13)" fg:x="895" fg:w="7"/><text x="5.3277%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.01%)</title><rect x="5.1061%" y="837" width="0.0113%" height="15" fill="rgb(232,111,31)" fg:x="900" fg:w="2"/><text x="5.3561%" y="847.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view::{{closure}} (2 samples, 0.01%)</title><rect x="5.1061%" y="821" width="0.0113%" height="15" fill="rgb(245,82,37)" fg:x="900" fg:w="2"/><text x="5.3561%" y="831.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (3 samples, 0.02%)</title><rect x="5.1174%" y="853" width="0.0170%" height="15" fill="rgb(227,149,46)" fg:x="902" fg:w="3"/><text x="5.3674%" y="863.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::clear (3 samples, 0.02%)</title><rect x="5.1345%" y="853" width="0.0170%" height="15" fill="rgb(218,36,50)" fg:x="905" fg:w="3"/><text x="5.3845%" y="863.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (4 samples, 0.02%)</title><rect x="5.1515%" y="853" width="0.0227%" height="15" fill="rgb(226,80,48)" fg:x="908" fg:w="4"/><text x="5.4015%" y="863.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (3 samples, 0.02%)</title><rect x="5.1742%" y="853" width="0.0170%" height="15" fill="rgb(238,224,15)" fg:x="912" fg:w="3"/><text x="5.4242%" y="863.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::post_submit (2 samples, 0.01%)</title><rect x="5.1912%" y="853" width="0.0113%" height="15" fill="rgb(241,136,10)" fg:x="915" fg:w="2"/><text x="5.4412%" y="863.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (2 samples, 0.01%)</title><rect x="5.2025%" y="853" width="0.0113%" height="15" fill="rgb(208,32,45)" fg:x="917" fg:w="2"/><text x="5.4525%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (3 samples, 0.02%)</title><rect x="5.2252%" y="853" width="0.0170%" height="15" fill="rgb(207,135,9)" fg:x="921" fg:w="3"/><text x="5.4752%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (2 samples, 0.01%)</title><rect x="5.2479%" y="853" width="0.0113%" height="15" fill="rgb(206,86,44)" fg:x="925" fg:w="2"/><text x="5.4979%" y="863.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::drain (2 samples, 0.01%)</title><rect x="5.2593%" y="853" width="0.0113%" height="15" fill="rgb(245,177,15)" fg:x="927" fg:w="2"/><text x="5.5093%" y="863.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_size (5 samples, 0.03%)</title><rect x="5.2933%" y="853" width="0.0284%" height="15" fill="rgb(206,64,50)" fg:x="933" fg:w="5"/><text x="5.5433%" y="863.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (3 samples, 0.02%)</title><rect x="5.3330%" y="853" width="0.0170%" height="15" fill="rgb(234,36,40)" fg:x="940" fg:w="3"/><text x="5.5830%" y="863.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (3 samples, 0.02%)</title><rect x="5.3330%" y="837" width="0.0170%" height="15" fill="rgb(213,64,8)" fg:x="940" fg:w="3"/><text x="5.5830%" y="847.50"></text></g><g><title>wgpu_core::track::texture::barrier (3 samples, 0.02%)</title><rect x="5.3330%" y="821" width="0.0170%" height="15" fill="rgb(210,75,36)" fg:x="940" fg:w="3"/><text x="5.5830%" y="831.50"></text></g><g><title>wgpu_core::track::skip_barrier (3 samples, 0.02%)</title><rect x="5.3330%" y="805" width="0.0170%" height="15" fill="rgb(229,88,21)" fg:x="940" fg:w="3"/><text x="5.5830%" y="815.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (3 samples, 0.02%)</title><rect x="5.3501%" y="853" width="0.0170%" height="15" fill="rgb(252,204,47)" fg:x="943" fg:w="3"/><text x="5.6001%" y="863.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (2 samples, 0.01%)</title><rect x="5.3671%" y="837" width="0.0113%" height="15" fill="rgb(208,77,27)" fg:x="946" fg:w="2"/><text x="5.6171%" y="847.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (7 samples, 0.04%)</title><rect x="5.3671%" y="853" width="0.0397%" height="15" fill="rgb(221,76,26)" fg:x="946" fg:w="7"/><text x="5.6171%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (5 samples, 0.03%)</title><rect x="5.3784%" y="837" width="0.0284%" height="15" fill="rgb(225,139,18)" fg:x="948" fg:w="5"/><text x="5.6284%" y="847.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (5 samples, 0.03%)</title><rect x="5.3784%" y="821" width="0.0284%" height="15" fill="rgb(230,137,11)" fg:x="948" fg:w="5"/><text x="5.6284%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (2 samples, 0.01%)</title><rect x="5.4068%" y="853" width="0.0113%" height="15" fill="rgb(212,28,1)" fg:x="953" fg:w="2"/><text x="5.6568%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (9 samples, 0.05%)</title><rect x="5.4181%" y="853" width="0.0511%" height="15" fill="rgb(248,164,17)" fg:x="955" fg:w="9"/><text x="5.6681%" y="863.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (3 samples, 0.02%)</title><rect x="5.4522%" y="837" width="0.0170%" height="15" fill="rgb(222,171,42)" fg:x="961" fg:w="3"/><text x="5.7022%" y="847.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (2 samples, 0.01%)</title><rect x="5.4749%" y="853" width="0.0113%" height="15" fill="rgb(243,84,45)" fg:x="965" fg:w="2"/><text x="5.7249%" y="863.50"></text></g><g><title>ash::device::Device::destroy_image_view (2 samples, 0.01%)</title><rect x="5.4749%" y="837" width="0.0113%" height="15" fill="rgb(252,49,23)" fg:x="965" fg:w="2"/><text x="5.7249%" y="847.50"></text></g><g><title>[[heap]] (369 samples, 2.09%)</title><rect x="3.3984%" y="869" width="2.0935%" height="15" fill="rgb(215,19,7)" fg:x="599" fg:w="369"/><text x="3.6484%" y="879.50">[..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_begin_render_pass (4 samples, 0.02%)</title><rect x="5.4919%" y="853" width="0.0227%" height="15" fill="rgb(238,81,41)" fg:x="968" fg:w="4"/><text x="5.7419%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (4 samples, 0.02%)</title><rect x="5.5146%" y="853" width="0.0227%" height="15" fill="rgb(210,199,37)" fg:x="972" fg:w="4"/><text x="5.7646%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_limits (2 samples, 0.01%)</title><rect x="5.5373%" y="853" width="0.0113%" height="15" fill="rgb(244,192,49)" fg:x="976" fg:w="2"/><text x="5.7873%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (3 samples, 0.02%)</title><rect x="5.5486%" y="853" width="0.0170%" height="15" fill="rgb(226,211,11)" fg:x="978" fg:w="3"/><text x="5.7986%" y="863.50"></text></g><g><title>&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;::downcast_ref (2 samples, 0.01%)</title><rect x="5.5543%" y="837" width="0.0113%" height="15" fill="rgb(236,162,54)" fg:x="979" fg:w="2"/><text x="5.8043%" y="847.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.01%)</title><rect x="5.5543%" y="821" width="0.0113%" height="15" fill="rgb(220,229,9)" fg:x="979" fg:w="2"/><text x="5.8043%" y="831.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.01%)</title><rect x="5.5543%" y="805" width="0.0113%" height="15" fill="rgb(250,87,22)" fg:x="979" fg:w="2"/><text x="5.8043%" y="815.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (3 samples, 0.02%)</title><rect x="5.5656%" y="853" width="0.0170%" height="15" fill="rgb(239,43,17)" fg:x="981" fg:w="3"/><text x="5.8156%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.02%)</title><rect x="5.5997%" y="853" width="0.0227%" height="15" fill="rgb(231,177,25)" fg:x="987" fg:w="4"/><text x="5.8497%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.06%)</title><rect x="5.6224%" y="853" width="0.0567%" height="15" fill="rgb(219,179,1)" fg:x="991" fg:w="10"/><text x="5.8724%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.05%)</title><rect x="5.6280%" y="837" width="0.0511%" height="15" fill="rgb(238,219,53)" fg:x="992" fg:w="9"/><text x="5.8780%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.05%)</title><rect x="5.6280%" y="821" width="0.0511%" height="15" fill="rgb(232,167,36)" fg:x="992" fg:w="9"/><text x="5.8780%" y="831.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (9 samples, 0.05%)</title><rect x="5.6280%" y="805" width="0.0511%" height="15" fill="rgb(244,19,51)" fg:x="992" fg:w="9"/><text x="5.8780%" y="815.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (6 samples, 0.03%)</title><rect x="5.6451%" y="789" width="0.0340%" height="15" fill="rgb(224,6,22)" fg:x="995" fg:w="6"/><text x="5.8951%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="5.6791%" y="853" width="0.0113%" height="15" fill="rgb(224,145,5)" fg:x="1001" fg:w="2"/><text x="5.9291%" y="863.50"></text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (2 samples, 0.01%)</title><rect x="5.6905%" y="853" width="0.0113%" height="15" fill="rgb(234,130,49)" fg:x="1003" fg:w="2"/><text x="5.9405%" y="863.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (5 samples, 0.03%)</title><rect x="5.7018%" y="853" width="0.0284%" height="15" fill="rgb(254,6,2)" fg:x="1005" fg:w="5"/><text x="5.9518%" y="863.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (5 samples, 0.03%)</title><rect x="5.7302%" y="853" width="0.0284%" height="15" fill="rgb(208,96,46)" fg:x="1010" fg:w="5"/><text x="5.9802%" y="863.50"></text></g><g><title>neuralang::World::step (2 samples, 0.01%)</title><rect x="5.7472%" y="837" width="0.0113%" height="15" fill="rgb(239,3,39)" fg:x="1013" fg:w="2"/><text x="5.9972%" y="847.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="5.7585%" y="853" width="0.0227%" height="15" fill="rgb(233,210,1)" fg:x="1015" fg:w="4"/><text x="6.0085%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="5.7812%" y="853" width="0.0227%" height="15" fill="rgb(244,137,37)" fg:x="1019" fg:w="4"/><text x="6.0312%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (4 samples, 0.02%)</title><rect x="5.7812%" y="837" width="0.0227%" height="15" fill="rgb(240,136,2)" fg:x="1019" fg:w="4"/><text x="6.0312%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.04%)</title><rect x="5.8039%" y="853" width="0.0397%" height="15" fill="rgb(239,18,37)" fg:x="1023" fg:w="7"/><text x="6.0539%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.04%)</title><rect x="5.8039%" y="837" width="0.0397%" height="15" fill="rgb(218,185,22)" fg:x="1023" fg:w="7"/><text x="6.0539%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.04%)</title><rect x="5.8039%" y="821" width="0.0397%" height="15" fill="rgb(225,218,4)" fg:x="1023" fg:w="7"/><text x="6.0539%" y="831.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_begin_render_pass (7 samples, 0.04%)</title><rect x="5.8436%" y="853" width="0.0397%" height="15" fill="rgb(230,182,32)" fg:x="1030" fg:w="7"/><text x="6.0936%" y="863.50"></text></g><g><title>XGetGeometry (5 samples, 0.03%)</title><rect x="5.8947%" y="853" width="0.0284%" height="15" fill="rgb(242,56,43)" fg:x="1039" fg:w="5"/><text x="6.1447%" y="863.50"></text></g><g><title>XPending (4 samples, 0.02%)</title><rect x="5.9231%" y="853" width="0.0227%" height="15" fill="rgb(233,99,24)" fg:x="1044" fg:w="4"/><text x="6.1731%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.05%)</title><rect x="5.9458%" y="853" width="0.0511%" height="15" fill="rgb(234,209,42)" fg:x="1048" fg:w="9"/><text x="6.1958%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (75 samples, 0.43%)</title><rect x="5.9968%" y="853" width="0.4255%" height="15" fill="rgb(227,7,12)" fg:x="1057" fg:w="75"/><text x="6.2468%" y="863.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="6.4223%" y="853" width="0.0113%" height="15" fill="rgb(245,203,43)" fg:x="1132" fg:w="2"/><text x="6.6723%" y="863.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="6.4394%" y="853" width="0.0113%" height="15" fill="rgb(238,205,33)" fg:x="1135" fg:w="2"/><text x="6.6894%" y="863.50"></text></g><g><title>__GI___writev (2 samples, 0.01%)</title><rect x="6.4507%" y="853" width="0.0113%" height="15" fill="rgb(231,56,7)" fg:x="1137" fg:w="2"/><text x="6.7007%" y="863.50"></text></g><g><title>__GI___writev (2 samples, 0.01%)</title><rect x="6.4507%" y="837" width="0.0113%" height="15" fill="rgb(244,186,29)" fg:x="1137" fg:w="2"/><text x="6.7007%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="6.4507%" y="821" width="0.0113%" height="15" fill="rgb(234,111,31)" fg:x="1137" fg:w="2"/><text x="6.7007%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="6.4677%" y="677" width="0.0113%" height="15" fill="rgb(241,149,10)" fg:x="1140" fg:w="2"/><text x="6.7177%" y="687.50"></text></g><g><title>_dl_close (3 samples, 0.02%)</title><rect x="6.4677%" y="853" width="0.0170%" height="15" fill="rgb(249,206,44)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="863.50"></text></g><g><title>_dl_close_worker (3 samples, 0.02%)</title><rect x="6.4677%" y="837" width="0.0170%" height="15" fill="rgb(251,153,30)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="847.50"></text></g><g><title>glVDPAURegisterVideoSurfaceWithPictureStructureNV (3 samples, 0.02%)</title><rect x="6.4677%" y="821" width="0.0170%" height="15" fill="rgb(239,152,38)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="805" width="0.0170%" height="15" fill="rgb(249,139,47)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="789" width="0.0170%" height="15" fill="rgb(244,64,35)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="773" width="0.0170%" height="15" fill="rgb(216,46,15)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="757" width="0.0170%" height="15" fill="rgb(250,74,19)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="741" width="0.0170%" height="15" fill="rgb(249,42,33)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="725" width="0.0170%" height="15" fill="rgb(242,149,17)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="709" width="0.0170%" height="15" fill="rgb(244,29,21)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="6.4677%" y="693" width="0.0170%" height="15" fill="rgb(220,130,37)" fg:x="1140" fg:w="3"/><text x="6.7177%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.01%)</title><rect x="6.4847%" y="853" width="0.0113%" height="15" fill="rgb(211,67,2)" fg:x="1143" fg:w="2"/><text x="6.7347%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (2 samples, 0.01%)</title><rect x="6.4961%" y="853" width="0.0113%" height="15" fill="rgb(235,68,52)" fg:x="1145" fg:w="2"/><text x="6.7461%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="6.5074%" y="853" width="0.0113%" height="15" fill="rgb(246,142,3)" fg:x="1147" fg:w="2"/><text x="6.7574%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="6.5074%" y="837" width="0.0113%" height="15" fill="rgb(241,25,7)" fg:x="1147" fg:w="2"/><text x="6.7574%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.01%)</title><rect x="6.5074%" y="821" width="0.0113%" height="15" fill="rgb(242,119,39)" fg:x="1147" fg:w="2"/><text x="6.7574%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.01%)</title><rect x="6.5074%" y="805" width="0.0113%" height="15" fill="rgb(241,98,45)" fg:x="1147" fg:w="2"/><text x="6.7574%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.03%)</title><rect x="6.5188%" y="853" width="0.0340%" height="15" fill="rgb(254,28,30)" fg:x="1149" fg:w="6"/><text x="6.7688%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.03%)</title><rect x="6.5188%" y="837" width="0.0340%" height="15" fill="rgb(241,142,54)" fg:x="1149" fg:w="6"/><text x="6.7688%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.03%)</title><rect x="6.5188%" y="821" width="0.0340%" height="15" fill="rgb(222,85,15)" fg:x="1149" fg:w="6"/><text x="6.7688%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.03%)</title><rect x="6.5188%" y="805" width="0.0340%" height="15" fill="rgb(210,85,47)" fg:x="1149" fg:w="6"/><text x="6.7688%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.05%)</title><rect x="6.5528%" y="853" width="0.0454%" height="15" fill="rgb(224,206,25)" fg:x="1155" fg:w="8"/><text x="6.8028%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="6.6039%" y="853" width="0.0113%" height="15" fill="rgb(243,201,19)" fg:x="1164" fg:w="2"/><text x="6.8539%" y="863.50"></text></g><g><title>core::hash::Hash::hash_slice (3 samples, 0.02%)</title><rect x="6.6152%" y="853" width="0.0170%" height="15" fill="rgb(236,59,4)" fg:x="1166" fg:w="3"/><text x="6.8652%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.01%)</title><rect x="6.6322%" y="853" width="0.0113%" height="15" fill="rgb(254,179,45)" fg:x="1169" fg:w="2"/><text x="6.8822%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::canvas::Canvas&gt; (2 samples, 0.01%)</title><rect x="6.6493%" y="853" width="0.0113%" height="15" fill="rgb(226,14,10)" fg:x="1172" fg:w="2"/><text x="6.8993%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::canvas::Draw&gt; (2 samples, 0.01%)</title><rect x="6.6606%" y="853" width="0.0113%" height="15" fill="rgb(244,27,41)" fg:x="1174" fg:w="2"/><text x="6.9106%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (2 samples, 0.01%)</title><rect x="6.6776%" y="853" width="0.0113%" height="15" fill="rgb(235,35,32)" fg:x="1177" fg:w="2"/><text x="6.9276%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (2 samples, 0.01%)</title><rect x="6.6890%" y="853" width="0.0113%" height="15" fill="rgb(218,68,31)" fg:x="1179" fg:w="2"/><text x="6.9390%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (2 samples, 0.01%)</title><rect x="6.6890%" y="837" width="0.0113%" height="15" fill="rgb(207,120,37)" fg:x="1179" fg:w="2"/><text x="6.9390%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.01%)</title><rect x="6.6890%" y="821" width="0.0113%" height="15" fill="rgb(227,98,0)" fg:x="1179" fg:w="2"/><text x="6.9390%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[wgpu_core::device::queue::SubmittedWorkDoneClosure: 1]&gt;&gt; (3 samples, 0.02%)</title><rect x="6.7003%" y="853" width="0.0170%" height="15" fill="rgb(207,7,3)" fg:x="1181" fg:w="3"/><text x="6.9503%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (4 samples, 0.02%)</title><rect x="6.7173%" y="853" width="0.0227%" height="15" fill="rgb(206,98,19)" fg:x="1184" fg:w="4"/><text x="6.9673%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.01%)</title><rect x="6.7287%" y="837" width="0.0113%" height="15" fill="rgb(217,5,26)" fg:x="1186" fg:w="2"/><text x="6.9787%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (3 samples, 0.02%)</title><rect x="6.7400%" y="853" width="0.0170%" height="15" fill="rgb(235,190,38)" fg:x="1188" fg:w="3"/><text x="6.9900%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.01%)</title><rect x="6.7457%" y="837" width="0.0113%" height="15" fill="rgb(247,86,24)" fg:x="1189" fg:w="2"/><text x="6.9957%" y="847.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (3 samples, 0.02%)</title><rect x="6.7798%" y="853" width="0.0170%" height="15" fill="rgb(205,101,16)" fg:x="1195" fg:w="3"/><text x="7.0298%" y="863.50"></text></g><g><title>ggez::event::run::{{closure}} (6 samples, 0.03%)</title><rect x="6.8025%" y="853" width="0.0340%" height="15" fill="rgb(246,168,33)" fg:x="1199" fg:w="6"/><text x="7.0525%" y="863.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (3 samples, 0.02%)</title><rect x="6.8365%" y="853" width="0.0170%" height="15" fill="rgb(231,114,1)" fg:x="1205" fg:w="3"/><text x="7.0865%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.02%)</title><rect x="6.8649%" y="821" width="0.0170%" height="15" fill="rgb(207,184,53)" fg:x="1210" fg:w="3"/><text x="7.1149%" y="831.50"></text></g><g><title>ggez::graphics::canvas::Canvas::from_frame (6 samples, 0.03%)</title><rect x="6.8535%" y="853" width="0.0340%" height="15" fill="rgb(224,95,51)" fg:x="1208" fg:w="6"/><text x="7.1035%" y="863.50"></text></g><g><title>ggez::graphics::canvas::Canvas::new (5 samples, 0.03%)</title><rect x="6.8592%" y="837" width="0.0284%" height="15" fill="rgb(212,188,45)" fg:x="1209" fg:w="5"/><text x="7.1092%" y="847.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (4 samples, 0.02%)</title><rect x="6.8876%" y="853" width="0.0227%" height="15" fill="rgb(223,154,38)" fg:x="1214" fg:w="4"/><text x="7.1376%" y="863.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (2 samples, 0.01%)</title><rect x="6.9102%" y="853" width="0.0113%" height="15" fill="rgb(251,22,52)" fg:x="1218" fg:w="2"/><text x="7.1602%" y="863.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (3 samples, 0.02%)</title><rect x="6.9216%" y="853" width="0.0170%" height="15" fill="rgb(229,209,22)" fg:x="1220" fg:w="3"/><text x="7.1716%" y="863.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (4 samples, 0.02%)</title><rect x="6.9443%" y="853" width="0.0227%" height="15" fill="rgb(234,138,34)" fg:x="1224" fg:w="4"/><text x="7.1943%" y="863.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (3 samples, 0.02%)</title><rect x="6.9670%" y="853" width="0.0170%" height="15" fill="rgb(212,95,11)" fg:x="1228" fg:w="3"/><text x="7.2170%" y="863.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (4 samples, 0.02%)</title><rect x="6.9840%" y="853" width="0.0227%" height="15" fill="rgb(240,179,47)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="6.9840%" y="837" width="0.0227%" height="15" fill="rgb(240,163,11)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="6.9840%" y="821" width="0.0227%" height="15" fill="rgb(236,37,12)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="6.9840%" y="805" width="0.0227%" height="15" fill="rgb(232,164,16)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="6.9840%" y="789" width="0.0227%" height="15" fill="rgb(244,205,15)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="6.9840%" y="773" width="0.0227%" height="15" fill="rgb(223,117,47)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="6.9840%" y="757" width="0.0227%" height="15" fill="rgb(244,107,35)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="767.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.02%)</title><rect x="6.9840%" y="741" width="0.0227%" height="15" fill="rgb(205,140,8)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="751.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (4 samples, 0.02%)</title><rect x="6.9840%" y="725" width="0.0227%" height="15" fill="rgb(228,84,46)" fg:x="1231" fg:w="4"/><text x="7.2340%" y="735.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::next_event (3 samples, 0.02%)</title><rect x="7.0180%" y="853" width="0.0170%" height="15" fill="rgb(254,188,9)" fg:x="1237" fg:w="3"/><text x="7.2680%" y="863.50"></text></g><g><title>ggez::input::keyboard::KeyboardContext::save_keyboard_state (2 samples, 0.01%)</title><rect x="7.0351%" y="853" width="0.0113%" height="15" fill="rgb(206,112,54)" fg:x="1240" fg:w="2"/><text x="7.2851%" y="863.50"></text></g><g><title>gilrs::ev::filter::axis_dpad_to_button (2 samples, 0.01%)</title><rect x="7.0521%" y="853" width="0.0113%" height="15" fill="rgb(216,84,49)" fg:x="1243" fg:w="2"/><text x="7.3021%" y="863.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event (4 samples, 0.02%)</title><rect x="7.0634%" y="853" width="0.0227%" height="15" fill="rgb(214,194,35)" fg:x="1245" fg:w="4"/><text x="7.3134%" y="863.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_inner (7 samples, 0.04%)</title><rect x="7.0861%" y="853" width="0.0397%" height="15" fill="rgb(249,28,3)" fg:x="1249" fg:w="7"/><text x="7.3361%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;gilrs::ev::Event&gt; as gilrs::ev::filter::Filter&gt;::filter_ev (7 samples, 0.04%)</title><rect x="7.0861%" y="837" width="0.0397%" height="15" fill="rgb(222,56,52)" fg:x="1249" fg:w="7"/><text x="7.3361%" y="847.50"></text></g><g><title>&lt;F as gilrs::ev::filter::FilterFn&gt;::filter (4 samples, 0.02%)</title><rect x="7.1031%" y="821" width="0.0227%" height="15" fill="rgb(245,217,50)" fg:x="1252" fg:w="4"/><text x="7.3531%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.02%)</title><rect x="7.1031%" y="805" width="0.0227%" height="15" fill="rgb(213,201,24)" fg:x="1252" fg:w="4"/><text x="7.3531%" y="815.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_priv (2 samples, 0.01%)</title><rect x="7.1258%" y="853" width="0.0113%" height="15" fill="rgb(248,116,28)" fg:x="1256" fg:w="2"/><text x="7.3758%" y="863.50"></text></g><g><title>gilrs_core::Gilrs::next_event (6 samples, 0.03%)</title><rect x="7.1372%" y="853" width="0.0340%" height="15" fill="rgb(219,72,43)" fg:x="1258" fg:w="6"/><text x="7.3872%" y="863.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event_impl (4 samples, 0.02%)</title><rect x="7.1712%" y="853" width="0.0227%" height="15" fill="rgb(209,138,14)" fg:x="1264" fg:w="4"/><text x="7.4212%" y="863.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (6 samples, 0.03%)</title><rect x="7.1996%" y="853" width="0.0340%" height="15" fill="rgb(222,18,33)" fg:x="1269" fg:w="6"/><text x="7.4496%" y="863.50"></text></g><g><title>rand::rngs::thread::thread_rng (2 samples, 0.01%)</title><rect x="7.2336%" y="853" width="0.0113%" height="15" fill="rgb(213,199,7)" fg:x="1275" fg:w="2"/><text x="7.4836%" y="863.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (3 samples, 0.02%)</title><rect x="7.2450%" y="853" width="0.0170%" height="15" fill="rgb(250,110,10)" fg:x="1277" fg:w="3"/><text x="7.4950%" y="863.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (2 samples, 0.01%)</title><rect x="7.2904%" y="853" width="0.0113%" height="15" fill="rgb(248,123,6)" fg:x="1285" fg:w="2"/><text x="7.5404%" y="863.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (5 samples, 0.03%)</title><rect x="7.3017%" y="853" width="0.0284%" height="15" fill="rgb(206,91,31)" fg:x="1287" fg:w="5"/><text x="7.5517%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="7.3301%" y="853" width="0.0113%" height="15" fill="rgb(211,154,13)" fg:x="1292" fg:w="2"/><text x="7.5801%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_unchecked (3 samples, 0.02%)</title><rect x="7.3471%" y="853" width="0.0170%" height="15" fill="rgb(225,148,7)" fg:x="1295" fg:w="3"/><text x="7.5971%" y="863.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove_abandoned (4 samples, 0.02%)</title><rect x="7.3698%" y="853" width="0.0227%" height="15" fill="rgb(220,160,43)" fg:x="1299" fg:w="4"/><text x="7.6198%" y="863.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (4 samples, 0.02%)</title><rect x="7.3698%" y="837" width="0.0227%" height="15" fill="rgb(213,52,39)" fg:x="1299" fg:w="4"/><text x="7.6198%" y="847.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (4 samples, 0.02%)</title><rect x="7.3698%" y="821" width="0.0227%" height="15" fill="rgb(243,137,7)" fg:x="1299" fg:w="4"/><text x="7.6198%" y="831.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::dealloc_descriptor_sets (3 samples, 0.02%)</title><rect x="7.3925%" y="853" width="0.0170%" height="15" fill="rgb(230,79,13)" fg:x="1303" fg:w="3"/><text x="7.6425%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::get_fence_value (6 samples, 0.03%)</title><rect x="7.4095%" y="853" width="0.0340%" height="15" fill="rgb(247,105,23)" fg:x="1306" fg:w="6"/><text x="7.6595%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::Fence::get_latest (3 samples, 0.02%)</title><rect x="7.4265%" y="837" width="0.0170%" height="15" fill="rgb(223,179,41)" fg:x="1309" fg:w="3"/><text x="7.6765%" y="847.50"></text></g><g><title>ash::device::Device::get_semaphore_counter_value (3 samples, 0.02%)</title><rect x="7.4265%" y="821" width="0.0170%" height="15" fill="rgb(218,9,34)" fg:x="1309" fg:w="3"/><text x="7.6765%" y="831.50"></text></g><g><title>[[stack]] (349 samples, 1.98%)</title><rect x="5.4919%" y="869" width="1.9800%" height="15" fill="rgb(222,106,8)" fg:x="968" fg:w="349"/><text x="5.7419%" y="879.50">[..</text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="7.4719%" y="853" width="0.0113%" height="15" fill="rgb(211,220,0)" fg:x="1317" fg:w="2"/><text x="7.7219%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="7.4833%" y="853" width="0.0908%" height="15" fill="rgb(229,52,16)" fg:x="1319" fg:w="16"/><text x="7.7333%" y="863.50"></text></g><g><title>[anon] (26 samples, 0.15%)</title><rect x="7.4719%" y="869" width="0.1475%" height="15" fill="rgb(212,155,18)" fg:x="1317" fg:w="26"/><text x="7.7219%" y="879.50"></text></g><g><title>__pthread_equal (2 samples, 0.01%)</title><rect x="7.6081%" y="853" width="0.0113%" height="15" fill="rgb(242,21,14)" fg:x="1341" fg:w="2"/><text x="7.8581%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (6 samples, 0.03%)</title><rect x="7.6194%" y="869" width="0.0340%" height="15" fill="rgb(222,19,48)" fg:x="1343" fg:w="6"/><text x="7.8694%" y="879.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="7.6535%" y="869" width="0.0170%" height="15" fill="rgb(232,45,27)" fg:x="1349" fg:w="3"/><text x="7.9035%" y="879.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_shader (3 samples, 0.02%)</title><rect x="7.6535%" y="853" width="0.0170%" height="15" fill="rgb(249,103,42)" fg:x="1349" fg:w="3"/><text x="7.9035%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (43 samples, 0.24%)</title><rect x="7.6762%" y="869" width="0.2440%" height="15" fill="rgb(246,81,33)" fg:x="1353" fg:w="43"/><text x="7.9262%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="7.8918%" y="853" width="0.0284%" height="15" fill="rgb(252,33,42)" fg:x="1391" fg:w="5"/><text x="8.1418%" y="863.50"></text></g><g><title>__ieee754_fmod (4 samples, 0.02%)</title><rect x="7.9371%" y="853" width="0.0227%" height="15" fill="rgb(209,212,41)" fg:x="1399" fg:w="4"/><text x="8.1871%" y="863.50"></text></g><g><title>__sincos (4 samples, 0.02%)</title><rect x="7.9598%" y="853" width="0.0227%" height="15" fill="rgb(207,154,6)" fg:x="1403" fg:w="4"/><text x="8.2098%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;()&gt; (2 samples, 0.01%)</title><rect x="7.9825%" y="853" width="0.0113%" height="15" fill="rgb(223,64,47)" fg:x="1407" fg:w="2"/><text x="8.2325%" y="863.50"></text></g><g><title>[neuralang] (13 samples, 0.07%)</title><rect x="7.9258%" y="869" width="0.0738%" height="15" fill="rgb(211,161,38)" fg:x="1397" fg:w="13"/><text x="8.1758%" y="879.50"></text></g><g><title>[nvidiactl] (4 samples, 0.02%)</title><rect x="7.9995%" y="869" width="0.0227%" height="15" fill="rgb(219,138,40)" fg:x="1410" fg:w="4"/><text x="8.2495%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="7.9995%" y="853" width="0.0227%" height="15" fill="rgb(241,228,46)" fg:x="1410" fg:w="4"/><text x="8.2495%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_drop (2 samples, 0.01%)</title><rect x="8.3967%" y="853" width="0.0113%" height="15" fill="rgb(223,209,38)" fg:x="1480" fg:w="2"/><text x="8.6467%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (3 samples, 0.02%)</title><rect x="8.4080%" y="853" width="0.0170%" height="15" fill="rgb(236,164,45)" fg:x="1482" fg:w="3"/><text x="8.6580%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_blend_constant (3 samples, 0.02%)</title><rect x="8.4307%" y="853" width="0.0170%" height="15" fill="rgb(231,15,5)" fg:x="1486" fg:w="3"/><text x="8.6807%" y="863.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (3 samples, 0.02%)</title><rect x="8.4477%" y="853" width="0.0170%" height="15" fill="rgb(252,35,15)" fg:x="1489" fg:w="3"/><text x="8.6977%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="8.4648%" y="853" width="0.0284%" height="15" fill="rgb(248,181,18)" fg:x="1492" fg:w="5"/><text x="8.7148%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="8.4931%" y="853" width="0.0227%" height="15" fill="rgb(233,39,42)" fg:x="1497" fg:w="4"/><text x="8.7431%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="8.5158%" y="853" width="0.0113%" height="15" fill="rgb(238,110,33)" fg:x="1501" fg:w="2"/><text x="8.7658%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="8.5272%" y="853" width="0.0227%" height="15" fill="rgb(233,195,10)" fg:x="1503" fg:w="4"/><text x="8.7772%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="8.5555%" y="853" width="0.0113%" height="15" fill="rgb(254,105,3)" fg:x="1508" fg:w="2"/><text x="8.8055%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="8.5726%" y="853" width="0.0170%" height="15" fill="rgb(221,225,9)" fg:x="1511" fg:w="3"/><text x="8.8226%" y="863.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 0.02%)</title><rect x="8.5953%" y="853" width="0.0227%" height="15" fill="rgb(224,227,45)" fg:x="1515" fg:w="4"/><text x="8.8453%" y="863.50"></text></g><g><title>&lt;u32 as winit::dpi::Pixel&gt;::from_f64 (2 samples, 0.01%)</title><rect x="8.6293%" y="853" width="0.0113%" height="15" fill="rgb(229,198,43)" fg:x="1521" fg:w="2"/><text x="8.8793%" y="863.50"></text></g><g><title>&lt;wgpu::VertexBufferLayout as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="8.6406%" y="853" width="0.0113%" height="15" fill="rgb(206,209,35)" fg:x="1523" fg:w="2"/><text x="8.8906%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::buffer_drop (2 samples, 0.01%)</title><rect x="8.6520%" y="853" width="0.0113%" height="15" fill="rgb(245,195,53)" fg:x="1525" fg:w="2"/><text x="8.9020%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (2 samples, 0.01%)</title><rect x="8.6633%" y="853" width="0.0113%" height="15" fill="rgb(240,92,26)" fg:x="1527" fg:w="2"/><text x="8.9133%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (2 samples, 0.01%)</title><rect x="8.6974%" y="853" width="0.0113%" height="15" fill="rgb(207,40,23)" fg:x="1533" fg:w="2"/><text x="8.9474%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (6 samples, 0.03%)</title><rect x="8.7087%" y="853" width="0.0340%" height="15" fill="rgb(223,111,35)" fg:x="1535" fg:w="6"/><text x="8.9587%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (162 samples, 0.92%)</title><rect x="8.7428%" y="853" width="0.9191%" height="15" fill="rgb(229,147,28)" fg:x="1541" fg:w="162"/><text x="8.9928%" y="863.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="9.6619%" y="853" width="0.0113%" height="15" fill="rgb(211,29,28)" fg:x="1703" fg:w="2"/><text x="9.9119%" y="863.50"></text></g><g><title>[unknown] (153 samples, 0.87%)</title><rect x="9.6789%" y="853" width="0.8680%" height="15" fill="rgb(228,72,33)" fg:x="1706" fg:w="153"/><text x="9.9289%" y="863.50"></text></g><g><title>[unknown] (150 samples, 0.85%)</title><rect x="9.6959%" y="837" width="0.8510%" height="15" fill="rgb(205,214,31)" fg:x="1709" fg:w="150"/><text x="9.9459%" y="847.50"></text></g><g><title>[unknown] (143 samples, 0.81%)</title><rect x="9.7356%" y="821" width="0.8113%" height="15" fill="rgb(224,111,15)" fg:x="1716" fg:w="143"/><text x="9.9856%" y="831.50"></text></g><g><title>[unknown] (142 samples, 0.81%)</title><rect x="9.7413%" y="805" width="0.8056%" height="15" fill="rgb(253,21,26)" fg:x="1717" fg:w="142"/><text x="9.9913%" y="815.50"></text></g><g><title>[unknown] (137 samples, 0.78%)</title><rect x="9.7697%" y="789" width="0.7773%" height="15" fill="rgb(245,139,43)" fg:x="1722" fg:w="137"/><text x="10.0197%" y="799.50"></text></g><g><title>[unknown] (132 samples, 0.75%)</title><rect x="9.7980%" y="773" width="0.7489%" height="15" fill="rgb(252,170,7)" fg:x="1727" fg:w="132"/><text x="10.0480%" y="783.50"></text></g><g><title>[unknown] (103 samples, 0.58%)</title><rect x="9.9626%" y="757" width="0.5844%" height="15" fill="rgb(231,118,14)" fg:x="1756" fg:w="103"/><text x="10.2126%" y="767.50"></text></g><g><title>[unknown] (96 samples, 0.54%)</title><rect x="10.0023%" y="741" width="0.5446%" height="15" fill="rgb(238,83,0)" fg:x="1763" fg:w="96"/><text x="10.2523%" y="751.50"></text></g><g><title>[unknown] (82 samples, 0.47%)</title><rect x="10.0817%" y="725" width="0.4652%" height="15" fill="rgb(221,39,39)" fg:x="1777" fg:w="82"/><text x="10.3317%" y="735.50"></text></g><g><title>[unknown] (48 samples, 0.27%)</title><rect x="10.2746%" y="709" width="0.2723%" height="15" fill="rgb(222,119,46)" fg:x="1811" fg:w="48"/><text x="10.5246%" y="719.50"></text></g><g><title>[unknown] (35 samples, 0.20%)</title><rect x="10.3483%" y="693" width="0.1986%" height="15" fill="rgb(222,165,49)" fg:x="1824" fg:w="35"/><text x="10.5983%" y="703.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="10.4335%" y="677" width="0.1135%" height="15" fill="rgb(219,113,52)" fg:x="1839" fg:w="20"/><text x="10.6835%" y="687.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="10.4448%" y="661" width="0.1021%" height="15" fill="rgb(214,7,15)" fg:x="1841" fg:w="18"/><text x="10.6948%" y="671.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="10.4788%" y="645" width="0.0681%" height="15" fill="rgb(235,32,4)" fg:x="1847" fg:w="12"/><text x="10.7288%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="10.5072%" y="629" width="0.0397%" height="15" fill="rgb(238,90,54)" fg:x="1852" fg:w="7"/><text x="10.7572%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="10.5129%" y="613" width="0.0340%" height="15" fill="rgb(213,208,19)" fg:x="1853" fg:w="6"/><text x="10.7629%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="10.5242%" y="597" width="0.0227%" height="15" fill="rgb(233,156,4)" fg:x="1855" fg:w="4"/><text x="10.7742%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.5299%" y="581" width="0.0170%" height="15" fill="rgb(207,194,5)" fg:x="1856" fg:w="3"/><text x="10.7799%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="10.5299%" y="565" width="0.0170%" height="15" fill="rgb(206,111,30)" fg:x="1856" fg:w="3"/><text x="10.7799%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.5356%" y="549" width="0.0113%" height="15" fill="rgb(243,70,54)" fg:x="1857" fg:w="2"/><text x="10.7856%" y="559.50"></text></g><g><title>__GI___poll (6 samples, 0.03%)</title><rect x="10.5696%" y="853" width="0.0340%" height="15" fill="rgb(242,28,8)" fg:x="1863" fg:w="6"/><text x="10.8196%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="10.5810%" y="837" width="0.0227%" height="15" fill="rgb(219,106,18)" fg:x="1865" fg:w="4"/><text x="10.8310%" y="847.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.01%)</title><rect x="10.6150%" y="853" width="0.0113%" height="15" fill="rgb(244,222,10)" fg:x="1871" fg:w="2"/><text x="10.8650%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.6150%" y="837" width="0.0113%" height="15" fill="rgb(236,179,52)" fg:x="1871" fg:w="2"/><text x="10.8650%" y="847.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.01%)</title><rect x="10.6377%" y="853" width="0.0113%" height="15" fill="rgb(213,23,39)" fg:x="1875" fg:w="2"/><text x="10.8877%" y="863.50"></text></g><g><title>__libc_recvmsg (2 samples, 0.01%)</title><rect x="10.6547%" y="853" width="0.0113%" height="15" fill="rgb(238,48,10)" fg:x="1878" fg:w="2"/><text x="10.9047%" y="863.50"></text></g><g><title>__recvmsg_syscall (2 samples, 0.01%)</title><rect x="10.6547%" y="837" width="0.0113%" height="15" fill="rgb(251,196,23)" fg:x="1878" fg:w="2"/><text x="10.9047%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="10.6547%" y="821" width="0.0113%" height="15" fill="rgb(250,152,24)" fg:x="1878" fg:w="2"/><text x="10.9047%" y="831.50"></text></g><g><title>[libX11.so.6.4.0] (3 samples, 0.02%)</title><rect x="10.6717%" y="469" width="0.0170%" height="15" fill="rgb(209,150,17)" fg:x="1881" fg:w="3"/><text x="10.9217%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (3 samples, 0.02%)</title><rect x="10.6717%" y="453" width="0.0170%" height="15" fill="rgb(234,202,34)" fg:x="1881" fg:w="3"/><text x="10.9217%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.02%)</title><rect x="10.6717%" y="437" width="0.0170%" height="15" fill="rgb(253,148,53)" fg:x="1881" fg:w="3"/><text x="10.9217%" y="447.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="10.6774%" y="421" width="0.0113%" height="15" fill="rgb(218,129,16)" fg:x="1882" fg:w="2"/><text x="10.9274%" y="431.50"></text></g><g><title>__libc_start_main_impl (5 samples, 0.03%)</title><rect x="10.6717%" y="853" width="0.0284%" height="15" fill="rgb(216,85,19)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="863.50"></text></g><g><title>__libc_start_call_main (5 samples, 0.03%)</title><rect x="10.6717%" y="837" width="0.0284%" height="15" fill="rgb(235,228,7)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="847.50"></text></g><g><title>main (5 samples, 0.03%)</title><rect x="10.6717%" y="821" width="0.0284%" height="15" fill="rgb(245,175,0)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.03%)</title><rect x="10.6717%" y="805" width="0.0284%" height="15" fill="rgb(208,168,36)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="815.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="10.6717%" y="789" width="0.0284%" height="15" fill="rgb(246,171,24)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="799.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="10.6717%" y="773" width="0.0284%" height="15" fill="rgb(215,142,24)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="783.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="10.6717%" y="757" width="0.0284%" height="15" fill="rgb(250,187,7)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (5 samples, 0.03%)</title><rect x="10.6717%" y="741" width="0.0284%" height="15" fill="rgb(228,66,33)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="751.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="10.6717%" y="725" width="0.0284%" height="15" fill="rgb(234,215,21)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="735.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="10.6717%" y="709" width="0.0284%" height="15" fill="rgb(222,191,20)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="719.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="10.6717%" y="693" width="0.0284%" height="15" fill="rgb(245,79,54)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.03%)</title><rect x="10.6717%" y="677" width="0.0284%" height="15" fill="rgb(240,10,37)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}} (5 samples, 0.03%)</title><rect x="10.6717%" y="661" width="0.0284%" height="15" fill="rgb(214,192,32)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.03%)</title><rect x="10.6717%" y="645" width="0.0284%" height="15" fill="rgb(209,36,54)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.03%)</title><rect x="10.6717%" y="629" width="0.0284%" height="15" fill="rgb(220,10,11)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="639.50"></text></g><g><title>neuralang::main (5 samples, 0.03%)</title><rect x="10.6717%" y="613" width="0.0284%" height="15" fill="rgb(221,106,17)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="623.50"></text></g><g><title>ggez::event::run (5 samples, 0.03%)</title><rect x="10.6717%" y="597" width="0.0284%" height="15" fill="rgb(251,142,44)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="607.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (5 samples, 0.03%)</title><rect x="10.6717%" y="581" width="0.0284%" height="15" fill="rgb(238,13,15)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="591.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (5 samples, 0.03%)</title><rect x="10.6717%" y="565" width="0.0284%" height="15" fill="rgb(208,107,27)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (5 samples, 0.03%)</title><rect x="10.6717%" y="549" width="0.0284%" height="15" fill="rgb(205,136,37)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (5 samples, 0.03%)</title><rect x="10.6717%" y="533" width="0.0284%" height="15" fill="rgb(250,205,27)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (5 samples, 0.03%)</title><rect x="10.6717%" y="517" width="0.0284%" height="15" fill="rgb(210,80,43)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="527.50"></text></g><g><title>XPending (5 samples, 0.03%)</title><rect x="10.6717%" y="501" width="0.0284%" height="15" fill="rgb(247,160,36)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="511.50"></text></g><g><title>_XEventsQueued (5 samples, 0.03%)</title><rect x="10.6717%" y="485" width="0.0284%" height="15" fill="rgb(234,13,49)" fg:x="1881" fg:w="5"/><text x="10.9217%" y="495.50"></text></g><g><title>_XSend (2 samples, 0.01%)</title><rect x="10.6888%" y="469" width="0.0113%" height="15" fill="rgb(234,122,0)" fg:x="1884" fg:w="2"/><text x="10.9388%" y="479.50"></text></g><g><title>__rdl_alloc (5 samples, 0.03%)</title><rect x="10.7114%" y="853" width="0.0284%" height="15" fill="rgb(207,146,38)" fg:x="1888" fg:w="5"/><text x="10.9614%" y="863.50"></text></g><g><title>__sincosf_fma (2 samples, 0.01%)</title><rect x="10.7512%" y="853" width="0.0113%" height="15" fill="rgb(207,177,25)" fg:x="1895" fg:w="2"/><text x="11.0012%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.04%)</title><rect x="10.7682%" y="853" width="0.0397%" height="15" fill="rgb(211,178,42)" fg:x="1898" fg:w="7"/><text x="11.0182%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="10.7682%" y="837" width="0.0397%" height="15" fill="rgb(230,69,54)" fg:x="1898" fg:w="7"/><text x="11.0182%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.03%)</title><rect x="10.7739%" y="821" width="0.0340%" height="15" fill="rgb(214,135,41)" fg:x="1899" fg:w="6"/><text x="11.0239%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (6 samples, 0.03%)</title><rect x="10.7739%" y="805" width="0.0340%" height="15" fill="rgb(237,67,25)" fg:x="1899" fg:w="6"/><text x="11.0239%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="10.8079%" y="853" width="0.0227%" height="15" fill="rgb(222,189,50)" fg:x="1905" fg:w="4"/><text x="11.0579%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="10.8079%" y="837" width="0.0227%" height="15" fill="rgb(245,148,34)" fg:x="1905" fg:w="4"/><text x="11.0579%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.02%)</title><rect x="10.8079%" y="821" width="0.0227%" height="15" fill="rgb(222,29,6)" fg:x="1905" fg:w="4"/><text x="11.0579%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.02%)</title><rect x="10.8079%" y="805" width="0.0227%" height="15" fill="rgb(221,189,43)" fg:x="1905" fg:w="4"/><text x="11.0579%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="10.8306%" y="853" width="0.0284%" height="15" fill="rgb(207,36,27)" fg:x="1909" fg:w="5"/><text x="11.0806%" y="863.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (2 samples, 0.01%)</title><rect x="10.8646%" y="853" width="0.0113%" height="15" fill="rgb(217,90,24)" fg:x="1915" fg:w="2"/><text x="11.1146%" y="863.50"></text></g><g><title>core::hash::Hash::hash_slice (2 samples, 0.01%)</title><rect x="10.8817%" y="853" width="0.0113%" height="15" fill="rgb(224,66,35)" fg:x="1918" fg:w="2"/><text x="11.1317%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (2 samples, 0.01%)</title><rect x="10.8987%" y="853" width="0.0113%" height="15" fill="rgb(221,13,50)" fg:x="1921" fg:w="2"/><text x="11.1487%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::instance::InstanceArray&gt; (2 samples, 0.01%)</title><rect x="10.9100%" y="853" width="0.0113%" height="15" fill="rgb(236,68,49)" fg:x="1923" fg:w="2"/><text x="11.1600%" y="863.50"></text></g><g><title>core::slice::sort::merge_sort (3 samples, 0.02%)</title><rect x="10.9497%" y="853" width="0.0170%" height="15" fill="rgb(229,146,28)" fg:x="1930" fg:w="3"/><text x="11.1997%" y="863.50"></text></g><g><title>core::slice::sort::recurse (5 samples, 0.03%)</title><rect x="10.9668%" y="853" width="0.0284%" height="15" fill="rgb(225,31,38)" fg:x="1933" fg:w="5"/><text x="11.2168%" y="863.50"></text></g><g><title>ggez::graphics::mesh::Mesh::from_data_wgpu (2 samples, 0.01%)</title><rect x="11.0065%" y="789" width="0.0113%" height="15" fill="rgb(250,208,3)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="799.50"></text></g><g><title>ggez::graphics::mesh::Mesh::create_verts (2 samples, 0.01%)</title><rect x="11.0065%" y="773" width="0.0113%" height="15" fill="rgb(246,54,23)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="783.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (2 samples, 0.01%)</title><rect x="11.0065%" y="757" width="0.0113%" height="15" fill="rgb(243,76,11)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="767.50"></text></g><g><title>wgpu::Device::create_buffer (2 samples, 0.01%)</title><rect x="11.0065%" y="741" width="0.0113%" height="15" fill="rgb(245,21,50)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="751.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="11.0065%" y="725" width="0.0113%" height="15" fill="rgb(228,9,43)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="11.0065%" y="709" width="0.0113%" height="15" fill="rgb(208,100,47)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.01%)</title><rect x="11.0065%" y="693" width="0.0113%" height="15" fill="rgb(232,26,8)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="703.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (2 samples, 0.01%)</title><rect x="11.0065%" y="677" width="0.0113%" height="15" fill="rgb(216,166,38)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="687.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (2 samples, 0.01%)</title><rect x="11.0065%" y="661" width="0.0113%" height="15" fill="rgb(251,202,51)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="671.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (2 samples, 0.01%)</title><rect x="11.0065%" y="645" width="0.0113%" height="15" fill="rgb(254,216,34)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="655.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (2 samples, 0.01%)</title><rect x="11.0065%" y="629" width="0.0113%" height="15" fill="rgb(251,32,27)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="639.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (2 samples, 0.01%)</title><rect x="11.0065%" y="613" width="0.0113%" height="15" fill="rgb(208,127,28)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::allocate_memory (2 samples, 0.01%)</title><rect x="11.0065%" y="597" width="0.0113%" height="15" fill="rgb(224,137,22)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="607.50"></text></g><g><title>ash::device::Device::allocate_memory (2 samples, 0.01%)</title><rect x="11.0065%" y="581" width="0.0113%" height="15" fill="rgb(254,70,32)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="565" width="0.0113%" height="15" fill="rgb(229,75,37)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="549" width="0.0113%" height="15" fill="rgb(252,64,23)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="533" width="0.0113%" height="15" fill="rgb(232,162,48)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="517" width="0.0113%" height="15" fill="rgb(246,160,12)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="501" width="0.0113%" height="15" fill="rgb(247,166,0)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="485" width="0.0113%" height="15" fill="rgb(249,219,21)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="469" width="0.0113%" height="15" fill="rgb(205,209,3)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="453" width="0.0113%" height="15" fill="rgb(243,44,1)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="437" width="0.0113%" height="15" fill="rgb(206,159,16)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="421" width="0.0113%" height="15" fill="rgb(244,77,30)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="405" width="0.0113%" height="15" fill="rgb(218,69,12)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="389" width="0.0113%" height="15" fill="rgb(212,87,7)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0065%" y="373" width="0.0113%" height="15" fill="rgb(245,114,25)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="383.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="11.0065%" y="357" width="0.0113%" height="15" fill="rgb(210,61,42)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="341" width="0.0113%" height="15" fill="rgb(211,52,33)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="325" width="0.0113%" height="15" fill="rgb(234,58,33)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="309" width="0.0113%" height="15" fill="rgb(220,115,36)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="293" width="0.0113%" height="15" fill="rgb(243,153,54)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="277" width="0.0113%" height="15" fill="rgb(251,47,18)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="261" width="0.0113%" height="15" fill="rgb(242,102,42)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.0065%" y="245" width="0.0113%" height="15" fill="rgb(234,31,38)" fg:x="1940" fg:w="2"/><text x="11.2565%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0235%" y="421" width="0.0113%" height="15" fill="rgb(221,117,51)" fg:x="1943" fg:w="2"/><text x="11.2735%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="11.0235%" y="405" width="0.0113%" height="15" fill="rgb(212,20,18)" fg:x="1943" fg:w="2"/><text x="11.2735%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="11.0235%" y="469" width="0.0170%" height="15" fill="rgb(245,133,36)" fg:x="1943" fg:w="3"/><text x="11.2735%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="11.0235%" y="453" width="0.0170%" height="15" fill="rgb(212,6,19)" fg:x="1943" fg:w="3"/><text x="11.2735%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="11.0235%" y="437" width="0.0170%" height="15" fill="rgb(218,1,36)" fg:x="1943" fg:w="3"/><text x="11.2735%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="11.0235%" y="485" width="0.0227%" height="15" fill="rgb(246,84,54)" fg:x="1943" fg:w="4"/><text x="11.2735%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="11.0235%" y="501" width="0.0284%" height="15" fill="rgb(242,110,6)" fg:x="1943" fg:w="5"/><text x="11.2735%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="11.0235%" y="517" width="0.0340%" height="15" fill="rgb(214,47,5)" fg:x="1943" fg:w="6"/><text x="11.2735%" y="527.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (15 samples, 0.09%)</title><rect x="11.0008%" y="821" width="0.0851%" height="15" fill="rgb(218,159,25)" fg:x="1939" fg:w="15"/><text x="11.2508%" y="831.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (15 samples, 0.09%)</title><rect x="11.0008%" y="805" width="0.0851%" height="15" fill="rgb(215,211,28)" fg:x="1939" fg:w="15"/><text x="11.2508%" y="815.50"></text></g><g><title>wgpu::Surface::configure (12 samples, 0.07%)</title><rect x="11.0178%" y="789" width="0.0681%" height="15" fill="rgb(238,59,32)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="799.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (12 samples, 0.07%)</title><rect x="11.0178%" y="773" width="0.0681%" height="15" fill="rgb(226,82,3)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (12 samples, 0.07%)</title><rect x="11.0178%" y="757" width="0.0681%" height="15" fill="rgb(240,164,32)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (12 samples, 0.07%)</title><rect x="11.0178%" y="741" width="0.0681%" height="15" fill="rgb(232,46,7)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (12 samples, 0.07%)</title><rect x="11.0178%" y="725" width="0.0681%" height="15" fill="rgb(229,129,53)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (12 samples, 0.07%)</title><rect x="11.0178%" y="709" width="0.0681%" height="15" fill="rgb(234,188,29)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="719.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (12 samples, 0.07%)</title><rect x="11.0178%" y="693" width="0.0681%" height="15" fill="rgb(246,141,4)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.204] (12 samples, 0.07%)</title><rect x="11.0178%" y="677" width="0.0681%" height="15" fill="rgb(229,23,39)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="687.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="661" width="0.0681%" height="15" fill="rgb(206,12,3)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="645" width="0.0681%" height="15" fill="rgb(252,226,20)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="629" width="0.0681%" height="15" fill="rgb(216,123,35)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="613" width="0.0681%" height="15" fill="rgb(212,68,40)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="597" width="0.0681%" height="15" fill="rgb(254,125,32)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="581" width="0.0681%" height="15" fill="rgb(253,97,22)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="565" width="0.0681%" height="15" fill="rgb(241,101,14)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="549" width="0.0681%" height="15" fill="rgb(238,103,29)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="11.0178%" y="533" width="0.0681%" height="15" fill="rgb(233,195,47)" fg:x="1942" fg:w="12"/><text x="11.2678%" y="543.50"></text></g><g><title>__GI___ioctl (5 samples, 0.03%)</title><rect x="11.0575%" y="517" width="0.0284%" height="15" fill="rgb(246,218,30)" fg:x="1949" fg:w="5"/><text x="11.3075%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.0575%" y="501" width="0.0284%" height="15" fill="rgb(219,145,47)" fg:x="1949" fg:w="5"/><text x="11.3075%" y="511.50"></text></g><g><title>ggez::context::ContextBuilder::build (17 samples, 0.10%)</title><rect x="11.0008%" y="853" width="0.0964%" height="15" fill="rgb(243,12,26)" fg:x="1939" fg:w="17"/><text x="11.2508%" y="863.50"></text></g><g><title>ggez::context::Context::from_conf (17 samples, 0.10%)</title><rect x="11.0008%" y="837" width="0.0964%" height="15" fill="rgb(214,87,16)" fg:x="1939" fg:w="17"/><text x="11.2508%" y="847.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (7 samples, 0.04%)</title><rect x="11.0972%" y="677" width="0.0397%" height="15" fill="rgb(208,99,42)" fg:x="1956" fg:w="7"/><text x="11.3472%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="11.0972%" y="661" width="0.0397%" height="15" fill="rgb(253,99,2)" fg:x="1956" fg:w="7"/><text x="11.3472%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="11.0972%" y="645" width="0.0397%" height="15" fill="rgb(220,168,23)" fg:x="1956" fg:w="7"/><text x="11.3472%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="11.0972%" y="629" width="0.0397%" height="15" fill="rgb(242,38,24)" fg:x="1956" fg:w="7"/><text x="11.3472%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="11.0972%" y="613" width="0.0397%" height="15" fill="rgb(225,182,9)" fg:x="1956" fg:w="7"/><text x="11.3472%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="11.1086%" y="597" width="0.0284%" height="15" fill="rgb(243,178,37)" fg:x="1958" fg:w="5"/><text x="11.3586%" y="607.50"></text></g><g><title>ggez::event::run::{{closure}} (9 samples, 0.05%)</title><rect x="11.0972%" y="853" width="0.0511%" height="15" fill="rgb(232,139,19)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="863.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (9 samples, 0.05%)</title><rect x="11.0972%" y="837" width="0.0511%" height="15" fill="rgb(225,201,24)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="847.50"></text></g><g><title>core::mem::drop (9 samples, 0.05%)</title><rect x="11.0972%" y="821" width="0.0511%" height="15" fill="rgb(221,47,46)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (9 samples, 0.05%)</title><rect x="11.0972%" y="805" width="0.0511%" height="15" fill="rgb(249,23,13)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="815.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (9 samples, 0.05%)</title><rect x="11.0972%" y="789" width="0.0511%" height="15" fill="rgb(219,9,5)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="799.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (9 samples, 0.05%)</title><rect x="11.0972%" y="773" width="0.0511%" height="15" fill="rgb(254,171,16)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (9 samples, 0.05%)</title><rect x="11.0972%" y="757" width="0.0511%" height="15" fill="rgb(230,171,20)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (9 samples, 0.05%)</title><rect x="11.0972%" y="741" width="0.0511%" height="15" fill="rgb(210,71,41)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="751.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (9 samples, 0.05%)</title><rect x="11.0972%" y="725" width="0.0511%" height="15" fill="rgb(206,173,20)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="735.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (9 samples, 0.05%)</title><rect x="11.0972%" y="709" width="0.0511%" height="15" fill="rgb(233,88,34)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="719.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (9 samples, 0.05%)</title><rect x="11.0972%" y="693" width="0.0511%" height="15" fill="rgb(223,209,46)" fg:x="1956" fg:w="9"/><text x="11.3472%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_framebuffer (2 samples, 0.01%)</title><rect x="11.1370%" y="677" width="0.0113%" height="15" fill="rgb(250,43,18)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="11.1370%" y="661" width="0.0113%" height="15" fill="rgb(208,13,10)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="11.1370%" y="645" width="0.0113%" height="15" fill="rgb(212,200,36)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="11.1370%" y="629" width="0.0113%" height="15" fill="rgb(225,90,30)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="11.1370%" y="613" width="0.0113%" height="15" fill="rgb(236,182,39)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="11.1370%" y="597" width="0.0113%" height="15" fill="rgb(212,144,35)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.01%)</title><rect x="11.1370%" y="581" width="0.0113%" height="15" fill="rgb(228,63,44)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="591.50"></text></g><g><title>&lt;wgpu_hal::vulkan::FramebufferKey as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="11.1370%" y="565" width="0.0113%" height="15" fill="rgb(228,109,6)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="575.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="11.1370%" y="549" width="0.0113%" height="15" fill="rgb(238,117,24)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="11.1370%" y="533" width="0.0113%" height="15" fill="rgb(242,26,26)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="11.1370%" y="517" width="0.0113%" height="15" fill="rgb(221,92,48)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.01%)</title><rect x="11.1370%" y="501" width="0.0113%" height="15" fill="rgb(209,209,32)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="11.1370%" y="485" width="0.0113%" height="15" fill="rgb(221,70,22)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (2 samples, 0.01%)</title><rect x="11.1370%" y="469" width="0.0113%" height="15" fill="rgb(248,145,5)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (2 samples, 0.01%)</title><rect x="11.1370%" y="453" width="0.0113%" height="15" fill="rgb(226,116,26)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="11.1370%" y="437" width="0.0113%" height="15" fill="rgb(244,5,17)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="447.50"></text></g><g><title>&lt;wgpu_hal::vulkan::FramebufferAttachment as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="11.1370%" y="421" width="0.0113%" height="15" fill="rgb(252,159,33)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="431.50"></text></g><g><title>&lt;ash::vk::definitions::ImageView as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="11.1370%" y="405" width="0.0113%" height="15" fill="rgb(206,71,0)" fg:x="1963" fg:w="2"/><text x="11.3870%" y="415.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="11.1823%" y="677" width="0.0170%" height="15" fill="rgb(233,118,54)" fg:x="1971" fg:w="3"/><text x="11.4323%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (42 samples, 0.24%)</title><rect x="11.4036%" y="597" width="0.2383%" height="15" fill="rgb(234,83,48)" fg:x="2010" fg:w="42"/><text x="11.6536%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.15%)</title><rect x="11.4944%" y="581" width="0.1475%" height="15" fill="rgb(228,3,54)" fg:x="2026" fg:w="26"/><text x="11.7444%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="11.5852%" y="565" width="0.0567%" height="15" fill="rgb(226,155,13)" fg:x="2042" fg:w="10"/><text x="11.8352%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="11.6135%" y="549" width="0.0284%" height="15" fill="rgb(241,28,37)" fg:x="2047" fg:w="5"/><text x="11.8635%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="11.6135%" y="533" width="0.0284%" height="15" fill="rgb(233,93,10)" fg:x="2047" fg:w="5"/><text x="11.8635%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="11.6135%" y="517" width="0.0284%" height="15" fill="rgb(225,113,19)" fg:x="2047" fg:w="5"/><text x="11.8635%" y="527.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (80 samples, 0.45%)</title><rect x="11.1994%" y="677" width="0.4539%" height="15" fill="rgb(241,2,18)" fg:x="1974" fg:w="80"/><text x="11.4494%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (80 samples, 0.45%)</title><rect x="11.1994%" y="661" width="0.4539%" height="15" fill="rgb(228,207,21)" fg:x="1974" fg:w="80"/><text x="11.4494%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (76 samples, 0.43%)</title><rect x="11.2221%" y="645" width="0.4312%" height="15" fill="rgb(213,211,35)" fg:x="1978" fg:w="76"/><text x="11.4721%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (71 samples, 0.40%)</title><rect x="11.2504%" y="629" width="0.4028%" height="15" fill="rgb(209,83,10)" fg:x="1983" fg:w="71"/><text x="11.5004%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (58 samples, 0.33%)</title><rect x="11.3242%" y="613" width="0.3291%" height="15" fill="rgb(209,164,1)" fg:x="1996" fg:w="58"/><text x="11.5742%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="11.6419%" y="597" width="0.0113%" height="15" fill="rgb(213,184,43)" fg:x="2052" fg:w="2"/><text x="11.8919%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="11.6646%" y="629" width="0.0397%" height="15" fill="rgb(231,61,34)" fg:x="2056" fg:w="7"/><text x="11.9146%" y="639.50"></text></g><g><title>__memcpy_sse2_unaligned (4 samples, 0.02%)</title><rect x="11.7043%" y="629" width="0.0227%" height="15" fill="rgb(235,75,3)" fg:x="2063" fg:w="4"/><text x="11.9543%" y="639.50"></text></g><g><title>ash::device::Device::cmd_set_viewport (18 samples, 0.10%)</title><rect x="11.6589%" y="677" width="0.1021%" height="15" fill="rgb(220,106,47)" fg:x="2055" fg:w="18"/><text x="11.9089%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.10%)</title><rect x="11.6589%" y="661" width="0.1021%" height="15" fill="rgb(210,196,33)" fg:x="2055" fg:w="18"/><text x="11.9089%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.10%)</title><rect x="11.6646%" y="645" width="0.0964%" height="15" fill="rgb(229,154,42)" fg:x="2056" fg:w="17"/><text x="11.9146%" y="655.50"></text></g><g><title>memcpy@plt (6 samples, 0.03%)</title><rect x="11.7270%" y="629" width="0.0340%" height="15" fill="rgb(228,114,26)" fg:x="2067" fg:w="6"/><text x="11.9770%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::conv::&lt;impl wgpu_hal::ColorAttachment&lt;wgpu_hal::vulkan::Api&gt;&gt;::make_vk_clear_color (4 samples, 0.02%)</title><rect x="11.7781%" y="677" width="0.0227%" height="15" fill="rgb(208,144,1)" fg:x="2076" fg:w="4"/><text x="12.0281%" y="687.50"></text></g><g><title>wgpu_types::TextureFormat::sample_type (3 samples, 0.02%)</title><rect x="11.7837%" y="661" width="0.0170%" height="15" fill="rgb(239,112,37)" fg:x="2077" fg:w="3"/><text x="12.0337%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.02%)</title><rect x="11.8064%" y="629" width="0.0227%" height="15" fill="rgb(210,96,50)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.02%)</title><rect x="11.8064%" y="613" width="0.0227%" height="15" fill="rgb(222,178,2)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.02%)</title><rect x="11.8064%" y="597" width="0.0227%" height="15" fill="rgb(226,74,18)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="607.50"></text></g><g><title>&lt;wgpu_hal::vulkan::FramebufferKey as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="11.8064%" y="581" width="0.0227%" height="15" fill="rgb(225,67,54)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="591.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="11.8064%" y="565" width="0.0227%" height="15" fill="rgb(251,92,32)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.02%)</title><rect x="11.8064%" y="549" width="0.0227%" height="15" fill="rgb(228,149,22)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="559.50"></text></g><g><title>core::hash::Hash::hash_slice (4 samples, 0.02%)</title><rect x="11.8064%" y="533" width="0.0227%" height="15" fill="rgb(243,54,13)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="11.8064%" y="517" width="0.0227%" height="15" fill="rgb(243,180,28)" fg:x="2081" fg:w="4"/><text x="12.0564%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_framebuffer (11 samples, 0.06%)</title><rect x="11.8007%" y="677" width="0.0624%" height="15" fill="rgb(208,167,24)" fg:x="2080" fg:w="11"/><text x="12.0507%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10 samples, 0.06%)</title><rect x="11.8064%" y="661" width="0.0567%" height="15" fill="rgb(245,73,45)" fg:x="2081" fg:w="10"/><text x="12.0564%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10 samples, 0.06%)</title><rect x="11.8064%" y="645" width="0.0567%" height="15" fill="rgb(237,203,48)" fg:x="2081" fg:w="10"/><text x="12.0564%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="11.8291%" y="629" width="0.0340%" height="15" fill="rgb(211,197,16)" fg:x="2085" fg:w="6"/><text x="12.0791%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.03%)</title><rect x="11.8291%" y="613" width="0.0340%" height="15" fill="rgb(243,99,51)" fg:x="2085" fg:w="6"/><text x="12.0791%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.03%)</title><rect x="11.8348%" y="597" width="0.0284%" height="15" fill="rgb(215,123,29)" fg:x="2086" fg:w="5"/><text x="12.0848%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.03%)</title><rect x="11.8348%" y="581" width="0.0284%" height="15" fill="rgb(239,186,37)" fg:x="2086" fg:w="5"/><text x="12.0848%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.03%)</title><rect x="11.8348%" y="565" width="0.0284%" height="15" fill="rgb(252,136,39)" fg:x="2086" fg:w="5"/><text x="12.0848%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.03%)</title><rect x="11.8745%" y="629" width="0.0284%" height="15" fill="rgb(223,213,32)" fg:x="2093" fg:w="5"/><text x="12.1245%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.03%)</title><rect x="11.8745%" y="613" width="0.0284%" height="15" fill="rgb(233,115,5)" fg:x="2093" fg:w="5"/><text x="12.1245%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.03%)</title><rect x="11.8745%" y="597" width="0.0284%" height="15" fill="rgb(207,226,44)" fg:x="2093" fg:w="5"/><text x="12.1245%" y="607.50"></text></g><g><title>&lt;wgpu_hal::vulkan::RenderPassKey as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="11.8745%" y="581" width="0.0284%" height="15" fill="rgb(208,126,0)" fg:x="2093" fg:w="5"/><text x="12.1245%" y="591.50"></text></g><g><title>&lt;wgpu_hal::vulkan::RenderPassKey as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="11.8915%" y="565" width="0.0113%" height="15" fill="rgb(244,66,21)" fg:x="2096" fg:w="2"/><text x="12.1415%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="11.9029%" y="597" width="0.0113%" height="15" fill="rgb(222,97,12)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.01%)</title><rect x="11.9029%" y="581" width="0.0113%" height="15" fill="rgb(219,213,19)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="591.50"></text></g><g><title>&lt;wgpu_hal::vulkan::RenderPassKey as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="11.9029%" y="565" width="0.0113%" height="15" fill="rgb(252,169,30)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="575.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="11.9029%" y="549" width="0.0113%" height="15" fill="rgb(206,32,51)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="559.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="11.9029%" y="533" width="0.0113%" height="15" fill="rgb(250,172,42)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="543.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_slice (2 samples, 0.01%)</title><rect x="11.9029%" y="517" width="0.0113%" height="15" fill="rgb(209,34,43)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="527.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_slice (2 samples, 0.01%)</title><rect x="11.9029%" y="501" width="0.0113%" height="15" fill="rgb(223,11,35)" fg:x="2098" fg:w="2"/><text x="12.1529%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.05%)</title><rect x="11.8745%" y="645" width="0.0454%" height="15" fill="rgb(251,219,26)" fg:x="2093" fg:w="8"/><text x="12.1245%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="11.9029%" y="629" width="0.0170%" height="15" fill="rgb(231,119,3)" fg:x="2098" fg:w="3"/><text x="12.1529%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="11.9029%" y="613" width="0.0170%" height="15" fill="rgb(216,97,11)" fg:x="2098" fg:w="3"/><text x="12.1529%" y="623.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (137 samples, 0.78%)</title><rect x="11.1483%" y="853" width="0.7773%" height="15" fill="rgb(223,59,9)" fg:x="1965" fg:w="137"/><text x="11.3983%" y="863.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (136 samples, 0.77%)</title><rect x="11.1540%" y="837" width="0.7716%" height="15" fill="rgb(233,93,31)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (136 samples, 0.77%)</title><rect x="11.1540%" y="821" width="0.7716%" height="15" fill="rgb(239,81,33)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (136 samples, 0.77%)</title><rect x="11.1540%" y="805" width="0.7716%" height="15" fill="rgb(213,120,34)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="815.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (136 samples, 0.77%)</title><rect x="11.1540%" y="789" width="0.7716%" height="15" fill="rgb(243,49,53)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="799.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (136 samples, 0.77%)</title><rect x="11.1540%" y="773" width="0.7716%" height="15" fill="rgb(247,216,33)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (136 samples, 0.77%)</title><rect x="11.1540%" y="757" width="0.7716%" height="15" fill="rgb(226,26,14)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (136 samples, 0.77%)</title><rect x="11.1540%" y="741" width="0.7716%" height="15" fill="rgb(215,49,53)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="751.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (136 samples, 0.77%)</title><rect x="11.1540%" y="725" width="0.7716%" height="15" fill="rgb(245,162,40)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="735.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (136 samples, 0.77%)</title><rect x="11.1540%" y="709" width="0.7716%" height="15" fill="rgb(229,68,17)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="719.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (136 samples, 0.77%)</title><rect x="11.1540%" y="693" width="0.7716%" height="15" fill="rgb(213,182,10)" fg:x="1966" fg:w="136"/><text x="11.4040%" y="703.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::make_render_pass (11 samples, 0.06%)</title><rect x="11.8632%" y="677" width="0.0624%" height="15" fill="rgb(245,125,30)" fg:x="2091" fg:w="11"/><text x="12.1132%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.05%)</title><rect x="11.8745%" y="661" width="0.0511%" height="15" fill="rgb(232,202,2)" fg:x="2093" fg:w="9"/><text x="12.1245%" y="671.50"></text></g><g><title>ggez::graphics::canvas::DefaultResources::new (2 samples, 0.01%)</title><rect x="11.9256%" y="853" width="0.0113%" height="15" fill="rgb(237,140,51)" fg:x="2102" fg:w="2"/><text x="12.1756%" y="863.50"></text></g><g><title>&lt;ggez::graphics::mesh::Mesh as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="11.9256%" y="837" width="0.0113%" height="15" fill="rgb(236,157,25)" fg:x="2102" fg:w="2"/><text x="12.1756%" y="847.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="11.9256%" y="821" width="0.0113%" height="15" fill="rgb(219,209,0)" fg:x="2102" fg:w="2"/><text x="12.1756%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="11.9256%" y="805" width="0.0113%" height="15" fill="rgb(240,116,54)" fg:x="2102" fg:w="2"/><text x="12.1756%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.01%)</title><rect x="11.9256%" y="789" width="0.0113%" height="15" fill="rgb(216,10,36)" fg:x="2102" fg:w="2"/><text x="12.1756%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="11.9256%" y="773" width="0.0113%" height="15" fill="rgb(222,72,44)" fg:x="2102" fg:w="2"/><text x="12.1756%" y="783.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (4 samples, 0.02%)</title><rect x="11.9369%" y="853" width="0.0227%" height="15" fill="rgb(232,159,9)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="863.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="11.9369%" y="837" width="0.0227%" height="15" fill="rgb(210,39,32)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (4 samples, 0.02%)</title><rect x="11.9369%" y="821" width="0.0227%" height="15" fill="rgb(216,194,45)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="831.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="11.9369%" y="805" width="0.0227%" height="15" fill="rgb(218,18,35)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="815.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (4 samples, 0.02%)</title><rect x="11.9369%" y="789" width="0.0227%" height="15" fill="rgb(207,83,51)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (4 samples, 0.02%)</title><rect x="11.9369%" y="773" width="0.0227%" height="15" fill="rgb(225,63,43)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="783.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (4 samples, 0.02%)</title><rect x="11.9369%" y="757" width="0.0227%" height="15" fill="rgb(207,57,36)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (4 samples, 0.02%)</title><rect x="11.9369%" y="741" width="0.0227%" height="15" fill="rgb(216,99,33)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="751.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (4 samples, 0.02%)</title><rect x="11.9369%" y="725" width="0.0227%" height="15" fill="rgb(225,42,16)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (4 samples, 0.02%)</title><rect x="11.9369%" y="709" width="0.0227%" height="15" fill="rgb(220,201,45)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="719.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (4 samples, 0.02%)</title><rect x="11.9369%" y="693" width="0.0227%" height="15" fill="rgb(225,33,4)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="11.9369%" y="677" width="0.0227%" height="15" fill="rgb(224,33,50)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="11.9369%" y="661" width="0.0227%" height="15" fill="rgb(246,198,51)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="11.9369%" y="645" width="0.0227%" height="15" fill="rgb(205,22,4)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="11.9369%" y="629" width="0.0227%" height="15" fill="rgb(206,3,8)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="11.9369%" y="613" width="0.0227%" height="15" fill="rgb(251,23,15)" fg:x="2104" fg:w="4"/><text x="12.1869%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="11.9426%" y="597" width="0.0170%" height="15" fill="rgb(252,88,28)" fg:x="2105" fg:w="3"/><text x="12.1926%" y="607.50"></text></g><g><title>XextAddDisplay (6 samples, 0.03%)</title><rect x="11.9823%" y="549" width="0.0340%" height="15" fill="rgb(212,127,14)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="559.50"></text></g><g><title>XInitExtension (6 samples, 0.03%)</title><rect x="11.9823%" y="533" width="0.0340%" height="15" fill="rgb(247,145,37)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="543.50"></text></g><g><title>XQueryExtension (6 samples, 0.03%)</title><rect x="11.9823%" y="517" width="0.0340%" height="15" fill="rgb(209,117,53)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="527.50"></text></g><g><title>_XReply (6 samples, 0.03%)</title><rect x="11.9823%" y="501" width="0.0340%" height="15" fill="rgb(212,90,42)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="511.50"></text></g><g><title>xcb_wait_for_reply64 (6 samples, 0.03%)</title><rect x="11.9823%" y="485" width="0.0340%" height="15" fill="rgb(218,164,37)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="11.9823%" y="469" width="0.0340%" height="15" fill="rgb(246,65,34)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="11.9823%" y="453" width="0.0340%" height="15" fill="rgb(231,100,33)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="463.50"></text></g><g><title>__GI___poll (6 samples, 0.03%)</title><rect x="11.9823%" y="437" width="0.0340%" height="15" fill="rgb(228,126,14)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="11.9823%" y="421" width="0.0340%" height="15" fill="rgb(215,173,21)" fg:x="2112" fg:w="6"/><text x="12.2323%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="405" width="0.0284%" height="15" fill="rgb(210,6,40)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="389" width="0.0284%" height="15" fill="rgb(212,48,18)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="373" width="0.0284%" height="15" fill="rgb(230,214,11)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="357" width="0.0284%" height="15" fill="rgb(254,105,39)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="341" width="0.0284%" height="15" fill="rgb(245,158,5)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="325" width="0.0284%" height="15" fill="rgb(249,208,11)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="309" width="0.0284%" height="15" fill="rgb(210,39,28)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="293" width="0.0284%" height="15" fill="rgb(211,56,53)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="277" width="0.0284%" height="15" fill="rgb(226,201,30)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="261" width="0.0284%" height="15" fill="rgb(239,101,34)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="245" width="0.0284%" height="15" fill="rgb(226,209,5)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="229" width="0.0284%" height="15" fill="rgb(250,105,47)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="11.9880%" y="213" width="0.0284%" height="15" fill="rgb(230,72,3)" fg:x="2113" fg:w="5"/><text x="12.2380%" y="223.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (6 samples, 0.03%)</title><rect x="12.0163%" y="533" width="0.0340%" height="15" fill="rgb(232,218,39)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (6 samples, 0.03%)</title><rect x="12.0163%" y="517" width="0.0340%" height="15" fill="rgb(248,166,6)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="527.50"></text></g><g><title>_XReply (6 samples, 0.03%)</title><rect x="12.0163%" y="501" width="0.0340%" height="15" fill="rgb(247,89,20)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="511.50"></text></g><g><title>xcb_wait_for_reply64 (6 samples, 0.03%)</title><rect x="12.0163%" y="485" width="0.0340%" height="15" fill="rgb(248,130,54)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="12.0163%" y="469" width="0.0340%" height="15" fill="rgb(234,196,4)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="12.0163%" y="453" width="0.0340%" height="15" fill="rgb(250,143,31)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="463.50"></text></g><g><title>__GI___poll (6 samples, 0.03%)</title><rect x="12.0163%" y="437" width="0.0340%" height="15" fill="rgb(211,110,34)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="12.0163%" y="421" width="0.0340%" height="15" fill="rgb(215,124,48)" fg:x="2118" fg:w="6"/><text x="12.2663%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="405" width="0.0284%" height="15" fill="rgb(216,46,13)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="389" width="0.0284%" height="15" fill="rgb(205,184,25)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="373" width="0.0284%" height="15" fill="rgb(228,1,10)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="357" width="0.0284%" height="15" fill="rgb(213,116,27)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="341" width="0.0284%" height="15" fill="rgb(241,95,50)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="325" width="0.0284%" height="15" fill="rgb(238,48,32)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="309" width="0.0284%" height="15" fill="rgb(235,113,49)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="293" width="0.0284%" height="15" fill="rgb(205,127,43)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="277" width="0.0284%" height="15" fill="rgb(250,162,2)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="261" width="0.0284%" height="15" fill="rgb(220,13,41)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="245" width="0.0284%" height="15" fill="rgb(249,221,25)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="229" width="0.0284%" height="15" fill="rgb(215,208,19)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0220%" y="213" width="0.0284%" height="15" fill="rgb(236,175,2)" fg:x="2119" fg:w="5"/><text x="12.2720%" y="223.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (13 samples, 0.07%)</title><rect x="11.9823%" y="565" width="0.0738%" height="15" fill="rgb(241,52,2)" fg:x="2112" fg:w="13"/><text x="12.2323%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (7 samples, 0.04%)</title><rect x="12.0163%" y="549" width="0.0397%" height="15" fill="rgb(248,140,14)" fg:x="2118" fg:w="7"/><text x="12.2663%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.01%)</title><rect x="12.0561%" y="501" width="0.0113%" height="15" fill="rgb(253,22,42)" fg:x="2125" fg:w="2"/><text x="12.3061%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (20 samples, 0.11%)</title><rect x="11.9823%" y="597" width="0.1135%" height="15" fill="rgb(234,61,47)" fg:x="2112" fg:w="20"/><text x="12.2323%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (20 samples, 0.11%)</title><rect x="11.9823%" y="581" width="0.1135%" height="15" fill="rgb(208,226,15)" fg:x="2112" fg:w="20"/><text x="12.2323%" y="591.50"></text></g><g><title>_XReply (7 samples, 0.04%)</title><rect x="12.0561%" y="565" width="0.0397%" height="15" fill="rgb(217,221,4)" fg:x="2125" fg:w="7"/><text x="12.3061%" y="575.50"></text></g><g><title>xcb_wait_for_reply64 (7 samples, 0.04%)</title><rect x="12.0561%" y="549" width="0.0397%" height="15" fill="rgb(212,174,34)" fg:x="2125" fg:w="7"/><text x="12.3061%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.04%)</title><rect x="12.0561%" y="533" width="0.0397%" height="15" fill="rgb(253,83,4)" fg:x="2125" fg:w="7"/><text x="12.3061%" y="543.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.04%)</title><rect x="12.0561%" y="517" width="0.0397%" height="15" fill="rgb(250,195,49)" fg:x="2125" fg:w="7"/><text x="12.3061%" y="527.50"></text></g><g><title>__GI___poll (5 samples, 0.03%)</title><rect x="12.0674%" y="501" width="0.0284%" height="15" fill="rgb(241,192,25)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="485" width="0.0284%" height="15" fill="rgb(208,124,10)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="469" width="0.0284%" height="15" fill="rgb(222,33,0)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="453" width="0.0284%" height="15" fill="rgb(234,209,28)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="437" width="0.0284%" height="15" fill="rgb(224,11,23)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="421" width="0.0284%" height="15" fill="rgb(232,99,1)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="405" width="0.0284%" height="15" fill="rgb(237,95,45)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="389" width="0.0284%" height="15" fill="rgb(208,109,11)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="373" width="0.0284%" height="15" fill="rgb(216,190,48)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="357" width="0.0284%" height="15" fill="rgb(251,171,36)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="341" width="0.0284%" height="15" fill="rgb(230,62,22)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="325" width="0.0284%" height="15" fill="rgb(225,114,35)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="309" width="0.0284%" height="15" fill="rgb(215,118,42)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="293" width="0.0284%" height="15" fill="rgb(243,119,21)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.0674%" y="277" width="0.0284%" height="15" fill="rgb(252,177,53)" fg:x="2127" fg:w="5"/><text x="12.3174%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="12.0958%" y="549" width="0.0113%" height="15" fill="rgb(237,209,29)" fg:x="2132" fg:w="2"/><text x="12.3458%" y="559.50"></text></g><g><title>wgpu::Instance::request_adapter (24 samples, 0.14%)</title><rect x="11.9823%" y="821" width="0.1362%" height="15" fill="rgb(212,65,23)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="831.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (24 samples, 0.14%)</title><rect x="11.9823%" y="805" width="0.1362%" height="15" fill="rgb(230,222,46)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (24 samples, 0.14%)</title><rect x="11.9823%" y="789" width="0.1362%" height="15" fill="rgb(215,135,32)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="799.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (24 samples, 0.14%)</title><rect x="11.9823%" y="773" width="0.1362%" height="15" fill="rgb(246,101,22)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="783.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (24 samples, 0.14%)</title><rect x="11.9823%" y="757" width="0.1362%" height="15" fill="rgb(206,107,13)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (24 samples, 0.14%)</title><rect x="11.9823%" y="741" width="0.1362%" height="15" fill="rgb(250,100,44)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (24 samples, 0.14%)</title><rect x="11.9823%" y="725" width="0.1362%" height="15" fill="rgb(231,147,38)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (24 samples, 0.14%)</title><rect x="11.9823%" y="709" width="0.1362%" height="15" fill="rgb(229,8,40)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (24 samples, 0.14%)</title><rect x="11.9823%" y="693" width="0.1362%" height="15" fill="rgb(221,135,30)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="703.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (24 samples, 0.14%)</title><rect x="11.9823%" y="677" width="0.1362%" height="15" fill="rgb(249,193,18)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="687.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (24 samples, 0.14%)</title><rect x="11.9823%" y="661" width="0.1362%" height="15" fill="rgb(209,133,39)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="671.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (24 samples, 0.14%)</title><rect x="11.9823%" y="645" width="0.1362%" height="15" fill="rgb(232,100,14)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.14%)</title><rect x="11.9823%" y="629" width="0.1362%" height="15" fill="rgb(224,185,1)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.14%)</title><rect x="11.9823%" y="613" width="0.1362%" height="15" fill="rgb(223,139,8)" fg:x="2112" fg:w="24"/><text x="12.2323%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="12.0958%" y="597" width="0.0227%" height="15" fill="rgb(232,213,38)" fg:x="2132" fg:w="4"/><text x="12.3458%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="12.0958%" y="581" width="0.0227%" height="15" fill="rgb(207,94,22)" fg:x="2132" fg:w="4"/><text x="12.3458%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="12.0958%" y="565" width="0.0227%" height="15" fill="rgb(219,183,54)" fg:x="2132" fg:w="4"/><text x="12.3458%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="12.1071%" y="549" width="0.0113%" height="15" fill="rgb(216,185,54)" fg:x="2134" fg:w="2"/><text x="12.3571%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="12.1071%" y="533" width="0.0113%" height="15" fill="rgb(254,217,39)" fg:x="2134" fg:w="2"/><text x="12.3571%" y="543.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (29 samples, 0.16%)</title><rect x="11.9596%" y="853" width="0.1645%" height="15" fill="rgb(240,178,23)" fg:x="2108" fg:w="29"/><text x="12.2096%" y="863.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (28 samples, 0.16%)</title><rect x="11.9653%" y="837" width="0.1589%" height="15" fill="rgb(218,11,47)" fg:x="2109" fg:w="28"/><text x="12.2153%" y="847.50"></text></g><g><title>[libvulkan.so.1.3.204] (2 samples, 0.01%)</title><rect x="12.1241%" y="629" width="0.0113%" height="15" fill="rgb(218,51,51)" fg:x="2137" fg:w="2"/><text x="12.3741%" y="639.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (3 samples, 0.02%)</title><rect x="12.1241%" y="853" width="0.0170%" height="15" fill="rgb(238,126,27)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="863.50"></text></g><g><title>wgpu::Instance::request_adapter (3 samples, 0.02%)</title><rect x="12.1241%" y="837" width="0.0170%" height="15" fill="rgb(249,202,22)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="847.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (3 samples, 0.02%)</title><rect x="12.1241%" y="821" width="0.0170%" height="15" fill="rgb(254,195,49)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="831.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (3 samples, 0.02%)</title><rect x="12.1241%" y="805" width="0.0170%" height="15" fill="rgb(208,123,14)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="815.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (3 samples, 0.02%)</title><rect x="12.1241%" y="789" width="0.0170%" height="15" fill="rgb(224,200,8)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="799.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (3 samples, 0.02%)</title><rect x="12.1241%" y="773" width="0.0170%" height="15" fill="rgb(217,61,36)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::enumerate_adapters (3 samples, 0.02%)</title><rect x="12.1241%" y="757" width="0.0170%" height="15" fill="rgb(206,35,45)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="767.50"></text></g><g><title>ash::instance::Instance::enumerate_physical_devices (3 samples, 0.02%)</title><rect x="12.1241%" y="741" width="0.0170%" height="15" fill="rgb(217,65,33)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="751.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (3 samples, 0.02%)</title><rect x="12.1241%" y="725" width="0.0170%" height="15" fill="rgb(222,158,48)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="735.50"></text></g><g><title>ash::instance::Instance::enumerate_physical_devices::{{closure}} (3 samples, 0.02%)</title><rect x="12.1241%" y="709" width="0.0170%" height="15" fill="rgb(254,2,54)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="719.50"></text></g><g><title>vkEnumeratePhysicalDevices (3 samples, 0.02%)</title><rect x="12.1241%" y="693" width="0.0170%" height="15" fill="rgb(250,143,38)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.204] (3 samples, 0.02%)</title><rect x="12.1241%" y="677" width="0.0170%" height="15" fill="rgb(248,25,0)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="687.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (3 samples, 0.02%)</title><rect x="12.1241%" y="661" width="0.0170%" height="15" fill="rgb(206,152,27)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="671.50"></text></g><g><title>[libvulkan.so.1.3.204] (3 samples, 0.02%)</title><rect x="12.1241%" y="645" width="0.0170%" height="15" fill="rgb(240,77,30)" fg:x="2137" fg:w="3"/><text x="12.3741%" y="655.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (3 samples, 0.02%)</title><rect x="12.1412%" y="853" width="0.0170%" height="15" fill="rgb(231,5,3)" fg:x="2140" fg:w="3"/><text x="12.3912%" y="863.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (2 samples, 0.01%)</title><rect x="12.1582%" y="853" width="0.0113%" height="15" fill="rgb(207,226,32)" fg:x="2143" fg:w="2"/><text x="12.4082%" y="863.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::buffer (2 samples, 0.01%)</title><rect x="12.1695%" y="853" width="0.0113%" height="15" fill="rgb(222,207,47)" fg:x="2145" fg:w="2"/><text x="12.4195%" y="863.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::flush_text (2 samples, 0.01%)</title><rect x="12.1979%" y="853" width="0.0113%" height="15" fill="rgb(229,115,45)" fg:x="2150" fg:w="2"/><text x="12.4479%" y="863.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (8 samples, 0.05%)</title><rect x="12.2263%" y="853" width="0.0454%" height="15" fill="rgb(224,191,6)" fg:x="2155" fg:w="8"/><text x="12.4763%" y="863.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (4 samples, 0.02%)</title><rect x="12.2716%" y="853" width="0.0227%" height="15" fill="rgb(230,227,24)" fg:x="2163" fg:w="4"/><text x="12.5216%" y="863.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::mask (4 samples, 0.02%)</title><rect x="12.3057%" y="853" width="0.0227%" height="15" fill="rgb(228,80,19)" fg:x="2169" fg:w="4"/><text x="12.5557%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="12.3397%" y="853" width="0.0113%" height="15" fill="rgb(247,229,0)" fg:x="2175" fg:w="2"/><text x="12.5897%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="12.3567%" y="853" width="0.0227%" height="15" fill="rgb(237,194,15)" fg:x="2178" fg:w="4"/><text x="12.6067%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.02%)</title><rect x="12.3624%" y="837" width="0.0170%" height="15" fill="rgb(219,203,20)" fg:x="2179" fg:w="3"/><text x="12.6124%" y="847.50"></text></g><g><title>malloc_consolidate (2 samples, 0.01%)</title><rect x="12.3908%" y="853" width="0.0113%" height="15" fill="rgb(234,128,8)" fg:x="2184" fg:w="2"/><text x="12.6408%" y="863.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.03%)</title><rect x="12.4021%" y="581" width="0.0340%" height="15" fill="rgb(248,202,8)" fg:x="2186" fg:w="6"/><text x="12.6521%" y="591.50"></text></g><g><title>_snd_pcm_pulse_open (6 samples, 0.03%)</title><rect x="12.4021%" y="565" width="0.0340%" height="15" fill="rgb(206,104,37)" fg:x="2186" fg:w="6"/><text x="12.6521%" y="575.50"></text></g><g><title>pulse_connect (6 samples, 0.03%)</title><rect x="12.4021%" y="549" width="0.0340%" height="15" fill="rgb(223,8,27)" fg:x="2186" fg:w="6"/><text x="12.6521%" y="559.50"></text></g><g><title>pa_threaded_mainloop_wait (5 samples, 0.03%)</title><rect x="12.4078%" y="533" width="0.0284%" height="15" fill="rgb(216,217,28)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="543.50"></text></g><g><title>___pthread_cond_wait (5 samples, 0.03%)</title><rect x="12.4078%" y="517" width="0.0284%" height="15" fill="rgb(249,199,1)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="527.50"></text></g><g><title>__pthread_cond_wait_common (5 samples, 0.03%)</title><rect x="12.4078%" y="501" width="0.0284%" height="15" fill="rgb(240,85,17)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="511.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (5 samples, 0.03%)</title><rect x="12.4078%" y="485" width="0.0284%" height="15" fill="rgb(206,108,45)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="495.50"></text></g><g><title>__futex_abstimed_wait_common (5 samples, 0.03%)</title><rect x="12.4078%" y="469" width="0.0284%" height="15" fill="rgb(245,210,41)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="479.50"></text></g><g><title>__futex_abstimed_wait_common64 (5 samples, 0.03%)</title><rect x="12.4078%" y="453" width="0.0284%" height="15" fill="rgb(206,13,37)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="437" width="0.0284%" height="15" fill="rgb(250,61,18)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="421" width="0.0284%" height="15" fill="rgb(235,172,48)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="405" width="0.0284%" height="15" fill="rgb(249,201,17)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="389" width="0.0284%" height="15" fill="rgb(219,208,6)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="373" width="0.0284%" height="15" fill="rgb(248,31,23)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="357" width="0.0284%" height="15" fill="rgb(245,15,42)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="341" width="0.0284%" height="15" fill="rgb(222,217,39)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="325" width="0.0284%" height="15" fill="rgb(210,219,27)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="309" width="0.0284%" height="15" fill="rgb(252,166,36)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="293" width="0.0284%" height="15" fill="rgb(245,132,34)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="277" width="0.0284%" height="15" fill="rgb(236,54,3)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="261" width="0.0284%" height="15" fill="rgb(241,173,43)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.4078%" y="245" width="0.0284%" height="15" fill="rgb(215,190,9)" fg:x="2187" fg:w="5"/><text x="12.6578%" y="255.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (7 samples, 0.04%)</title><rect x="12.4021%" y="757" width="0.0397%" height="15" fill="rgb(242,101,16)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="767.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (7 samples, 0.04%)</title><rect x="12.4021%" y="741" width="0.0397%" height="15" fill="rgb(223,190,21)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="751.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (7 samples, 0.04%)</title><rect x="12.4021%" y="725" width="0.0397%" height="15" fill="rgb(215,228,25)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="735.50"></text></g><g><title>cpal::host::alsa::Device::default_config (7 samples, 0.04%)</title><rect x="12.4021%" y="709" width="0.0397%" height="15" fill="rgb(225,36,22)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="719.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (7 samples, 0.04%)</title><rect x="12.4021%" y="693" width="0.0397%" height="15" fill="rgb(251,106,46)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="703.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (7 samples, 0.04%)</title><rect x="12.4021%" y="677" width="0.0397%" height="15" fill="rgb(208,90,1)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="687.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (7 samples, 0.04%)</title><rect x="12.4021%" y="661" width="0.0397%" height="15" fill="rgb(243,10,4)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="671.50"></text></g><g><title>alsa::pcm::PCM::new (7 samples, 0.04%)</title><rect x="12.4021%" y="645" width="0.0397%" height="15" fill="rgb(212,137,27)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="655.50"></text></g><g><title>alsa::pcm::PCM::open (7 samples, 0.04%)</title><rect x="12.4021%" y="629" width="0.0397%" height="15" fill="rgb(231,220,49)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="639.50"></text></g><g><title>snd_pcm_open (7 samples, 0.04%)</title><rect x="12.4021%" y="613" width="0.0397%" height="15" fill="rgb(237,96,20)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (7 samples, 0.04%)</title><rect x="12.4021%" y="597" width="0.0397%" height="15" fill="rgb(239,229,30)" fg:x="2186" fg:w="7"/><text x="12.6521%" y="607.50"></text></g><g><title>ggez::audio::AudioContext::new (8 samples, 0.05%)</title><rect x="12.4021%" y="805" width="0.0454%" height="15" fill="rgb(219,65,33)" fg:x="2186" fg:w="8"/><text x="12.6521%" y="815.50"></text></g><g><title>rodio::stream::OutputStream::try_default (8 samples, 0.05%)</title><rect x="12.4021%" y="789" width="0.0454%" height="15" fill="rgb(243,134,7)" fg:x="2186" fg:w="8"/><text x="12.6521%" y="799.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (8 samples, 0.05%)</title><rect x="12.4021%" y="773" width="0.0454%" height="15" fill="rgb(216,177,54)" fg:x="2186" fg:w="8"/><text x="12.6521%" y="783.50"></text></g><g><title>[libudev.so.1.7.2] (5 samples, 0.03%)</title><rect x="12.4816%" y="581" width="0.0284%" height="15" fill="rgb(211,160,20)" fg:x="2200" fg:w="5"/><text x="12.7316%" y="591.50"></text></g><g><title>[libudev.so.1.7.2] (3 samples, 0.02%)</title><rect x="12.4929%" y="565" width="0.0170%" height="15" fill="rgb(239,85,39)" fg:x="2202" fg:w="3"/><text x="12.7429%" y="575.50"></text></g><g><title>[libudev.so.1.7.2] (2 samples, 0.01%)</title><rect x="12.4986%" y="549" width="0.0113%" height="15" fill="rgb(232,125,22)" fg:x="2203" fg:w="2"/><text x="12.7486%" y="559.50"></text></g><g><title>_IO_new_fopen (7 samples, 0.04%)</title><rect x="12.5099%" y="581" width="0.0397%" height="15" fill="rgb(244,57,34)" fg:x="2205" fg:w="7"/><text x="12.7599%" y="591.50"></text></g><g><title>__fopen_internal (7 samples, 0.04%)</title><rect x="12.5099%" y="565" width="0.0397%" height="15" fill="rgb(214,203,32)" fg:x="2205" fg:w="7"/><text x="12.7599%" y="575.50"></text></g><g><title>_IO_new_file_fopen (7 samples, 0.04%)</title><rect x="12.5099%" y="549" width="0.0397%" height="15" fill="rgb(207,58,43)" fg:x="2205" fg:w="7"/><text x="12.7599%" y="559.50"></text></g><g><title>__GI__IO_file_open (7 samples, 0.04%)</title><rect x="12.5099%" y="533" width="0.0397%" height="15" fill="rgb(215,193,15)" fg:x="2205" fg:w="7"/><text x="12.7599%" y="543.50"></text></g><g><title>__libc_open64 (7 samples, 0.04%)</title><rect x="12.5099%" y="517" width="0.0397%" height="15" fill="rgb(232,15,44)" fg:x="2205" fg:w="7"/><text x="12.7599%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="12.5099%" y="501" width="0.0397%" height="15" fill="rgb(212,3,48)" fg:x="2205" fg:w="7"/><text x="12.7599%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="12.5156%" y="485" width="0.0340%" height="15" fill="rgb(218,128,7)" fg:x="2206" fg:w="6"/><text x="12.7656%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="12.5156%" y="469" width="0.0340%" height="15" fill="rgb(226,216,39)" fg:x="2206" fg:w="6"/><text x="12.7656%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.5213%" y="453" width="0.0284%" height="15" fill="rgb(243,47,51)" fg:x="2207" fg:w="5"/><text x="12.7713%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.5213%" y="437" width="0.0284%" height="15" fill="rgb(241,183,40)" fg:x="2207" fg:w="5"/><text x="12.7713%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.5213%" y="421" width="0.0284%" height="15" fill="rgb(231,217,32)" fg:x="2207" fg:w="5"/><text x="12.7713%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.5213%" y="405" width="0.0284%" height="15" fill="rgb(229,61,38)" fg:x="2207" fg:w="5"/><text x="12.7713%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="12.5269%" y="389" width="0.0227%" height="15" fill="rgb(225,210,5)" fg:x="2208" fg:w="4"/><text x="12.7769%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.5383%" y="373" width="0.0113%" height="15" fill="rgb(231,79,45)" fg:x="2210" fg:w="2"/><text x="12.7883%" y="383.50"></text></g><g><title>[libudev.so.1.7.2] (17 samples, 0.10%)</title><rect x="12.4702%" y="597" width="0.0964%" height="15" fill="rgb(224,100,7)" fg:x="2198" fg:w="17"/><text x="12.7202%" y="607.50"></text></g><g><title>__GI___close (5 samples, 0.03%)</title><rect x="12.5667%" y="597" width="0.0284%" height="15" fill="rgb(241,198,18)" fg:x="2215" fg:w="5"/><text x="12.8167%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.5667%" y="581" width="0.0284%" height="15" fill="rgb(252,97,53)" fg:x="2215" fg:w="5"/><text x="12.8167%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.5780%" y="565" width="0.0170%" height="15" fill="rgb(220,88,7)" fg:x="2217" fg:w="3"/><text x="12.8280%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.5780%" y="549" width="0.0170%" height="15" fill="rgb(213,176,14)" fg:x="2217" fg:w="3"/><text x="12.8280%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.5837%" y="533" width="0.0113%" height="15" fill="rgb(246,73,7)" fg:x="2218" fg:w="2"/><text x="12.8337%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.5837%" y="517" width="0.0113%" height="15" fill="rgb(245,64,36)" fg:x="2218" fg:w="2"/><text x="12.8337%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.5837%" y="501" width="0.0113%" height="15" fill="rgb(245,80,10)" fg:x="2218" fg:w="2"/><text x="12.8337%" y="511.50"></text></g><g><title>__GI___libc_read (3 samples, 0.02%)</title><rect x="12.6064%" y="597" width="0.0170%" height="15" fill="rgb(232,107,50)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="607.50"></text></g><g><title>__GI___libc_read (3 samples, 0.02%)</title><rect x="12.6064%" y="581" width="0.0170%" height="15" fill="rgb(253,3,0)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="565" width="0.0170%" height="15" fill="rgb(212,99,53)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="549" width="0.0170%" height="15" fill="rgb(249,111,54)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="533" width="0.0170%" height="15" fill="rgb(249,55,30)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="517" width="0.0170%" height="15" fill="rgb(237,47,42)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="501" width="0.0170%" height="15" fill="rgb(211,20,18)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="485" width="0.0170%" height="15" fill="rgb(231,203,46)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="469" width="0.0170%" height="15" fill="rgb(237,142,3)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="453" width="0.0170%" height="15" fill="rgb(241,107,1)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="437" width="0.0170%" height="15" fill="rgb(229,83,13)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="447.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6064%" y="421" width="0.0170%" height="15" fill="rgb(241,91,40)" fg:x="2222" fg:w="3"/><text x="12.8564%" y="431.50"></text></g><g><title>__GI_readlinkat (2 samples, 0.01%)</title><rect x="12.6234%" y="597" width="0.0113%" height="15" fill="rgb(225,3,45)" fg:x="2225" fg:w="2"/><text x="12.8734%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6234%" y="581" width="0.0113%" height="15" fill="rgb(244,223,14)" fg:x="2225" fg:w="2"/><text x="12.8734%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6234%" y="565" width="0.0113%" height="15" fill="rgb(224,124,37)" fg:x="2225" fg:w="2"/><text x="12.8734%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6234%" y="549" width="0.0113%" height="15" fill="rgb(251,171,30)" fg:x="2225" fg:w="2"/><text x="12.8734%" y="559.50"></text></g><g><title>__libc_open64 (2 samples, 0.01%)</title><rect x="12.6347%" y="597" width="0.0113%" height="15" fill="rgb(236,46,54)" fg:x="2227" fg:w="2"/><text x="12.8847%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6347%" y="581" width="0.0113%" height="15" fill="rgb(245,213,5)" fg:x="2227" fg:w="2"/><text x="12.8847%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6347%" y="565" width="0.0113%" height="15" fill="rgb(230,144,27)" fg:x="2227" fg:w="2"/><text x="12.8847%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6347%" y="549" width="0.0113%" height="15" fill="rgb(220,86,6)" fg:x="2227" fg:w="2"/><text x="12.8847%" y="559.50"></text></g><g><title>[libudev.so.1.7.2] (34 samples, 0.19%)</title><rect x="12.4589%" y="613" width="0.1929%" height="15" fill="rgb(240,20,13)" fg:x="2196" fg:w="34"/><text x="12.7089%" y="623.50"></text></g><g><title>_IO_new_fclose (2 samples, 0.01%)</title><rect x="12.6518%" y="613" width="0.0113%" height="15" fill="rgb(217,89,34)" fg:x="2230" fg:w="2"/><text x="12.9018%" y="623.50"></text></g><g><title>_IO_new_file_close_it (2 samples, 0.01%)</title><rect x="12.6518%" y="597" width="0.0113%" height="15" fill="rgb(229,13,5)" fg:x="2230" fg:w="2"/><text x="12.9018%" y="607.50"></text></g><g><title>__GI___close_nocancel (2 samples, 0.01%)</title><rect x="12.6518%" y="581" width="0.0113%" height="15" fill="rgb(244,67,35)" fg:x="2230" fg:w="2"/><text x="12.9018%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6518%" y="565" width="0.0113%" height="15" fill="rgb(221,40,2)" fg:x="2230" fg:w="2"/><text x="12.9018%" y="575.50"></text></g><g><title>__GI___fstatat64 (5 samples, 0.03%)</title><rect x="12.6631%" y="613" width="0.0284%" height="15" fill="rgb(237,157,21)" fg:x="2232" fg:w="5"/><text x="12.9131%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.6631%" y="597" width="0.0284%" height="15" fill="rgb(222,94,11)" fg:x="2232" fg:w="5"/><text x="12.9131%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.6631%" y="581" width="0.0284%" height="15" fill="rgb(249,113,6)" fg:x="2232" fg:w="5"/><text x="12.9131%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.6631%" y="565" width="0.0284%" height="15" fill="rgb(238,137,36)" fg:x="2232" fg:w="5"/><text x="12.9131%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="12.6688%" y="549" width="0.0227%" height="15" fill="rgb(210,102,26)" fg:x="2233" fg:w="4"/><text x="12.9188%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="12.6688%" y="533" width="0.0227%" height="15" fill="rgb(218,30,30)" fg:x="2233" fg:w="4"/><text x="12.9188%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="12.6688%" y="517" width="0.0227%" height="15" fill="rgb(214,67,26)" fg:x="2233" fg:w="4"/><text x="12.9188%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.6745%" y="501" width="0.0170%" height="15" fill="rgb(251,9,53)" fg:x="2234" fg:w="3"/><text x="12.9245%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.6801%" y="485" width="0.0113%" height="15" fill="rgb(228,204,25)" fg:x="2235" fg:w="2"/><text x="12.9301%" y="495.50"></text></g><g><title>[libudev.so.1.7.2] (61 samples, 0.35%)</title><rect x="12.4589%" y="629" width="0.3461%" height="15" fill="rgb(207,153,8)" fg:x="2196" fg:w="61"/><text x="12.7089%" y="639.50"></text></g><g><title>__libc_openat64 (18 samples, 0.10%)</title><rect x="12.7028%" y="613" width="0.1021%" height="15" fill="rgb(242,9,16)" fg:x="2239" fg:w="18"/><text x="12.9528%" y="623.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="12.7028%" y="597" width="0.1021%" height="15" fill="rgb(217,211,10)" fg:x="2239" fg:w="18"/><text x="12.9528%" y="607.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="12.7142%" y="581" width="0.0908%" height="15" fill="rgb(219,228,52)" fg:x="2241" fg:w="16"/><text x="12.9642%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="12.7142%" y="565" width="0.0908%" height="15" fill="rgb(231,92,29)" fg:x="2241" fg:w="16"/><text x="12.9642%" y="575.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="12.7369%" y="549" width="0.0681%" height="15" fill="rgb(232,8,23)" fg:x="2245" fg:w="12"/><text x="12.9869%" y="559.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="12.7369%" y="533" width="0.0681%" height="15" fill="rgb(216,211,34)" fg:x="2245" fg:w="12"/><text x="12.9869%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="12.7425%" y="517" width="0.0624%" height="15" fill="rgb(236,151,0)" fg:x="2246" fg:w="11"/><text x="12.9925%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="12.7482%" y="501" width="0.0567%" height="15" fill="rgb(209,168,3)" fg:x="2247" fg:w="10"/><text x="12.9982%" y="511.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="12.7539%" y="485" width="0.0511%" height="15" fill="rgb(208,129,28)" fg:x="2248" fg:w="9"/><text x="13.0039%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.7766%" y="469" width="0.0284%" height="15" fill="rgb(229,78,22)" fg:x="2252" fg:w="5"/><text x="13.0266%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.7879%" y="453" width="0.0170%" height="15" fill="rgb(228,187,13)" fg:x="2254" fg:w="3"/><text x="13.0379%" y="463.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.7879%" y="437" width="0.0170%" height="15" fill="rgb(240,119,24)" fg:x="2254" fg:w="3"/><text x="13.0379%" y="447.50"></text></g><g><title>__GI___access (8 samples, 0.05%)</title><rect x="12.8106%" y="629" width="0.0454%" height="15" fill="rgb(209,194,42)" fg:x="2258" fg:w="8"/><text x="13.0606%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="12.8106%" y="613" width="0.0454%" height="15" fill="rgb(247,200,46)" fg:x="2258" fg:w="8"/><text x="13.0606%" y="623.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="12.8106%" y="597" width="0.0454%" height="15" fill="rgb(218,76,16)" fg:x="2258" fg:w="8"/><text x="13.0606%" y="607.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="12.8106%" y="581" width="0.0454%" height="15" fill="rgb(225,21,48)" fg:x="2258" fg:w="8"/><text x="13.0606%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="12.8106%" y="565" width="0.0454%" height="15" fill="rgb(239,223,50)" fg:x="2258" fg:w="8"/><text x="13.0606%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="12.8106%" y="549" width="0.0454%" height="15" fill="rgb(244,45,21)" fg:x="2258" fg:w="8"/><text x="13.0606%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="12.8163%" y="533" width="0.0397%" height="15" fill="rgb(232,33,43)" fg:x="2259" fg:w="7"/><text x="13.0663%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="12.8220%" y="517" width="0.0340%" height="15" fill="rgb(209,8,3)" fg:x="2260" fg:w="6"/><text x="13.0720%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="12.8220%" y="501" width="0.0340%" height="15" fill="rgb(214,25,53)" fg:x="2260" fg:w="6"/><text x="13.0720%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="12.8333%" y="485" width="0.0227%" height="15" fill="rgb(254,186,54)" fg:x="2262" fg:w="4"/><text x="13.0833%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="12.8333%" y="469" width="0.0227%" height="15" fill="rgb(208,174,49)" fg:x="2262" fg:w="4"/><text x="13.0833%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.8390%" y="453" width="0.0170%" height="15" fill="rgb(233,191,51)" fg:x="2263" fg:w="3"/><text x="13.0890%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.8447%" y="437" width="0.0113%" height="15" fill="rgb(222,134,10)" fg:x="2264" fg:w="2"/><text x="13.0947%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (71 samples, 0.40%)</title><rect x="12.4589%" y="645" width="0.4028%" height="15" fill="rgb(230,226,20)" fg:x="2196" fg:w="71"/><text x="12.7089%" y="655.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (76 samples, 0.43%)</title><rect x="12.4475%" y="805" width="0.4312%" height="15" fill="rgb(251,111,25)" fg:x="2194" fg:w="76"/><text x="12.6975%" y="815.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (76 samples, 0.43%)</title><rect x="12.4475%" y="789" width="0.4312%" height="15" fill="rgb(224,40,46)" fg:x="2194" fg:w="76"/><text x="12.6975%" y="799.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (76 samples, 0.43%)</title><rect x="12.4475%" y="773" width="0.4312%" height="15" fill="rgb(236,108,47)" fg:x="2194" fg:w="76"/><text x="12.6975%" y="783.50"></text></g><g><title>gilrs_core::Gilrs::new (75 samples, 0.43%)</title><rect x="12.4532%" y="757" width="0.4255%" height="15" fill="rgb(234,93,0)" fg:x="2195" fg:w="75"/><text x="12.7032%" y="767.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (75 samples, 0.43%)</title><rect x="12.4532%" y="741" width="0.4255%" height="15" fill="rgb(224,213,32)" fg:x="2195" fg:w="75"/><text x="12.7032%" y="751.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (75 samples, 0.43%)</title><rect x="12.4532%" y="725" width="0.4255%" height="15" fill="rgb(251,11,48)" fg:x="2195" fg:w="75"/><text x="12.7032%" y="735.50"></text></g><g><title>udev_enumerate_scan_devices (75 samples, 0.43%)</title><rect x="12.4532%" y="709" width="0.4255%" height="15" fill="rgb(236,173,5)" fg:x="2195" fg:w="75"/><text x="12.7032%" y="719.50"></text></g><g><title>[libudev.so.1.7.2] (75 samples, 0.43%)</title><rect x="12.4532%" y="693" width="0.4255%" height="15" fill="rgb(230,95,12)" fg:x="2195" fg:w="75"/><text x="12.7032%" y="703.50"></text></g><g><title>[libudev.so.1.7.2] (75 samples, 0.43%)</title><rect x="12.4532%" y="677" width="0.4255%" height="15" fill="rgb(232,209,1)" fg:x="2195" fg:w="75"/><text x="12.7032%" y="687.50"></text></g><g><title>[libudev.so.1.7.2] (74 samples, 0.42%)</title><rect x="12.4589%" y="661" width="0.4198%" height="15" fill="rgb(232,6,1)" fg:x="2196" fg:w="74"/><text x="12.7089%" y="671.50"></text></g><g><title>ggez::context::ContextBuilder::build (90 samples, 0.51%)</title><rect x="12.4021%" y="837" width="0.5106%" height="15" fill="rgb(210,224,50)" fg:x="2186" fg:w="90"/><text x="12.6521%" y="847.50"></text></g><g><title>ggez::context::Context::from_conf (90 samples, 0.51%)</title><rect x="12.4021%" y="821" width="0.5106%" height="15" fill="rgb(228,127,35)" fg:x="2186" fg:w="90"/><text x="12.6521%" y="831.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (6 samples, 0.03%)</title><rect x="12.8787%" y="805" width="0.0340%" height="15" fill="rgb(245,102,45)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="815.50"></text></g><g><title>winit::event_loop::EventLoopBuilder&lt;T&gt;::build (6 samples, 0.03%)</title><rect x="12.8787%" y="789" width="0.0340%" height="15" fill="rgb(214,1,49)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="799.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (6 samples, 0.03%)</title><rect x="12.8787%" y="773" width="0.0340%" height="15" fill="rgb(226,163,40)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="783.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (6 samples, 0.03%)</title><rect x="12.8787%" y="757" width="0.0340%" height="15" fill="rgb(239,212,28)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="767.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (6 samples, 0.03%)</title><rect x="12.8787%" y="741" width="0.0340%" height="15" fill="rgb(220,20,13)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::Ime::new (6 samples, 0.03%)</title><rect x="12.8787%" y="725" width="0.0340%" height="15" fill="rgb(210,164,35)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="735.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::PotentialInputMethods::new (6 samples, 0.03%)</title><rect x="12.8787%" y="709" width="0.0340%" height="15" fill="rgb(248,109,41)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="719.50"></text></g><g><title>winit::platform_impl::platform::x11::ime::input_method::get_xim_servers (6 samples, 0.03%)</title><rect x="12.8787%" y="693" width="0.0340%" height="15" fill="rgb(238,23,50)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="703.50"></text></g><g><title>winit::platform_impl::platform::x11::util::atom::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_atom_unchecked (6 samples, 0.03%)</title><rect x="12.8787%" y="677" width="0.0340%" height="15" fill="rgb(211,48,49)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="687.50"></text></g><g><title>winit::platform_impl::platform::x11::util::atom::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_atom (6 samples, 0.03%)</title><rect x="12.8787%" y="661" width="0.0340%" height="15" fill="rgb(223,36,21)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="671.50"></text></g><g><title>XInternAtom (6 samples, 0.03%)</title><rect x="12.8787%" y="645" width="0.0340%" height="15" fill="rgb(207,123,46)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="655.50"></text></g><g><title>_XReply (6 samples, 0.03%)</title><rect x="12.8787%" y="629" width="0.0340%" height="15" fill="rgb(240,218,32)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="639.50"></text></g><g><title>xcb_wait_for_reply64 (6 samples, 0.03%)</title><rect x="12.8787%" y="613" width="0.0340%" height="15" fill="rgb(252,5,43)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="623.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="12.8787%" y="597" width="0.0340%" height="15" fill="rgb(252,84,19)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="607.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="12.8787%" y="581" width="0.0340%" height="15" fill="rgb(243,152,39)" fg:x="2270" fg:w="6"/><text x="13.1287%" y="591.50"></text></g><g><title>__GI___poll (5 samples, 0.03%)</title><rect x="12.8844%" y="565" width="0.0284%" height="15" fill="rgb(234,160,15)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="549" width="0.0284%" height="15" fill="rgb(237,34,20)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="533" width="0.0284%" height="15" fill="rgb(229,97,13)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="517" width="0.0284%" height="15" fill="rgb(234,71,50)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="501" width="0.0284%" height="15" fill="rgb(253,155,4)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="485" width="0.0284%" height="15" fill="rgb(222,185,37)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="469" width="0.0284%" height="15" fill="rgb(251,177,13)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="453" width="0.0284%" height="15" fill="rgb(250,179,40)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="437" width="0.0284%" height="15" fill="rgb(242,44,2)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="421" width="0.0284%" height="15" fill="rgb(216,177,13)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="405" width="0.0284%" height="15" fill="rgb(216,106,43)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="389" width="0.0284%" height="15" fill="rgb(216,183,2)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="373" width="0.0284%" height="15" fill="rgb(249,75,3)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="357" width="0.0284%" height="15" fill="rgb(219,67,39)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="12.8844%" y="341" width="0.0284%" height="15" fill="rgb(253,228,2)" fg:x="2271" fg:w="5"/><text x="13.1344%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="12.9808%" y="405" width="0.0113%" height="15" fill="rgb(235,138,27)" fg:x="2288" fg:w="2"/><text x="13.2308%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="12.9808%" y="421" width="0.0284%" height="15" fill="rgb(236,97,51)" fg:x="2288" fg:w="5"/><text x="13.2308%" y="431.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="12.9978%" y="405" width="0.0113%" height="15" fill="rgb(240,80,30)" fg:x="2291" fg:w="2"/><text x="13.2478%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.9978%" y="389" width="0.0113%" height="15" fill="rgb(230,178,19)" fg:x="2291" fg:w="2"/><text x="13.2478%" y="399.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="13.0092%" y="405" width="0.0113%" height="15" fill="rgb(210,190,27)" fg:x="2293" fg:w="2"/><text x="13.2592%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="12.9808%" y="453" width="0.0454%" height="15" fill="rgb(222,107,31)" fg:x="2288" fg:w="8"/><text x="13.2308%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="12.9808%" y="437" width="0.0454%" height="15" fill="rgb(216,127,34)" fg:x="2288" fg:w="8"/><text x="13.2308%" y="447.50"></text></g><g><title>__GI___clock_gettime (3 samples, 0.02%)</title><rect x="13.0092%" y="421" width="0.0170%" height="15" fill="rgb(234,116,52)" fg:x="2293" fg:w="3"/><text x="13.2592%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::context::Context&gt; (36 samples, 0.20%)</title><rect x="12.9127%" y="741" width="0.2042%" height="15" fill="rgb(222,124,15)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::context::GraphicsContext&gt; (36 samples, 0.20%)</title><rect x="12.9127%" y="725" width="0.2042%" height="15" fill="rgb(231,179,28)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ggez::graphics::context::WgpuContext&gt;&gt; (36 samples, 0.20%)</title><rect x="12.9127%" y="709" width="0.2042%" height="15" fill="rgb(226,93,45)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.20%)</title><rect x="12.9127%" y="693" width="0.2042%" height="15" fill="rgb(215,8,51)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (36 samples, 0.20%)</title><rect x="12.9127%" y="677" width="0.2042%" height="15" fill="rgb(223,106,5)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::context::WgpuContext&gt; (36 samples, 0.20%)</title><rect x="12.9127%" y="661" width="0.2042%" height="15" fill="rgb(250,191,5)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Surface&gt; (36 samples, 0.20%)</title><rect x="12.9127%" y="645" width="0.2042%" height="15" fill="rgb(242,132,44)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="655.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_drop (36 samples, 0.20%)</title><rect x="12.9127%" y="629" width="0.2042%" height="15" fill="rgb(251,152,29)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="639.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_drop::unconfigure (36 samples, 0.20%)</title><rect x="12.9127%" y="613" width="0.2042%" height="15" fill="rgb(218,179,5)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="623.50"></text></g><g><title>wgpu_core::hub::Hub&lt;A,F&gt;::surface_unconfigure (36 samples, 0.20%)</title><rect x="12.9127%" y="597" width="0.2042%" height="15" fill="rgb(227,67,19)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::unconfigure (36 samples, 0.20%)</title><rect x="12.9127%" y="581" width="0.2042%" height="15" fill="rgb(233,119,31)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="591.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::destroy_swapchain (36 samples, 0.20%)</title><rect x="12.9127%" y="565" width="0.2042%" height="15" fill="rgb(241,120,22)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (36 samples, 0.20%)</title><rect x="12.9127%" y="549" width="0.2042%" height="15" fill="rgb(224,102,30)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.20%)</title><rect x="12.9127%" y="533" width="0.2042%" height="15" fill="rgb(210,164,37)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.20%)</title><rect x="12.9127%" y="517" width="0.2042%" height="15" fill="rgb(226,191,16)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.20%)</title><rect x="12.9127%" y="501" width="0.2042%" height="15" fill="rgb(214,40,45)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.20%)</title><rect x="12.9127%" y="485" width="0.2042%" height="15" fill="rgb(244,29,26)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.20%)</title><rect x="12.9127%" y="469" width="0.2042%" height="15" fill="rgb(216,16,5)" fg:x="2276" fg:w="36"/><text x="13.1627%" y="479.50"></text></g><g><title>__GI___sched_yield (16 samples, 0.09%)</title><rect x="13.0262%" y="453" width="0.0908%" height="15" fill="rgb(249,76,35)" fg:x="2296" fg:w="16"/><text x="13.2762%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="13.0262%" y="437" width="0.0908%" height="15" fill="rgb(207,11,44)" fg:x="2296" fg:w="16"/><text x="13.2762%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="13.0546%" y="421" width="0.0624%" height="15" fill="rgb(228,190,49)" fg:x="2301" fg:w="11"/><text x="13.3046%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="13.0546%" y="405" width="0.0624%" height="15" fill="rgb(214,173,12)" fg:x="2301" fg:w="11"/><text x="13.3046%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="13.0773%" y="389" width="0.0397%" height="15" fill="rgb(218,26,35)" fg:x="2305" fg:w="7"/><text x="13.3273%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="13.0829%" y="373" width="0.0340%" height="15" fill="rgb(220,200,19)" fg:x="2306" fg:w="6"/><text x="13.3329%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.0886%" y="357" width="0.0284%" height="15" fill="rgb(239,95,49)" fg:x="2307" fg:w="5"/><text x="13.3386%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.0886%" y="341" width="0.0284%" height="15" fill="rgb(235,85,53)" fg:x="2307" fg:w="5"/><text x="13.3386%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.1056%" y="325" width="0.0113%" height="15" fill="rgb(233,133,31)" fg:x="2310" fg:w="2"/><text x="13.3556%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.1056%" y="309" width="0.0113%" height="15" fill="rgb(218,25,20)" fg:x="2310" fg:w="2"/><text x="13.3556%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::event::run&lt;neuralang::MainState,ggez::error::GameError&gt;::{{closure}}&gt; (37 samples, 0.21%)</title><rect x="12.9127%" y="757" width="0.2099%" height="15" fill="rgb(252,210,38)" fg:x="2276" fg:w="37"/><text x="13.1627%" y="767.50"></text></g><g><title>[libX11.so.6.4.0] (35 samples, 0.20%)</title><rect x="13.1227%" y="661" width="0.1986%" height="15" fill="rgb(242,134,21)" fg:x="2313" fg:w="35"/><text x="13.3727%" y="671.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.20%)</title><rect x="13.1227%" y="645" width="0.1986%" height="15" fill="rgb(213,28,48)" fg:x="2313" fg:w="35"/><text x="13.3727%" y="655.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.20%)</title><rect x="13.1227%" y="629" width="0.1986%" height="15" fill="rgb(250,196,2)" fg:x="2313" fg:w="35"/><text x="13.3727%" y="639.50"></text></g><g><title>__libc_recvmsg (35 samples, 0.20%)</title><rect x="13.1227%" y="613" width="0.1986%" height="15" fill="rgb(227,5,17)" fg:x="2313" fg:w="35"/><text x="13.3727%" y="623.50"></text></g><g><title>__recvmsg_syscall (35 samples, 0.20%)</title><rect x="13.1227%" y="597" width="0.1986%" height="15" fill="rgb(221,226,24)" fg:x="2313" fg:w="35"/><text x="13.3727%" y="607.50"></text></g><g><title>[unknown] (35 samples, 0.20%)</title><rect x="13.1227%" y="581" width="0.1986%" height="15" fill="rgb(211,5,48)" fg:x="2313" fg:w="35"/><text x="13.3727%" y="591.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="13.2078%" y="565" width="0.1135%" height="15" fill="rgb(219,150,6)" fg:x="2328" fg:w="20"/><text x="13.4578%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="13.2191%" y="549" width="0.1021%" height="15" fill="rgb(251,46,16)" fg:x="2330" fg:w="18"/><text x="13.4691%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="13.2758%" y="533" width="0.0454%" height="15" fill="rgb(220,204,40)" fg:x="2340" fg:w="8"/><text x="13.5258%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="13.2872%" y="517" width="0.0340%" height="15" fill="rgb(211,85,2)" fg:x="2342" fg:w="6"/><text x="13.5372%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="13.2872%" y="501" width="0.0340%" height="15" fill="rgb(229,17,7)" fg:x="2342" fg:w="6"/><text x="13.5372%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="13.2872%" y="485" width="0.0340%" height="15" fill="rgb(239,72,28)" fg:x="2342" fg:w="6"/><text x="13.5372%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.2929%" y="469" width="0.0284%" height="15" fill="rgb(230,47,54)" fg:x="2343" fg:w="5"/><text x="13.5429%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.2985%" y="453" width="0.0227%" height="15" fill="rgb(214,50,8)" fg:x="2344" fg:w="4"/><text x="13.5485%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.3099%" y="437" width="0.0113%" height="15" fill="rgb(216,198,43)" fg:x="2346" fg:w="2"/><text x="13.5599%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (52 samples, 0.30%)</title><rect x="13.1227%" y="725" width="0.2950%" height="15" fill="rgb(234,20,35)" fg:x="2313" fg:w="52"/><text x="13.3727%" y="735.50"></text></g><g><title>XCheckIfEvent (52 samples, 0.30%)</title><rect x="13.1227%" y="709" width="0.2950%" height="15" fill="rgb(254,45,19)" fg:x="2313" fg:w="52"/><text x="13.3727%" y="719.50"></text></g><g><title>_XEventsQueued (52 samples, 0.30%)</title><rect x="13.1227%" y="693" width="0.2950%" height="15" fill="rgb(219,14,44)" fg:x="2313" fg:w="52"/><text x="13.3727%" y="703.50"></text></g><g><title>[libX11.so.6.4.0] (52 samples, 0.30%)</title><rect x="13.1227%" y="677" width="0.2950%" height="15" fill="rgb(217,220,26)" fg:x="2313" fg:w="52"/><text x="13.3727%" y="687.50"></text></g><g><title>xcb_poll_for_reply64 (17 samples, 0.10%)</title><rect x="13.3212%" y="661" width="0.0964%" height="15" fill="rgb(213,158,28)" fg:x="2348" fg:w="17"/><text x="13.5712%" y="671.50"></text></g><g><title>[libxcb.so.1.1.0] (17 samples, 0.10%)</title><rect x="13.3212%" y="645" width="0.0964%" height="15" fill="rgb(252,51,52)" fg:x="2348" fg:w="17"/><text x="13.5712%" y="655.50"></text></g><g><title>__libc_recvmsg (17 samples, 0.10%)</title><rect x="13.3212%" y="629" width="0.0964%" height="15" fill="rgb(246,89,16)" fg:x="2348" fg:w="17"/><text x="13.5712%" y="639.50"></text></g><g><title>__recvmsg_syscall (16 samples, 0.09%)</title><rect x="13.3269%" y="613" width="0.0908%" height="15" fill="rgb(216,158,49)" fg:x="2349" fg:w="16"/><text x="13.5769%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="13.3269%" y="597" width="0.0908%" height="15" fill="rgb(236,107,19)" fg:x="2349" fg:w="16"/><text x="13.5769%" y="607.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="13.3609%" y="581" width="0.0567%" height="15" fill="rgb(228,185,30)" fg:x="2355" fg:w="10"/><text x="13.6109%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="13.3609%" y="565" width="0.0567%" height="15" fill="rgb(246,134,8)" fg:x="2355" fg:w="10"/><text x="13.6109%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.3893%" y="549" width="0.0284%" height="15" fill="rgb(214,143,50)" fg:x="2360" fg:w="5"/><text x="13.6393%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.3893%" y="533" width="0.0284%" height="15" fill="rgb(228,75,8)" fg:x="2360" fg:w="5"/><text x="13.6393%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.3893%" y="517" width="0.0284%" height="15" fill="rgb(207,175,4)" fg:x="2360" fg:w="5"/><text x="13.6393%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.3950%" y="501" width="0.0227%" height="15" fill="rgb(205,108,24)" fg:x="2361" fg:w="4"/><text x="13.6450%" y="511.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (53 samples, 0.30%)</title><rect x="13.1227%" y="741" width="0.3007%" height="15" fill="rgb(244,120,49)" fg:x="2313" fg:w="53"/><text x="13.3727%" y="751.50"></text></g><g><title>&lt;ggez::graphics::mesh::Mesh as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="13.4347%" y="661" width="0.0113%" height="15" fill="rgb(223,47,38)" fg:x="2368" fg:w="2"/><text x="13.6847%" y="671.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="13.4347%" y="645" width="0.0113%" height="15" fill="rgb(229,179,11)" fg:x="2368" fg:w="2"/><text x="13.6847%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="13.4347%" y="629" width="0.0113%" height="15" fill="rgb(231,122,1)" fg:x="2368" fg:w="2"/><text x="13.6847%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_default (3 samples, 0.02%)</title><rect x="13.4517%" y="645" width="0.0170%" height="15" fill="rgb(245,119,9)" fg:x="2371" fg:w="3"/><text x="13.7017%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.02%)</title><rect x="13.4517%" y="629" width="0.0170%" height="15" fill="rgb(241,163,25)" fg:x="2371" fg:w="3"/><text x="13.7017%" y="639.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (2 samples, 0.01%)</title><rect x="13.4574%" y="613" width="0.0113%" height="15" fill="rgb(217,214,3)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="623.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (2 samples, 0.01%)</title><rect x="13.4574%" y="597" width="0.0113%" height="15" fill="rgb(240,86,28)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (2 samples, 0.01%)</title><rect x="13.4574%" y="581" width="0.0113%" height="15" fill="rgb(215,47,9)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (2 samples, 0.01%)</title><rect x="13.4574%" y="565" width="0.0113%" height="15" fill="rgb(252,25,45)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="13.4574%" y="549" width="0.0113%" height="15" fill="rgb(251,164,9)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="13.4574%" y="533" width="0.0113%" height="15" fill="rgb(233,194,0)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="13.4574%" y="517" width="0.0113%" height="15" fill="rgb(249,111,24)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="527.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="13.4574%" y="501" width="0.0113%" height="15" fill="rgb(250,223,3)" fg:x="2372" fg:w="2"/><text x="13.7074%" y="511.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="13.4744%" y="581" width="0.0397%" height="15" fill="rgb(236,178,37)" fg:x="2375" fg:w="7"/><text x="13.7244%" y="591.50"></text></g><g><title>_int_malloc (7 samples, 0.04%)</title><rect x="13.4744%" y="565" width="0.0397%" height="15" fill="rgb(241,158,50)" fg:x="2375" fg:w="7"/><text x="13.7244%" y="575.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="13.5028%" y="549" width="0.0113%" height="15" fill="rgb(213,121,41)" fg:x="2380" fg:w="2"/><text x="13.7528%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.05%)</title><rect x="13.4744%" y="629" width="0.0454%" height="15" fill="rgb(240,92,3)" fg:x="2375" fg:w="8"/><text x="13.7244%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.05%)</title><rect x="13.4744%" y="613" width="0.0454%" height="15" fill="rgb(205,123,3)" fg:x="2375" fg:w="8"/><text x="13.7244%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.05%)</title><rect x="13.4744%" y="597" width="0.0454%" height="15" fill="rgb(205,97,47)" fg:x="2375" fg:w="8"/><text x="13.7244%" y="607.50"></text></g><g><title>ggez::graphics::canvas::Canvas::push_draw (14 samples, 0.08%)</title><rect x="13.4460%" y="661" width="0.0794%" height="15" fill="rgb(247,152,14)" fg:x="2370" fg:w="14"/><text x="13.6960%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.06%)</title><rect x="13.4687%" y="645" width="0.0567%" height="15" fill="rgb(248,195,53)" fg:x="2374" fg:w="10"/><text x="13.7187%" y="655.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="13.5255%" y="645" width="0.0113%" height="15" fill="rgb(226,201,16)" fg:x="2384" fg:w="2"/><text x="13.7755%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="13.5255%" y="629" width="0.0113%" height="15" fill="rgb(205,98,0)" fg:x="2384" fg:w="2"/><text x="13.7755%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="13.5255%" y="613" width="0.0113%" height="15" fill="rgb(214,191,48)" fg:x="2384" fg:w="2"/><text x="13.7755%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="13.5255%" y="597" width="0.0113%" height="15" fill="rgb(237,112,39)" fg:x="2384" fg:w="2"/><text x="13.7755%" y="607.50"></text></g><g><title>&lt;ggez::graphics::image::Image as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="13.5368%" y="645" width="0.0227%" height="15" fill="rgb(247,203,27)" fg:x="2386" fg:w="4"/><text x="13.7868%" y="655.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="13.5425%" y="629" width="0.0170%" height="15" fill="rgb(235,124,28)" fg:x="2387" fg:w="3"/><text x="13.7925%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="13.5425%" y="613" width="0.0170%" height="15" fill="rgb(208,207,46)" fg:x="2387" fg:w="3"/><text x="13.7925%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="13.5425%" y="597" width="0.0170%" height="15" fill="rgb(234,176,4)" fg:x="2387" fg:w="3"/><text x="13.7925%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="13.5425%" y="581" width="0.0170%" height="15" fill="rgb(230,133,28)" fg:x="2387" fg:w="3"/><text x="13.7925%" y="591.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="13.5595%" y="645" width="0.0170%" height="15" fill="rgb(211,137,40)" fg:x="2390" fg:w="3"/><text x="13.8095%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="13.5652%" y="629" width="0.0113%" height="15" fill="rgb(254,35,13)" fg:x="2391" fg:w="2"/><text x="13.8152%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="13.5765%" y="597" width="0.0113%" height="15" fill="rgb(225,49,51)" fg:x="2393" fg:w="2"/><text x="13.8265%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::bind_group_drop (3 samples, 0.02%)</title><rect x="13.5879%" y="549" width="0.0170%" height="15" fill="rgb(251,10,15)" fg:x="2395" fg:w="3"/><text x="13.8379%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::bind_group_drop (13 samples, 0.07%)</title><rect x="13.5879%" y="565" width="0.0738%" height="15" fill="rgb(228,207,15)" fg:x="2395" fg:w="13"/><text x="13.8379%" y="575.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::bind_group_drop (10 samples, 0.06%)</title><rect x="13.6049%" y="549" width="0.0567%" height="15" fill="rgb(241,99,19)" fg:x="2398" fg:w="10"/><text x="13.8549%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (10 samples, 0.06%)</title><rect x="13.6049%" y="533" width="0.0567%" height="15" fill="rgb(207,104,49)" fg:x="2398" fg:w="10"/><text x="13.8549%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (10 samples, 0.06%)</title><rect x="13.6049%" y="517" width="0.0567%" height="15" fill="rgb(234,99,18)" fg:x="2398" fg:w="10"/><text x="13.8549%" y="527.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="13.6049%" y="501" width="0.0567%" height="15" fill="rgb(213,191,49)" fg:x="2398" fg:w="10"/><text x="13.8549%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.05%)</title><rect x="13.6106%" y="485" width="0.0511%" height="15" fill="rgb(210,226,19)" fg:x="2399" fg:w="9"/><text x="13.8606%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.05%)</title><rect x="13.6106%" y="469" width="0.0511%" height="15" fill="rgb(229,97,18)" fg:x="2399" fg:w="9"/><text x="13.8606%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt; (17 samples, 0.10%)</title><rect x="13.5765%" y="645" width="0.0964%" height="15" fill="rgb(211,167,15)" fg:x="2393" fg:w="17"/><text x="13.8265%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::BindGroup&gt;&gt; (17 samples, 0.10%)</title><rect x="13.5765%" y="629" width="0.0964%" height="15" fill="rgb(210,169,34)" fg:x="2393" fg:w="17"/><text x="13.8265%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.10%)</title><rect x="13.5765%" y="613" width="0.0964%" height="15" fill="rgb(241,121,31)" fg:x="2393" fg:w="17"/><text x="13.8265%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.09%)</title><rect x="13.5879%" y="597" width="0.0851%" height="15" fill="rgb(232,40,11)" fg:x="2395" fg:w="15"/><text x="13.8379%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (15 samples, 0.09%)</title><rect x="13.5879%" y="581" width="0.0851%" height="15" fill="rgb(205,86,26)" fg:x="2395" fg:w="15"/><text x="13.8379%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.01%)</title><rect x="13.6616%" y="565" width="0.0113%" height="15" fill="rgb(231,126,28)" fg:x="2408" fg:w="2"/><text x="13.9116%" y="575.50"></text></g><g><title>core::mem::drop (6 samples, 0.03%)</title><rect x="13.6787%" y="533" width="0.0340%" height="15" fill="rgb(219,221,18)" fg:x="2411" fg:w="6"/><text x="13.9287%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (6 samples, 0.03%)</title><rect x="13.6787%" y="517" width="0.0340%" height="15" fill="rgb(211,40,0)" fg:x="2411" fg:w="6"/><text x="13.9287%" y="527.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="13.6787%" y="501" width="0.0340%" height="15" fill="rgb(239,85,43)" fg:x="2411" fg:w="6"/><text x="13.9287%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.03%)</title><rect x="13.6787%" y="485" width="0.0340%" height="15" fill="rgb(231,55,21)" fg:x="2411" fg:w="6"/><text x="13.9287%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.03%)</title><rect x="13.6787%" y="469" width="0.0340%" height="15" fill="rgb(225,184,43)" fg:x="2411" fg:w="6"/><text x="13.9287%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::buffer_drop (14 samples, 0.08%)</title><rect x="13.6730%" y="565" width="0.0794%" height="15" fill="rgb(251,158,41)" fg:x="2410" fg:w="14"/><text x="13.9230%" y="575.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (14 samples, 0.08%)</title><rect x="13.6730%" y="549" width="0.0794%" height="15" fill="rgb(234,159,37)" fg:x="2410" fg:w="14"/><text x="13.9230%" y="559.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (5 samples, 0.03%)</title><rect x="13.7240%" y="533" width="0.0284%" height="15" fill="rgb(216,204,22)" fg:x="2419" fg:w="5"/><text x="13.9740%" y="543.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (18 samples, 0.10%)</title><rect x="13.6730%" y="597" width="0.1021%" height="15" fill="rgb(214,17,3)" fg:x="2410" fg:w="18"/><text x="13.9230%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (18 samples, 0.10%)</title><rect x="13.6730%" y="581" width="0.1021%" height="15" fill="rgb(212,111,17)" fg:x="2410" fg:w="18"/><text x="13.9230%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (4 samples, 0.02%)</title><rect x="13.7524%" y="565" width="0.0227%" height="15" fill="rgb(221,157,24)" fg:x="2424" fg:w="4"/><text x="14.0024%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::Buffer&gt; (4 samples, 0.02%)</title><rect x="13.7524%" y="549" width="0.0227%" height="15" fill="rgb(252,16,13)" fg:x="2424" fg:w="4"/><text x="14.0024%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="13.7524%" y="533" width="0.0227%" height="15" fill="rgb(221,62,2)" fg:x="2424" fg:w="4"/><text x="14.0024%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="13.7524%" y="517" width="0.0227%" height="15" fill="rgb(247,87,22)" fg:x="2424" fg:w="4"/><text x="14.0024%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (4 samples, 0.02%)</title><rect x="13.7524%" y="501" width="0.0227%" height="15" fill="rgb(215,73,9)" fg:x="2424" fg:w="4"/><text x="14.0024%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.02%)</title><rect x="13.7524%" y="485" width="0.0227%" height="15" fill="rgb(207,175,33)" fg:x="2424" fg:w="4"/><text x="14.0024%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt; (22 samples, 0.12%)</title><rect x="13.6730%" y="645" width="0.1248%" height="15" fill="rgb(243,129,54)" fg:x="2410" fg:w="22"/><text x="13.9230%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (22 samples, 0.12%)</title><rect x="13.6730%" y="629" width="0.1248%" height="15" fill="rgb(227,119,45)" fg:x="2410" fg:w="22"/><text x="13.9230%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.12%)</title><rect x="13.6730%" y="613" width="0.1248%" height="15" fill="rgb(205,109,36)" fg:x="2410" fg:w="22"/><text x="13.9230%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="13.7751%" y="597" width="0.0227%" height="15" fill="rgb(205,6,39)" fg:x="2428" fg:w="4"/><text x="14.0251%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="13.7751%" y="581" width="0.0227%" height="15" fill="rgb(221,32,16)" fg:x="2428" fg:w="4"/><text x="14.0251%" y="591.50"></text></g><g><title>__GI___libc_free (5 samples, 0.03%)</title><rect x="13.7978%" y="549" width="0.0284%" height="15" fill="rgb(228,144,50)" fg:x="2432" fg:w="5"/><text x="14.0478%" y="559.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="13.8091%" y="533" width="0.0170%" height="15" fill="rgb(229,201,53)" fg:x="2434" fg:w="3"/><text x="14.0591%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::draw::Std140DrawUniforms&gt;&gt; (6 samples, 0.03%)</title><rect x="13.7978%" y="629" width="0.0340%" height="15" fill="rgb(249,153,27)" fg:x="2432" fg:w="6"/><text x="14.0478%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ggez::graphics::draw::Std140DrawUniforms&gt;&gt; (6 samples, 0.03%)</title><rect x="13.7978%" y="613" width="0.0340%" height="15" fill="rgb(227,106,25)" fg:x="2432" fg:w="6"/><text x="14.0478%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="13.7978%" y="597" width="0.0340%" height="15" fill="rgb(230,65,29)" fg:x="2432" fg:w="6"/><text x="14.0478%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.03%)</title><rect x="13.7978%" y="581" width="0.0340%" height="15" fill="rgb(221,57,46)" fg:x="2432" fg:w="6"/><text x="14.0478%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.03%)</title><rect x="13.7978%" y="565" width="0.0340%" height="15" fill="rgb(229,161,17)" fg:x="2432" fg:w="6"/><text x="14.0478%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::instance::InstanceArray&gt; (8 samples, 0.05%)</title><rect x="13.7978%" y="645" width="0.0454%" height="15" fill="rgb(222,213,11)" fg:x="2432" fg:w="8"/><text x="14.0478%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="13.8432%" y="645" width="0.0227%" height="15" fill="rgb(235,35,13)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="13.8432%" y="629" width="0.0227%" height="15" fill="rgb(233,158,34)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="639.50"></text></g><g><title>std::sync::poison::Flag::done (4 samples, 0.02%)</title><rect x="13.8432%" y="613" width="0.0227%" height="15" fill="rgb(215,151,48)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="623.50"></text></g><g><title>std::thread::panicking (4 samples, 0.02%)</title><rect x="13.8432%" y="597" width="0.0227%" height="15" fill="rgb(229,84,14)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="607.50"></text></g><g><title>std::panicking::panicking (4 samples, 0.02%)</title><rect x="13.8432%" y="581" width="0.0227%" height="15" fill="rgb(229,68,14)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="591.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (4 samples, 0.02%)</title><rect x="13.8432%" y="565" width="0.0227%" height="15" fill="rgb(243,106,26)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="13.8432%" y="549" width="0.0227%" height="15" fill="rgb(206,45,38)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="13.8432%" y="533" width="0.0227%" height="15" fill="rgb(226,6,15)" fg:x="2440" fg:w="4"/><text x="14.0932%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="13.9453%" y="485" width="0.0284%" height="15" fill="rgb(232,22,54)" fg:x="2458" fg:w="5"/><text x="14.1953%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.9510%" y="469" width="0.0227%" height="15" fill="rgb(229,222,32)" fg:x="2459" fg:w="4"/><text x="14.2010%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.9510%" y="453" width="0.0227%" height="15" fill="rgb(228,62,29)" fg:x="2459" fg:w="4"/><text x="14.2010%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.9510%" y="437" width="0.0227%" height="15" fill="rgb(251,103,34)" fg:x="2459" fg:w="4"/><text x="14.2010%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.9510%" y="421" width="0.0227%" height="15" fill="rgb(233,12,30)" fg:x="2459" fg:w="4"/><text x="14.2010%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="13.9567%" y="405" width="0.0170%" height="15" fill="rgb(238,52,0)" fg:x="2460" fg:w="3"/><text x="14.2067%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.9623%" y="389" width="0.0113%" height="15" fill="rgb(223,98,5)" fg:x="2461" fg:w="2"/><text x="14.2123%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.9623%" y="373" width="0.0113%" height="15" fill="rgb(228,75,37)" fg:x="2461" fg:w="2"/><text x="14.2123%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.9623%" y="357" width="0.0113%" height="15" fill="rgb(205,115,49)" fg:x="2461" fg:w="2"/><text x="14.2123%" y="367.50"></text></g><g><title>malloc_consolidate (3 samples, 0.02%)</title><rect x="13.9737%" y="485" width="0.0170%" height="15" fill="rgb(250,154,43)" fg:x="2463" fg:w="3"/><text x="14.2237%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (21 samples, 0.12%)</title><rect x="13.8772%" y="629" width="0.1191%" height="15" fill="rgb(226,43,29)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.12%)</title><rect x="13.8772%" y="613" width="0.1191%" height="15" fill="rgb(249,228,39)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.12%)</title><rect x="13.8772%" y="597" width="0.1191%" height="15" fill="rgb(216,79,43)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.12%)</title><rect x="13.8772%" y="581" width="0.1191%" height="15" fill="rgb(228,95,12)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.12%)</title><rect x="13.8772%" y="565" width="0.1191%" height="15" fill="rgb(249,221,15)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.12%)</title><rect x="13.8772%" y="549" width="0.1191%" height="15" fill="rgb(233,34,13)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="559.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.12%)</title><rect x="13.8772%" y="533" width="0.1191%" height="15" fill="rgb(214,103,39)" fg:x="2446" fg:w="21"/><text x="14.1272%" y="543.50"></text></g><g><title>__GI___libc_malloc (19 samples, 0.11%)</title><rect x="13.8886%" y="517" width="0.1078%" height="15" fill="rgb(251,126,39)" fg:x="2448" fg:w="19"/><text x="14.1386%" y="527.50"></text></g><g><title>_int_malloc (17 samples, 0.10%)</title><rect x="13.8999%" y="501" width="0.0964%" height="15" fill="rgb(214,216,36)" fg:x="2450" fg:w="17"/><text x="14.1499%" y="511.50"></text></g><g><title>ggez::graphics::gpu::arc::ArcHandle&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="14.0020%" y="629" width="0.0227%" height="15" fill="rgb(220,221,8)" fg:x="2468" fg:w="4"/><text x="14.2520%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="14.0020%" y="613" width="0.0227%" height="15" fill="rgb(240,216,3)" fg:x="2468" fg:w="4"/><text x="14.2520%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="14.0077%" y="597" width="0.0170%" height="15" fill="rgb(232,218,17)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="14.0077%" y="581" width="0.0170%" height="15" fill="rgb(229,163,45)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="14.0077%" y="565" width="0.0170%" height="15" fill="rgb(231,110,42)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="14.0077%" y="549" width="0.0170%" height="15" fill="rgb(208,170,48)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="559.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="14.0077%" y="533" width="0.0170%" height="15" fill="rgb(239,116,25)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="543.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="14.0077%" y="517" width="0.0170%" height="15" fill="rgb(219,200,50)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="527.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="14.0077%" y="501" width="0.0170%" height="15" fill="rgb(245,200,0)" fg:x="2469" fg:w="3"/><text x="14.2577%" y="511.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::buffer (2 samples, 0.01%)</title><rect x="14.0247%" y="629" width="0.0113%" height="15" fill="rgb(245,119,33)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="14.0247%" y="613" width="0.0113%" height="15" fill="rgb(231,125,12)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="14.0247%" y="597" width="0.0113%" height="15" fill="rgb(216,96,41)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="14.0247%" y="581" width="0.0113%" height="15" fill="rgb(248,43,45)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="14.0247%" y="565" width="0.0113%" height="15" fill="rgb(217,222,7)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="14.0247%" y="549" width="0.0113%" height="15" fill="rgb(233,28,6)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="559.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="14.0247%" y="533" width="0.0113%" height="15" fill="rgb(231,218,15)" fg:x="2472" fg:w="2"/><text x="14.2747%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="14.0474%" y="517" width="0.0227%" height="15" fill="rgb(226,171,48)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="14.0474%" y="501" width="0.0227%" height="15" fill="rgb(235,201,9)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.02%)</title><rect x="14.0474%" y="485" width="0.0227%" height="15" fill="rgb(217,80,15)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="14.0474%" y="469" width="0.0227%" height="15" fill="rgb(219,152,8)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.02%)</title><rect x="14.0474%" y="453" width="0.0227%" height="15" fill="rgb(243,107,38)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.02%)</title><rect x="14.0474%" y="437" width="0.0227%" height="15" fill="rgb(231,17,5)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group::{{closure}} (4 samples, 0.02%)</title><rect x="14.0474%" y="421" width="0.0227%" height="15" fill="rgb(209,25,54)" fg:x="2476" fg:w="4"/><text x="14.2974%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.03%)</title><rect x="14.0474%" y="581" width="0.0284%" height="15" fill="rgb(219,0,2)" fg:x="2476" fg:w="5"/><text x="14.2974%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="14.0474%" y="565" width="0.0284%" height="15" fill="rgb(246,9,5)" fg:x="2476" fg:w="5"/><text x="14.2974%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="14.0474%" y="549" width="0.0284%" height="15" fill="rgb(226,159,4)" fg:x="2476" fg:w="5"/><text x="14.2974%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.03%)</title><rect x="14.0474%" y="533" width="0.0284%" height="15" fill="rgb(219,175,34)" fg:x="2476" fg:w="5"/><text x="14.2974%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::binding_model::BindGroupEntry&gt;&gt; (2 samples, 0.01%)</title><rect x="14.0758%" y="581" width="0.0113%" height="15" fill="rgb(236,10,46)" fg:x="2481" fg:w="2"/><text x="14.3258%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::binding_model::BindGroupDescriptor&gt; (3 samples, 0.02%)</title><rect x="14.0871%" y="581" width="0.0170%" height="15" fill="rgb(240,211,16)" fg:x="2483" fg:w="3"/><text x="14.3371%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="14.0871%" y="565" width="0.0170%" height="15" fill="rgb(205,3,43)" fg:x="2483" fg:w="3"/><text x="14.3371%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="14.1496%" y="485" width="0.0113%" height="15" fill="rgb(245,7,22)" fg:x="2494" fg:w="2"/><text x="14.3996%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="14.1496%" y="469" width="0.0113%" height="15" fill="rgb(239,132,32)" fg:x="2494" fg:w="2"/><text x="14.3996%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.03%)</title><rect x="14.1496%" y="549" width="0.0340%" height="15" fill="rgb(228,202,34)" fg:x="2494" fg:w="6"/><text x="14.3996%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="14.1496%" y="533" width="0.0340%" height="15" fill="rgb(254,200,22)" fg:x="2494" fg:w="6"/><text x="14.3996%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="14.1496%" y="517" width="0.0340%" height="15" fill="rgb(219,10,39)" fg:x="2494" fg:w="6"/><text x="14.3996%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.03%)</title><rect x="14.1496%" y="501" width="0.0340%" height="15" fill="rgb(226,210,39)" fg:x="2494" fg:w="6"/><text x="14.3996%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.02%)</title><rect x="14.1609%" y="485" width="0.0227%" height="15" fill="rgb(208,219,16)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="14.1609%" y="469" width="0.0227%" height="15" fill="rgb(216,158,51)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="14.1609%" y="453" width="0.0227%" height="15" fill="rgb(233,14,44)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="14.1609%" y="437" width="0.0227%" height="15" fill="rgb(237,97,39)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="14.1609%" y="421" width="0.0227%" height="15" fill="rgb(218,198,43)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="14.1609%" y="405" width="0.0227%" height="15" fill="rgb(231,104,20)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="415.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="14.1609%" y="389" width="0.0227%" height="15" fill="rgb(254,36,13)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="399.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="14.1609%" y="373" width="0.0227%" height="15" fill="rgb(248,14,50)" fg:x="2496" fg:w="4"/><text x="14.4109%" y="383.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="14.1666%" y="357" width="0.0170%" height="15" fill="rgb(217,107,29)" fg:x="2497" fg:w="3"/><text x="14.4166%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="14.2233%" y="533" width="0.0227%" height="15" fill="rgb(251,169,33)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="14.2233%" y="517" width="0.0227%" height="15" fill="rgb(217,108,32)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="14.2233%" y="501" width="0.0227%" height="15" fill="rgb(219,66,42)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="14.2233%" y="485" width="0.0227%" height="15" fill="rgb(206,180,7)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="14.2233%" y="469" width="0.0227%" height="15" fill="rgb(208,226,31)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="14.2233%" y="453" width="0.0227%" height="15" fill="rgb(218,26,49)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="14.2233%" y="437" width="0.0227%" height="15" fill="rgb(233,197,48)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="14.2233%" y="421" width="0.0227%" height="15" fill="rgb(252,181,51)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="431.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="14.2233%" y="405" width="0.0227%" height="15" fill="rgb(253,90,19)" fg:x="2507" fg:w="4"/><text x="14.4733%" y="415.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="14.2290%" y="389" width="0.0170%" height="15" fill="rgb(215,171,30)" fg:x="2508" fg:w="3"/><text x="14.4790%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.01%)</title><rect x="14.2460%" y="453" width="0.0113%" height="15" fill="rgb(214,222,9)" fg:x="2511" fg:w="2"/><text x="14.4960%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.01%)</title><rect x="14.2460%" y="437" width="0.0113%" height="15" fill="rgb(223,3,22)" fg:x="2511" fg:w="2"/><text x="14.4960%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="14.2460%" y="421" width="0.0113%" height="15" fill="rgb(225,196,46)" fg:x="2511" fg:w="2"/><text x="14.4960%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.02%)</title><rect x="14.2460%" y="501" width="0.0170%" height="15" fill="rgb(209,110,37)" fg:x="2511" fg:w="3"/><text x="14.4960%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="14.2460%" y="485" width="0.0170%" height="15" fill="rgb(249,89,12)" fg:x="2511" fg:w="3"/><text x="14.4960%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="14.2460%" y="469" width="0.0170%" height="15" fill="rgb(226,27,33)" fg:x="2511" fg:w="3"/><text x="14.4960%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="14.2630%" y="485" width="0.0227%" height="15" fill="rgb(213,82,22)" fg:x="2514" fg:w="4"/><text x="14.5130%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.02%)</title><rect x="14.2630%" y="469" width="0.0227%" height="15" fill="rgb(248,140,0)" fg:x="2514" fg:w="4"/><text x="14.5130%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.02%)</title><rect x="14.2630%" y="453" width="0.0227%" height="15" fill="rgb(228,106,3)" fg:x="2514" fg:w="4"/><text x="14.5130%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4 samples, 0.02%)</title><rect x="14.2630%" y="437" width="0.0227%" height="15" fill="rgb(209,23,37)" fg:x="2514" fg:w="4"/><text x="14.5130%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (4 samples, 0.02%)</title><rect x="14.2630%" y="421" width="0.0227%" height="15" fill="rgb(241,93,50)" fg:x="2514" fg:w="4"/><text x="14.5130%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (4 samples, 0.02%)</title><rect x="14.2630%" y="405" width="0.0227%" height="15" fill="rgb(253,46,43)" fg:x="2514" fg:w="4"/><text x="14.5130%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.02%)</title><rect x="14.2687%" y="389" width="0.0170%" height="15" fill="rgb(226,206,43)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="399.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.02%)</title><rect x="14.2687%" y="373" width="0.0170%" height="15" fill="rgb(217,54,7)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="14.2687%" y="357" width="0.0170%" height="15" fill="rgb(223,5,52)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="14.2687%" y="341" width="0.0170%" height="15" fill="rgb(206,52,46)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="14.2687%" y="325" width="0.0170%" height="15" fill="rgb(253,136,11)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="335.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="14.2687%" y="309" width="0.0170%" height="15" fill="rgb(208,106,33)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="319.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="14.2687%" y="293" width="0.0170%" height="15" fill="rgb(206,54,4)" fg:x="2515" fg:w="3"/><text x="14.5187%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.05%)</title><rect x="14.2460%" y="533" width="0.0511%" height="15" fill="rgb(213,3,15)" fg:x="2511" fg:w="9"/><text x="14.4960%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.05%)</title><rect x="14.2460%" y="517" width="0.0511%" height="15" fill="rgb(252,211,39)" fg:x="2511" fg:w="9"/><text x="14.4960%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.03%)</title><rect x="14.2630%" y="501" width="0.0340%" height="15" fill="rgb(223,6,36)" fg:x="2514" fg:w="6"/><text x="14.5130%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="14.2857%" y="485" width="0.0113%" height="15" fill="rgb(252,169,45)" fg:x="2518" fg:w="2"/><text x="14.5357%" y="495.50"></text></g><g><title>wgpu_core::init_tracker::buffer::&lt;impl wgpu_core::init_tracker::InitTracker&lt;u64&gt;&gt;::create_action (2 samples, 0.01%)</title><rect x="14.3027%" y="533" width="0.0113%" height="15" fill="rgb(212,48,26)" fg:x="2521" fg:w="2"/><text x="14.5527%" y="543.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (21 samples, 0.12%)</title><rect x="14.2120%" y="549" width="0.1191%" height="15" fill="rgb(251,102,48)" fg:x="2505" fg:w="21"/><text x="14.4620%" y="559.50"></text></g><g><title>wgpu_core::validation::check_buffer_usage (3 samples, 0.02%)</title><rect x="14.3141%" y="533" width="0.0170%" height="15" fill="rgb(243,208,16)" fg:x="2523" fg:w="3"/><text x="14.5641%" y="543.50"></text></g><g><title>wgpu_core::track::BindGroupStates&lt;A&gt;::optimize (2 samples, 0.01%)</title><rect x="14.3368%" y="549" width="0.0113%" height="15" fill="rgb(219,96,24)" fg:x="2527" fg:w="2"/><text x="14.5868%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.02%)</title><rect x="14.3595%" y="533" width="0.0227%" height="15" fill="rgb(219,33,29)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="14.3595%" y="517" width="0.0227%" height="15" fill="rgb(223,176,5)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="14.3595%" y="501" width="0.0227%" height="15" fill="rgb(228,140,14)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="14.3595%" y="485" width="0.0227%" height="15" fill="rgb(217,179,31)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="14.3595%" y="469" width="0.0227%" height="15" fill="rgb(230,9,30)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="14.3595%" y="453" width="0.0227%" height="15" fill="rgb(230,136,20)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="463.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="14.3595%" y="437" width="0.0227%" height="15" fill="rgb(215,210,22)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="447.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="14.3595%" y="421" width="0.0227%" height="15" fill="rgb(218,43,5)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="431.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="14.3595%" y="405" width="0.0227%" height="15" fill="rgb(216,11,5)" fg:x="2531" fg:w="4"/><text x="14.6095%" y="415.50"></text></g><g><title>ash::device::Device::update_descriptor_sets (9 samples, 0.05%)</title><rect x="14.3822%" y="533" width="0.0511%" height="15" fill="rgb(209,82,29)" fg:x="2535" fg:w="9"/><text x="14.6322%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="14.3822%" y="517" width="0.0511%" height="15" fill="rgb(244,115,12)" fg:x="2535" fg:w="9"/><text x="14.6322%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="14.3822%" y="501" width="0.0511%" height="15" fill="rgb(222,82,18)" fg:x="2535" fg:w="9"/><text x="14.6322%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="14.3822%" y="485" width="0.0511%" height="15" fill="rgb(249,227,8)" fg:x="2535" fg:w="9"/><text x="14.6322%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="14.4616%" y="453" width="0.0113%" height="15" fill="rgb(253,141,45)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="14.4616%" y="437" width="0.0113%" height="15" fill="rgb(234,184,4)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="14.4616%" y="421" width="0.0113%" height="15" fill="rgb(218,194,23)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="14.4616%" y="405" width="0.0113%" height="15" fill="rgb(235,66,41)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="14.4616%" y="389" width="0.0113%" height="15" fill="rgb(245,217,1)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="14.4616%" y="373" width="0.0113%" height="15" fill="rgb(229,91,1)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="14.4616%" y="357" width="0.0113%" height="15" fill="rgb(207,101,30)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="367.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="14.4616%" y="341" width="0.0113%" height="15" fill="rgb(223,82,49)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="351.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="14.4616%" y="325" width="0.0113%" height="15" fill="rgb(218,167,17)" fg:x="2549" fg:w="2"/><text x="14.7116%" y="335.50"></text></g><g><title>&lt;gpu_descriptor::allocator::Allocation&lt;S&gt; as core::iter::traits::collect::Extend&lt;S&gt;&gt;::extend (6 samples, 0.03%)</title><rect x="14.4559%" y="485" width="0.0340%" height="15" fill="rgb(208,103,14)" fg:x="2548" fg:w="6"/><text x="14.7059%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.03%)</title><rect x="14.4559%" y="469" width="0.0340%" height="15" fill="rgb(238,20,8)" fg:x="2548" fg:w="6"/><text x="14.7059%" y="479.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="14.4729%" y="453" width="0.0170%" height="15" fill="rgb(218,80,54)" fg:x="2551" fg:w="3"/><text x="14.7229%" y="463.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="14.4786%" y="437" width="0.0113%" height="15" fill="rgb(240,144,17)" fg:x="2552" fg:w="2"/><text x="14.7286%" y="447.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="14.4900%" y="469" width="0.0113%" height="15" fill="rgb(245,27,50)" fg:x="2554" fg:w="2"/><text x="14.7400%" y="479.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="14.4900%" y="485" width="0.0227%" height="15" fill="rgb(251,51,7)" fg:x="2554" fg:w="4"/><text x="14.7400%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="14.5013%" y="469" width="0.0113%" height="15" fill="rgb(245,217,29)" fg:x="2556" fg:w="2"/><text x="14.7513%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="14.5580%" y="405" width="0.0170%" height="15" fill="rgb(221,176,29)" fg:x="2566" fg:w="3"/><text x="14.8080%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="14.5580%" y="389" width="0.0170%" height="15" fill="rgb(212,180,24)" fg:x="2566" fg:w="3"/><text x="14.8080%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="14.5410%" y="421" width="0.0738%" height="15" fill="rgb(254,24,2)" fg:x="2563" fg:w="13"/><text x="14.7910%" y="431.50"></text></g><g><title>__libc_calloc (7 samples, 0.04%)</title><rect x="14.5751%" y="405" width="0.0397%" height="15" fill="rgb(230,100,2)" fg:x="2569" fg:w="7"/><text x="14.8251%" y="415.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="14.5921%" y="389" width="0.0227%" height="15" fill="rgb(219,142,25)" fg:x="2572" fg:w="4"/><text x="14.8421%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.11%)</title><rect x="14.5127%" y="469" width="0.1078%" height="15" fill="rgb(240,73,43)" fg:x="2558" fg:w="19"/><text x="14.7627%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.11%)</title><rect x="14.5127%" y="453" width="0.1078%" height="15" fill="rgb(214,114,15)" fg:x="2558" fg:w="19"/><text x="14.7627%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.11%)</title><rect x="14.5127%" y="437" width="0.1078%" height="15" fill="rgb(207,130,4)" fg:x="2558" fg:w="19"/><text x="14.7627%" y="447.50"></text></g><g><title>ash::device::Device::allocate_descriptor_sets (20 samples, 0.11%)</title><rect x="14.5127%" y="485" width="0.1135%" height="15" fill="rgb(221,25,40)" fg:x="2558" fg:w="20"/><text x="14.7627%" y="495.50"></text></g><g><title>ash::vk::definitions::DescriptorSetAllocateInfo::builder (2 samples, 0.01%)</title><rect x="14.6261%" y="485" width="0.0113%" height="15" fill="rgb(241,184,7)" fg:x="2578" fg:w="2"/><text x="14.8761%" y="495.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::allocate (37 samples, 0.21%)</title><rect x="14.4332%" y="517" width="0.2099%" height="15" fill="rgb(235,159,4)" fg:x="2544" fg:w="37"/><text x="14.6832%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::alloc_descriptor_sets (36 samples, 0.20%)</title><rect x="14.4389%" y="501" width="0.2042%" height="15" fill="rgb(214,87,48)" fg:x="2545" fg:w="36"/><text x="14.6889%" y="511.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (96 samples, 0.54%)</title><rect x="14.1155%" y="565" width="0.5446%" height="15" fill="rgb(246,198,24)" fg:x="2488" fg:w="96"/><text x="14.3655%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (55 samples, 0.31%)</title><rect x="14.3481%" y="549" width="0.3120%" height="15" fill="rgb(209,66,40)" fg:x="2529" fg:w="55"/><text x="14.5981%" y="559.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::allocate (40 samples, 0.23%)</title><rect x="14.4332%" y="533" width="0.2269%" height="15" fill="rgb(233,147,39)" fg:x="2544" fg:w="40"/><text x="14.6832%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::entry (3 samples, 0.02%)</title><rect x="14.6431%" y="517" width="0.0170%" height="15" fill="rgb(231,145,52)" fg:x="2581" fg:w="3"/><text x="14.8931%" y="527.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="14.6488%" y="501" width="0.0113%" height="15" fill="rgb(206,20,26)" fg:x="2582" fg:w="2"/><text x="14.8988%" y="511.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="14.6488%" y="485" width="0.0113%" height="15" fill="rgb(238,220,4)" fg:x="2582" fg:w="2"/><text x="14.8988%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="14.6488%" y="469" width="0.0113%" height="15" fill="rgb(252,195,42)" fg:x="2582" fg:w="2"/><text x="14.8988%" y="479.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.01%)</title><rect x="14.6488%" y="453" width="0.0113%" height="15" fill="rgb(209,10,6)" fg:x="2582" fg:w="2"/><text x="14.8988%" y="463.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.01%)</title><rect x="14.6488%" y="437" width="0.0113%" height="15" fill="rgb(229,3,52)" fg:x="2582" fg:w="2"/><text x="14.8988%" y="447.50"></text></g><g><title>&lt;gpu_descriptor_types::types::DescriptorTotalCount as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="14.6488%" y="421" width="0.0113%" height="15" fill="rgb(253,49,37)" fg:x="2582" fg:w="2"/><text x="14.8988%" y="431.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (6 samples, 0.03%)</title><rect x="14.6602%" y="565" width="0.0340%" height="15" fill="rgb(240,103,49)" fg:x="2584" fg:w="6"/><text x="14.9102%" y="575.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (4 samples, 0.02%)</title><rect x="14.6715%" y="549" width="0.0227%" height="15" fill="rgb(250,182,30)" fg:x="2586" fg:w="4"/><text x="14.9215%" y="559.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (3 samples, 0.02%)</title><rect x="14.6772%" y="533" width="0.0170%" height="15" fill="rgb(248,8,30)" fg:x="2587" fg:w="3"/><text x="14.9272%" y="543.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="14.6772%" y="517" width="0.0170%" height="15" fill="rgb(237,120,30)" fg:x="2587" fg:w="3"/><text x="14.9272%" y="527.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="14.6772%" y="501" width="0.0170%" height="15" fill="rgb(221,146,34)" fg:x="2587" fg:w="3"/><text x="14.9272%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="14.6772%" y="485" width="0.0170%" height="15" fill="rgb(242,55,13)" fg:x="2587" fg:w="3"/><text x="14.9272%" y="495.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (6 samples, 0.03%)</title><rect x="14.6942%" y="565" width="0.0340%" height="15" fill="rgb(242,112,31)" fg:x="2590" fg:w="6"/><text x="14.9442%" y="575.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (6 samples, 0.03%)</title><rect x="14.6942%" y="549" width="0.0340%" height="15" fill="rgb(249,192,27)" fg:x="2590" fg:w="6"/><text x="14.9442%" y="559.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (5 samples, 0.03%)</title><rect x="14.6999%" y="533" width="0.0284%" height="15" fill="rgb(208,204,44)" fg:x="2591" fg:w="5"/><text x="14.9499%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.02%)</title><rect x="14.7055%" y="517" width="0.0227%" height="15" fill="rgb(208,93,54)" fg:x="2592" fg:w="4"/><text x="14.9555%" y="527.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="14.7055%" y="501" width="0.0227%" height="15" fill="rgb(242,1,31)" fg:x="2592" fg:w="4"/><text x="14.9555%" y="511.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="14.7282%" y="565" width="0.0113%" height="15" fill="rgb(241,83,25)" fg:x="2596" fg:w="2"/><text x="14.9782%" y="575.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::set (2 samples, 0.01%)</title><rect x="14.7396%" y="533" width="0.0113%" height="15" fill="rgb(205,169,50)" fg:x="2598" fg:w="2"/><text x="14.9896%" y="543.50"></text></g><g><title>wgpu::Device::create_bind_group (128 samples, 0.73%)</title><rect x="14.0361%" y="629" width="0.7262%" height="15" fill="rgb(239,186,37)" fg:x="2474" fg:w="128"/><text x="14.2861%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (128 samples, 0.73%)</title><rect x="14.0361%" y="613" width="0.7262%" height="15" fill="rgb(205,221,10)" fg:x="2474" fg:w="128"/><text x="14.2861%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (128 samples, 0.73%)</title><rect x="14.0361%" y="597" width="0.7262%" height="15" fill="rgb(218,196,15)" fg:x="2474" fg:w="128"/><text x="14.2861%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (116 samples, 0.66%)</title><rect x="14.1042%" y="581" width="0.6581%" height="15" fill="rgb(218,196,35)" fg:x="2486" fg:w="116"/><text x="14.3542%" y="591.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::insert_single (4 samples, 0.02%)</title><rect x="14.7396%" y="565" width="0.0227%" height="15" fill="rgb(233,63,24)" fg:x="2598" fg:w="4"/><text x="14.9896%" y="575.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::insert (4 samples, 0.02%)</title><rect x="14.7396%" y="549" width="0.0227%" height="15" fill="rgb(225,8,4)" fg:x="2598" fg:w="4"/><text x="14.9896%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (2 samples, 0.01%)</title><rect x="14.7509%" y="533" width="0.0113%" height="15" fill="rgb(234,105,35)" fg:x="2600" fg:w="2"/><text x="15.0009%" y="543.50"></text></g><g><title>_int_malloc (27 samples, 0.15%)</title><rect x="14.7850%" y="421" width="0.1532%" height="15" fill="rgb(236,21,32)" fg:x="2606" fg:w="27"/><text x="15.0350%" y="431.50"></text></g><g><title>wgpu_core::LifeGuard::new (29 samples, 0.16%)</title><rect x="14.7850%" y="549" width="0.1645%" height="15" fill="rgb(228,109,6)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="559.50"></text></g><g><title>wgpu_core::RefCount::new (29 samples, 0.16%)</title><rect x="14.7850%" y="533" width="0.1645%" height="15" fill="rgb(229,215,31)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.16%)</title><rect x="14.7850%" y="517" width="0.1645%" height="15" fill="rgb(221,52,54)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="527.50"></text></g><g><title>alloc::alloc::exchange_malloc (29 samples, 0.16%)</title><rect x="14.7850%" y="501" width="0.1645%" height="15" fill="rgb(252,129,43)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.16%)</title><rect x="14.7850%" y="485" width="0.1645%" height="15" fill="rgb(248,183,27)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.16%)</title><rect x="14.7850%" y="469" width="0.1645%" height="15" fill="rgb(250,0,22)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="479.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.16%)</title><rect x="14.7850%" y="453" width="0.1645%" height="15" fill="rgb(213,166,10)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="463.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.16%)</title><rect x="14.7850%" y="437" width="0.1645%" height="15" fill="rgb(207,163,36)" fg:x="2606" fg:w="29"/><text x="15.0350%" y="447.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="14.9382%" y="421" width="0.0113%" height="15" fill="rgb(208,122,22)" fg:x="2633" fg:w="2"/><text x="15.1882%" y="431.50"></text></g><g><title>syscall (34 samples, 0.19%)</title><rect x="15.0119%" y="469" width="0.1929%" height="15" fill="rgb(207,104,49)" fg:x="2646" fg:w="34"/><text x="15.2619%" y="479.50"></text></g><g><title>[unknown] (30 samples, 0.17%)</title><rect x="15.0346%" y="453" width="0.1702%" height="15" fill="rgb(248,211,50)" fg:x="2650" fg:w="30"/><text x="15.2846%" y="463.50"></text></g><g><title>[unknown] (23 samples, 0.13%)</title><rect x="15.0743%" y="437" width="0.1305%" height="15" fill="rgb(217,13,45)" fg:x="2657" fg:w="23"/><text x="15.3243%" y="447.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="15.0913%" y="421" width="0.1135%" height="15" fill="rgb(211,216,49)" fg:x="2660" fg:w="20"/><text x="15.3413%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="15.1764%" y="405" width="0.0284%" height="15" fill="rgb(221,58,53)" fg:x="2675" fg:w="5"/><text x="15.4264%" y="415.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (43 samples, 0.24%)</title><rect x="14.9835%" y="501" width="0.2440%" height="15" fill="rgb(220,112,41)" fg:x="2641" fg:w="43"/><text x="15.2335%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (38 samples, 0.22%)</title><rect x="15.0119%" y="485" width="0.2156%" height="15" fill="rgb(236,38,28)" fg:x="2646" fg:w="38"/><text x="15.2619%" y="495.50"></text></g><g><title>syscall@plt (4 samples, 0.02%)</title><rect x="15.2048%" y="469" width="0.0227%" height="15" fill="rgb(227,195,22)" fg:x="2680" fg:w="4"/><text x="15.4548%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="15.2729%" y="469" width="0.0908%" height="15" fill="rgb(214,55,33)" fg:x="2692" fg:w="16"/><text x="15.5229%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="15.2729%" y="453" width="0.0908%" height="15" fill="rgb(248,80,13)" fg:x="2692" fg:w="16"/><text x="15.5229%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (21 samples, 0.12%)</title><rect x="15.2502%" y="485" width="0.1191%" height="15" fill="rgb(238,52,6)" fg:x="2688" fg:w="21"/><text x="15.5002%" y="495.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (83 samples, 0.47%)</title><rect x="14.9779%" y="533" width="0.4709%" height="15" fill="rgb(224,198,47)" fg:x="2640" fg:w="83"/><text x="15.2279%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (83 samples, 0.47%)</title><rect x="14.9779%" y="517" width="0.4709%" height="15" fill="rgb(233,171,20)" fg:x="2640" fg:w="83"/><text x="15.2279%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (39 samples, 0.22%)</title><rect x="15.2275%" y="501" width="0.2213%" height="15" fill="rgb(241,30,25)" fg:x="2684" fg:w="39"/><text x="15.4775%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.08%)</title><rect x="15.3693%" y="485" width="0.0794%" height="15" fill="rgb(207,171,38)" fg:x="2709" fg:w="14"/><text x="15.6193%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="15.4601%" y="485" width="0.0113%" height="15" fill="rgb(234,70,1)" fg:x="2725" fg:w="2"/><text x="15.7101%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="15.4601%" y="469" width="0.0113%" height="15" fill="rgb(232,178,18)" fg:x="2725" fg:w="2"/><text x="15.7101%" y="479.50"></text></g><g><title>ash::device::Device::create_buffer (12 samples, 0.07%)</title><rect x="15.4488%" y="533" width="0.0681%" height="15" fill="rgb(241,78,40)" fg:x="2723" fg:w="12"/><text x="15.6988%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="15.4488%" y="517" width="0.0681%" height="15" fill="rgb(222,35,25)" fg:x="2723" fg:w="12"/><text x="15.6988%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="15.4544%" y="501" width="0.0624%" height="15" fill="rgb(207,92,16)" fg:x="2724" fg:w="11"/><text x="15.7044%" y="511.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.05%)</title><rect x="15.4715%" y="485" width="0.0454%" height="15" fill="rgb(216,59,51)" fg:x="2727" fg:w="8"/><text x="15.7215%" y="495.50"></text></g><g><title>tcache_get (5 samples, 0.03%)</title><rect x="15.4885%" y="469" width="0.0284%" height="15" fill="rgb(213,80,28)" fg:x="2730" fg:w="5"/><text x="15.7385%" y="479.50"></text></g><g><title>ash::device::Device::get_buffer_memory_requirements (3 samples, 0.02%)</title><rect x="15.5169%" y="533" width="0.0170%" height="15" fill="rgb(220,93,7)" fg:x="2735" fg:w="3"/><text x="15.7669%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="15.5169%" y="517" width="0.0170%" height="15" fill="rgb(225,24,44)" fg:x="2735" fg:w="3"/><text x="15.7669%" y="527.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfo::builder (2 samples, 0.01%)</title><rect x="15.5339%" y="533" width="0.0113%" height="15" fill="rgb(243,74,40)" fg:x="2738" fg:w="2"/><text x="15.7839%" y="543.50"></text></g><g><title>gpu_alloc::buddy::Size::acquire (6 samples, 0.03%)</title><rect x="15.5963%" y="485" width="0.0340%" height="15" fill="rgb(228,39,7)" fg:x="2749" fg:w="6"/><text x="15.8463%" y="495.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::len (2 samples, 0.01%)</title><rect x="15.6190%" y="469" width="0.0113%" height="15" fill="rgb(227,79,8)" fg:x="2753" fg:w="2"/><text x="15.8690%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2 samples, 0.01%)</title><rect x="15.6190%" y="453" width="0.0113%" height="15" fill="rgb(236,58,11)" fg:x="2753" fg:w="2"/><text x="15.8690%" y="463.50"></text></g><g><title>gpu_alloc::buddy::Size::add_pair_and_acquire_left (3 samples, 0.02%)</title><rect x="15.6303%" y="485" width="0.0170%" height="15" fill="rgb(249,63,35)" fg:x="2755" fg:w="3"/><text x="15.8803%" y="495.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::insert (3 samples, 0.02%)</title><rect x="15.6303%" y="469" width="0.0170%" height="15" fill="rgb(252,114,16)" fg:x="2755" fg:w="3"/><text x="15.8803%" y="479.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (15 samples, 0.09%)</title><rect x="15.5906%" y="501" width="0.0851%" height="15" fill="rgb(254,151,24)" fg:x="2748" fg:w="15"/><text x="15.8406%" y="511.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::get_unchecked (5 samples, 0.03%)</title><rect x="15.6473%" y="485" width="0.0284%" height="15" fill="rgb(253,54,39)" fg:x="2758" fg:w="5"/><text x="15.8973%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (130 samples, 0.74%)</title><rect x="14.9552%" y="549" width="0.7375%" height="15" fill="rgb(243,25,45)" fg:x="2636" fg:w="130"/><text x="15.2052%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (26 samples, 0.15%)</title><rect x="15.5452%" y="533" width="0.1475%" height="15" fill="rgb(234,134,9)" fg:x="2740" fg:w="26"/><text x="15.7952%" y="543.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (26 samples, 0.15%)</title><rect x="15.5452%" y="517" width="0.1475%" height="15" fill="rgb(227,166,31)" fg:x="2740" fg:w="26"/><text x="15.7952%" y="527.50"></text></g><g><title>gpu_alloc::usage::MemoryForUsage::mask (2 samples, 0.01%)</title><rect x="15.6814%" y="501" width="0.0113%" height="15" fill="rgb(245,143,41)" fg:x="2764" fg:w="2"/><text x="15.9314%" y="511.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (162 samples, 0.92%)</title><rect x="14.7793%" y="565" width="0.9191%" height="15" fill="rgb(238,181,32)" fg:x="2605" fg:w="162"/><text x="15.0293%" y="575.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="15.6984%" y="501" width="0.0170%" height="15" fill="rgb(224,113,18)" fg:x="2767" fg:w="3"/><text x="15.9484%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="15.6984%" y="485" width="0.0170%" height="15" fill="rgb(240,229,28)" fg:x="2767" fg:w="3"/><text x="15.9484%" y="495.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (4 samples, 0.02%)</title><rect x="15.6984%" y="565" width="0.0227%" height="15" fill="rgb(250,185,3)" fg:x="2767" fg:w="4"/><text x="15.9484%" y="575.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (4 samples, 0.02%)</title><rect x="15.6984%" y="549" width="0.0227%" height="15" fill="rgb(212,59,25)" fg:x="2767" fg:w="4"/><text x="15.9484%" y="559.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (4 samples, 0.02%)</title><rect x="15.6984%" y="533" width="0.0227%" height="15" fill="rgb(221,87,20)" fg:x="2767" fg:w="4"/><text x="15.9484%" y="543.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="15.6984%" y="517" width="0.0227%" height="15" fill="rgb(213,74,28)" fg:x="2767" fg:w="4"/><text x="15.9484%" y="527.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="15.7211%" y="533" width="0.0113%" height="15" fill="rgb(224,132,34)" fg:x="2771" fg:w="2"/><text x="15.9711%" y="543.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="15.7211%" y="517" width="0.0113%" height="15" fill="rgb(222,101,24)" fg:x="2771" fg:w="2"/><text x="15.9711%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="15.7211%" y="501" width="0.0113%" height="15" fill="rgb(254,142,4)" fg:x="2771" fg:w="2"/><text x="15.9711%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="15.7211%" y="485" width="0.0113%" height="15" fill="rgb(230,229,49)" fg:x="2771" fg:w="2"/><text x="15.9711%" y="495.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (8 samples, 0.05%)</title><rect x="15.7211%" y="565" width="0.0454%" height="15" fill="rgb(238,70,47)" fg:x="2771" fg:w="8"/><text x="15.9711%" y="575.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (8 samples, 0.05%)</title><rect x="15.7211%" y="549" width="0.0454%" height="15" fill="rgb(231,160,17)" fg:x="2771" fg:w="8"/><text x="15.9711%" y="559.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (6 samples, 0.03%)</title><rect x="15.7324%" y="533" width="0.0340%" height="15" fill="rgb(218,68,53)" fg:x="2773" fg:w="6"/><text x="15.9824%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (178 samples, 1.01%)</title><rect x="14.7623%" y="597" width="1.0099%" height="15" fill="rgb(236,111,10)" fg:x="2602" fg:w="178"/><text x="15.0123%" y="607.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (177 samples, 1.00%)</title><rect x="14.7680%" y="581" width="1.0042%" height="15" fill="rgb(224,34,41)" fg:x="2603" fg:w="177"/><text x="15.0180%" y="591.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (180 samples, 1.02%)</title><rect x="14.7623%" y="613" width="1.0212%" height="15" fill="rgb(241,118,19)" fg:x="2602" fg:w="180"/><text x="15.0123%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="15.7722%" y="597" width="0.0113%" height="15" fill="rgb(238,129,25)" fg:x="2780" fg:w="2"/><text x="16.0222%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="15.7722%" y="581" width="0.0113%" height="15" fill="rgb(238,22,31)" fg:x="2780" fg:w="2"/><text x="16.0222%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="15.7722%" y="565" width="0.0113%" height="15" fill="rgb(222,174,48)" fg:x="2780" fg:w="2"/><text x="16.0222%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="15.7722%" y="549" width="0.0113%" height="15" fill="rgb(206,152,40)" fg:x="2780" fg:w="2"/><text x="16.0222%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="15.7722%" y="533" width="0.0113%" height="15" fill="rgb(218,99,54)" fg:x="2780" fg:w="2"/><text x="16.0222%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="15.7722%" y="517" width="0.0113%" height="15" fill="rgb(220,174,26)" fg:x="2780" fg:w="2"/><text x="16.0222%" y="527.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (337 samples, 1.91%)</title><rect x="13.8772%" y="645" width="1.9119%" height="15" fill="rgb(245,116,9)" fg:x="2446" fg:w="337"/><text x="14.1272%" y="655.50">g..</text></g><g><title>wgpu::Device::create_buffer (181 samples, 1.03%)</title><rect x="14.7623%" y="629" width="1.0269%" height="15" fill="rgb(209,72,35)" fg:x="2602" fg:w="181"/><text x="15.0123%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="15.7892%" y="645" width="0.0113%" height="15" fill="rgb(226,126,21)" fg:x="2783" fg:w="2"/><text x="16.0392%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (58 samples, 0.33%)</title><rect x="15.8175%" y="581" width="0.3291%" height="15" fill="rgb(227,192,1)" fg:x="2788" fg:w="58"/><text x="16.0675%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (58 samples, 0.33%)</title><rect x="15.8175%" y="565" width="0.3291%" height="15" fill="rgb(237,180,29)" fg:x="2788" fg:w="58"/><text x="16.0675%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;u64&gt;&gt; (4 samples, 0.02%)</title><rect x="16.1579%" y="565" width="0.0227%" height="15" fill="rgb(230,197,35)" fg:x="2848" fg:w="4"/><text x="16.4079%" y="575.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="16.1579%" y="549" width="0.0227%" height="15" fill="rgb(246,193,31)" fg:x="2848" fg:w="4"/><text x="16.4079%" y="559.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="16.1579%" y="533" width="0.0227%" height="15" fill="rgb(241,36,4)" fg:x="2848" fg:w="4"/><text x="16.4079%" y="543.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="16.1579%" y="517" width="0.0227%" height="15" fill="rgb(241,130,17)" fg:x="2848" fg:w="4"/><text x="16.4079%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.02%)</title><rect x="16.1863%" y="517" width="0.0170%" height="15" fill="rgb(206,137,32)" fg:x="2853" fg:w="3"/><text x="16.4363%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="16.1863%" y="501" width="0.0170%" height="15" fill="rgb(237,228,51)" fg:x="2853" fg:w="3"/><text x="16.4363%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="16.1863%" y="485" width="0.0170%" height="15" fill="rgb(243,6,42)" fg:x="2853" fg:w="3"/><text x="16.4363%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="16.1863%" y="469" width="0.0170%" height="15" fill="rgb(251,74,28)" fg:x="2853" fg:w="3"/><text x="16.4363%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="16.1863%" y="453" width="0.0170%" height="15" fill="rgb(218,20,49)" fg:x="2853" fg:w="3"/><text x="16.4363%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="16.1863%" y="437" width="0.0170%" height="15" fill="rgb(238,28,14)" fg:x="2853" fg:w="3"/><text x="16.4363%" y="447.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6 samples, 0.03%)</title><rect x="16.1806%" y="565" width="0.0340%" height="15" fill="rgb(229,40,46)" fg:x="2852" fg:w="6"/><text x="16.4306%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6 samples, 0.03%)</title><rect x="16.1806%" y="549" width="0.0340%" height="15" fill="rgb(244,195,20)" fg:x="2852" fg:w="6"/><text x="16.4306%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.03%)</title><rect x="16.1806%" y="533" width="0.0340%" height="15" fill="rgb(253,56,35)" fg:x="2852" fg:w="6"/><text x="16.4306%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.01%)</title><rect x="16.2033%" y="517" width="0.0113%" height="15" fill="rgb(210,149,44)" fg:x="2856" fg:w="2"/><text x="16.4533%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.01%)</title><rect x="16.2033%" y="501" width="0.0113%" height="15" fill="rgb(240,135,12)" fg:x="2856" fg:w="2"/><text x="16.4533%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.01%)</title><rect x="16.2033%" y="485" width="0.0113%" height="15" fill="rgb(251,24,50)" fg:x="2856" fg:w="2"/><text x="16.4533%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.02%)</title><rect x="16.2260%" y="533" width="0.0227%" height="15" fill="rgb(243,200,47)" fg:x="2860" fg:w="4"/><text x="16.4760%" y="543.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="16.2260%" y="517" width="0.0227%" height="15" fill="rgb(224,166,26)" fg:x="2860" fg:w="4"/><text x="16.4760%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="16.6572%" y="453" width="0.0397%" height="15" fill="rgb(233,0,47)" fg:x="2936" fg:w="7"/><text x="16.9072%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="16.6799%" y="437" width="0.0170%" height="15" fill="rgb(253,80,5)" fg:x="2940" fg:w="3"/><text x="16.9299%" y="447.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (87 samples, 0.49%)</title><rect x="16.2147%" y="565" width="0.4936%" height="15" fill="rgb(214,133,25)" fg:x="2858" fg:w="87"/><text x="16.4647%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (86 samples, 0.49%)</title><rect x="16.2204%" y="549" width="0.4879%" height="15" fill="rgb(209,27,14)" fg:x="2859" fg:w="86"/><text x="16.4704%" y="559.50"></text></g><g><title>ash::device::Device::begin_command_buffer (80 samples, 0.45%)</title><rect x="16.2544%" y="533" width="0.4539%" height="15" fill="rgb(219,102,51)" fg:x="2865" fg:w="80"/><text x="16.5044%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (80 samples, 0.45%)</title><rect x="16.2544%" y="517" width="0.4539%" height="15" fill="rgb(237,18,16)" fg:x="2865" fg:w="80"/><text x="16.5044%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (69 samples, 0.39%)</title><rect x="16.3168%" y="501" width="0.3915%" height="15" fill="rgb(241,85,17)" fg:x="2876" fg:w="69"/><text x="16.5668%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (37 samples, 0.21%)</title><rect x="16.4984%" y="485" width="0.2099%" height="15" fill="rgb(236,90,42)" fg:x="2908" fg:w="37"/><text x="16.7484%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="16.6232%" y="469" width="0.0851%" height="15" fill="rgb(249,57,21)" fg:x="2930" fg:w="15"/><text x="16.8732%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="16.6969%" y="453" width="0.0113%" height="15" fill="rgb(243,12,36)" fg:x="2943" fg:w="2"/><text x="16.9469%" y="463.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="16.7139%" y="533" width="0.0113%" height="15" fill="rgb(253,128,47)" fg:x="2946" fg:w="2"/><text x="16.9639%" y="543.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (2 samples, 0.01%)</title><rect x="16.7139%" y="517" width="0.0113%" height="15" fill="rgb(207,33,20)" fg:x="2946" fg:w="2"/><text x="16.9639%" y="527.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (2 samples, 0.01%)</title><rect x="16.7139%" y="501" width="0.0113%" height="15" fill="rgb(233,215,35)" fg:x="2946" fg:w="2"/><text x="16.9639%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="16.7139%" y="549" width="0.0227%" height="15" fill="rgb(249,188,52)" fg:x="2946" fg:w="4"/><text x="16.9639%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (11 samples, 0.06%)</title><rect x="16.7139%" y="565" width="0.0624%" height="15" fill="rgb(225,12,32)" fg:x="2946" fg:w="11"/><text x="16.9639%" y="575.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (7 samples, 0.04%)</title><rect x="16.7366%" y="549" width="0.0397%" height="15" fill="rgb(247,98,14)" fg:x="2950" fg:w="7"/><text x="16.9866%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="16.7366%" y="533" width="0.0397%" height="15" fill="rgb(247,219,48)" fg:x="2950" fg:w="7"/><text x="16.9866%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="16.7480%" y="517" width="0.0284%" height="15" fill="rgb(253,60,48)" fg:x="2952" fg:w="5"/><text x="16.9980%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="16.7480%" y="501" width="0.0284%" height="15" fill="rgb(245,15,52)" fg:x="2952" fg:w="5"/><text x="16.9980%" y="511.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (133 samples, 0.75%)</title><rect x="16.1466%" y="581" width="0.7546%" height="15" fill="rgb(220,133,28)" fg:x="2846" fg:w="133"/><text x="16.3966%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (22 samples, 0.12%)</title><rect x="16.7764%" y="565" width="0.1248%" height="15" fill="rgb(217,180,4)" fg:x="2957" fg:w="22"/><text x="17.0264%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (19 samples, 0.11%)</title><rect x="16.7934%" y="549" width="0.1078%" height="15" fill="rgb(251,24,1)" fg:x="2960" fg:w="19"/><text x="17.0434%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.11%)</title><rect x="16.7934%" y="533" width="0.1078%" height="15" fill="rgb(212,185,49)" fg:x="2960" fg:w="19"/><text x="17.0434%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.10%)</title><rect x="16.7990%" y="517" width="0.1021%" height="15" fill="rgb(215,175,22)" fg:x="2961" fg:w="18"/><text x="17.0490%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="16.8104%" y="501" width="0.0908%" height="15" fill="rgb(250,205,14)" fg:x="2963" fg:w="16"/><text x="17.0604%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="16.8274%" y="485" width="0.0738%" height="15" fill="rgb(225,211,22)" fg:x="2966" fg:w="13"/><text x="17.0774%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="16.8444%" y="469" width="0.0567%" height="15" fill="rgb(251,179,42)" fg:x="2969" fg:w="10"/><text x="17.0944%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="16.8444%" y="453" width="0.0567%" height="15" fill="rgb(208,216,51)" fg:x="2969" fg:w="10"/><text x="17.0944%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="16.8728%" y="437" width="0.0284%" height="15" fill="rgb(235,36,11)" fg:x="2974" fg:w="5"/><text x="17.1228%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="16.8785%" y="421" width="0.0227%" height="15" fill="rgb(213,189,28)" fg:x="2975" fg:w="4"/><text x="17.1285%" y="431.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::consume (5 samples, 0.03%)</title><rect x="16.9068%" y="581" width="0.0284%" height="15" fill="rgb(227,203,42)" fg:x="2980" fg:w="5"/><text x="17.1568%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="16.9182%" y="565" width="0.0170%" height="15" fill="rgb(244,72,36)" fg:x="2982" fg:w="3"/><text x="17.1682%" y="575.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="16.9182%" y="549" width="0.0170%" height="15" fill="rgb(213,53,17)" fg:x="2982" fg:w="3"/><text x="17.1682%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="16.9182%" y="533" width="0.0170%" height="15" fill="rgb(207,167,3)" fg:x="2982" fg:w="3"/><text x="17.1682%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (12 samples, 0.07%)</title><rect x="16.9352%" y="517" width="0.0681%" height="15" fill="rgb(216,98,30)" fg:x="2985" fg:w="12"/><text x="17.1852%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="16.9409%" y="501" width="0.0624%" height="15" fill="rgb(236,123,15)" fg:x="2986" fg:w="11"/><text x="17.1909%" y="511.50"></text></g><g><title>syscall (11 samples, 0.06%)</title><rect x="16.9409%" y="485" width="0.0624%" height="15" fill="rgb(248,81,50)" fg:x="2986" fg:w="11"/><text x="17.1909%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="16.9409%" y="469" width="0.0624%" height="15" fill="rgb(214,120,4)" fg:x="2986" fg:w="11"/><text x="17.1909%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="16.9636%" y="453" width="0.0397%" height="15" fill="rgb(208,179,34)" fg:x="2990" fg:w="7"/><text x="17.2136%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="16.9636%" y="437" width="0.0397%" height="15" fill="rgb(227,140,7)" fg:x="2990" fg:w="7"/><text x="17.2136%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="16.9806%" y="421" width="0.0227%" height="15" fill="rgb(214,22,6)" fg:x="2993" fg:w="4"/><text x="17.2306%" y="431.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="17.0033%" y="501" width="0.0113%" height="15" fill="rgb(207,137,27)" fg:x="2997" fg:w="2"/><text x="17.2533%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="17.0033%" y="485" width="0.0113%" height="15" fill="rgb(210,8,46)" fg:x="2997" fg:w="2"/><text x="17.2533%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="17.0033%" y="469" width="0.0113%" height="15" fill="rgb(240,16,54)" fg:x="2997" fg:w="2"/><text x="17.2533%" y="479.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (19 samples, 0.11%)</title><rect x="16.9352%" y="549" width="0.1078%" height="15" fill="rgb(211,209,29)" fg:x="2985" fg:w="19"/><text x="17.1852%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (19 samples, 0.11%)</title><rect x="16.9352%" y="533" width="0.1078%" height="15" fill="rgb(226,228,24)" fg:x="2985" fg:w="19"/><text x="17.1852%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="17.0033%" y="517" width="0.0397%" height="15" fill="rgb(222,84,9)" fg:x="2997" fg:w="7"/><text x="17.2533%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="17.0146%" y="501" width="0.0284%" height="15" fill="rgb(234,203,30)" fg:x="2999" fg:w="5"/><text x="17.2646%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="17.0430%" y="501" width="0.0113%" height="15" fill="rgb(238,109,14)" fg:x="3004" fg:w="2"/><text x="17.2930%" y="511.50"></text></g><g><title>ash::device::Device::create_buffer (3 samples, 0.02%)</title><rect x="17.0430%" y="549" width="0.0170%" height="15" fill="rgb(233,206,34)" fg:x="3004" fg:w="3"/><text x="17.2930%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="17.0430%" y="533" width="0.0170%" height="15" fill="rgb(220,167,47)" fg:x="3004" fg:w="3"/><text x="17.2930%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="17.0430%" y="517" width="0.0170%" height="15" fill="rgb(238,105,10)" fg:x="3004" fg:w="3"/><text x="17.2930%" y="527.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block (3 samples, 0.02%)</title><rect x="17.0884%" y="501" width="0.0170%" height="15" fill="rgb(213,227,17)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::find (3 samples, 0.02%)</title><rect x="17.0884%" y="485" width="0.0170%" height="15" fill="rgb(217,132,38)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="495.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfind (3 samples, 0.02%)</title><rect x="17.0884%" y="469" width="0.0170%" height="15" fill="rgb(242,146,4)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::try_rfold (3 samples, 0.02%)</title><rect x="17.0884%" y="453" width="0.0170%" height="15" fill="rgb(212,61,9)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="463.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (3 samples, 0.02%)</title><rect x="17.0884%" y="437" width="0.0170%" height="15" fill="rgb(247,126,22)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::try_rfold::enumerate::{{closure}} (3 samples, 0.02%)</title><rect x="17.0884%" y="421" width="0.0170%" height="15" fill="rgb(220,196,2)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="431.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}} (3 samples, 0.02%)</title><rect x="17.0884%" y="405" width="0.0170%" height="15" fill="rgb(208,46,4)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="415.50"></text></g><g><title>gpu_alloc::freelist::FreeList&lt;M&gt;::get_block::{{closure}} (3 samples, 0.02%)</title><rect x="17.0884%" y="389" width="0.0170%" height="15" fill="rgb(252,104,46)" fg:x="3012" fg:w="3"/><text x="17.3384%" y="399.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (8 samples, 0.05%)</title><rect x="17.0884%" y="517" width="0.0454%" height="15" fill="rgb(237,152,48)" fg:x="3012" fg:w="8"/><text x="17.3384%" y="527.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::host_visible (5 samples, 0.03%)</title><rect x="17.1054%" y="501" width="0.0284%" height="15" fill="rgb(221,59,37)" fg:x="3015" fg:w="5"/><text x="17.3554%" y="511.50"></text></g><g><title>gpu_alloc_types::types::MemoryPropertyFlags::contains (5 samples, 0.03%)</title><rect x="17.1054%" y="485" width="0.0284%" height="15" fill="rgb(209,202,51)" fg:x="3015" fg:w="5"/><text x="17.3554%" y="495.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (14 samples, 0.08%)</title><rect x="17.0600%" y="549" width="0.0794%" height="15" fill="rgb(228,81,30)" fg:x="3007" fg:w="14"/><text x="17.3100%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (14 samples, 0.08%)</title><rect x="17.0600%" y="533" width="0.0794%" height="15" fill="rgb(227,42,39)" fg:x="3007" fg:w="14"/><text x="17.3100%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (37 samples, 0.21%)</title><rect x="16.9352%" y="565" width="0.2099%" height="15" fill="rgb(221,26,2)" fg:x="2985" fg:w="37"/><text x="17.1852%" y="575.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (39 samples, 0.22%)</title><rect x="16.9352%" y="581" width="0.2213%" height="15" fill="rgb(254,61,31)" fg:x="2985" fg:w="39"/><text x="17.1852%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::map_buffer (2 samples, 0.01%)</title><rect x="17.1451%" y="565" width="0.0113%" height="15" fill="rgb(222,173,38)" fg:x="3022" fg:w="2"/><text x="17.3951%" y="575.50"></text></g><g><title>gpu_alloc::block::MemoryBlock&lt;M&gt;::map (2 samples, 0.01%)</title><rect x="17.1451%" y="549" width="0.0113%" height="15" fill="rgb(218,50,12)" fg:x="3022" fg:w="2"/><text x="17.3951%" y="559.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (641 samples, 3.64%)</title><rect x="13.5255%" y="661" width="3.6367%" height="15" fill="rgb(223,88,40)" fg:x="2384" fg:w="641"/><text x="13.7755%" y="671.50">ggez..</text></g><g><title>wgpu::Queue::write_buffer (240 samples, 1.36%)</title><rect x="15.8005%" y="645" width="1.3616%" height="15" fill="rgb(237,54,19)" fg:x="2785" fg:w="240"/><text x="16.0505%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (240 samples, 1.36%)</title><rect x="15.8005%" y="629" width="1.3616%" height="15" fill="rgb(251,129,25)" fg:x="2785" fg:w="240"/><text x="16.0505%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (240 samples, 1.36%)</title><rect x="15.8005%" y="613" width="1.3616%" height="15" fill="rgb(238,97,19)" fg:x="2785" fg:w="240"/><text x="16.0505%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (238 samples, 1.35%)</title><rect x="15.8119%" y="597" width="1.3503%" height="15" fill="rgb(240,169,18)" fg:x="2787" fg:w="238"/><text x="16.0619%" y="607.50"></text></g><g><title>ggez::graphics::canvas::Canvas::draw (661 samples, 3.75%)</title><rect x="13.4347%" y="693" width="3.7501%" height="15" fill="rgb(230,187,49)" fg:x="2368" fg:w="661"/><text x="13.6847%" y="703.50">ggez..</text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (661 samples, 3.75%)</title><rect x="13.4347%" y="677" width="3.7501%" height="15" fill="rgb(209,44,26)" fg:x="2368" fg:w="661"/><text x="13.6847%" y="687.50">&lt;gge..</text></g><g><title>ggez::graphics::internal_canvas::InstanceArrayView::from_instances (4 samples, 0.02%)</title><rect x="17.1621%" y="661" width="0.0227%" height="15" fill="rgb(244,0,6)" fg:x="3025" fg:w="4"/><text x="17.4121%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (2 samples, 0.01%)</title><rect x="17.1848%" y="501" width="0.0113%" height="15" fill="rgb(248,18,21)" fg:x="3029" fg:w="2"/><text x="17.4348%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="17.1848%" y="533" width="0.0284%" height="15" fill="rgb(245,180,19)" fg:x="3029" fg:w="5"/><text x="17.4348%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ggez::graphics::canvas::DrawCommand]&gt; (5 samples, 0.03%)</title><rect x="17.1848%" y="517" width="0.0284%" height="15" fill="rgb(252,118,36)" fg:x="3029" fg:w="5"/><text x="17.4348%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InstanceArrayView&gt; (3 samples, 0.02%)</title><rect x="17.1962%" y="501" width="0.0170%" height="15" fill="rgb(210,224,19)" fg:x="3031" fg:w="3"/><text x="17.4462%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt; (2 samples, 0.01%)</title><rect x="17.2019%" y="485" width="0.0113%" height="15" fill="rgb(218,30,24)" fg:x="3032" fg:w="2"/><text x="17.4519%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (2 samples, 0.01%)</title><rect x="17.2019%" y="469" width="0.0113%" height="15" fill="rgb(219,75,50)" fg:x="3032" fg:w="2"/><text x="17.4519%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="17.2019%" y="453" width="0.0113%" height="15" fill="rgb(234,72,50)" fg:x="3032" fg:w="2"/><text x="17.4519%" y="463.50"></text></g><g><title>core::mem::drop (6 samples, 0.03%)</title><rect x="17.1848%" y="629" width="0.0340%" height="15" fill="rgb(219,100,48)" fg:x="3029" fg:w="6"/><text x="17.4348%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;i32,alloc::vec::Vec&lt;ggez::graphics::canvas::DrawCommand&gt;&gt;&gt; (6 samples, 0.03%)</title><rect x="17.1848%" y="613" width="0.0340%" height="15" fill="rgb(253,5,41)" fg:x="3029" fg:w="6"/><text x="17.4348%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.03%)</title><rect x="17.1848%" y="597" width="0.0340%" height="15" fill="rgb(247,181,11)" fg:x="3029" fg:w="6"/><text x="17.4348%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (6 samples, 0.03%)</title><rect x="17.1848%" y="581" width="0.0340%" height="15" fill="rgb(222,223,25)" fg:x="3029" fg:w="6"/><text x="17.4348%" y="591.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (6 samples, 0.03%)</title><rect x="17.1848%" y="565" width="0.0340%" height="15" fill="rgb(214,198,28)" fg:x="3029" fg:w="6"/><text x="17.4348%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::canvas::DrawCommand&gt;&gt; (6 samples, 0.03%)</title><rect x="17.1848%" y="549" width="0.0340%" height="15" fill="rgb(230,46,43)" fg:x="3029" fg:w="6"/><text x="17.4348%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;i32,alloc::vec::Vec&lt;ggez::graphics::canvas::DrawCommand&gt;&gt;&gt; (7 samples, 0.04%)</title><rect x="17.1848%" y="661" width="0.0397%" height="15" fill="rgb(233,65,53)" fg:x="3029" fg:w="7"/><text x="17.4348%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="17.1848%" y="645" width="0.0397%" height="15" fill="rgb(221,121,27)" fg:x="3029" fg:w="7"/><text x="17.4348%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Texture&gt;&gt; (4 samples, 0.02%)</title><rect x="17.2359%" y="645" width="0.0227%" height="15" fill="rgb(247,70,47)" fg:x="3038" fg:w="4"/><text x="17.4859%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Texture&gt;&gt; (4 samples, 0.02%)</title><rect x="17.2359%" y="629" width="0.0227%" height="15" fill="rgb(228,85,35)" fg:x="3038" fg:w="4"/><text x="17.4859%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="17.2359%" y="613" width="0.0227%" height="15" fill="rgb(209,50,18)" fg:x="3038" fg:w="4"/><text x="17.4859%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="17.2359%" y="597" width="0.0227%" height="15" fill="rgb(250,19,35)" fg:x="3038" fg:w="4"/><text x="17.4859%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="17.2359%" y="581" width="0.0227%" height="15" fill="rgb(253,107,29)" fg:x="3038" fg:w="4"/><text x="17.4859%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::canvas::Canvas&gt; (15 samples, 0.09%)</title><rect x="17.1848%" y="677" width="0.0851%" height="15" fill="rgb(252,179,29)" fg:x="3029" fg:w="15"/><text x="17.4348%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::image::Image&gt; (7 samples, 0.04%)</title><rect x="17.2302%" y="661" width="0.0397%" height="15" fill="rgb(238,194,6)" fg:x="3037" fg:w="7"/><text x="17.4802%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::TextureView&gt;&gt; (2 samples, 0.01%)</title><rect x="17.2586%" y="645" width="0.0113%" height="15" fill="rgb(238,164,29)" fg:x="3042" fg:w="2"/><text x="17.5086%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::TextureView&gt;&gt; (2 samples, 0.01%)</title><rect x="17.2586%" y="629" width="0.0113%" height="15" fill="rgb(224,25,9)" fg:x="3042" fg:w="2"/><text x="17.5086%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="17.2586%" y="613" width="0.0113%" height="15" fill="rgb(244,153,23)" fg:x="3042" fg:w="2"/><text x="17.5086%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="17.2586%" y="597" width="0.0113%" height="15" fill="rgb(212,203,14)" fg:x="3042" fg:w="2"/><text x="17.5086%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="17.2586%" y="581" width="0.0113%" height="15" fill="rgb(220,164,20)" fg:x="3042" fg:w="2"/><text x="17.5086%" y="591.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (W,V,U,T)&gt;::ne (2 samples, 0.01%)</title><rect x="17.3153%" y="661" width="0.0113%" height="15" fill="rgb(222,203,48)" fg:x="3052" fg:w="2"/><text x="17.5653%" y="671.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (9 samples, 0.05%)</title><rect x="17.3380%" y="645" width="0.0511%" height="15" fill="rgb(215,159,22)" fg:x="3056" fg:w="9"/><text x="17.5880%" y="655.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (8 samples, 0.05%)</title><rect x="17.3437%" y="629" width="0.0454%" height="15" fill="rgb(216,183,47)" fg:x="3057" fg:w="8"/><text x="17.5937%" y="639.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (8 samples, 0.05%)</title><rect x="17.3437%" y="613" width="0.0454%" height="15" fill="rgb(229,195,25)" fg:x="3057" fg:w="8"/><text x="17.5937%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (8 samples, 0.05%)</title><rect x="17.3437%" y="597" width="0.0454%" height="15" fill="rgb(224,132,51)" fg:x="3057" fg:w="8"/><text x="17.5937%" y="607.50"></text></g><g><title>__powf_fma (8 samples, 0.05%)</title><rect x="17.3437%" y="581" width="0.0454%" height="15" fill="rgb(240,63,7)" fg:x="3057" fg:w="8"/><text x="17.5937%" y="591.50"></text></g><g><title>log2_inline (5 samples, 0.03%)</title><rect x="17.3607%" y="565" width="0.0284%" height="15" fill="rgb(249,182,41)" fg:x="3060" fg:w="5"/><text x="17.6107%" y="575.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.3891%" y="629" width="0.0170%" height="15" fill="rgb(243,47,26)" fg:x="3065" fg:w="3"/><text x="17.6391%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.3891%" y="613" width="0.0170%" height="15" fill="rgb(233,48,2)" fg:x="3065" fg:w="3"/><text x="17.6391%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="17.3891%" y="597" width="0.0170%" height="15" fill="rgb(244,165,34)" fg:x="3065" fg:w="3"/><text x="17.6391%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="17.3891%" y="581" width="0.0170%" height="15" fill="rgb(207,89,7)" fg:x="3065" fg:w="3"/><text x="17.6391%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.4061%" y="613" width="0.0170%" height="15" fill="rgb(244,117,36)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="17.4061%" y="597" width="0.0170%" height="15" fill="rgb(226,144,34)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="17.4061%" y="581" width="0.0170%" height="15" fill="rgb(213,23,19)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="17.4061%" y="565" width="0.0170%" height="15" fill="rgb(217,75,12)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="17.4061%" y="549" width="0.0170%" height="15" fill="rgb(224,159,17)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="17.4061%" y="533" width="0.0170%" height="15" fill="rgb(217,118,1)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="17.4061%" y="517" width="0.0170%" height="15" fill="rgb(232,180,48)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="17.4061%" y="501" width="0.0170%" height="15" fill="rgb(230,27,33)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="17.4061%" y="485" width="0.0170%" height="15" fill="rgb(205,31,21)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="17.4061%" y="469" width="0.0170%" height="15" fill="rgb(253,59,4)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="479.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="17.4061%" y="453" width="0.0170%" height="15" fill="rgb(224,201,9)" fg:x="3068" fg:w="3"/><text x="17.6561%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="17.4288%" y="581" width="0.0113%" height="15" fill="rgb(229,206,30)" fg:x="3072" fg:w="2"/><text x="17.6788%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="17.4288%" y="565" width="0.0113%" height="15" fill="rgb(212,67,47)" fg:x="3072" fg:w="2"/><text x="17.6788%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.01%)</title><rect x="17.4288%" y="549" width="0.0113%" height="15" fill="rgb(211,96,50)" fg:x="3072" fg:w="2"/><text x="17.6788%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (2 samples, 0.01%)</title><rect x="17.4288%" y="533" width="0.0113%" height="15" fill="rgb(252,114,18)" fg:x="3072" fg:w="2"/><text x="17.6788%" y="543.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (10 samples, 0.06%)</title><rect x="17.4061%" y="629" width="0.0567%" height="15" fill="rgb(223,58,37)" fg:x="3068" fg:w="10"/><text x="17.6561%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.03%)</title><rect x="17.4288%" y="613" width="0.0340%" height="15" fill="rgb(237,70,4)" fg:x="3072" fg:w="6"/><text x="17.6788%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.03%)</title><rect x="17.4288%" y="597" width="0.0340%" height="15" fill="rgb(244,85,46)" fg:x="3072" fg:w="6"/><text x="17.6788%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.02%)</title><rect x="17.4401%" y="581" width="0.0227%" height="15" fill="rgb(223,39,52)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.02%)</title><rect x="17.4401%" y="565" width="0.0227%" height="15" fill="rgb(218,200,14)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.02%)</title><rect x="17.4401%" y="549" width="0.0227%" height="15" fill="rgb(208,171,16)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.02%)</title><rect x="17.4401%" y="533" width="0.0227%" height="15" fill="rgb(234,200,18)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (4 samples, 0.02%)</title><rect x="17.4401%" y="517" width="0.0227%" height="15" fill="rgb(228,45,11)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="527.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.02%)</title><rect x="17.4401%" y="501" width="0.0227%" height="15" fill="rgb(237,182,11)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.02%)</title><rect x="17.4401%" y="485" width="0.0227%" height="15" fill="rgb(241,175,49)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.02%)</title><rect x="17.4401%" y="469" width="0.0227%" height="15" fill="rgb(247,38,35)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.02%)</title><rect x="17.4401%" y="453" width="0.0227%" height="15" fill="rgb(228,39,49)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="17.4401%" y="437" width="0.0227%" height="15" fill="rgb(226,101,26)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (4 samples, 0.02%)</title><rect x="17.4401%" y="421" width="0.0227%" height="15" fill="rgb(206,141,19)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (4 samples, 0.02%)</title><rect x="17.4401%" y="405" width="0.0227%" height="15" fill="rgb(211,200,13)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.02%)</title><rect x="17.4401%" y="389" width="0.0227%" height="15" fill="rgb(241,121,6)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="399.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="17.4401%" y="373" width="0.0227%" height="15" fill="rgb(234,221,29)" fg:x="3074" fg:w="4"/><text x="17.6901%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.01%)</title><rect x="17.4685%" y="597" width="0.0113%" height="15" fill="rgb(229,136,5)" fg:x="3079" fg:w="2"/><text x="17.7185%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.01%)</title><rect x="17.4685%" y="581" width="0.0113%" height="15" fill="rgb(238,36,11)" fg:x="3079" fg:w="2"/><text x="17.7185%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.02%)</title><rect x="17.4799%" y="565" width="0.0227%" height="15" fill="rgb(251,55,41)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.02%)</title><rect x="17.4799%" y="549" width="0.0227%" height="15" fill="rgb(242,34,40)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="559.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.02%)</title><rect x="17.4799%" y="533" width="0.0227%" height="15" fill="rgb(215,42,17)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.02%)</title><rect x="17.4799%" y="517" width="0.0227%" height="15" fill="rgb(207,44,46)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.02%)</title><rect x="17.4799%" y="501" width="0.0227%" height="15" fill="rgb(211,206,28)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.02%)</title><rect x="17.4799%" y="485" width="0.0227%" height="15" fill="rgb(237,167,16)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="17.4799%" y="469" width="0.0227%" height="15" fill="rgb(233,66,6)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (4 samples, 0.02%)</title><rect x="17.4799%" y="453" width="0.0227%" height="15" fill="rgb(246,123,29)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (4 samples, 0.02%)</title><rect x="17.4799%" y="437" width="0.0227%" height="15" fill="rgb(209,62,40)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.02%)</title><rect x="17.4799%" y="421" width="0.0227%" height="15" fill="rgb(218,4,25)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="431.50"></text></g><g><title>&lt;ggez::graphics::gpu::bind_group::BindGroupEntryKey as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="17.4799%" y="405" width="0.0227%" height="15" fill="rgb(253,91,49)" fg:x="3081" fg:w="4"/><text x="17.7299%" y="415.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::create (21 samples, 0.12%)</title><rect x="17.3891%" y="645" width="0.1191%" height="15" fill="rgb(228,155,29)" fg:x="3065" fg:w="21"/><text x="17.6391%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.04%)</title><rect x="17.4685%" y="629" width="0.0397%" height="15" fill="rgb(243,57,37)" fg:x="3079" fg:w="7"/><text x="17.7185%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.04%)</title><rect x="17.4685%" y="613" width="0.0397%" height="15" fill="rgb(244,167,17)" fg:x="3079" fg:w="7"/><text x="17.7185%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="17.4799%" y="597" width="0.0284%" height="15" fill="rgb(207,181,38)" fg:x="3081" fg:w="5"/><text x="17.7299%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.03%)</title><rect x="17.4799%" y="581" width="0.0284%" height="15" fill="rgb(211,8,23)" fg:x="3081" fg:w="5"/><text x="17.7299%" y="591.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (2 samples, 0.01%)</title><rect x="17.5139%" y="549" width="0.0113%" height="15" fill="rgb(235,11,44)" fg:x="3087" fg:w="2"/><text x="17.7639%" y="559.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (2 samples, 0.01%)</title><rect x="17.5139%" y="533" width="0.0113%" height="15" fill="rgb(248,18,52)" fg:x="3087" fg:w="2"/><text x="17.7639%" y="543.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (2 samples, 0.01%)</title><rect x="17.5139%" y="517" width="0.0113%" height="15" fill="rgb(208,4,7)" fg:x="3087" fg:w="2"/><text x="17.7639%" y="527.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (2 samples, 0.01%)</title><rect x="17.5139%" y="501" width="0.0113%" height="15" fill="rgb(240,17,39)" fg:x="3087" fg:w="2"/><text x="17.7639%" y="511.50"></text></g><g><title>ggez::graphics::image::Image::fetch_buffer (5 samples, 0.03%)</title><rect x="17.5082%" y="629" width="0.0284%" height="15" fill="rgb(207,170,3)" fg:x="3086" fg:w="5"/><text x="17.7582%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok_and (4 samples, 0.02%)</title><rect x="17.5139%" y="613" width="0.0227%" height="15" fill="rgb(236,100,52)" fg:x="3087" fg:w="4"/><text x="17.7639%" y="623.50"></text></g><g><title>ggez::graphics::image::Image::fetch_buffer::{{closure}} (4 samples, 0.02%)</title><rect x="17.5139%" y="597" width="0.0227%" height="15" fill="rgb(246,78,51)" fg:x="3087" fg:w="4"/><text x="17.7639%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (4 samples, 0.02%)</title><rect x="17.5139%" y="581" width="0.0227%" height="15" fill="rgb(211,17,15)" fg:x="3087" fg:w="4"/><text x="17.7639%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (4 samples, 0.02%)</title><rect x="17.5139%" y="565" width="0.0227%" height="15" fill="rgb(209,59,46)" fg:x="3087" fg:w="4"/><text x="17.7639%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="17.5252%" y="549" width="0.0113%" height="15" fill="rgb(210,92,25)" fg:x="3089" fg:w="2"/><text x="17.7752%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="17.5423%" y="549" width="0.0113%" height="15" fill="rgb(238,174,52)" fg:x="3092" fg:w="2"/><text x="17.7923%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.01%)</title><rect x="17.5423%" y="533" width="0.0113%" height="15" fill="rgb(230,73,7)" fg:x="3092" fg:w="2"/><text x="17.7923%" y="543.50"></text></g><g><title>&lt;ggez::graphics::sampler::Sampler as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="17.5423%" y="517" width="0.0113%" height="15" fill="rgb(243,124,40)" fg:x="3092" fg:w="2"/><text x="17.7923%" y="527.50"></text></g><g><title>&lt;ggez::graphics::sampler::ClampMode as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="17.5423%" y="501" width="0.0113%" height="15" fill="rgb(244,170,11)" fg:x="3092" fg:w="2"/><text x="17.7923%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.02%)</title><rect x="17.5366%" y="597" width="0.0227%" height="15" fill="rgb(207,114,54)" fg:x="3091" fg:w="4"/><text x="17.7866%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="17.5423%" y="581" width="0.0170%" height="15" fill="rgb(205,42,20)" fg:x="3092" fg:w="3"/><text x="17.7923%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="17.5423%" y="565" width="0.0170%" height="15" fill="rgb(230,30,28)" fg:x="3092" fg:w="3"/><text x="17.7923%" y="575.50"></text></g><g><title>ggez::graphics::sampler::SamplerCache::get (5 samples, 0.03%)</title><rect x="17.5366%" y="629" width="0.0284%" height="15" fill="rgb(205,73,54)" fg:x="3091" fg:w="5"/><text x="17.7866%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.03%)</title><rect x="17.5366%" y="613" width="0.0284%" height="15" fill="rgb(254,227,23)" fg:x="3091" fg:w="5"/><text x="17.7866%" y="623.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_image (13 samples, 0.07%)</title><rect x="17.5082%" y="645" width="0.0738%" height="15" fill="rgb(228,202,34)" fg:x="3086" fg:w="13"/><text x="17.7582%" y="655.50"></text></g><g><title>wgpu::RenderPass::set_bind_group (2 samples, 0.01%)</title><rect x="17.5706%" y="629" width="0.0113%" height="15" fill="rgb(222,225,37)" fg:x="3097" fg:w="2"/><text x="17.8206%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (2 samples, 0.01%)</title><rect x="17.5706%" y="613" width="0.0113%" height="15" fill="rgb(221,14,54)" fg:x="3097" fg:w="2"/><text x="17.8206%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="17.5933%" y="629" width="0.0113%" height="15" fill="rgb(254,102,2)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="17.5933%" y="613" width="0.0113%" height="15" fill="rgb(232,104,17)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="17.5933%" y="597" width="0.0113%" height="15" fill="rgb(250,220,14)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="17.5933%" y="581" width="0.0113%" height="15" fill="rgb(241,158,9)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="591.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="17.5933%" y="565" width="0.0113%" height="15" fill="rgb(246,9,43)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="17.5933%" y="549" width="0.0113%" height="15" fill="rgb(206,73,33)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="559.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="17.5933%" y="533" width="0.0113%" height="15" fill="rgb(222,79,8)" fg:x="3101" fg:w="2"/><text x="17.8433%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="17.6047%" y="629" width="0.0284%" height="15" fill="rgb(234,8,54)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.03%)</title><rect x="17.6047%" y="613" width="0.0284%" height="15" fill="rgb(209,134,38)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="17.6047%" y="597" width="0.0284%" height="15" fill="rgb(230,127,29)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="17.6047%" y="581" width="0.0284%" height="15" fill="rgb(242,44,41)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.03%)</title><rect x="17.6047%" y="565" width="0.0284%" height="15" fill="rgb(222,56,43)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.03%)</title><rect x="17.6047%" y="549" width="0.0284%" height="15" fill="rgb(238,39,47)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="559.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.03%)</title><rect x="17.6047%" y="533" width="0.0284%" height="15" fill="rgb(226,79,43)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="543.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.03%)</title><rect x="17.6047%" y="517" width="0.0284%" height="15" fill="rgb(242,105,53)" fg:x="3103" fg:w="5"/><text x="17.8547%" y="527.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="17.6103%" y="501" width="0.0227%" height="15" fill="rgb(251,132,46)" fg:x="3104" fg:w="4"/><text x="17.8603%" y="511.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="17.6103%" y="485" width="0.0227%" height="15" fill="rgb(231,77,14)" fg:x="3104" fg:w="4"/><text x="17.8603%" y="495.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.6387%" y="613" width="0.0113%" height="15" fill="rgb(240,135,9)" fg:x="3109" fg:w="2"/><text x="17.8887%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.6387%" y="597" width="0.0113%" height="15" fill="rgb(248,109,14)" fg:x="3109" fg:w="2"/><text x="17.8887%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="17.6387%" y="581" width="0.0113%" height="15" fill="rgb(227,146,52)" fg:x="3109" fg:w="2"/><text x="17.8887%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="17.6387%" y="565" width="0.0113%" height="15" fill="rgb(232,54,3)" fg:x="3109" fg:w="2"/><text x="17.8887%" y="575.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (3 samples, 0.02%)</title><rect x="17.6501%" y="613" width="0.0170%" height="15" fill="rgb(229,201,43)" fg:x="3111" fg:w="3"/><text x="17.9001%" y="623.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.6501%" y="597" width="0.0170%" height="15" fill="rgb(252,161,33)" fg:x="3111" fg:w="3"/><text x="17.9001%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.6501%" y="581" width="0.0170%" height="15" fill="rgb(226,146,40)" fg:x="3111" fg:w="3"/><text x="17.9001%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="17.6501%" y="565" width="0.0170%" height="15" fill="rgb(219,47,25)" fg:x="3111" fg:w="3"/><text x="17.9001%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="17.6501%" y="549" width="0.0170%" height="15" fill="rgb(250,135,13)" fg:x="3111" fg:w="3"/><text x="17.9001%" y="559.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupBuilder::create (7 samples, 0.04%)</title><rect x="17.6387%" y="629" width="0.0397%" height="15" fill="rgb(219,229,18)" fg:x="3109" fg:w="7"/><text x="17.8887%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="17.6671%" y="613" width="0.0113%" height="15" fill="rgb(217,152,27)" fg:x="3114" fg:w="2"/><text x="17.9171%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="17.6671%" y="597" width="0.0113%" height="15" fill="rgb(225,71,47)" fg:x="3114" fg:w="2"/><text x="17.9171%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="17.6784%" y="549" width="0.0170%" height="15" fill="rgb(220,139,14)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="17.6784%" y="533" width="0.0170%" height="15" fill="rgb(247,54,32)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="17.6784%" y="517" width="0.0170%" height="15" fill="rgb(252,131,39)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="17.6784%" y="501" width="0.0170%" height="15" fill="rgb(210,108,39)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="17.6784%" y="485" width="0.0170%" height="15" fill="rgb(205,23,29)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="495.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="17.6784%" y="469" width="0.0170%" height="15" fill="rgb(246,139,46)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="479.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="17.6784%" y="453" width="0.0170%" height="15" fill="rgb(250,81,26)" fg:x="3116" fg:w="3"/><text x="17.9284%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="17.6784%" y="613" width="0.0227%" height="15" fill="rgb(214,104,7)" fg:x="3116" fg:w="4"/><text x="17.9284%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="17.6784%" y="597" width="0.0227%" height="15" fill="rgb(233,189,8)" fg:x="3116" fg:w="4"/><text x="17.9284%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="17.6784%" y="581" width="0.0227%" height="15" fill="rgb(228,141,17)" fg:x="3116" fg:w="4"/><text x="17.9284%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="17.6784%" y="565" width="0.0227%" height="15" fill="rgb(247,157,1)" fg:x="3116" fg:w="4"/><text x="17.9284%" y="575.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="17.7011%" y="613" width="0.0227%" height="15" fill="rgb(249,225,5)" fg:x="3120" fg:w="4"/><text x="17.9511%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="17.7011%" y="597" width="0.0227%" height="15" fill="rgb(242,55,13)" fg:x="3120" fg:w="4"/><text x="17.9511%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="17.7068%" y="581" width="0.0170%" height="15" fill="rgb(230,49,50)" fg:x="3121" fg:w="3"/><text x="17.9568%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="17.7068%" y="565" width="0.0170%" height="15" fill="rgb(241,111,38)" fg:x="3121" fg:w="3"/><text x="17.9568%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="17.7352%" y="453" width="0.0284%" height="15" fill="rgb(252,155,4)" fg:x="3126" fg:w="5"/><text x="17.9852%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (3 samples, 0.02%)</title><rect x="17.7465%" y="437" width="0.0170%" height="15" fill="rgb(212,69,32)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (3 samples, 0.02%)</title><rect x="17.7465%" y="421" width="0.0170%" height="15" fill="rgb(243,107,47)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.02%)</title><rect x="17.7465%" y="405" width="0.0170%" height="15" fill="rgb(247,130,12)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="17.7465%" y="389" width="0.0170%" height="15" fill="rgb(233,74,16)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="17.7465%" y="373" width="0.0170%" height="15" fill="rgb(208,58,18)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="17.7465%" y="357" width="0.0170%" height="15" fill="rgb(242,225,1)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.02%)</title><rect x="17.7465%" y="341" width="0.0170%" height="15" fill="rgb(249,39,40)" fg:x="3128" fg:w="3"/><text x="17.9965%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="17.7522%" y="325" width="0.0113%" height="15" fill="rgb(207,72,44)" fg:x="3129" fg:w="2"/><text x="18.0022%" y="335.50"></text></g><g><title>&lt;wgpu_types::BindingType as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="17.7635%" y="453" width="0.0227%" height="15" fill="rgb(215,193,12)" fg:x="3131" fg:w="4"/><text x="18.0135%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for bool&gt;::hash (2 samples, 0.01%)</title><rect x="17.7749%" y="437" width="0.0113%" height="15" fill="rgb(248,41,39)" fg:x="3133" fg:w="2"/><text x="18.0249%" y="447.50"></text></g><g><title>&lt;wgpu_types::ShaderStages as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="17.7862%" y="453" width="0.0113%" height="15" fill="rgb(253,85,4)" fg:x="3135" fg:w="2"/><text x="18.0362%" y="463.50"></text></g><g><title>&lt;wgpu_types::_::InternalBitFlags as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="17.7862%" y="437" width="0.0113%" height="15" fill="rgb(243,70,31)" fg:x="3135" fg:w="2"/><text x="18.0362%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.01%)</title><rect x="17.7862%" y="421" width="0.0113%" height="15" fill="rgb(253,195,26)" fg:x="3135" fg:w="2"/><text x="18.0362%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.01%)</title><rect x="17.7862%" y="405" width="0.0113%" height="15" fill="rgb(243,42,11)" fg:x="3135" fg:w="2"/><text x="18.0362%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="17.7862%" y="389" width="0.0113%" height="15" fill="rgb(239,66,17)" fg:x="3135" fg:w="2"/><text x="18.0362%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (12 samples, 0.07%)</title><rect x="17.7352%" y="517" width="0.0681%" height="15" fill="rgb(217,132,21)" fg:x="3126" fg:w="12"/><text x="17.9852%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.07%)</title><rect x="17.7352%" y="501" width="0.0681%" height="15" fill="rgb(252,202,21)" fg:x="3126" fg:w="12"/><text x="17.9852%" y="511.50"></text></g><g><title>core::hash::Hash::hash_slice (12 samples, 0.07%)</title><rect x="17.7352%" y="485" width="0.0681%" height="15" fill="rgb(233,98,36)" fg:x="3126" fg:w="12"/><text x="17.9852%" y="495.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::hash::Hash&gt;::hash (12 samples, 0.07%)</title><rect x="17.7352%" y="469" width="0.0681%" height="15" fill="rgb(216,153,54)" fg:x="3126" fg:w="12"/><text x="17.9852%" y="479.50"></text></g><g><title>hashbrown::map::make_insert_hash (14 samples, 0.08%)</title><rect x="17.7295%" y="581" width="0.0794%" height="15" fill="rgb(250,99,7)" fg:x="3125" fg:w="14"/><text x="17.9795%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.08%)</title><rect x="17.7295%" y="565" width="0.0794%" height="15" fill="rgb(207,56,50)" fg:x="3125" fg:w="14"/><text x="17.9795%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.07%)</title><rect x="17.7352%" y="549" width="0.0738%" height="15" fill="rgb(244,61,34)" fg:x="3126" fg:w="13"/><text x="17.9852%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (13 samples, 0.07%)</title><rect x="17.7352%" y="533" width="0.0738%" height="15" fill="rgb(241,50,38)" fg:x="3126" fg:w="13"/><text x="17.9852%" y="543.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (29 samples, 0.16%)</title><rect x="17.6784%" y="629" width="0.1645%" height="15" fill="rgb(212,166,30)" fg:x="3116" fg:w="29"/><text x="17.9284%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (20 samples, 0.11%)</title><rect x="17.7295%" y="613" width="0.1135%" height="15" fill="rgb(249,127,32)" fg:x="3125" fg:w="20"/><text x="17.9795%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (20 samples, 0.11%)</title><rect x="17.7295%" y="597" width="0.1135%" height="15" fill="rgb(209,103,0)" fg:x="3125" fg:w="20"/><text x="17.9795%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.03%)</title><rect x="17.8089%" y="581" width="0.0340%" height="15" fill="rgb(238,209,51)" fg:x="3139" fg:w="6"/><text x="18.0589%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.03%)</title><rect x="17.8089%" y="565" width="0.0340%" height="15" fill="rgb(237,56,23)" fg:x="3139" fg:w="6"/><text x="18.0589%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.03%)</title><rect x="17.8089%" y="549" width="0.0340%" height="15" fill="rgb(215,153,46)" fg:x="3139" fg:w="6"/><text x="18.0589%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (6 samples, 0.03%)</title><rect x="17.8089%" y="533" width="0.0340%" height="15" fill="rgb(224,49,31)" fg:x="3139" fg:w="6"/><text x="18.0589%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (6 samples, 0.03%)</title><rect x="17.8089%" y="517" width="0.0340%" height="15" fill="rgb(250,18,42)" fg:x="3139" fg:w="6"/><text x="18.0589%" y="527.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.02%)</title><rect x="17.8259%" y="501" width="0.0170%" height="15" fill="rgb(215,176,39)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.02%)</title><rect x="17.8259%" y="485" width="0.0170%" height="15" fill="rgb(223,77,29)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.02%)</title><rect x="17.8259%" y="469" width="0.0170%" height="15" fill="rgb(234,94,52)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.02%)</title><rect x="17.8259%" y="453" width="0.0170%" height="15" fill="rgb(220,154,50)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="17.8259%" y="437" width="0.0170%" height="15" fill="rgb(212,11,10)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (3 samples, 0.02%)</title><rect x="17.8259%" y="421" width="0.0170%" height="15" fill="rgb(205,166,19)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (3 samples, 0.02%)</title><rect x="17.8259%" y="405" width="0.0170%" height="15" fill="rgb(244,198,16)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.02%)</title><rect x="17.8259%" y="389" width="0.0170%" height="15" fill="rgb(219,69,12)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="399.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="17.8259%" y="373" width="0.0170%" height="15" fill="rgb(245,30,7)" fg:x="3142" fg:w="3"/><text x="18.0759%" y="383.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::image (3 samples, 0.02%)</title><rect x="17.8430%" y="629" width="0.0170%" height="15" fill="rgb(218,221,48)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="17.8430%" y="613" width="0.0170%" height="15" fill="rgb(216,66,15)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="17.8430%" y="597" width="0.0170%" height="15" fill="rgb(226,122,50)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="17.8430%" y="581" width="0.0170%" height="15" fill="rgb(239,156,16)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="17.8430%" y="565" width="0.0170%" height="15" fill="rgb(224,27,38)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="575.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="17.8430%" y="549" width="0.0170%" height="15" fill="rgb(224,39,27)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="559.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="17.8430%" y="533" width="0.0170%" height="15" fill="rgb(215,92,29)" fg:x="3145" fg:w="3"/><text x="18.0930%" y="543.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::layout (4 samples, 0.02%)</title><rect x="17.8600%" y="629" width="0.0227%" height="15" fill="rgb(207,159,16)" fg:x="3148" fg:w="4"/><text x="18.1100%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="17.8713%" y="613" width="0.0113%" height="15" fill="rgb(238,163,47)" fg:x="3150" fg:w="2"/><text x="18.1213%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="17.8713%" y="597" width="0.0113%" height="15" fill="rgb(219,91,49)" fg:x="3150" fg:w="2"/><text x="18.1213%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="17.8713%" y="581" width="0.0113%" height="15" fill="rgb(227,167,31)" fg:x="3150" fg:w="2"/><text x="18.1213%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="17.8713%" y="565" width="0.0113%" height="15" fill="rgb(234,80,54)" fg:x="3150" fg:w="2"/><text x="18.1213%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.01%)</title><rect x="17.8713%" y="549" width="0.0113%" height="15" fill="rgb(212,114,2)" fg:x="3150" fg:w="2"/><text x="18.1213%" y="559.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.01%)</title><rect x="17.8827%" y="581" width="0.0113%" height="15" fill="rgb(234,50,24)" fg:x="3152" fg:w="2"/><text x="18.1327%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="17.8827%" y="565" width="0.0113%" height="15" fill="rgb(221,68,8)" fg:x="3152" fg:w="2"/><text x="18.1327%" y="575.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="17.8827%" y="613" width="0.0340%" height="15" fill="rgb(254,180,31)" fg:x="3152" fg:w="6"/><text x="18.1327%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="17.8827%" y="597" width="0.0340%" height="15" fill="rgb(247,130,50)" fg:x="3152" fg:w="6"/><text x="18.1327%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.02%)</title><rect x="17.8940%" y="581" width="0.0227%" height="15" fill="rgb(211,109,4)" fg:x="3154" fg:w="4"/><text x="18.1440%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.02%)</title><rect x="17.8940%" y="565" width="0.0227%" height="15" fill="rgb(238,50,21)" fg:x="3154" fg:w="4"/><text x="18.1440%" y="575.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (2 samples, 0.01%)</title><rect x="17.9337%" y="613" width="0.0113%" height="15" fill="rgb(225,57,45)" fg:x="3161" fg:w="2"/><text x="18.1837%" y="623.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="17.9451%" y="533" width="0.0170%" height="15" fill="rgb(209,196,50)" fg:x="3163" fg:w="3"/><text x="18.1951%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.02%)</title><rect x="17.9678%" y="517" width="0.0227%" height="15" fill="rgb(242,140,13)" fg:x="3167" fg:w="4"/><text x="18.2178%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.02%)</title><rect x="17.9678%" y="501" width="0.0227%" height="15" fill="rgb(217,111,7)" fg:x="3167" fg:w="4"/><text x="18.2178%" y="511.50"></text></g><g><title>core::hash::Hash::hash_slice (4 samples, 0.02%)</title><rect x="17.9678%" y="485" width="0.0227%" height="15" fill="rgb(253,193,51)" fg:x="3167" fg:w="4"/><text x="18.2178%" y="495.50"></text></g><g><title>&lt;wgpu_types::VertexAttribute as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="17.9678%" y="469" width="0.0227%" height="15" fill="rgb(252,70,29)" fg:x="3167" fg:w="4"/><text x="18.2178%" y="479.50"></text></g><g><title>&lt;wgpu_types::VertexFormat as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="17.9678%" y="453" width="0.0227%" height="15" fill="rgb(232,127,12)" fg:x="3167" fg:w="4"/><text x="18.2178%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.05%)</title><rect x="17.9451%" y="581" width="0.0511%" height="15" fill="rgb(211,180,21)" fg:x="3163" fg:w="9"/><text x="18.1951%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.05%)</title><rect x="17.9451%" y="565" width="0.0511%" height="15" fill="rgb(229,72,13)" fg:x="3163" fg:w="9"/><text x="18.1951%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (9 samples, 0.05%)</title><rect x="17.9451%" y="549" width="0.0511%" height="15" fill="rgb(240,211,49)" fg:x="3163" fg:w="9"/><text x="18.1951%" y="559.50"></text></g><g><title>&lt;wgpu::VertexBufferLayout as core::hash::Hash&gt;::hash (6 samples, 0.03%)</title><rect x="17.9621%" y="533" width="0.0340%" height="15" fill="rgb(219,149,40)" fg:x="3166" fg:w="6"/><text x="18.2121%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.02%)</title><rect x="17.9961%" y="549" width="0.0227%" height="15" fill="rgb(210,127,46)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.02%)</title><rect x="17.9961%" y="533" width="0.0227%" height="15" fill="rgb(220,106,7)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="543.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="17.9961%" y="517" width="0.0227%" height="15" fill="rgb(249,31,22)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.02%)</title><rect x="17.9961%" y="501" width="0.0227%" height="15" fill="rgb(253,1,49)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="511.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.02%)</title><rect x="17.9961%" y="485" width="0.0227%" height="15" fill="rgb(227,144,33)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.02%)</title><rect x="17.9961%" y="469" width="0.0227%" height="15" fill="rgb(249,163,44)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.02%)</title><rect x="17.9961%" y="453" width="0.0227%" height="15" fill="rgb(234,15,39)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.02%)</title><rect x="17.9961%" y="437" width="0.0227%" height="15" fill="rgb(207,66,16)" fg:x="3172" fg:w="4"/><text x="18.2461%" y="447.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::render_pipeline (25 samples, 0.14%)</title><rect x="17.8827%" y="629" width="0.1418%" height="15" fill="rgb(233,112,24)" fg:x="3152" fg:w="25"/><text x="18.1327%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (14 samples, 0.08%)</title><rect x="17.9451%" y="613" width="0.0794%" height="15" fill="rgb(230,90,22)" fg:x="3163" fg:w="14"/><text x="18.1951%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (14 samples, 0.08%)</title><rect x="17.9451%" y="597" width="0.0794%" height="15" fill="rgb(229,61,13)" fg:x="3163" fg:w="14"/><text x="18.1951%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.03%)</title><rect x="17.9961%" y="581" width="0.0284%" height="15" fill="rgb(225,57,24)" fg:x="3172" fg:w="5"/><text x="18.2461%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.03%)</title><rect x="17.9961%" y="565" width="0.0284%" height="15" fill="rgb(208,169,48)" fg:x="3172" fg:w="5"/><text x="18.2461%" y="575.50"></text></g><g><title>typed_arena::Arena&lt;T&gt;::alloc (2 samples, 0.01%)</title><rect x="18.0245%" y="629" width="0.0113%" height="15" fill="rgb(244,218,51)" fg:x="3177" fg:w="2"/><text x="18.2745%" y="639.50"></text></g><g><title>typed_arena::Arena&lt;T&gt;::alloc_fast_path (2 samples, 0.01%)</title><rect x="18.0245%" y="613" width="0.0113%" height="15" fill="rgb(214,148,10)" fg:x="3177" fg:w="2"/><text x="18.2745%" y="623.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (82 samples, 0.47%)</title><rect x="17.5820%" y="645" width="0.4652%" height="15" fill="rgb(225,174,27)" fg:x="3099" fg:w="82"/><text x="17.8320%" y="655.50"></text></g><g><title>wgpu::RenderPass::set_pipeline (2 samples, 0.01%)</title><rect x="18.0359%" y="629" width="0.0113%" height="15" fill="rgb(230,96,26)" fg:x="3179" fg:w="2"/><text x="18.2859%" y="639.50"></text></g><g><title>wgpu::Device::limits (4 samples, 0.02%)</title><rect x="18.0472%" y="645" width="0.0227%" height="15" fill="rgb(232,10,30)" fg:x="3181" fg:w="4"/><text x="18.2972%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_limits (4 samples, 0.02%)</title><rect x="18.0472%" y="629" width="0.0227%" height="15" fill="rgb(222,8,50)" fg:x="3181" fg:w="4"/><text x="18.2972%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_limits (4 samples, 0.02%)</title><rect x="18.0472%" y="613" width="0.0227%" height="15" fill="rgb(213,81,27)" fg:x="3181" fg:w="4"/><text x="18.2972%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (7 samples, 0.04%)</title><rect x="18.0699%" y="581" width="0.0397%" height="15" fill="rgb(245,50,10)" fg:x="3185" fg:w="7"/><text x="18.3199%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (4 samples, 0.02%)</title><rect x="18.0869%" y="565" width="0.0227%" height="15" fill="rgb(216,100,18)" fg:x="3188" fg:w="4"/><text x="18.3369%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (4 samples, 0.02%)</title><rect x="18.0869%" y="549" width="0.0227%" height="15" fill="rgb(236,147,54)" fg:x="3188" fg:w="4"/><text x="18.3369%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="18.0869%" y="533" width="0.0227%" height="15" fill="rgb(205,143,26)" fg:x="3188" fg:w="4"/><text x="18.3369%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="18.0869%" y="517" width="0.0227%" height="15" fill="rgb(236,26,9)" fg:x="3188" fg:w="4"/><text x="18.3369%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="18.0869%" y="501" width="0.0227%" height="15" fill="rgb(221,165,53)" fg:x="3188" fg:w="4"/><text x="18.3369%" y="511.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::resource::StagingBuffer&lt;A&gt;&gt;::flush (2 samples, 0.01%)</title><rect x="18.1096%" y="581" width="0.0113%" height="15" fill="rgb(214,110,17)" fg:x="3192" fg:w="2"/><text x="18.3596%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::unmap_buffer (2 samples, 0.01%)</title><rect x="18.1096%" y="565" width="0.0113%" height="15" fill="rgb(237,197,12)" fg:x="3192" fg:w="2"/><text x="18.3596%" y="575.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (9 samples, 0.05%)</title><rect x="18.1266%" y="549" width="0.0511%" height="15" fill="rgb(205,84,17)" fg:x="3195" fg:w="9"/><text x="18.3766%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.05%)</title><rect x="18.1266%" y="533" width="0.0511%" height="15" fill="rgb(237,18,45)" fg:x="3195" fg:w="9"/><text x="18.3766%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.05%)</title><rect x="18.1266%" y="517" width="0.0511%" height="15" fill="rgb(221,87,14)" fg:x="3195" fg:w="9"/><text x="18.3766%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="18.1266%" y="501" width="0.0511%" height="15" fill="rgb(238,186,15)" fg:x="3195" fg:w="9"/><text x="18.3766%" y="511.50"></text></g><g><title>syscall (9 samples, 0.05%)</title><rect x="18.1266%" y="485" width="0.0511%" height="15" fill="rgb(208,115,11)" fg:x="3195" fg:w="9"/><text x="18.3766%" y="495.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="18.1266%" y="469" width="0.0511%" height="15" fill="rgb(254,175,0)" fg:x="3195" fg:w="9"/><text x="18.3766%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="18.1493%" y="453" width="0.0284%" height="15" fill="rgb(227,24,42)" fg:x="3199" fg:w="5"/><text x="18.3993%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="18.1493%" y="437" width="0.0284%" height="15" fill="rgb(223,211,37)" fg:x="3199" fg:w="5"/><text x="18.3993%" y="447.50"></text></g><g><title>ash::device::Device::create_buffer (4 samples, 0.02%)</title><rect x="18.1777%" y="549" width="0.0227%" height="15" fill="rgb(235,49,27)" fg:x="3204" fg:w="4"/><text x="18.4277%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="18.1777%" y="533" width="0.0227%" height="15" fill="rgb(254,97,51)" fg:x="3204" fg:w="4"/><text x="18.4277%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="18.1834%" y="517" width="0.0170%" height="15" fill="rgb(249,51,40)" fg:x="3205" fg:w="3"/><text x="18.4334%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="18.1834%" y="501" width="0.0170%" height="15" fill="rgb(210,128,45)" fg:x="3205" fg:w="3"/><text x="18.4334%" y="511.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="18.1834%" y="485" width="0.0170%" height="15" fill="rgb(224,137,50)" fg:x="3205" fg:w="3"/><text x="18.4334%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (16 samples, 0.09%)</title><rect x="18.1266%" y="565" width="0.0908%" height="15" fill="rgb(242,15,9)" fg:x="3195" fg:w="16"/><text x="18.3766%" y="575.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (3 samples, 0.02%)</title><rect x="18.2004%" y="549" width="0.0170%" height="15" fill="rgb(233,187,41)" fg:x="3208" fg:w="3"/><text x="18.4504%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (3 samples, 0.02%)</title><rect x="18.2004%" y="533" width="0.0170%" height="15" fill="rgb(227,2,29)" fg:x="3208" fg:w="3"/><text x="18.4504%" y="543.50"></text></g><g><title>wgpu::Queue::write_buffer (28 samples, 0.16%)</title><rect x="18.0699%" y="645" width="0.1589%" height="15" fill="rgb(222,70,3)" fg:x="3185" fg:w="28"/><text x="18.3199%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (28 samples, 0.16%)</title><rect x="18.0699%" y="629" width="0.1589%" height="15" fill="rgb(213,11,42)" fg:x="3185" fg:w="28"/><text x="18.3199%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (28 samples, 0.16%)</title><rect x="18.0699%" y="613" width="0.1589%" height="15" fill="rgb(225,150,9)" fg:x="3185" fg:w="28"/><text x="18.3199%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (28 samples, 0.16%)</title><rect x="18.0699%" y="597" width="0.1589%" height="15" fill="rgb(230,162,45)" fg:x="3185" fg:w="28"/><text x="18.3199%" y="607.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (19 samples, 0.11%)</title><rect x="18.1210%" y="581" width="0.1078%" height="15" fill="rgb(222,14,52)" fg:x="3194" fg:w="19"/><text x="18.3710%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::map_buffer (2 samples, 0.01%)</title><rect x="18.2174%" y="565" width="0.0113%" height="15" fill="rgb(254,198,14)" fg:x="3211" fg:w="2"/><text x="18.4674%" y="575.50"></text></g><g><title>wgpu::RenderPass::draw_indexed (3 samples, 0.02%)</title><rect x="18.2288%" y="645" width="0.0170%" height="15" fill="rgb(220,217,30)" fg:x="3213" fg:w="3"/><text x="18.4788%" y="655.50"></text></g><g><title>wgpu_render_pass_draw_indexed (2 samples, 0.01%)</title><rect x="18.2344%" y="629" width="0.0113%" height="15" fill="rgb(215,146,41)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="18.2344%" y="613" width="0.0113%" height="15" fill="rgb(217,27,36)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.01%)</title><rect x="18.2344%" y="597" width="0.0113%" height="15" fill="rgb(219,218,39)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="18.2344%" y="581" width="0.0113%" height="15" fill="rgb(219,4,42)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="18.2344%" y="565" width="0.0113%" height="15" fill="rgb(249,119,36)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.01%)</title><rect x="18.2344%" y="549" width="0.0113%" height="15" fill="rgb(209,23,33)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.01%)</title><rect x="18.2344%" y="533" width="0.0113%" height="15" fill="rgb(211,10,0)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="543.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.01%)</title><rect x="18.2344%" y="517" width="0.0113%" height="15" fill="rgb(208,99,37)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="527.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.01%)</title><rect x="18.2344%" y="501" width="0.0113%" height="15" fill="rgb(213,132,31)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="511.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="18.2344%" y="485" width="0.0113%" height="15" fill="rgb(243,129,40)" fg:x="3214" fg:w="2"/><text x="18.4844%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (2 samples, 0.01%)</title><rect x="18.2458%" y="629" width="0.0113%" height="15" fill="rgb(210,66,33)" fg:x="3216" fg:w="2"/><text x="18.4958%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="18.2571%" y="613" width="0.0170%" height="15" fill="rgb(209,189,4)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="18.2571%" y="597" width="0.0170%" height="15" fill="rgb(214,107,37)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="18.2571%" y="581" width="0.0170%" height="15" fill="rgb(245,88,54)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="18.2571%" y="565" width="0.0170%" height="15" fill="rgb(205,146,20)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.02%)</title><rect x="18.2571%" y="549" width="0.0170%" height="15" fill="rgb(220,161,25)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.02%)</title><rect x="18.2571%" y="533" width="0.0170%" height="15" fill="rgb(215,152,15)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="543.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.02%)</title><rect x="18.2571%" y="517" width="0.0170%" height="15" fill="rgb(233,192,44)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="527.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="18.2571%" y="501" width="0.0170%" height="15" fill="rgb(240,170,46)" fg:x="3218" fg:w="3"/><text x="18.5071%" y="511.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="18.2628%" y="485" width="0.0113%" height="15" fill="rgb(207,104,33)" fg:x="3219" fg:w="2"/><text x="18.5128%" y="495.50"></text></g><g><title>wgpu::RenderPass::set_bind_group (6 samples, 0.03%)</title><rect x="18.2458%" y="645" width="0.0340%" height="15" fill="rgb(219,21,39)" fg:x="3216" fg:w="6"/><text x="18.4958%" y="655.50"></text></g><g><title>wgpu_render_pass_set_bind_group (4 samples, 0.02%)</title><rect x="18.2571%" y="629" width="0.0227%" height="15" fill="rgb(214,133,29)" fg:x="3218" fg:w="4"/><text x="18.5071%" y="639.50"></text></g><g><title>wgpu::RenderPass::set_index_buffer (2 samples, 0.01%)</title><rect x="18.2798%" y="645" width="0.0113%" height="15" fill="rgb(226,93,6)" fg:x="3222" fg:w="2"/><text x="18.5298%" y="655.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_index_buffer (2 samples, 0.01%)</title><rect x="18.2798%" y="629" width="0.0113%" height="15" fill="rgb(252,222,34)" fg:x="3222" fg:w="2"/><text x="18.5298%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::render_pass_set_index_buffer (2 samples, 0.01%)</title><rect x="18.2798%" y="613" width="0.0113%" height="15" fill="rgb(252,92,48)" fg:x="3222" fg:w="2"/><text x="18.5298%" y="623.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (172 samples, 0.98%)</title><rect x="17.3267%" y="661" width="0.9758%" height="15" fill="rgb(245,223,24)" fg:x="3054" fg:w="172"/><text x="17.5767%" y="671.50"></text></g><g><title>wgpu::RenderPass::set_vertex_buffer (2 samples, 0.01%)</title><rect x="18.2912%" y="645" width="0.0113%" height="15" fill="rgb(205,176,3)" fg:x="3224" fg:w="2"/><text x="18.5412%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::ShaderModule&gt;&gt; (2 samples, 0.01%)</title><rect x="18.3025%" y="629" width="0.0113%" height="15" fill="rgb(235,151,15)" fg:x="3226" fg:w="2"/><text x="18.5525%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::ShaderModule&gt;&gt; (2 samples, 0.01%)</title><rect x="18.3025%" y="613" width="0.0113%" height="15" fill="rgb(237,209,11)" fg:x="3226" fg:w="2"/><text x="18.5525%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="18.3025%" y="597" width="0.0113%" height="15" fill="rgb(243,227,24)" fg:x="3226" fg:w="2"/><text x="18.5525%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="18.3025%" y="581" width="0.0113%" height="15" fill="rgb(239,193,16)" fg:x="3226" fg:w="2"/><text x="18.5525%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="18.3025%" y="565" width="0.0113%" height="15" fill="rgb(231,27,9)" fg:x="3226" fg:w="2"/><text x="18.5525%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="18.4387%" y="485" width="0.0227%" height="15" fill="rgb(219,169,10)" fg:x="3250" fg:w="4"/><text x="18.6887%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (4 samples, 0.02%)</title><rect x="18.4387%" y="469" width="0.0227%" height="15" fill="rgb(244,229,43)" fg:x="3250" fg:w="4"/><text x="18.6887%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.02%)</title><rect x="18.4387%" y="453" width="0.0227%" height="15" fill="rgb(254,38,20)" fg:x="3250" fg:w="4"/><text x="18.6887%" y="463.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl::{{closure}} (4 samples, 0.02%)</title><rect x="18.4387%" y="437" width="0.0227%" height="15" fill="rgb(250,47,30)" fg:x="3250" fg:w="4"/><text x="18.6887%" y="447.50"></text></g><g><title>wgpu_core::init_tracker::buffer::&lt;impl wgpu_core::init_tracker::InitTracker&lt;u64&gt;&gt;::check_action (2 samples, 0.01%)</title><rect x="18.4500%" y="421" width="0.0113%" height="15" fill="rgb(224,124,36)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="431.50"></text></g><g><title>wgpu_core::init_tracker::buffer::&lt;impl wgpu_core::init_tracker::InitTracker&lt;u64&gt;&gt;::create_action (2 samples, 0.01%)</title><rect x="18.4500%" y="405" width="0.0113%" height="15" fill="rgb(246,68,51)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="415.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::check (2 samples, 0.01%)</title><rect x="18.4500%" y="389" width="0.0113%" height="15" fill="rgb(253,43,49)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::partition_point (2 samples, 0.01%)</title><rect x="18.4500%" y="373" width="0.0113%" height="15" fill="rgb(219,54,36)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (2 samples, 0.01%)</title><rect x="18.4500%" y="357" width="0.0113%" height="15" fill="rgb(227,133,34)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::partition_point::{{closure}} (2 samples, 0.01%)</title><rect x="18.4500%" y="341" width="0.0113%" height="15" fill="rgb(247,227,15)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="351.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::check::{{closure}} (2 samples, 0.01%)</title><rect x="18.4500%" y="325" width="0.0113%" height="15" fill="rgb(229,96,14)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::le (2 samples, 0.01%)</title><rect x="18.4500%" y="309" width="0.0113%" height="15" fill="rgb(220,79,17)" fg:x="3252" fg:w="2"/><text x="18.7000%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.03%)</title><rect x="18.4387%" y="533" width="0.0284%" height="15" fill="rgb(205,131,53)" fg:x="3250" fg:w="5"/><text x="18.6887%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.03%)</title><rect x="18.4387%" y="517" width="0.0284%" height="15" fill="rgb(209,50,29)" fg:x="3250" fg:w="5"/><text x="18.6887%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.03%)</title><rect x="18.4387%" y="501" width="0.0284%" height="15" fill="rgb(245,86,46)" fg:x="3250" fg:w="5"/><text x="18.6887%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="18.4670%" y="533" width="0.0113%" height="15" fill="rgb(235,66,46)" fg:x="3255" fg:w="2"/><text x="18.7170%" y="543.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (3 samples, 0.02%)</title><rect x="18.4784%" y="533" width="0.0170%" height="15" fill="rgb(232,148,31)" fg:x="3257" fg:w="3"/><text x="18.7284%" y="543.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (3 samples, 0.02%)</title><rect x="18.4784%" y="517" width="0.0170%" height="15" fill="rgb(217,149,8)" fg:x="3257" fg:w="3"/><text x="18.7284%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.13%)</title><rect x="18.4954%" y="533" width="0.1305%" height="15" fill="rgb(209,183,11)" fg:x="3260" fg:w="23"/><text x="18.7454%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="18.5351%" y="517" width="0.0908%" height="15" fill="rgb(208,55,20)" fg:x="3267" fg:w="16"/><text x="18.7851%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="18.5748%" y="501" width="0.0511%" height="15" fill="rgb(218,39,14)" fg:x="3274" fg:w="9"/><text x="18.8248%" y="511.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="18.6543%" y="485" width="0.0113%" height="15" fill="rgb(216,169,33)" fg:x="3288" fg:w="2"/><text x="18.9043%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::State&gt; (3 samples, 0.02%)</title><rect x="18.6543%" y="533" width="0.0170%" height="15" fill="rgb(233,80,24)" fg:x="3288" fg:w="3"/><text x="18.9043%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::Binder&gt; (3 samples, 0.02%)</title><rect x="18.6543%" y="517" width="0.0170%" height="15" fill="rgb(213,179,31)" fg:x="3288" fg:w="3"/><text x="18.9043%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::command::bind::EntryPayload: 8]&gt; (3 samples, 0.02%)</title><rect x="18.6543%" y="501" width="0.0170%" height="15" fill="rgb(209,19,5)" fg:x="3288" fg:w="3"/><text x="18.9043%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6713%" y="533" width="0.0113%" height="15" fill="rgb(219,18,35)" fg:x="3291" fg:w="2"/><text x="18.9213%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::buffer::BufferUsageScope&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6713%" y="517" width="0.0113%" height="15" fill="rgb(209,169,16)" fg:x="3291" fg:w="2"/><text x="18.9213%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6713%" y="501" width="0.0113%" height="15" fill="rgb(245,90,51)" fg:x="3291" fg:w="2"/><text x="18.9213%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6713%" y="485" width="0.0113%" height="15" fill="rgb(220,99,45)" fg:x="3291" fg:w="2"/><text x="18.9213%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6826%" y="533" width="0.0113%" height="15" fill="rgb(249,89,25)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&lt;usize&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6826%" y="517" width="0.0113%" height="15" fill="rgb(239,193,0)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6826%" y="501" width="0.0113%" height="15" fill="rgb(231,126,1)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2 samples, 0.01%)</title><rect x="18.6826%" y="485" width="0.0113%" height="15" fill="rgb(243,166,3)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="18.6826%" y="469" width="0.0113%" height="15" fill="rgb(223,22,34)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="18.6826%" y="453" width="0.0113%" height="15" fill="rgb(251,52,51)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="18.6826%" y="437" width="0.0113%" height="15" fill="rgb(221,165,28)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="447.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="18.6826%" y="421" width="0.0113%" height="15" fill="rgb(218,121,47)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="431.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="18.6826%" y="405" width="0.0113%" height="15" fill="rgb(209,120,9)" fg:x="3293" fg:w="2"/><text x="18.9326%" y="415.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::get_encoder_mut (2 samples, 0.01%)</title><rect x="18.6940%" y="533" width="0.0113%" height="15" fill="rgb(236,68,12)" fg:x="3295" fg:w="2"/><text x="18.9440%" y="543.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (2 samples, 0.01%)</title><rect x="18.6940%" y="517" width="0.0113%" height="15" fill="rgb(225,194,26)" fg:x="3295" fg:w="2"/><text x="18.9440%" y="527.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (2 samples, 0.01%)</title><rect x="18.7053%" y="517" width="0.0113%" height="15" fill="rgb(231,84,39)" fg:x="3297" fg:w="2"/><text x="18.9553%" y="527.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (4 samples, 0.02%)</title><rect x="18.7167%" y="517" width="0.0227%" height="15" fill="rgb(210,11,45)" fg:x="3299" fg:w="4"/><text x="18.9667%" y="527.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::owned_indices (3 samples, 0.02%)</title><rect x="18.7223%" y="501" width="0.0170%" height="15" fill="rgb(224,54,52)" fg:x="3300" fg:w="3"/><text x="18.9723%" y="511.50"></text></g><g><title>wgpu_core::track::metadata::iterate_bitvec_indices (3 samples, 0.02%)</title><rect x="18.7223%" y="485" width="0.0170%" height="15" fill="rgb(238,102,14)" fg:x="3300" fg:w="3"/><text x="18.9723%" y="495.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (12 samples, 0.07%)</title><rect x="18.7053%" y="533" width="0.0681%" height="15" fill="rgb(243,160,52)" fg:x="3297" fg:w="12"/><text x="18.9553%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (6 samples, 0.03%)</title><rect x="18.7394%" y="517" width="0.0340%" height="15" fill="rgb(216,114,19)" fg:x="3303" fg:w="6"/><text x="18.9894%" y="527.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (4 samples, 0.02%)</title><rect x="18.7507%" y="501" width="0.0227%" height="15" fill="rgb(244,166,37)" fg:x="3305" fg:w="4"/><text x="19.0007%" y="511.50"></text></g><g><title>wgpu_core::track::texture::insert (3 samples, 0.02%)</title><rect x="18.7564%" y="485" width="0.0170%" height="15" fill="rgb(246,29,44)" fg:x="3306" fg:w="3"/><text x="19.0064%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="18.7734%" y="517" width="0.0284%" height="15" fill="rgb(215,56,53)" fg:x="3309" fg:w="5"/><text x="19.0234%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.03%)</title><rect x="18.7734%" y="501" width="0.0284%" height="15" fill="rgb(217,60,2)" fg:x="3309" fg:w="5"/><text x="19.0234%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="18.7734%" y="485" width="0.0284%" height="15" fill="rgb(207,26,24)" fg:x="3309" fg:w="5"/><text x="19.0234%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="18.7734%" y="469" width="0.0284%" height="15" fill="rgb(252,210,15)" fg:x="3309" fg:w="5"/><text x="19.0234%" y="479.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="18.7791%" y="453" width="0.0227%" height="15" fill="rgb(253,209,26)" fg:x="3310" fg:w="4"/><text x="19.0291%" y="463.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="18.7791%" y="437" width="0.0227%" height="15" fill="rgb(238,170,14)" fg:x="3310" fg:w="4"/><text x="19.0291%" y="447.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="18.7904%" y="421" width="0.0113%" height="15" fill="rgb(216,178,15)" fg:x="3312" fg:w="2"/><text x="19.0404%" y="431.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (34 samples, 0.19%)</title><rect x="18.7734%" y="533" width="0.1929%" height="15" fill="rgb(250,197,2)" fg:x="3309" fg:w="34"/><text x="19.0234%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (29 samples, 0.16%)</title><rect x="18.8018%" y="517" width="0.1645%" height="15" fill="rgb(212,70,42)" fg:x="3314" fg:w="29"/><text x="19.0518%" y="527.50"></text></g><g><title>ash::device::Device::end_command_buffer (29 samples, 0.16%)</title><rect x="18.8018%" y="501" width="0.1645%" height="15" fill="rgb(227,213,9)" fg:x="3314" fg:w="29"/><text x="19.0518%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.16%)</title><rect x="18.8018%" y="485" width="0.1645%" height="15" fill="rgb(245,99,25)" fg:x="3314" fg:w="29"/><text x="19.0518%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.10%)</title><rect x="18.8642%" y="469" width="0.1021%" height="15" fill="rgb(250,82,29)" fg:x="3325" fg:w="18"/><text x="19.1142%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="18.9379%" y="453" width="0.0284%" height="15" fill="rgb(241,226,54)" fg:x="3338" fg:w="5"/><text x="19.1879%" y="463.50"></text></g><g><title>ash::device::Device::begin_command_buffer (15 samples, 0.09%)</title><rect x="18.9663%" y="501" width="0.0851%" height="15" fill="rgb(221,99,41)" fg:x="3343" fg:w="15"/><text x="19.2163%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="18.9663%" y="485" width="0.0851%" height="15" fill="rgb(213,90,21)" fg:x="3343" fg:w="15"/><text x="19.2163%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="19.0003%" y="469" width="0.0511%" height="15" fill="rgb(205,208,24)" fg:x="3349" fg:w="9"/><text x="19.2503%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="19.0060%" y="453" width="0.0454%" height="15" fill="rgb(246,31,12)" fg:x="3350" fg:w="8"/><text x="19.2560%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="19.0117%" y="437" width="0.0397%" height="15" fill="rgb(213,154,6)" fg:x="3351" fg:w="7"/><text x="19.2617%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="19.0344%" y="421" width="0.0170%" height="15" fill="rgb(222,163,29)" fg:x="3355" fg:w="3"/><text x="19.2844%" y="431.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (16 samples, 0.09%)</title><rect x="18.9663%" y="533" width="0.0908%" height="15" fill="rgb(227,201,8)" fg:x="3343" fg:w="16"/><text x="19.2163%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (16 samples, 0.09%)</title><rect x="18.9663%" y="517" width="0.0908%" height="15" fill="rgb(233,9,32)" fg:x="3343" fg:w="16"/><text x="19.2163%" y="527.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (37 samples, 0.21%)</title><rect x="19.0571%" y="533" width="0.2099%" height="15" fill="rgb(217,54,24)" fg:x="3359" fg:w="37"/><text x="19.3071%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (37 samples, 0.21%)</title><rect x="19.0571%" y="517" width="0.2099%" height="15" fill="rgb(235,192,0)" fg:x="3359" fg:w="37"/><text x="19.3071%" y="527.50"></text></g><g><title>ash::device::Device::begin_command_buffer (36 samples, 0.20%)</title><rect x="19.0627%" y="501" width="0.2042%" height="15" fill="rgb(235,45,9)" fg:x="3360" fg:w="36"/><text x="19.3127%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.20%)</title><rect x="19.0627%" y="485" width="0.2042%" height="15" fill="rgb(246,42,40)" fg:x="3360" fg:w="36"/><text x="19.3127%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (30 samples, 0.17%)</title><rect x="19.0968%" y="469" width="0.1702%" height="15" fill="rgb(248,111,24)" fg:x="3366" fg:w="30"/><text x="19.3468%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.11%)</title><rect x="19.1535%" y="453" width="0.1135%" height="15" fill="rgb(249,65,22)" fg:x="3376" fg:w="20"/><text x="19.4035%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="19.2103%" y="437" width="0.0567%" height="15" fill="rgb(238,111,51)" fg:x="3386" fg:w="10"/><text x="19.4603%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="19.2103%" y="421" width="0.0567%" height="15" fill="rgb(250,118,22)" fg:x="3386" fg:w="10"/><text x="19.4603%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="19.2556%" y="405" width="0.0113%" height="15" fill="rgb(234,84,26)" fg:x="3394" fg:w="2"/><text x="19.5056%" y="415.50"></text></g><g><title>wgpu_core::command::bind::Binder::assign_group (5 samples, 0.03%)</title><rect x="19.2670%" y="533" width="0.0284%" height="15" fill="rgb(243,172,12)" fg:x="3396" fg:w="5"/><text x="19.5170%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.01%)</title><rect x="19.2840%" y="517" width="0.0113%" height="15" fill="rgb(236,150,49)" fg:x="3399" fg:w="2"/><text x="19.5340%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="19.2840%" y="501" width="0.0113%" height="15" fill="rgb(225,197,26)" fg:x="3399" fg:w="2"/><text x="19.5340%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.01%)</title><rect x="19.2840%" y="485" width="0.0113%" height="15" fill="rgb(214,17,42)" fg:x="3399" fg:w="2"/><text x="19.5340%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.03%)</title><rect x="19.3010%" y="469" width="0.0340%" height="15" fill="rgb(224,165,40)" fg:x="3402" fg:w="6"/><text x="19.5510%" y="479.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="19.3010%" y="453" width="0.0340%" height="15" fill="rgb(246,100,4)" fg:x="3402" fg:w="6"/><text x="19.5510%" y="463.50"></text></g><g><title>tcache_get (6 samples, 0.03%)</title><rect x="19.3010%" y="437" width="0.0340%" height="15" fill="rgb(222,103,0)" fg:x="3402" fg:w="6"/><text x="19.5510%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.04%)</title><rect x="19.3010%" y="517" width="0.0397%" height="15" fill="rgb(227,189,26)" fg:x="3402" fg:w="7"/><text x="19.5510%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.04%)</title><rect x="19.3010%" y="501" width="0.0397%" height="15" fill="rgb(214,202,17)" fg:x="3402" fg:w="7"/><text x="19.5510%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="19.3010%" y="485" width="0.0397%" height="15" fill="rgb(229,111,3)" fg:x="3402" fg:w="7"/><text x="19.5510%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.01%)</title><rect x="19.3407%" y="501" width="0.0113%" height="15" fill="rgb(229,172,15)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="19.3407%" y="485" width="0.0113%" height="15" fill="rgb(230,224,35)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (2 samples, 0.01%)</title><rect x="19.3407%" y="469" width="0.0113%" height="15" fill="rgb(251,141,6)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="479.50"></text></g><g><title>wgpu_core::command::bind::compat::Manager&lt;T&gt;::update_expectations::{{closure}} (2 samples, 0.01%)</title><rect x="19.3407%" y="453" width="0.0113%" height="15" fill="rgb(225,208,6)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="463.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.01%)</title><rect x="19.3407%" y="437" width="0.0113%" height="15" fill="rgb(246,181,16)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="19.3407%" y="421" width="0.0113%" height="15" fill="rgb(227,129,36)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="431.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="19.3407%" y="405" width="0.0113%" height="15" fill="rgb(248,117,24)" fg:x="3409" fg:w="2"/><text x="19.5907%" y="415.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (11 samples, 0.06%)</title><rect x="19.2954%" y="533" width="0.0624%" height="15" fill="rgb(214,185,35)" fg:x="3401" fg:w="11"/><text x="19.5454%" y="543.50"></text></g><g><title>wgpu_core::command::bind::compat::Manager&lt;T&gt;::update_expectations (3 samples, 0.02%)</title><rect x="19.3407%" y="517" width="0.0170%" height="15" fill="rgb(236,150,34)" fg:x="3409" fg:w="3"/><text x="19.5907%" y="527.50"></text></g><g><title>wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (3 samples, 0.02%)</title><rect x="19.3578%" y="533" width="0.0170%" height="15" fill="rgb(243,228,27)" fg:x="3412" fg:w="3"/><text x="19.6078%" y="543.50"></text></g><g><title>wgpu_core::init_tracker::texture::TextureInitTracker::check_action (3 samples, 0.02%)</title><rect x="19.3578%" y="517" width="0.0170%" height="15" fill="rgb(245,77,44)" fg:x="3412" fg:w="3"/><text x="19.6078%" y="527.50"></text></g><g><title>wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::check (2 samples, 0.01%)</title><rect x="19.3634%" y="501" width="0.0113%" height="15" fill="rgb(235,214,42)" fg:x="3413" fg:w="2"/><text x="19.6134%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="19.3634%" y="485" width="0.0113%" height="15" fill="rgb(221,74,3)" fg:x="3413" fg:w="2"/><text x="19.6134%" y="495.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (2 samples, 0.01%)</title><rect x="19.3634%" y="469" width="0.0113%" height="15" fill="rgb(206,121,29)" fg:x="3413" fg:w="2"/><text x="19.6134%" y="479.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (2 samples, 0.01%)</title><rect x="19.3634%" y="453" width="0.0113%" height="15" fill="rgb(249,131,53)" fg:x="3413" fg:w="2"/><text x="19.6134%" y="463.50"></text></g><g><title>wgpu_core::command::memory_init::fixup_discarded_surfaces (2 samples, 0.01%)</title><rect x="19.3748%" y="533" width="0.0113%" height="15" fill="rgb(236,170,29)" fg:x="3415" fg:w="2"/><text x="19.6248%" y="543.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;A&gt;::reset_queries (3 samples, 0.02%)</title><rect x="19.3861%" y="533" width="0.0170%" height="15" fill="rgb(247,96,15)" fg:x="3417" fg:w="3"/><text x="19.6361%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;u32,(alloc::vec::Vec&lt;bool&gt;,u32)&gt;&gt; (3 samples, 0.02%)</title><rect x="19.3861%" y="517" width="0.0170%" height="15" fill="rgb(211,210,7)" fg:x="3417" fg:w="3"/><text x="19.6361%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;u32,(alloc::vec::Vec&lt;bool&gt;,u32)&gt;&gt; (3 samples, 0.02%)</title><rect x="19.3861%" y="501" width="0.0170%" height="15" fill="rgb(240,88,50)" fg:x="3417" fg:w="3"/><text x="19.6361%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(u32,(alloc::vec::Vec&lt;bool&gt;,u32))&gt;&gt; (3 samples, 0.02%)</title><rect x="19.3861%" y="485" width="0.0170%" height="15" fill="rgb(209,229,26)" fg:x="3417" fg:w="3"/><text x="19.6361%" y="495.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;A&gt;::reset_queries (3 samples, 0.02%)</title><rect x="19.3861%" y="469" width="0.0170%" height="15" fill="rgb(210,68,23)" fg:x="3417" fg:w="3"/><text x="19.6361%" y="479.50"></text></g><g><title>wgpu_core::command::render::OptionalState::require (2 samples, 0.01%)</title><rect x="19.4088%" y="533" width="0.0113%" height="15" fill="rgb(229,180,13)" fg:x="3421" fg:w="2"/><text x="19.6588%" y="543.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (10 samples, 0.06%)</title><rect x="19.4202%" y="533" width="0.0567%" height="15" fill="rgb(236,53,44)" fg:x="3423" fg:w="10"/><text x="19.6702%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (10 samples, 0.06%)</title><rect x="19.4202%" y="517" width="0.0567%" height="15" fill="rgb(244,214,29)" fg:x="3423" fg:w="10"/><text x="19.6702%" y="527.50"></text></g><g><title>ash::device::Device::cmd_end_render_pass (10 samples, 0.06%)</title><rect x="19.4202%" y="501" width="0.0567%" height="15" fill="rgb(220,75,29)" fg:x="3423" fg:w="10"/><text x="19.6702%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="19.4202%" y="485" width="0.0567%" height="15" fill="rgb(214,183,37)" fg:x="3423" fg:w="10"/><text x="19.6702%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="19.4202%" y="469" width="0.0567%" height="15" fill="rgb(239,117,29)" fg:x="3423" fg:w="10"/><text x="19.6702%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="19.4315%" y="453" width="0.0454%" height="15" fill="rgb(237,171,35)" fg:x="3425" fg:w="8"/><text x="19.6815%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="19.4542%" y="437" width="0.0227%" height="15" fill="rgb(229,178,53)" fg:x="3429" fg:w="4"/><text x="19.7042%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="19.4542%" y="421" width="0.0227%" height="15" fill="rgb(210,102,19)" fg:x="3429" fg:w="4"/><text x="19.7042%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="19.4996%" y="517" width="0.0170%" height="15" fill="rgb(235,127,22)" fg:x="3437" fg:w="3"/><text x="19.7496%" y="527.50"></text></g><g><title>&lt;wgpu_core::init_tracker::texture::TextureInitRange as core::convert::From&lt;wgpu_core::track::texture::TextureSelector&gt;&gt;::from (4 samples, 0.02%)</title><rect x="19.5336%" y="501" width="0.0227%" height="15" fill="rgb(244,31,31)" fg:x="3443" fg:w="4"/><text x="19.7836%" y="511.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::add_pass_texture_init_actions (5 samples, 0.03%)</title><rect x="19.5336%" y="517" width="0.0284%" height="15" fill="rgb(231,43,21)" fg:x="3443" fg:w="5"/><text x="19.7836%" y="527.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="19.5847%" y="501" width="0.0113%" height="15" fill="rgb(217,131,35)" fg:x="3452" fg:w="2"/><text x="19.8347%" y="511.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (4 samples, 0.02%)</title><rect x="19.5961%" y="485" width="0.0227%" height="15" fill="rgb(221,149,4)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="19.5961%" y="469" width="0.0227%" height="15" fill="rgb(232,170,28)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="19.5961%" y="453" width="0.0227%" height="15" fill="rgb(238,56,10)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="19.5961%" y="437" width="0.0227%" height="15" fill="rgb(235,196,14)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="19.5961%" y="421" width="0.0227%" height="15" fill="rgb(216,45,48)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="19.5961%" y="405" width="0.0227%" height="15" fill="rgb(238,213,17)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="19.5961%" y="389" width="0.0227%" height="15" fill="rgb(212,13,2)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="19.5961%" y="373" width="0.0227%" height="15" fill="rgb(240,114,20)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="19.5961%" y="357" width="0.0227%" height="15" fill="rgb(228,41,40)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="367.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="19.5961%" y="341" width="0.0227%" height="15" fill="rgb(244,132,35)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="351.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="19.5961%" y="325" width="0.0227%" height="15" fill="rgb(253,189,4)" fg:x="3454" fg:w="4"/><text x="19.8461%" y="335.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="19.6074%" y="309" width="0.0113%" height="15" fill="rgb(224,37,19)" fg:x="3456" fg:w="2"/><text x="19.8574%" y="319.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (10 samples, 0.06%)</title><rect x="19.5790%" y="517" width="0.0567%" height="15" fill="rgb(235,223,18)" fg:x="3451" fg:w="10"/><text x="19.8290%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (7 samples, 0.04%)</title><rect x="19.5961%" y="501" width="0.0397%" height="15" fill="rgb(235,163,25)" fg:x="3454" fg:w="7"/><text x="19.8461%" y="511.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (3 samples, 0.02%)</title><rect x="19.6187%" y="485" width="0.0170%" height="15" fill="rgb(217,145,28)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (3 samples, 0.02%)</title><rect x="19.6187%" y="469" width="0.0170%" height="15" fill="rgb(223,223,32)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.02%)</title><rect x="19.6187%" y="453" width="0.0170%" height="15" fill="rgb(227,189,39)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="19.6187%" y="437" width="0.0170%" height="15" fill="rgb(248,10,22)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="19.6187%" y="421" width="0.0170%" height="15" fill="rgb(248,46,39)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="19.6187%" y="405" width="0.0170%" height="15" fill="rgb(248,113,48)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="19.6187%" y="389" width="0.0170%" height="15" fill="rgb(245,16,25)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="19.6187%" y="373" width="0.0170%" height="15" fill="rgb(249,152,16)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="383.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="19.6187%" y="357" width="0.0170%" height="15" fill="rgb(250,16,1)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="367.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="19.6187%" y="341" width="0.0170%" height="15" fill="rgb(249,138,3)" fg:x="3458" fg:w="3"/><text x="19.8687%" y="351.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="19.6358%" y="501" width="0.0113%" height="15" fill="rgb(227,71,41)" fg:x="3461" fg:w="2"/><text x="19.8858%" y="511.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="19.6471%" y="309" width="0.0113%" height="15" fill="rgb(209,184,23)" fg:x="3463" fg:w="2"/><text x="19.8971%" y="319.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (3 samples, 0.02%)</title><rect x="19.6471%" y="469" width="0.0170%" height="15" fill="rgb(223,215,31)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.02%)</title><rect x="19.6471%" y="453" width="0.0170%" height="15" fill="rgb(210,146,28)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="19.6471%" y="437" width="0.0170%" height="15" fill="rgb(209,183,41)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (3 samples, 0.02%)</title><rect x="19.6471%" y="421" width="0.0170%" height="15" fill="rgb(209,224,45)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="19.6471%" y="405" width="0.0170%" height="15" fill="rgb(224,209,51)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="19.6471%" y="389" width="0.0170%" height="15" fill="rgb(223,17,39)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="19.6471%" y="373" width="0.0170%" height="15" fill="rgb(234,204,37)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="19.6471%" y="357" width="0.0170%" height="15" fill="rgb(236,120,5)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="19.6471%" y="341" width="0.0170%" height="15" fill="rgb(248,97,27)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="351.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="19.6471%" y="325" width="0.0170%" height="15" fill="rgb(240,66,17)" fg:x="3463" fg:w="3"/><text x="19.8971%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="19.6641%" y="421" width="0.0113%" height="15" fill="rgb(210,79,3)" fg:x="3466" fg:w="2"/><text x="19.9141%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="19.6641%" y="405" width="0.0113%" height="15" fill="rgb(214,176,27)" fg:x="3466" fg:w="2"/><text x="19.9141%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="19.6641%" y="389" width="0.0113%" height="15" fill="rgb(235,185,3)" fg:x="3466" fg:w="2"/><text x="19.9141%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="19.6641%" y="373" width="0.0113%" height="15" fill="rgb(227,24,12)" fg:x="3466" fg:w="2"/><text x="19.9141%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="19.6641%" y="357" width="0.0113%" height="15" fill="rgb(252,169,48)" fg:x="3466" fg:w="2"/><text x="19.9141%" y="367.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (10 samples, 0.06%)</title><rect x="19.6358%" y="517" width="0.0567%" height="15" fill="rgb(212,65,1)" fg:x="3461" fg:w="10"/><text x="19.8858%" y="527.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::allow_index (8 samples, 0.05%)</title><rect x="19.6471%" y="501" width="0.0454%" height="15" fill="rgb(242,39,24)" fg:x="3463" fg:w="8"/><text x="19.8971%" y="511.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (8 samples, 0.05%)</title><rect x="19.6471%" y="485" width="0.0454%" height="15" fill="rgb(249,32,23)" fg:x="3463" fg:w="8"/><text x="19.8971%" y="495.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (5 samples, 0.03%)</title><rect x="19.6641%" y="469" width="0.0284%" height="15" fill="rgb(251,195,23)" fg:x="3466" fg:w="5"/><text x="19.9141%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (5 samples, 0.03%)</title><rect x="19.6641%" y="453" width="0.0284%" height="15" fill="rgb(236,174,8)" fg:x="3466" fg:w="5"/><text x="19.9141%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (5 samples, 0.03%)</title><rect x="19.6641%" y="437" width="0.0284%" height="15" fill="rgb(220,197,8)" fg:x="3466" fg:w="5"/><text x="19.9141%" y="447.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="19.6755%" y="421" width="0.0170%" height="15" fill="rgb(240,108,37)" fg:x="3468" fg:w="3"/><text x="19.9255%" y="431.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.02%)</title><rect x="19.6755%" y="405" width="0.0170%" height="15" fill="rgb(232,176,24)" fg:x="3468" fg:w="3"/><text x="19.9255%" y="415.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (39 samples, 0.22%)</title><rect x="19.4769%" y="533" width="0.2213%" height="15" fill="rgb(243,35,29)" fg:x="3433" fg:w="39"/><text x="19.7269%" y="543.50"></text></g><g><title>wgpu_core::command::bind::Binder::check_late_buffer_bindings (4 samples, 0.02%)</title><rect x="19.7038%" y="517" width="0.0227%" height="15" fill="rgb(210,37,18)" fg:x="3473" fg:w="4"/><text x="19.9538%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="19.7095%" y="501" width="0.0170%" height="15" fill="rgb(224,184,40)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3 samples, 0.02%)</title><rect x="19.7095%" y="485" width="0.0170%" height="15" fill="rgb(236,39,29)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="19.7095%" y="469" width="0.0170%" height="15" fill="rgb(232,48,39)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="19.7095%" y="453" width="0.0170%" height="15" fill="rgb(236,34,42)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (3 samples, 0.02%)</title><rect x="19.7095%" y="437" width="0.0170%" height="15" fill="rgb(243,106,37)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (3 samples, 0.02%)</title><rect x="19.7095%" y="421" width="0.0170%" height="15" fill="rgb(218,96,6)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (3 samples, 0.02%)</title><rect x="19.7095%" y="405" width="0.0170%" height="15" fill="rgb(235,130,12)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="415.50"></text></g><g><title>wgpu_core::command::bind::compat::Manager&lt;T&gt;::list_active::{{closure}} (3 samples, 0.02%)</title><rect x="19.7095%" y="389" width="0.0170%" height="15" fill="rgb(231,95,0)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="399.50"></text></g><g><title>wgpu_core::command::bind::compat::Entry&lt;T&gt;::is_active (3 samples, 0.02%)</title><rect x="19.7095%" y="373" width="0.0170%" height="15" fill="rgb(228,12,23)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (3 samples, 0.02%)</title><rect x="19.7095%" y="357" width="0.0170%" height="15" fill="rgb(216,12,1)" fg:x="3474" fg:w="3"/><text x="19.9595%" y="367.50"></text></g><g><title>wgpu_core::command::render::State::is_ready (6 samples, 0.03%)</title><rect x="19.6982%" y="533" width="0.0340%" height="15" fill="rgb(219,59,3)" fg:x="3472" fg:w="6"/><text x="19.9482%" y="543.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (3 samples, 0.02%)</title><rect x="19.7322%" y="533" width="0.0170%" height="15" fill="rgb(215,208,46)" fg:x="3478" fg:w="3"/><text x="19.9822%" y="543.50"></text></g><g><title>core::cmp::PartialEq::ne (3 samples, 0.02%)</title><rect x="19.7322%" y="517" width="0.0170%" height="15" fill="rgb(254,224,29)" fg:x="3478" fg:w="3"/><text x="19.9822%" y="527.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="19.7322%" y="501" width="0.0170%" height="15" fill="rgb(232,14,29)" fg:x="3478" fg:w="3"/><text x="19.9822%" y="511.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="19.7322%" y="485" width="0.0170%" height="15" fill="rgb(208,45,52)" fg:x="3478" fg:w="3"/><text x="19.9822%" y="495.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_slice (3 samples, 0.02%)</title><rect x="19.7322%" y="469" width="0.0170%" height="15" fill="rgb(234,191,28)" fg:x="3478" fg:w="3"/><text x="19.9822%" y="479.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_slice (3 samples, 0.02%)</title><rect x="19.7322%" y="453" width="0.0170%" height="15" fill="rgb(244,67,43)" fg:x="3478" fg:w="3"/><text x="19.9822%" y="463.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (2 samples, 0.01%)</title><rect x="19.7492%" y="533" width="0.0113%" height="15" fill="rgb(236,189,24)" fg:x="3481" fg:w="2"/><text x="19.9992%" y="543.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.01%)</title><rect x="19.7492%" y="517" width="0.0113%" height="15" fill="rgb(239,214,33)" fg:x="3481" fg:w="2"/><text x="19.9992%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.01%)</title><rect x="19.7492%" y="501" width="0.0113%" height="15" fill="rgb(226,176,41)" fg:x="3481" fg:w="2"/><text x="19.9992%" y="511.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.01%)</title><rect x="19.7492%" y="485" width="0.0113%" height="15" fill="rgb(248,47,8)" fg:x="3481" fg:w="2"/><text x="19.9992%" y="495.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="19.7663%" y="517" width="0.0113%" height="15" fill="rgb(218,81,44)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="19.7663%" y="501" width="0.0113%" height="15" fill="rgb(213,98,6)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="19.7663%" y="485" width="0.0113%" height="15" fill="rgb(222,85,22)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="19.7663%" y="469" width="0.0113%" height="15" fill="rgb(239,46,39)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="19.7663%" y="453" width="0.0113%" height="15" fill="rgb(237,12,29)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="19.7663%" y="437" width="0.0113%" height="15" fill="rgb(214,77,8)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="19.7663%" y="421" width="0.0113%" height="15" fill="rgb(217,168,37)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="19.7663%" y="405" width="0.0113%" height="15" fill="rgb(221,217,23)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="19.7663%" y="389" width="0.0113%" height="15" fill="rgb(243,229,36)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="399.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="19.7663%" y="373" width="0.0113%" height="15" fill="rgb(251,163,40)" fg:x="3484" fg:w="2"/><text x="20.0163%" y="383.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (3 samples, 0.02%)</title><rect x="19.7776%" y="517" width="0.0170%" height="15" fill="rgb(237,222,12)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (3 samples, 0.02%)</title><rect x="19.7776%" y="501" width="0.0170%" height="15" fill="rgb(248,132,6)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.02%)</title><rect x="19.7776%" y="485" width="0.0170%" height="15" fill="rgb(227,167,50)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="19.7776%" y="469" width="0.0170%" height="15" fill="rgb(242,84,37)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="19.7776%" y="453" width="0.0170%" height="15" fill="rgb(212,4,50)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="19.7776%" y="437" width="0.0170%" height="15" fill="rgb(230,228,32)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="19.7776%" y="421" width="0.0170%" height="15" fill="rgb(248,217,23)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="19.7776%" y="405" width="0.0170%" height="15" fill="rgb(238,197,32)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="415.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="19.7776%" y="389" width="0.0170%" height="15" fill="rgb(236,106,1)" fg:x="3486" fg:w="3"/><text x="20.0276%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="19.7833%" y="373" width="0.0113%" height="15" fill="rgb(219,228,13)" fg:x="3487" fg:w="2"/><text x="20.0333%" y="383.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="19.7833%" y="357" width="0.0113%" height="15" fill="rgb(238,30,35)" fg:x="3487" fg:w="2"/><text x="20.0333%" y="367.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (4 samples, 0.02%)</title><rect x="19.7946%" y="501" width="0.0227%" height="15" fill="rgb(236,70,23)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="19.7946%" y="485" width="0.0227%" height="15" fill="rgb(249,104,48)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="19.7946%" y="469" width="0.0227%" height="15" fill="rgb(254,117,50)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="19.7946%" y="453" width="0.0227%" height="15" fill="rgb(223,152,4)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="19.7946%" y="437" width="0.0227%" height="15" fill="rgb(245,6,2)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.02%)</title><rect x="19.7946%" y="421" width="0.0227%" height="15" fill="rgb(249,150,24)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="19.7946%" y="405" width="0.0227%" height="15" fill="rgb(228,185,42)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="19.7946%" y="389" width="0.0227%" height="15" fill="rgb(226,39,33)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="19.7946%" y="373" width="0.0227%" height="15" fill="rgb(221,166,19)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="383.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="19.7946%" y="357" width="0.0227%" height="15" fill="rgb(209,109,2)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="367.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="19.7946%" y="341" width="0.0227%" height="15" fill="rgb(252,216,26)" fg:x="3489" fg:w="4"/><text x="20.0446%" y="351.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="19.8060%" y="325" width="0.0113%" height="15" fill="rgb(227,173,36)" fg:x="3491" fg:w="2"/><text x="20.0560%" y="335.50"></text></g><g><title>_int_realloc (2 samples, 0.01%)</title><rect x="19.8230%" y="309" width="0.0113%" height="15" fill="rgb(209,90,7)" fg:x="3494" fg:w="2"/><text x="20.0730%" y="319.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="19.8230%" y="293" width="0.0113%" height="15" fill="rgb(250,194,11)" fg:x="3494" fg:w="2"/><text x="20.0730%" y="303.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="19.8230%" y="277" width="0.0113%" height="15" fill="rgb(220,72,50)" fg:x="3494" fg:w="2"/><text x="20.0730%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.02%)</title><rect x="19.8173%" y="373" width="0.0227%" height="15" fill="rgb(222,106,48)" fg:x="3493" fg:w="4"/><text x="20.0673%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.02%)</title><rect x="19.8173%" y="357" width="0.0227%" height="15" fill="rgb(216,220,45)" fg:x="3493" fg:w="4"/><text x="20.0673%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.02%)</title><rect x="19.8173%" y="341" width="0.0227%" height="15" fill="rgb(234,112,18)" fg:x="3493" fg:w="4"/><text x="20.0673%" y="351.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.02%)</title><rect x="19.8173%" y="325" width="0.0227%" height="15" fill="rgb(206,179,9)" fg:x="3493" fg:w="4"/><text x="20.0673%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (7 samples, 0.04%)</title><rect x="19.8173%" y="469" width="0.0397%" height="15" fill="rgb(215,115,40)" fg:x="3493" fg:w="7"/><text x="20.0673%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="19.8173%" y="453" width="0.0397%" height="15" fill="rgb(222,69,34)" fg:x="3493" fg:w="7"/><text x="20.0673%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="19.8173%" y="437" width="0.0397%" height="15" fill="rgb(209,161,10)" fg:x="3493" fg:w="7"/><text x="20.0673%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.04%)</title><rect x="19.8173%" y="421" width="0.0397%" height="15" fill="rgb(217,6,38)" fg:x="3493" fg:w="7"/><text x="20.0673%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="19.8173%" y="405" width="0.0397%" height="15" fill="rgb(229,229,48)" fg:x="3493" fg:w="7"/><text x="20.0673%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="19.8173%" y="389" width="0.0397%" height="15" fill="rgb(225,21,28)" fg:x="3493" fg:w="7"/><text x="20.0673%" y="399.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="19.8400%" y="373" width="0.0170%" height="15" fill="rgb(206,33,13)" fg:x="3497" fg:w="3"/><text x="20.0900%" y="383.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="19.8457%" y="357" width="0.0113%" height="15" fill="rgb(242,178,17)" fg:x="3498" fg:w="2"/><text x="20.0957%" y="367.50"></text></g><g><title>unlink_chunk (2 samples, 0.01%)</title><rect x="19.8457%" y="341" width="0.0113%" height="15" fill="rgb(220,162,5)" fg:x="3498" fg:w="2"/><text x="20.0957%" y="351.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::set_size (12 samples, 0.07%)</title><rect x="19.7946%" y="517" width="0.0681%" height="15" fill="rgb(210,33,43)" fg:x="3489" fg:w="12"/><text x="20.0446%" y="527.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (8 samples, 0.05%)</title><rect x="19.8173%" y="501" width="0.0454%" height="15" fill="rgb(216,116,54)" fg:x="3493" fg:w="8"/><text x="20.0673%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (8 samples, 0.05%)</title><rect x="19.8173%" y="485" width="0.0454%" height="15" fill="rgb(249,92,24)" fg:x="3493" fg:w="8"/><text x="20.0673%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.09%)</title><rect x="19.8684%" y="453" width="0.0851%" height="15" fill="rgb(231,189,14)" fg:x="3502" fg:w="15"/><text x="20.1184%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.09%)</title><rect x="19.8684%" y="437" width="0.0851%" height="15" fill="rgb(230,8,41)" fg:x="3502" fg:w="15"/><text x="20.1184%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 0.09%)</title><rect x="19.8684%" y="421" width="0.0851%" height="15" fill="rgb(249,7,27)" fg:x="3502" fg:w="15"/><text x="20.1184%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.09%)</title><rect x="19.8684%" y="405" width="0.0851%" height="15" fill="rgb(232,86,5)" fg:x="3502" fg:w="15"/><text x="20.1184%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.09%)</title><rect x="19.8684%" y="389" width="0.0851%" height="15" fill="rgb(224,175,18)" fg:x="3502" fg:w="15"/><text x="20.1184%" y="399.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.09%)</title><rect x="19.8684%" y="373" width="0.0851%" height="15" fill="rgb(220,129,12)" fg:x="3502" fg:w="15"/><text x="20.1184%" y="383.50"></text></g><g><title>_int_malloc (14 samples, 0.08%)</title><rect x="19.8740%" y="357" width="0.0794%" height="15" fill="rgb(210,19,36)" fg:x="3503" fg:w="14"/><text x="20.1240%" y="367.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (34 samples, 0.19%)</title><rect x="19.7663%" y="533" width="0.1929%" height="15" fill="rgb(219,96,14)" fg:x="3484" fg:w="34"/><text x="20.0163%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_size (17 samples, 0.10%)</title><rect x="19.8627%" y="517" width="0.0964%" height="15" fill="rgb(249,106,1)" fg:x="3501" fg:w="17"/><text x="20.1127%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureStateSet::set_size (16 samples, 0.09%)</title><rect x="19.8684%" y="501" width="0.0908%" height="15" fill="rgb(249,155,20)" fg:x="3502" fg:w="16"/><text x="20.1184%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (16 samples, 0.09%)</title><rect x="19.8684%" y="485" width="0.0908%" height="15" fill="rgb(244,168,9)" fg:x="3502" fg:w="16"/><text x="20.1184%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (16 samples, 0.09%)</title><rect x="19.8684%" y="469" width="0.0908%" height="15" fill="rgb(216,23,50)" fg:x="3502" fg:w="16"/><text x="20.1184%" y="479.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::merge_bind_group (9 samples, 0.05%)</title><rect x="19.9592%" y="517" width="0.0511%" height="15" fill="rgb(224,219,20)" fg:x="3518" fg:w="9"/><text x="20.2092%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (3 samples, 0.02%)</title><rect x="20.0102%" y="485" width="0.0170%" height="15" fill="rgb(222,156,15)" fg:x="3527" fg:w="3"/><text x="20.2602%" y="495.50"></text></g><g><title>wgpu_core::track::texture::TextureStateProvider::get_state (3 samples, 0.02%)</title><rect x="20.0329%" y="453" width="0.0170%" height="15" fill="rgb(231,97,17)" fg:x="3531" fg:w="3"/><text x="20.2829%" y="463.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureSelector as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="20.0329%" y="437" width="0.0170%" height="15" fill="rgb(218,70,48)" fg:x="3531" fg:w="3"/><text x="20.2829%" y="447.50"></text></g><g><title>&lt;core::ops::range::Range&lt;Idx&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="20.0329%" y="421" width="0.0170%" height="15" fill="rgb(212,196,52)" fg:x="3531" fg:w="3"/><text x="20.2829%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (3 samples, 0.02%)</title><rect x="20.0329%" y="405" width="0.0170%" height="15" fill="rgb(243,203,18)" fg:x="3531" fg:w="3"/><text x="20.2829%" y="415.50"></text></g><g><title>wgpu_core::track::texture::insert_or_merge (10 samples, 0.06%)</title><rect x="20.0272%" y="485" width="0.0567%" height="15" fill="rgb(252,125,41)" fg:x="3530" fg:w="10"/><text x="20.2772%" y="495.50"></text></g><g><title>wgpu_core::track::texture::insert (10 samples, 0.06%)</title><rect x="20.0272%" y="469" width="0.0567%" height="15" fill="rgb(223,180,33)" fg:x="3530" fg:w="10"/><text x="20.2772%" y="479.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (6 samples, 0.03%)</title><rect x="20.0499%" y="453" width="0.0340%" height="15" fill="rgb(254,159,46)" fg:x="3534" fg:w="6"/><text x="20.2999%" y="463.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (6 samples, 0.03%)</title><rect x="20.0499%" y="437" width="0.0340%" height="15" fill="rgb(254,38,10)" fg:x="3534" fg:w="6"/><text x="20.2999%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.03%)</title><rect x="20.0499%" y="421" width="0.0340%" height="15" fill="rgb(208,217,32)" fg:x="3534" fg:w="6"/><text x="20.2999%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.03%)</title><rect x="20.0499%" y="405" width="0.0340%" height="15" fill="rgb(221,120,13)" fg:x="3534" fg:w="6"/><text x="20.2999%" y="415.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::merge_bind_group (24 samples, 0.14%)</title><rect x="19.9592%" y="533" width="0.1362%" height="15" fill="rgb(246,54,52)" fg:x="3518" fg:w="24"/><text x="20.2092%" y="543.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_bind_group (15 samples, 0.09%)</title><rect x="20.0102%" y="517" width="0.0851%" height="15" fill="rgb(242,34,25)" fg:x="3527" fg:w="15"/><text x="20.2602%" y="527.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (15 samples, 0.09%)</title><rect x="20.0102%" y="501" width="0.0851%" height="15" fill="rgb(247,209,9)" fg:x="3527" fg:w="15"/><text x="20.2602%" y="511.50"></text></g><g><title>wgpu_core::track::texture::texture_data_from_texture (2 samples, 0.01%)</title><rect x="20.0840%" y="485" width="0.0113%" height="15" fill="rgb(228,71,26)" fg:x="3540" fg:w="2"/><text x="20.3340%" y="495.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="20.0840%" y="469" width="0.0113%" height="15" fill="rgb(222,145,49)" fg:x="3540" fg:w="2"/><text x="20.3340%" y="479.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (4 samples, 0.02%)</title><rect x="20.1010%" y="517" width="0.0227%" height="15" fill="rgb(218,121,17)" fg:x="3543" fg:w="4"/><text x="20.3510%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1010%" y="501" width="0.0227%" height="15" fill="rgb(244,50,7)" fg:x="3543" fg:w="4"/><text x="20.3510%" y="511.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="20.1123%" y="485" width="0.0113%" height="15" fill="rgb(246,229,37)" fg:x="3545" fg:w="2"/><text x="20.3623%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="20.1123%" y="469" width="0.0113%" height="15" fill="rgb(225,18,5)" fg:x="3545" fg:w="2"/><text x="20.3623%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="20.1123%" y="453" width="0.0113%" height="15" fill="rgb(213,204,8)" fg:x="3545" fg:w="2"/><text x="20.3623%" y="463.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (6 samples, 0.03%)</title><rect x="20.1237%" y="517" width="0.0340%" height="15" fill="rgb(238,103,6)" fg:x="3547" fg:w="6"/><text x="20.3737%" y="527.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (11 samples, 0.06%)</title><rect x="20.1010%" y="533" width="0.0624%" height="15" fill="rgb(222,25,35)" fg:x="3543" fg:w="11"/><text x="20.3510%" y="543.50"></text></g><g><title>wgpu_core::validation::check_buffer_usage (2 samples, 0.01%)</title><rect x="20.1634%" y="533" width="0.0113%" height="15" fill="rgb(213,203,35)" fg:x="3554" fg:w="2"/><text x="20.4134%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2485%" y="469" width="0.0170%" height="15" fill="rgb(221,79,53)" fg:x="3569" fg:w="3"/><text x="20.4985%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (18 samples, 0.10%)</title><rect x="20.1747%" y="533" width="0.1021%" height="15" fill="rgb(243,200,35)" fg:x="3556" fg:w="18"/><text x="20.4247%" y="543.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (18 samples, 0.10%)</title><rect x="20.1747%" y="517" width="0.1021%" height="15" fill="rgb(248,60,25)" fg:x="3556" fg:w="18"/><text x="20.4247%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.10%)</title><rect x="20.1747%" y="501" width="0.1021%" height="15" fill="rgb(227,53,46)" fg:x="3556" fg:w="18"/><text x="20.4247%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.10%)</title><rect x="20.1747%" y="485" width="0.1021%" height="15" fill="rgb(216,120,32)" fg:x="3556" fg:w="18"/><text x="20.4247%" y="495.50"></text></g><g><title>__memmove_sse2_unaligned_erms (2 samples, 0.01%)</title><rect x="20.2655%" y="469" width="0.0113%" height="15" fill="rgb(220,134,1)" fg:x="3572" fg:w="2"/><text x="20.5155%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_scissor_rect (3 samples, 0.02%)</title><rect x="20.2825%" y="533" width="0.0170%" height="15" fill="rgb(237,168,5)" fg:x="3575" fg:w="3"/><text x="20.5325%" y="543.50"></text></g><g><title>ash::device::Device::cmd_set_scissor (3 samples, 0.02%)</title><rect x="20.2825%" y="517" width="0.0170%" height="15" fill="rgb(231,100,33)" fg:x="3575" fg:w="3"/><text x="20.5325%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2825%" y="501" width="0.0170%" height="15" fill="rgb(236,177,47)" fg:x="3575" fg:w="3"/><text x="20.5325%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2825%" y="485" width="0.0170%" height="15" fill="rgb(235,7,49)" fg:x="3575" fg:w="3"/><text x="20.5325%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2825%" y="469" width="0.0170%" height="15" fill="rgb(232,119,22)" fg:x="3575" fg:w="3"/><text x="20.5325%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (352 samples, 2.00%)</title><rect x="18.3195%" y="597" width="1.9970%" height="15" fill="rgb(254,73,53)" fg:x="3229" fg:w="352"/><text x="18.5695%" y="607.50">&lt;..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (352 samples, 2.00%)</title><rect x="18.3195%" y="581" width="1.9970%" height="15" fill="rgb(251,35,20)" fg:x="3229" fg:w="352"/><text x="18.5695%" y="591.50">&lt;..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (350 samples, 1.99%)</title><rect x="18.3309%" y="565" width="1.9857%" height="15" fill="rgb(241,119,20)" fg:x="3231" fg:w="350"/><text x="18.5809%" y="575.50">w..</text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (350 samples, 1.99%)</title><rect x="18.3309%" y="549" width="1.9857%" height="15" fill="rgb(207,102,14)" fg:x="3231" fg:w="350"/><text x="18.5809%" y="559.50">w..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_vertex_buffer (3 samples, 0.02%)</title><rect x="20.2996%" y="533" width="0.0170%" height="15" fill="rgb(248,201,50)" fg:x="3578" fg:w="3"/><text x="20.5496%" y="543.50"></text></g><g><title>ash::device::Device::cmd_bind_vertex_buffers (3 samples, 0.02%)</title><rect x="20.2996%" y="517" width="0.0170%" height="15" fill="rgb(222,185,44)" fg:x="3578" fg:w="3"/><text x="20.5496%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2996%" y="501" width="0.0170%" height="15" fill="rgb(218,107,18)" fg:x="3578" fg:w="3"/><text x="20.5496%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2996%" y="485" width="0.0170%" height="15" fill="rgb(237,177,39)" fg:x="3578" fg:w="3"/><text x="20.5496%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="20.2996%" y="469" width="0.0170%" height="15" fill="rgb(246,69,6)" fg:x="3578" fg:w="3"/><text x="20.5496%" y="479.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (353 samples, 2.00%)</title><rect x="18.3195%" y="613" width="2.0027%" height="15" fill="rgb(234,208,37)" fg:x="3229" fg:w="353"/><text x="18.5695%" y="623.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (2 samples, 0.01%)</title><rect x="20.3223%" y="565" width="0.0113%" height="15" fill="rgb(225,4,6)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (2 samples, 0.01%)</title><rect x="20.3223%" y="549" width="0.0113%" height="15" fill="rgb(233,45,0)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="20.3223%" y="533" width="0.0113%" height="15" fill="rgb(226,136,5)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="20.3223%" y="517" width="0.0113%" height="15" fill="rgb(211,91,47)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="20.3223%" y="501" width="0.0113%" height="15" fill="rgb(242,88,51)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="511.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="20.3223%" y="485" width="0.0113%" height="15" fill="rgb(230,91,28)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="495.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="20.3223%" y="469" width="0.0113%" height="15" fill="rgb(254,186,29)" fg:x="3582" fg:w="2"/><text x="20.5723%" y="479.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (361 samples, 2.05%)</title><rect x="18.3025%" y="661" width="2.0481%" height="15" fill="rgb(238,6,4)" fg:x="3226" fg:w="361"/><text x="18.5525%" y="671.50">g..</text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (361 samples, 2.05%)</title><rect x="18.3025%" y="645" width="2.0481%" height="15" fill="rgb(221,151,16)" fg:x="3226" fg:w="361"/><text x="18.5525%" y="655.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (358 samples, 2.03%)</title><rect x="18.3195%" y="629" width="2.0311%" height="15" fill="rgb(251,143,52)" fg:x="3229" fg:w="358"/><text x="18.5695%" y="639.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (5 samples, 0.03%)</title><rect x="20.3223%" y="613" width="0.0284%" height="15" fill="rgb(206,90,15)" fg:x="3582" fg:w="5"/><text x="20.5723%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPass&gt; (5 samples, 0.03%)</title><rect x="20.3223%" y="597" width="0.0284%" height="15" fill="rgb(218,35,8)" fg:x="3582" fg:w="5"/><text x="20.5723%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::BasePass&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (5 samples, 0.03%)</title><rect x="20.3223%" y="581" width="0.0284%" height="15" fill="rgb(239,215,6)" fg:x="3582" fg:w="5"/><text x="20.5723%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (3 samples, 0.02%)</title><rect x="20.3336%" y="565" width="0.0170%" height="15" fill="rgb(245,116,39)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (3 samples, 0.02%)</title><rect x="20.3336%" y="549" width="0.0170%" height="15" fill="rgb(242,65,28)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="20.3336%" y="533" width="0.0170%" height="15" fill="rgb(252,132,53)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="20.3336%" y="517" width="0.0170%" height="15" fill="rgb(224,159,50)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="20.3336%" y="501" width="0.0170%" height="15" fill="rgb(224,93,4)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="511.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="20.3336%" y="485" width="0.0170%" height="15" fill="rgb(208,81,34)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="495.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="20.3336%" y="469" width="0.0170%" height="15" fill="rgb(233,92,54)" fg:x="3584" fg:w="3"/><text x="20.5836%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.01%)</title><rect x="20.4811%" y="501" width="0.0113%" height="15" fill="rgb(237,21,14)" fg:x="3610" fg:w="2"/><text x="20.7311%" y="511.50"></text></g><g><title>[libX11.so.6.4.0] (15 samples, 0.09%)</title><rect x="20.4187%" y="517" width="0.0851%" height="15" fill="rgb(249,128,51)" fg:x="3599" fg:w="15"/><text x="20.6687%" y="527.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="20.4925%" y="501" width="0.0113%" height="15" fill="rgb(223,129,24)" fg:x="3612" fg:w="2"/><text x="20.7425%" y="511.50"></text></g><g><title>__GI___errno_location (3 samples, 0.02%)</title><rect x="20.5832%" y="437" width="0.0170%" height="15" fill="rgb(231,168,25)" fg:x="3628" fg:w="3"/><text x="20.8332%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (19 samples, 0.11%)</title><rect x="20.5832%" y="453" width="0.1078%" height="15" fill="rgb(224,39,20)" fg:x="3628" fg:w="19"/><text x="20.8332%" y="463.50"></text></g><g><title>__libc_recvmsg (16 samples, 0.09%)</title><rect x="20.6002%" y="437" width="0.0908%" height="15" fill="rgb(225,152,53)" fg:x="3631" fg:w="16"/><text x="20.8502%" y="447.50"></text></g><g><title>__recvmsg_syscall (16 samples, 0.09%)</title><rect x="20.6002%" y="421" width="0.0908%" height="15" fill="rgb(252,17,24)" fg:x="3631" fg:w="16"/><text x="20.8502%" y="431.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="20.6002%" y="405" width="0.0908%" height="15" fill="rgb(250,114,30)" fg:x="3631" fg:w="16"/><text x="20.8502%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="20.6343%" y="389" width="0.0567%" height="15" fill="rgb(229,5,4)" fg:x="3637" fg:w="10"/><text x="20.8843%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="20.6343%" y="373" width="0.0567%" height="15" fill="rgb(225,176,49)" fg:x="3637" fg:w="10"/><text x="20.8843%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="20.6570%" y="357" width="0.0340%" height="15" fill="rgb(224,221,49)" fg:x="3641" fg:w="6"/><text x="20.9070%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="20.6570%" y="341" width="0.0340%" height="15" fill="rgb(253,169,27)" fg:x="3641" fg:w="6"/><text x="20.9070%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="20.6627%" y="325" width="0.0284%" height="15" fill="rgb(211,206,16)" fg:x="3642" fg:w="5"/><text x="20.9127%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="20.6627%" y="309" width="0.0284%" height="15" fill="rgb(244,87,35)" fg:x="3642" fg:w="5"/><text x="20.9127%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="20.6683%" y="293" width="0.0227%" height="15" fill="rgb(246,28,10)" fg:x="3643" fg:w="4"/><text x="20.9183%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="20.6683%" y="277" width="0.0227%" height="15" fill="rgb(229,12,44)" fg:x="3643" fg:w="4"/><text x="20.9183%" y="287.50"></text></g><g><title>[libX11.so.6.4.0] (29 samples, 0.16%)</title><rect x="20.5322%" y="501" width="0.1645%" height="15" fill="rgb(210,145,37)" fg:x="3619" fg:w="29"/><text x="20.7822%" y="511.50"></text></g><g><title>[libX11.so.6.4.0] (25 samples, 0.14%)</title><rect x="20.5549%" y="485" width="0.1418%" height="15" fill="rgb(227,112,52)" fg:x="3623" fg:w="25"/><text x="20.8049%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (21 samples, 0.12%)</title><rect x="20.5776%" y="469" width="0.1191%" height="15" fill="rgb(238,155,34)" fg:x="3627" fg:w="21"/><text x="20.8276%" y="479.50"></text></g><g><title>__GI___poll (30 samples, 0.17%)</title><rect x="20.7761%" y="437" width="0.1702%" height="15" fill="rgb(239,226,36)" fg:x="3662" fg:w="30"/><text x="21.0261%" y="447.50"></text></g><g><title>[unknown] (29 samples, 0.16%)</title><rect x="20.7818%" y="421" width="0.1645%" height="15" fill="rgb(230,16,23)" fg:x="3663" fg:w="29"/><text x="21.0318%" y="431.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="20.8102%" y="405" width="0.1362%" height="15" fill="rgb(236,171,36)" fg:x="3668" fg:w="24"/><text x="21.0602%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="20.8102%" y="389" width="0.1362%" height="15" fill="rgb(221,22,14)" fg:x="3668" fg:w="24"/><text x="21.0602%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="20.8385%" y="373" width="0.1078%" height="15" fill="rgb(242,43,11)" fg:x="3673" fg:w="19"/><text x="21.0885%" y="383.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="20.8556%" y="357" width="0.0908%" height="15" fill="rgb(232,69,23)" fg:x="3676" fg:w="16"/><text x="21.1056%" y="367.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="20.8612%" y="341" width="0.0851%" height="15" fill="rgb(216,180,54)" fg:x="3677" fg:w="15"/><text x="21.1112%" y="351.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="20.9009%" y="325" width="0.0454%" height="15" fill="rgb(216,5,24)" fg:x="3684" fg:w="8"/><text x="21.1509%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="20.9236%" y="309" width="0.0227%" height="15" fill="rgb(225,89,9)" fg:x="3688" fg:w="4"/><text x="21.1736%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="20.9236%" y="293" width="0.0227%" height="15" fill="rgb(243,75,33)" fg:x="3688" fg:w="4"/><text x="21.1736%" y="303.50"></text></g><g><title>[unknown] (128 samples, 0.73%)</title><rect x="20.9520%" y="405" width="0.7262%" height="15" fill="rgb(247,141,45)" fg:x="3693" fg:w="128"/><text x="21.2020%" y="415.50"></text></g><g><title>[unknown] (125 samples, 0.71%)</title><rect x="20.9690%" y="389" width="0.7092%" height="15" fill="rgb(232,177,36)" fg:x="3696" fg:w="125"/><text x="21.2190%" y="399.50"></text></g><g><title>[unknown] (124 samples, 0.70%)</title><rect x="20.9747%" y="373" width="0.7035%" height="15" fill="rgb(219,125,36)" fg:x="3697" fg:w="124"/><text x="21.2247%" y="383.50"></text></g><g><title>[unknown] (121 samples, 0.69%)</title><rect x="20.9917%" y="357" width="0.6865%" height="15" fill="rgb(227,94,9)" fg:x="3700" fg:w="121"/><text x="21.2417%" y="367.50"></text></g><g><title>[unknown] (119 samples, 0.68%)</title><rect x="21.0031%" y="341" width="0.6751%" height="15" fill="rgb(240,34,52)" fg:x="3702" fg:w="119"/><text x="21.2531%" y="351.50"></text></g><g><title>[unknown] (118 samples, 0.67%)</title><rect x="21.0087%" y="325" width="0.6695%" height="15" fill="rgb(216,45,12)" fg:x="3703" fg:w="118"/><text x="21.2587%" y="335.50"></text></g><g><title>[unknown] (112 samples, 0.64%)</title><rect x="21.0428%" y="309" width="0.6354%" height="15" fill="rgb(246,21,19)" fg:x="3709" fg:w="112"/><text x="21.2928%" y="319.50"></text></g><g><title>[unknown] (109 samples, 0.62%)</title><rect x="21.0598%" y="293" width="0.6184%" height="15" fill="rgb(213,98,42)" fg:x="3712" fg:w="109"/><text x="21.3098%" y="303.50"></text></g><g><title>[unknown] (105 samples, 0.60%)</title><rect x="21.0825%" y="277" width="0.5957%" height="15" fill="rgb(250,136,47)" fg:x="3716" fg:w="105"/><text x="21.3325%" y="287.50"></text></g><g><title>[unknown] (99 samples, 0.56%)</title><rect x="21.1165%" y="261" width="0.5617%" height="15" fill="rgb(251,124,27)" fg:x="3722" fg:w="99"/><text x="21.3665%" y="271.50"></text></g><g><title>[unknown] (96 samples, 0.54%)</title><rect x="21.1336%" y="245" width="0.5446%" height="15" fill="rgb(229,180,14)" fg:x="3725" fg:w="96"/><text x="21.3836%" y="255.50"></text></g><g><title>[unknown] (89 samples, 0.50%)</title><rect x="21.1733%" y="229" width="0.5049%" height="15" fill="rgb(245,216,25)" fg:x="3732" fg:w="89"/><text x="21.4233%" y="239.50"></text></g><g><title>[unknown] (88 samples, 0.50%)</title><rect x="21.1789%" y="213" width="0.4993%" height="15" fill="rgb(251,43,5)" fg:x="3733" fg:w="88"/><text x="21.4289%" y="223.50"></text></g><g><title>[unknown] (84 samples, 0.48%)</title><rect x="21.2016%" y="197" width="0.4766%" height="15" fill="rgb(250,128,24)" fg:x="3737" fg:w="84"/><text x="21.4516%" y="207.50"></text></g><g><title>[unknown] (75 samples, 0.43%)</title><rect x="21.2527%" y="181" width="0.4255%" height="15" fill="rgb(217,117,27)" fg:x="3746" fg:w="75"/><text x="21.5027%" y="191.50"></text></g><g><title>[unknown] (48 samples, 0.27%)</title><rect x="21.4059%" y="165" width="0.2723%" height="15" fill="rgb(245,147,4)" fg:x="3773" fg:w="48"/><text x="21.6559%" y="175.50"></text></g><g><title>[unknown] (32 samples, 0.18%)</title><rect x="21.4967%" y="149" width="0.1815%" height="15" fill="rgb(242,201,35)" fg:x="3789" fg:w="32"/><text x="21.7467%" y="159.50"></text></g><g><title>[unknown] (23 samples, 0.13%)</title><rect x="21.5477%" y="133" width="0.1305%" height="15" fill="rgb(218,181,1)" fg:x="3798" fg:w="23"/><text x="21.7977%" y="143.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="21.5931%" y="117" width="0.0851%" height="15" fill="rgb(222,6,29)" fg:x="3806" fg:w="15"/><text x="21.8431%" y="127.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="21.6215%" y="101" width="0.0567%" height="15" fill="rgb(208,186,3)" fg:x="3811" fg:w="10"/><text x="21.8715%" y="111.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="21.6215%" y="85" width="0.0567%" height="15" fill="rgb(216,36,26)" fg:x="3811" fg:w="10"/><text x="21.8715%" y="95.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="21.6328%" y="69" width="0.0454%" height="15" fill="rgb(248,201,23)" fg:x="3813" fg:w="8"/><text x="21.8828%" y="79.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="21.6612%" y="53" width="0.0170%" height="15" fill="rgb(251,170,31)" fg:x="3818" fg:w="3"/><text x="21.9112%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="21.6669%" y="37" width="0.0113%" height="15" fill="rgb(207,110,25)" fg:x="3819" fg:w="2"/><text x="21.9169%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (168 samples, 0.95%)</title><rect x="20.7307%" y="469" width="0.9531%" height="15" fill="rgb(250,54,15)" fg:x="3654" fg:w="168"/><text x="20.9807%" y="479.50"></text></g><g><title>[libxcb.so.1.1.0] (165 samples, 0.94%)</title><rect x="20.7478%" y="453" width="0.9361%" height="15" fill="rgb(227,68,33)" fg:x="3657" fg:w="165"/><text x="20.9978%" y="463.50"></text></g><g><title>__GI___writev (130 samples, 0.74%)</title><rect x="20.9463%" y="437" width="0.7375%" height="15" fill="rgb(238,34,41)" fg:x="3692" fg:w="130"/><text x="21.1963%" y="447.50"></text></g><g><title>__GI___writev (129 samples, 0.73%)</title><rect x="20.9520%" y="421" width="0.7319%" height="15" fill="rgb(220,11,15)" fg:x="3693" fg:w="129"/><text x="21.2020%" y="431.50"></text></g><g><title>_XSend (175 samples, 0.99%)</title><rect x="20.6967%" y="501" width="0.9929%" height="15" fill="rgb(246,111,35)" fg:x="3648" fg:w="175"/><text x="20.9467%" y="511.50"></text></g><g><title>xcb_writev (173 samples, 0.98%)</title><rect x="20.7080%" y="485" width="0.9815%" height="15" fill="rgb(209,88,53)" fg:x="3650" fg:w="173"/><text x="20.9580%" y="495.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="21.6895%" y="501" width="0.0113%" height="15" fill="rgb(231,185,47)" fg:x="3823" fg:w="2"/><text x="21.9395%" y="511.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="21.6895%" y="485" width="0.0113%" height="15" fill="rgb(233,154,1)" fg:x="3823" fg:w="2"/><text x="21.9395%" y="495.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.05%)</title><rect x="21.7633%" y="437" width="0.0511%" height="15" fill="rgb(225,15,46)" fg:x="3836" fg:w="9"/><text x="22.0133%" y="447.50"></text></g><g><title>_int_malloc (4 samples, 0.02%)</title><rect x="21.7917%" y="421" width="0.0227%" height="15" fill="rgb(211,135,41)" fg:x="3841" fg:w="4"/><text x="22.0417%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (50 samples, 0.28%)</title><rect x="21.7406%" y="453" width="0.2837%" height="15" fill="rgb(208,54,0)" fg:x="3832" fg:w="50"/><text x="21.9906%" y="463.50"></text></g><g><title>__libc_recvmsg (37 samples, 0.21%)</title><rect x="21.8144%" y="437" width="0.2099%" height="15" fill="rgb(244,136,14)" fg:x="3845" fg:w="37"/><text x="22.0644%" y="447.50"></text></g><g><title>__recvmsg_syscall (37 samples, 0.21%)</title><rect x="21.8144%" y="421" width="0.2099%" height="15" fill="rgb(241,56,14)" fg:x="3845" fg:w="37"/><text x="22.0644%" y="431.50"></text></g><g><title>[unknown] (37 samples, 0.21%)</title><rect x="21.8144%" y="405" width="0.2099%" height="15" fill="rgb(205,80,24)" fg:x="3845" fg:w="37"/><text x="22.0644%" y="415.50"></text></g><g><title>[unknown] (36 samples, 0.20%)</title><rect x="21.8200%" y="389" width="0.2042%" height="15" fill="rgb(220,57,4)" fg:x="3846" fg:w="36"/><text x="22.0700%" y="399.50"></text></g><g><title>[unknown] (36 samples, 0.20%)</title><rect x="21.8200%" y="373" width="0.2042%" height="15" fill="rgb(226,193,50)" fg:x="3846" fg:w="36"/><text x="22.0700%" y="383.50"></text></g><g><title>[unknown] (33 samples, 0.19%)</title><rect x="21.8371%" y="357" width="0.1872%" height="15" fill="rgb(231,168,22)" fg:x="3849" fg:w="33"/><text x="22.0871%" y="367.50"></text></g><g><title>[unknown] (33 samples, 0.19%)</title><rect x="21.8371%" y="341" width="0.1872%" height="15" fill="rgb(254,215,14)" fg:x="3849" fg:w="33"/><text x="22.0871%" y="351.50"></text></g><g><title>[unknown] (32 samples, 0.18%)</title><rect x="21.8427%" y="325" width="0.1815%" height="15" fill="rgb(211,115,16)" fg:x="3850" fg:w="32"/><text x="22.0927%" y="335.50"></text></g><g><title>[unknown] (32 samples, 0.18%)</title><rect x="21.8427%" y="309" width="0.1815%" height="15" fill="rgb(236,210,16)" fg:x="3850" fg:w="32"/><text x="22.0927%" y="319.50"></text></g><g><title>[unknown] (30 samples, 0.17%)</title><rect x="21.8541%" y="293" width="0.1702%" height="15" fill="rgb(221,94,12)" fg:x="3852" fg:w="30"/><text x="22.1041%" y="303.50"></text></g><g><title>[unknown] (29 samples, 0.16%)</title><rect x="21.8598%" y="277" width="0.1645%" height="15" fill="rgb(235,218,49)" fg:x="3853" fg:w="29"/><text x="22.1098%" y="287.50"></text></g><g><title>[unknown] (25 samples, 0.14%)</title><rect x="21.8824%" y="261" width="0.1418%" height="15" fill="rgb(217,114,14)" fg:x="3857" fg:w="25"/><text x="22.1324%" y="271.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="21.8881%" y="245" width="0.1362%" height="15" fill="rgb(216,145,22)" fg:x="3858" fg:w="24"/><text x="22.1381%" y="255.50"></text></g><g><title>[unknown] (22 samples, 0.12%)</title><rect x="21.8995%" y="229" width="0.1248%" height="15" fill="rgb(217,112,39)" fg:x="3860" fg:w="22"/><text x="22.1495%" y="239.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="21.9165%" y="213" width="0.1078%" height="15" fill="rgb(225,85,32)" fg:x="3863" fg:w="19"/><text x="22.1665%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="21.9335%" y="197" width="0.0908%" height="15" fill="rgb(245,209,47)" fg:x="3866" fg:w="16"/><text x="22.1835%" y="207.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="21.9562%" y="181" width="0.0681%" height="15" fill="rgb(218,220,15)" fg:x="3870" fg:w="12"/><text x="22.2062%" y="191.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="21.9562%" y="165" width="0.0681%" height="15" fill="rgb(222,202,31)" fg:x="3870" fg:w="12"/><text x="22.2062%" y="175.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="21.9846%" y="149" width="0.0397%" height="15" fill="rgb(243,203,4)" fg:x="3875" fg:w="7"/><text x="22.2346%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="22.0016%" y="133" width="0.0227%" height="15" fill="rgb(237,92,17)" fg:x="3878" fg:w="4"/><text x="22.2516%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="22.0073%" y="117" width="0.0170%" height="15" fill="rgb(231,119,7)" fg:x="3879" fg:w="3"/><text x="22.2573%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="22.0129%" y="101" width="0.0113%" height="15" fill="rgb(237,82,41)" fg:x="3880" fg:w="2"/><text x="22.2629%" y="111.50"></text></g><g><title>__GI___poll (70 samples, 0.40%)</title><rect x="22.0243%" y="453" width="0.3971%" height="15" fill="rgb(226,81,48)" fg:x="3882" fg:w="70"/><text x="22.2743%" y="463.50"></text></g><g><title>[unknown] (69 samples, 0.39%)</title><rect x="22.0300%" y="437" width="0.3915%" height="15" fill="rgb(234,70,51)" fg:x="3883" fg:w="69"/><text x="22.2800%" y="447.50"></text></g><g><title>[unknown] (65 samples, 0.37%)</title><rect x="22.0526%" y="421" width="0.3688%" height="15" fill="rgb(251,86,4)" fg:x="3887" fg:w="65"/><text x="22.3026%" y="431.50"></text></g><g><title>[unknown] (65 samples, 0.37%)</title><rect x="22.0526%" y="405" width="0.3688%" height="15" fill="rgb(244,144,28)" fg:x="3887" fg:w="65"/><text x="22.3026%" y="415.50"></text></g><g><title>[unknown] (60 samples, 0.34%)</title><rect x="22.0810%" y="389" width="0.3404%" height="15" fill="rgb(232,161,39)" fg:x="3892" fg:w="60"/><text x="22.3310%" y="399.50"></text></g><g><title>[unknown] (55 samples, 0.31%)</title><rect x="22.1094%" y="373" width="0.3120%" height="15" fill="rgb(247,34,51)" fg:x="3897" fg:w="55"/><text x="22.3594%" y="383.50"></text></g><g><title>[unknown] (50 samples, 0.28%)</title><rect x="22.1378%" y="357" width="0.2837%" height="15" fill="rgb(225,132,2)" fg:x="3902" fg:w="50"/><text x="22.3878%" y="367.50"></text></g><g><title>[unknown] (44 samples, 0.25%)</title><rect x="22.1718%" y="341" width="0.2496%" height="15" fill="rgb(209,159,44)" fg:x="3908" fg:w="44"/><text x="22.4218%" y="351.50"></text></g><g><title>[unknown] (42 samples, 0.24%)</title><rect x="22.1831%" y="325" width="0.2383%" height="15" fill="rgb(251,214,1)" fg:x="3910" fg:w="42"/><text x="22.4331%" y="335.50"></text></g><g><title>[unknown] (40 samples, 0.23%)</title><rect x="22.1945%" y="309" width="0.2269%" height="15" fill="rgb(247,84,47)" fg:x="3912" fg:w="40"/><text x="22.4445%" y="319.50"></text></g><g><title>[unknown] (35 samples, 0.20%)</title><rect x="22.2229%" y="293" width="0.1986%" height="15" fill="rgb(240,111,43)" fg:x="3917" fg:w="35"/><text x="22.4729%" y="303.50"></text></g><g><title>[unknown] (30 samples, 0.17%)</title><rect x="22.2512%" y="277" width="0.1702%" height="15" fill="rgb(215,214,35)" fg:x="3922" fg:w="30"/><text x="22.5012%" y="287.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="22.3250%" y="261" width="0.0964%" height="15" fill="rgb(248,207,23)" fg:x="3935" fg:w="17"/><text x="22.5750%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="22.3590%" y="245" width="0.0624%" height="15" fill="rgb(214,186,4)" fg:x="3941" fg:w="11"/><text x="22.6090%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="22.3874%" y="229" width="0.0340%" height="15" fill="rgb(220,133,22)" fg:x="3946" fg:w="6"/><text x="22.6374%" y="239.50"></text></g><g><title>XGetGeometry (360 samples, 2.04%)</title><rect x="20.3903%" y="533" width="2.0424%" height="15" fill="rgb(239,134,19)" fg:x="3594" fg:w="360"/><text x="20.6403%" y="543.50">X..</text></g><g><title>_XReply (340 samples, 1.93%)</title><rect x="20.5038%" y="517" width="1.9290%" height="15" fill="rgb(250,140,9)" fg:x="3614" fg:w="340"/><text x="20.7538%" y="527.50">_..</text></g><g><title>xcb_wait_for_reply64 (127 samples, 0.72%)</title><rect x="21.7122%" y="501" width="0.7205%" height="15" fill="rgb(225,59,14)" fg:x="3827" fg:w="127"/><text x="21.9622%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (127 samples, 0.72%)</title><rect x="21.7122%" y="485" width="0.7205%" height="15" fill="rgb(214,152,51)" fg:x="3827" fg:w="127"/><text x="21.9622%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (125 samples, 0.71%)</title><rect x="21.7236%" y="469" width="0.7092%" height="15" fill="rgb(251,227,43)" fg:x="3829" fg:w="125"/><text x="21.9736%" y="479.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="22.4214%" y="453" width="0.0113%" height="15" fill="rgb(241,96,17)" fg:x="3952" fg:w="2"/><text x="22.6714%" y="463.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (367 samples, 2.08%)</title><rect x="20.3676%" y="629" width="2.0822%" height="15" fill="rgb(234,198,43)" fg:x="3590" fg:w="367"/><text x="20.6176%" y="639.50">g..</text></g><g><title>winit::window::Window::inner_size (367 samples, 2.08%)</title><rect x="20.3676%" y="613" width="2.0822%" height="15" fill="rgb(220,108,29)" fg:x="3590" fg:w="367"/><text x="20.6176%" y="623.50">w..</text></g><g><title>winit::platform_impl::platform::Window::inner_size (367 samples, 2.08%)</title><rect x="20.3676%" y="597" width="2.0822%" height="15" fill="rgb(226,163,33)" fg:x="3590" fg:w="367"/><text x="20.6176%" y="607.50">w..</text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (367 samples, 2.08%)</title><rect x="20.3676%" y="581" width="2.0822%" height="15" fill="rgb(205,194,45)" fg:x="3590" fg:w="367"/><text x="20.6176%" y="591.50">w..</text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (366 samples, 2.08%)</title><rect x="20.3733%" y="565" width="2.0765%" height="15" fill="rgb(206,143,44)" fg:x="3591" fg:w="366"/><text x="20.6233%" y="575.50">w..</text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (365 samples, 2.07%)</title><rect x="20.3790%" y="549" width="2.0708%" height="15" fill="rgb(236,136,36)" fg:x="3592" fg:w="365"/><text x="20.6290%" y="559.50">w..</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::check_errors (3 samples, 0.02%)</title><rect x="22.4328%" y="533" width="0.0170%" height="15" fill="rgb(249,172,42)" fg:x="3954" fg:w="3"/><text x="22.6828%" y="543.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="22.4328%" y="517" width="0.0170%" height="15" fill="rgb(216,139,23)" fg:x="3954" fg:w="3"/><text x="22.6828%" y="527.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (2 samples, 0.01%)</title><rect x="22.4384%" y="501" width="0.0113%" height="15" fill="rgb(207,166,20)" fg:x="3955" fg:w="2"/><text x="22.6884%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (2 samples, 0.01%)</title><rect x="22.4384%" y="485" width="0.0113%" height="15" fill="rgb(210,209,22)" fg:x="3955" fg:w="2"/><text x="22.6884%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="22.4384%" y="469" width="0.0113%" height="15" fill="rgb(232,118,20)" fg:x="3955" fg:w="2"/><text x="22.6884%" y="479.50"></text></g><g><title>ggez::graphics::gpu::growing::GrowingBufferArena::allocate (3 samples, 0.02%)</title><rect x="22.4498%" y="629" width="0.0170%" height="15" fill="rgb(238,113,42)" fg:x="3957" fg:w="3"/><text x="22.6998%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="22.4782%" y="565" width="0.0170%" height="15" fill="rgb(231,42,5)" fg:x="3962" fg:w="3"/><text x="22.7282%" y="575.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="22.4782%" y="549" width="0.0170%" height="15" fill="rgb(243,166,24)" fg:x="3962" fg:w="3"/><text x="22.7282%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="22.4782%" y="533" width="0.0170%" height="15" fill="rgb(237,226,12)" fg:x="3962" fg:w="3"/><text x="22.7282%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_begin_render_pass (6 samples, 0.03%)</title><rect x="22.4725%" y="581" width="0.0340%" height="15" fill="rgb(229,133,24)" fg:x="3961" fg:w="6"/><text x="22.7225%" y="591.50"></text></g><g><title>wgpu_core::command::render::RenderPass::new (2 samples, 0.01%)</title><rect x="22.4952%" y="565" width="0.0113%" height="15" fill="rgb(238,33,43)" fg:x="3965" fg:w="2"/><text x="22.7452%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_begin_render_pass (8 samples, 0.05%)</title><rect x="22.4725%" y="597" width="0.0454%" height="15" fill="rgb(227,59,38)" fg:x="3961" fg:w="8"/><text x="22.7225%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="22.5065%" y="581" width="0.0113%" height="15" fill="rgb(230,97,0)" fg:x="3967" fg:w="2"/><text x="22.7565%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="22.5065%" y="565" width="0.0113%" height="15" fill="rgb(250,173,50)" fg:x="3967" fg:w="2"/><text x="22.7565%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="22.5065%" y="549" width="0.0113%" height="15" fill="rgb(240,15,50)" fg:x="3967" fg:w="2"/><text x="22.7565%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="22.5065%" y="533" width="0.0113%" height="15" fill="rgb(221,93,22)" fg:x="3967" fg:w="2"/><text x="22.7565%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="22.5065%" y="517" width="0.0113%" height="15" fill="rgb(245,180,53)" fg:x="3967" fg:w="2"/><text x="22.7565%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image::{{closure}} (10 samples, 0.06%)</title><rect x="22.4668%" y="629" width="0.0567%" height="15" fill="rgb(231,88,51)" fg:x="3960" fg:w="10"/><text x="22.7168%" y="639.50"></text></g><g><title>wgpu::CommandEncoder::begin_render_pass (9 samples, 0.05%)</title><rect x="22.4725%" y="613" width="0.0511%" height="15" fill="rgb(240,58,21)" fg:x="3961" fg:w="9"/><text x="22.7225%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="22.5292%" y="565" width="0.0113%" height="15" fill="rgb(237,21,10)" fg:x="3971" fg:w="2"/><text x="22.7792%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="22.5292%" y="549" width="0.0113%" height="15" fill="rgb(218,43,11)" fg:x="3971" fg:w="2"/><text x="22.7792%" y="559.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_single (3 samples, 0.02%)</title><rect x="22.5746%" y="549" width="0.0170%" height="15" fill="rgb(218,221,29)" fg:x="3979" fg:w="3"/><text x="22.8246%" y="559.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="22.5803%" y="533" width="0.0113%" height="15" fill="rgb(214,118,42)" fg:x="3980" fg:w="2"/><text x="22.8303%" y="543.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (3 samples, 0.02%)</title><rect x="22.5916%" y="549" width="0.0170%" height="15" fill="rgb(251,200,26)" fg:x="3982" fg:w="3"/><text x="22.8416%" y="559.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (2 samples, 0.01%)</title><rect x="22.5973%" y="533" width="0.0113%" height="15" fill="rgb(237,101,39)" fg:x="3983" fg:w="2"/><text x="22.8473%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="22.5973%" y="517" width="0.0113%" height="15" fill="rgb(251,117,11)" fg:x="3983" fg:w="2"/><text x="22.8473%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (25 samples, 0.14%)</title><rect x="22.5406%" y="565" width="0.1418%" height="15" fill="rgb(216,223,23)" fg:x="3973" fg:w="25"/><text x="22.7906%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (13 samples, 0.07%)</title><rect x="22.6086%" y="549" width="0.0738%" height="15" fill="rgb(251,54,12)" fg:x="3985" fg:w="13"/><text x="22.8586%" y="559.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (13 samples, 0.07%)</title><rect x="22.6086%" y="533" width="0.0738%" height="15" fill="rgb(254,176,54)" fg:x="3985" fg:w="13"/><text x="22.8586%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="22.6086%" y="517" width="0.0738%" height="15" fill="rgb(210,32,8)" fg:x="3985" fg:w="13"/><text x="22.8586%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="22.6200%" y="501" width="0.0624%" height="15" fill="rgb(235,52,38)" fg:x="3987" fg:w="11"/><text x="22.8700%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="22.6540%" y="485" width="0.0284%" height="15" fill="rgb(231,4,44)" fg:x="3993" fg:w="5"/><text x="22.9040%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="22.6654%" y="469" width="0.0170%" height="15" fill="rgb(249,2,32)" fg:x="3995" fg:w="3"/><text x="22.9154%" y="479.50"></text></g><g><title>syscall (7 samples, 0.04%)</title><rect x="22.7221%" y="469" width="0.0397%" height="15" fill="rgb(224,65,26)" fg:x="4005" fg:w="7"/><text x="22.9721%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="22.7221%" y="453" width="0.0397%" height="15" fill="rgb(250,73,40)" fg:x="4005" fg:w="7"/><text x="22.9721%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="22.7221%" y="437" width="0.0397%" height="15" fill="rgb(253,177,16)" fg:x="4005" fg:w="7"/><text x="22.9721%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="22.7335%" y="421" width="0.0284%" height="15" fill="rgb(217,32,34)" fg:x="4007" fg:w="5"/><text x="22.9835%" y="431.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (14 samples, 0.08%)</title><rect x="22.6937%" y="501" width="0.0794%" height="15" fill="rgb(212,7,10)" fg:x="4000" fg:w="14"/><text x="22.9437%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="22.7164%" y="485" width="0.0567%" height="15" fill="rgb(245,89,8)" fg:x="4004" fg:w="10"/><text x="22.9664%" y="495.50"></text></g><g><title>syscall@plt (2 samples, 0.01%)</title><rect x="22.7618%" y="469" width="0.0113%" height="15" fill="rgb(237,16,53)" fg:x="4012" fg:w="2"/><text x="23.0118%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="22.7788%" y="453" width="0.0567%" height="15" fill="rgb(250,204,30)" fg:x="4015" fg:w="10"/><text x="23.0288%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (12 samples, 0.07%)</title><rect x="22.7788%" y="485" width="0.0681%" height="15" fill="rgb(208,77,27)" fg:x="4015" fg:w="12"/><text x="23.0288%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="22.7788%" y="469" width="0.0681%" height="15" fill="rgb(250,204,28)" fg:x="4015" fg:w="12"/><text x="23.0288%" y="479.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="22.8356%" y="453" width="0.0113%" height="15" fill="rgb(244,63,21)" fg:x="4025" fg:w="2"/><text x="23.0856%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="22.8469%" y="485" width="0.0227%" height="15" fill="rgb(236,85,44)" fg:x="4027" fg:w="4"/><text x="23.0969%" y="495.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (32 samples, 0.18%)</title><rect x="22.6937%" y="533" width="0.1815%" height="15" fill="rgb(215,98,4)" fg:x="4000" fg:w="32"/><text x="22.9437%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (32 samples, 0.18%)</title><rect x="22.6937%" y="517" width="0.1815%" height="15" fill="rgb(235,38,11)" fg:x="4000" fg:w="32"/><text x="22.9437%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.10%)</title><rect x="22.7732%" y="501" width="0.1021%" height="15" fill="rgb(254,186,25)" fg:x="4014" fg:w="18"/><text x="23.0232%" y="511.50"></text></g><g><title>ash::device::Device::create_buffer (8 samples, 0.05%)</title><rect x="22.8753%" y="533" width="0.0454%" height="15" fill="rgb(225,55,31)" fg:x="4032" fg:w="8"/><text x="23.1253%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="22.8753%" y="517" width="0.0454%" height="15" fill="rgb(211,15,21)" fg:x="4032" fg:w="8"/><text x="23.1253%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="22.8980%" y="501" width="0.0227%" height="15" fill="rgb(215,187,41)" fg:x="4036" fg:w="4"/><text x="23.1480%" y="511.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="22.9037%" y="485" width="0.0170%" height="15" fill="rgb(248,69,32)" fg:x="4037" fg:w="3"/><text x="23.1537%" y="495.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="22.9037%" y="469" width="0.0170%" height="15" fill="rgb(252,102,52)" fg:x="4037" fg:w="3"/><text x="23.1537%" y="479.50"></text></g><g><title>ash::device::Device::get_buffer_memory_requirements (3 samples, 0.02%)</title><rect x="22.9207%" y="533" width="0.0170%" height="15" fill="rgb(253,140,32)" fg:x="4040" fg:w="3"/><text x="23.1707%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="22.9207%" y="517" width="0.0170%" height="15" fill="rgb(216,56,42)" fg:x="4040" fg:w="3"/><text x="23.1707%" y="527.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfo::builder (2 samples, 0.01%)</title><rect x="22.9377%" y="533" width="0.0113%" height="15" fill="rgb(216,184,14)" fg:x="4043" fg:w="2"/><text x="23.1877%" y="543.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (3 samples, 0.02%)</title><rect x="22.9547%" y="501" width="0.0170%" height="15" fill="rgb(237,187,27)" fg:x="4046" fg:w="3"/><text x="23.2047%" y="511.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (5 samples, 0.03%)</title><rect x="22.9491%" y="533" width="0.0284%" height="15" fill="rgb(219,65,3)" fg:x="4045" fg:w="5"/><text x="23.1991%" y="543.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (5 samples, 0.03%)</title><rect x="22.9491%" y="517" width="0.0284%" height="15" fill="rgb(245,83,25)" fg:x="4045" fg:w="5"/><text x="23.1991%" y="527.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (53 samples, 0.30%)</title><rect x="22.6824%" y="565" width="0.3007%" height="15" fill="rgb(214,205,45)" fg:x="3998" fg:w="53"/><text x="22.9324%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (53 samples, 0.30%)</title><rect x="22.6824%" y="549" width="0.3007%" height="15" fill="rgb(241,20,18)" fg:x="3998" fg:w="53"/><text x="22.9324%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (85 samples, 0.48%)</title><rect x="22.5235%" y="613" width="0.4822%" height="15" fill="rgb(232,163,23)" fg:x="3970" fg:w="85"/><text x="22.7735%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (85 samples, 0.48%)</title><rect x="22.5235%" y="597" width="0.4822%" height="15" fill="rgb(214,5,46)" fg:x="3970" fg:w="85"/><text x="22.7735%" y="607.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (85 samples, 0.48%)</title><rect x="22.5235%" y="581" width="0.4822%" height="15" fill="rgb(229,78,17)" fg:x="3970" fg:w="85"/><text x="22.7735%" y="591.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (4 samples, 0.02%)</title><rect x="22.9831%" y="565" width="0.0227%" height="15" fill="rgb(248,89,10)" fg:x="4051" fg:w="4"/><text x="23.2331%" y="575.50"></text></g><g><title>wgpu::Queue::write_buffer (87 samples, 0.49%)</title><rect x="22.5235%" y="629" width="0.4936%" height="15" fill="rgb(248,54,15)" fg:x="3970" fg:w="87"/><text x="22.7735%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="23.0058%" y="613" width="0.0113%" height="15" fill="rgb(223,116,6)" fg:x="4055" fg:w="2"/><text x="23.2558%" y="623.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (477 samples, 2.71%)</title><rect x="20.3506%" y="661" width="2.7062%" height="15" fill="rgb(205,125,38)" fg:x="3587" fg:w="477"/><text x="20.6006%" y="671.50">gg..</text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (477 samples, 2.71%)</title><rect x="20.3506%" y="645" width="2.7062%" height="15" fill="rgb(251,78,38)" fg:x="3587" fg:w="477"/><text x="20.6006%" y="655.50">gg..</text></g><g><title>wgpu::RenderPass::set_blend_constant (7 samples, 0.04%)</title><rect x="23.0171%" y="629" width="0.0397%" height="15" fill="rgb(253,78,28)" fg:x="4057" fg:w="7"/><text x="23.2671%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::render_pass_set_blend_constant (3 samples, 0.02%)</title><rect x="23.0398%" y="613" width="0.0170%" height="15" fill="rgb(209,120,3)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="623.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::render_pass_set_blend_constant (3 samples, 0.02%)</title><rect x="23.0398%" y="597" width="0.0170%" height="15" fill="rgb(238,229,9)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="607.50"></text></g><g><title>wgpu_render_pass_set_blend_constant (3 samples, 0.02%)</title><rect x="23.0398%" y="581" width="0.0170%" height="15" fill="rgb(253,159,18)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="23.0398%" y="565" width="0.0170%" height="15" fill="rgb(244,42,34)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="23.0398%" y="549" width="0.0170%" height="15" fill="rgb(224,8,7)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="23.0398%" y="533" width="0.0170%" height="15" fill="rgb(210,201,45)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="23.0398%" y="517" width="0.0170%" height="15" fill="rgb(252,185,21)" fg:x="4061" fg:w="3"/><text x="23.2898%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="23.0625%" y="645" width="0.0113%" height="15" fill="rgb(223,131,1)" fg:x="4065" fg:w="2"/><text x="23.3125%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (3 samples, 0.02%)</title><rect x="23.0795%" y="565" width="0.0170%" height="15" fill="rgb(245,141,16)" fg:x="4068" fg:w="3"/><text x="23.3295%" y="575.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (3 samples, 0.02%)</title><rect x="23.0795%" y="549" width="0.0170%" height="15" fill="rgb(229,55,45)" fg:x="4068" fg:w="3"/><text x="23.3295%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="23.0795%" y="533" width="0.0170%" height="15" fill="rgb(208,92,15)" fg:x="4068" fg:w="3"/><text x="23.3295%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="23.0795%" y="517" width="0.0170%" height="15" fill="rgb(234,185,47)" fg:x="4068" fg:w="3"/><text x="23.3295%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="23.0795%" y="501" width="0.0170%" height="15" fill="rgb(253,104,50)" fg:x="4068" fg:w="3"/><text x="23.3295%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="23.0795%" y="485" width="0.0170%" height="15" fill="rgb(205,70,7)" fg:x="4068" fg:w="3"/><text x="23.3295%" y="495.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (6 samples, 0.03%)</title><rect x="23.0739%" y="581" width="0.0340%" height="15" fill="rgb(240,178,43)" fg:x="4067" fg:w="6"/><text x="23.3239%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (2 samples, 0.01%)</title><rect x="23.0966%" y="565" width="0.0113%" height="15" fill="rgb(214,112,2)" fg:x="4071" fg:w="2"/><text x="23.3466%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (2 samples, 0.01%)</title><rect x="23.0966%" y="549" width="0.0113%" height="15" fill="rgb(206,46,17)" fg:x="4071" fg:w="2"/><text x="23.3466%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="23.0966%" y="533" width="0.0113%" height="15" fill="rgb(225,220,16)" fg:x="4071" fg:w="2"/><text x="23.3466%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="23.0966%" y="517" width="0.0113%" height="15" fill="rgb(238,65,40)" fg:x="4071" fg:w="2"/><text x="23.3466%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (3 samples, 0.02%)</title><rect x="23.1136%" y="517" width="0.0170%" height="15" fill="rgb(230,151,21)" fg:x="4074" fg:w="3"/><text x="23.3636%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="23.1193%" y="501" width="0.0113%" height="15" fill="rgb(218,58,49)" fg:x="4075" fg:w="2"/><text x="23.3693%" y="511.50"></text></g><g><title>syscall (2 samples, 0.01%)</title><rect x="23.1193%" y="485" width="0.0113%" height="15" fill="rgb(219,179,14)" fg:x="4075" fg:w="2"/><text x="23.3693%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="23.1193%" y="469" width="0.0113%" height="15" fill="rgb(223,72,1)" fg:x="4075" fg:w="2"/><text x="23.3693%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="23.1136%" y="533" width="0.0227%" height="15" fill="rgb(238,126,10)" fg:x="4074" fg:w="4"/><text x="23.3636%" y="543.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (6 samples, 0.03%)</title><rect x="23.1136%" y="581" width="0.0340%" height="15" fill="rgb(224,206,38)" fg:x="4074" fg:w="6"/><text x="23.3636%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (6 samples, 0.03%)</title><rect x="23.1136%" y="565" width="0.0340%" height="15" fill="rgb(212,201,54)" fg:x="4074" fg:w="6"/><text x="23.3636%" y="575.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (6 samples, 0.03%)</title><rect x="23.1136%" y="549" width="0.0340%" height="15" fill="rgb(218,154,48)" fg:x="4074" fg:w="6"/><text x="23.3636%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (2 samples, 0.01%)</title><rect x="23.1363%" y="533" width="0.0113%" height="15" fill="rgb(232,93,24)" fg:x="4078" fg:w="2"/><text x="23.3863%" y="543.50"></text></g><g><title>syscall (2 samples, 0.01%)</title><rect x="23.1363%" y="517" width="0.0113%" height="15" fill="rgb(245,30,21)" fg:x="4078" fg:w="2"/><text x="23.3863%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="23.1363%" y="501" width="0.0113%" height="15" fill="rgb(242,148,29)" fg:x="4078" fg:w="2"/><text x="23.3863%" y="511.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (14 samples, 0.08%)</title><rect x="23.0739%" y="629" width="0.0794%" height="15" fill="rgb(244,153,54)" fg:x="4067" fg:w="14"/><text x="23.3239%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (14 samples, 0.08%)</title><rect x="23.0739%" y="613" width="0.0794%" height="15" fill="rgb(252,87,22)" fg:x="4067" fg:w="14"/><text x="23.3239%" y="623.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (14 samples, 0.08%)</title><rect x="23.0739%" y="597" width="0.0794%" height="15" fill="rgb(210,51,29)" fg:x="4067" fg:w="14"/><text x="23.3239%" y="607.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_projection (18 samples, 0.10%)</title><rect x="23.0568%" y="661" width="0.1021%" height="15" fill="rgb(242,136,47)" fg:x="4064" fg:w="18"/><text x="23.3068%" y="671.50"></text></g><g><title>wgpu::Queue::write_buffer (15 samples, 0.09%)</title><rect x="23.0739%" y="645" width="0.0851%" height="15" fill="rgb(238,68,4)" fg:x="4067" fg:w="15"/><text x="23.3239%" y="655.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (1,055 samples, 5.99%)</title><rect x="17.1848%" y="693" width="5.9855%" height="15" fill="rgb(242,161,30)" fg:x="3029" fg:w="1055"/><text x="17.4348%" y="703.50">ggez::gr..</text></g><g><title>ggez::graphics::canvas::Canvas::finalize (1,040 samples, 5.90%)</title><rect x="17.2699%" y="677" width="5.9004%" height="15" fill="rgb(218,58,44)" fg:x="3044" fg:w="1040"/><text x="17.5199%" y="687.50">ggez::gr..</text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::set_shader (2 samples, 0.01%)</title><rect x="23.1590%" y="661" width="0.0113%" height="15" fill="rgb(252,125,32)" fg:x="4082" fg:w="2"/><text x="23.4090%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="23.1987%" y="661" width="0.0113%" height="15" fill="rgb(219,178,0)" fg:x="4089" fg:w="2"/><text x="23.4487%" y="671.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (2 samples, 0.01%)</title><rect x="23.1987%" y="645" width="0.0113%" height="15" fill="rgb(213,152,7)" fg:x="4089" fg:w="2"/><text x="23.4487%" y="655.50"></text></g><g><title>ggez::graphics::canvas::Canvas::set_screen_coordinates (7 samples, 0.04%)</title><rect x="23.2157%" y="661" width="0.0397%" height="15" fill="rgb(249,109,34)" fg:x="4092" fg:w="7"/><text x="23.4657%" y="671.50"></text></g><g><title>ggez::graphics::internal_canvas::screen_to_mat (7 samples, 0.04%)</title><rect x="23.2157%" y="645" width="0.0397%" height="15" fill="rgb(232,96,21)" fg:x="4092" fg:w="7"/><text x="23.4657%" y="655.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::orthographic_rh (4 samples, 0.02%)</title><rect x="23.2327%" y="629" width="0.0227%" height="15" fill="rgb(228,27,39)" fg:x="4095" fg:w="4"/><text x="23.4827%" y="639.50"></text></g><g><title>ggez::graphics::canvas::DefaultResources::new (2 samples, 0.01%)</title><rect x="23.2554%" y="661" width="0.0113%" height="15" fill="rgb(211,182,52)" fg:x="4099" fg:w="2"/><text x="23.5054%" y="671.50"></text></g><g><title>ggez::graphics::canvas::Canvas::from_frame (18 samples, 0.10%)</title><rect x="23.1703%" y="693" width="0.1021%" height="15" fill="rgb(234,178,38)" fg:x="4084" fg:w="18"/><text x="23.4203%" y="703.50"></text></g><g><title>ggez::graphics::canvas::Canvas::new (16 samples, 0.09%)</title><rect x="23.1817%" y="677" width="0.0908%" height="15" fill="rgb(221,111,3)" fg:x="4086" fg:w="16"/><text x="23.4317%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.02%)</title><rect x="23.2781%" y="597" width="0.0227%" height="15" fill="rgb(228,175,21)" fg:x="4103" fg:w="4"/><text x="23.5281%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="23.5448%" y="581" width="0.0340%" height="15" fill="rgb(228,174,43)" fg:x="4150" fg:w="6"/><text x="23.7948%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.04%)</title><rect x="23.6015%" y="549" width="0.0397%" height="15" fill="rgb(211,191,0)" fg:x="4160" fg:w="7"/><text x="23.8515%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.03%)</title><rect x="24.0667%" y="533" width="0.0340%" height="15" fill="rgb(253,117,3)" fg:x="4242" fg:w="6"/><text x="24.3167%" y="543.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (86 samples, 0.49%)</title><rect x="23.6412%" y="549" width="0.4879%" height="15" fill="rgb(241,127,19)" fg:x="4167" fg:w="86"/><text x="23.8912%" y="559.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (5 samples, 0.03%)</title><rect x="24.1008%" y="533" width="0.0284%" height="15" fill="rgb(218,103,12)" fg:x="4248" fg:w="5"/><text x="24.3508%" y="543.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (19 samples, 0.11%)</title><rect x="24.1291%" y="549" width="0.1078%" height="15" fill="rgb(236,214,43)" fg:x="4253" fg:w="19"/><text x="24.3791%" y="559.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (16 samples, 0.09%)</title><rect x="24.1461%" y="533" width="0.0908%" height="15" fill="rgb(244,144,19)" fg:x="4256" fg:w="16"/><text x="24.3961%" y="543.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (121 samples, 0.69%)</title><rect x="23.5845%" y="565" width="0.6865%" height="15" fill="rgb(246,188,10)" fg:x="4157" fg:w="121"/><text x="23.8345%" y="575.50"></text></g><g><title>ggez::graphics::draw::DrawParam::scale (6 samples, 0.03%)</title><rect x="24.2369%" y="549" width="0.0340%" height="15" fill="rgb(212,193,33)" fg:x="4272" fg:w="6"/><text x="24.4869%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (22 samples, 0.12%)</title><rect x="24.2710%" y="565" width="0.1248%" height="15" fill="rgb(241,51,29)" fg:x="4278" fg:w="22"/><text x="24.5210%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (22 samples, 0.12%)</title><rect x="24.2710%" y="549" width="0.1248%" height="15" fill="rgb(211,58,19)" fg:x="4278" fg:w="22"/><text x="24.5210%" y="559.50"></text></g><g><title>core::ptr::write (22 samples, 0.12%)</title><rect x="24.2710%" y="533" width="0.1248%" height="15" fill="rgb(229,111,26)" fg:x="4278" fg:w="22"/><text x="24.5210%" y="543.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (6 samples, 0.03%)</title><rect x="24.4809%" y="533" width="0.0340%" height="15" fill="rgb(213,115,40)" fg:x="4315" fg:w="6"/><text x="24.7309%" y="543.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (6 samples, 0.03%)</title><rect x="24.4809%" y="517" width="0.0340%" height="15" fill="rgb(209,56,44)" fg:x="4315" fg:w="6"/><text x="24.7309%" y="527.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (6 samples, 0.03%)</title><rect x="24.4809%" y="501" width="0.0340%" height="15" fill="rgb(230,108,32)" fg:x="4315" fg:w="6"/><text x="24.7309%" y="511.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (38 samples, 0.22%)</title><rect x="24.4015%" y="549" width="0.2156%" height="15" fill="rgb(216,165,31)" fg:x="4301" fg:w="38"/><text x="24.6515%" y="559.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (18 samples, 0.10%)</title><rect x="24.5149%" y="533" width="0.1021%" height="15" fill="rgb(218,122,21)" fg:x="4321" fg:w="18"/><text x="24.7649%" y="543.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (18 samples, 0.10%)</title><rect x="24.5149%" y="517" width="0.1021%" height="15" fill="rgb(223,224,47)" fg:x="4321" fg:w="18"/><text x="24.7649%" y="527.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (4 samples, 0.02%)</title><rect x="24.8383%" y="501" width="0.0227%" height="15" fill="rgb(238,102,44)" fg:x="4378" fg:w="4"/><text x="25.0883%" y="511.50"></text></g><g><title>exp2_inline (74 samples, 0.42%)</title><rect x="25.0993%" y="469" width="0.4198%" height="15" fill="rgb(236,46,40)" fg:x="4424" fg:w="74"/><text x="25.3493%" y="479.50"></text></g><g><title>asuint64 (3 samples, 0.02%)</title><rect x="25.5021%" y="453" width="0.0170%" height="15" fill="rgb(247,202,50)" fg:x="4495" fg:w="3"/><text x="25.7521%" y="463.50"></text></g><g><title>log2_inline (48 samples, 0.27%)</title><rect x="25.5191%" y="469" width="0.2723%" height="15" fill="rgb(209,99,20)" fg:x="4498" fg:w="48"/><text x="25.7691%" y="479.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (185 samples, 1.05%)</title><rect x="24.7589%" y="517" width="1.0496%" height="15" fill="rgb(252,27,34)" fg:x="4364" fg:w="185"/><text x="25.0089%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (167 samples, 0.95%)</title><rect x="24.8610%" y="501" width="0.9475%" height="15" fill="rgb(215,206,23)" fg:x="4382" fg:w="167"/><text x="25.1110%" y="511.50"></text></g><g><title>__powf_fma (167 samples, 0.95%)</title><rect x="24.8610%" y="485" width="0.9475%" height="15" fill="rgb(212,135,36)" fg:x="4382" fg:w="167"/><text x="25.1110%" y="495.50"></text></g><g><title>zeroinfnan (3 samples, 0.02%)</title><rect x="25.7914%" y="469" width="0.0170%" height="15" fill="rgb(240,189,1)" fg:x="4546" fg:w="3"/><text x="26.0414%" y="479.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (188 samples, 1.07%)</title><rect x="24.7589%" y="533" width="1.0666%" height="15" fill="rgb(242,56,20)" fg:x="4364" fg:w="188"/><text x="25.0089%" y="543.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (3 samples, 0.02%)</title><rect x="25.8085%" y="517" width="0.0170%" height="15" fill="rgb(247,132,33)" fg:x="4549" fg:w="3"/><text x="26.0585%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.05%)</title><rect x="25.9106%" y="517" width="0.0511%" height="15" fill="rgb(208,149,11)" fg:x="4567" fg:w="9"/><text x="26.1606%" y="527.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (3 samples, 0.02%)</title><rect x="25.9446%" y="501" width="0.0170%" height="15" fill="rgb(211,33,11)" fg:x="4573" fg:w="3"/><text x="26.1946%" y="511.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::transpose (8 samples, 0.05%)</title><rect x="25.9616%" y="517" width="0.0454%" height="15" fill="rgb(221,29,38)" fg:x="4576" fg:w="8"/><text x="26.2116%" y="527.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (7 samples, 0.04%)</title><rect x="25.9673%" y="501" width="0.0397%" height="15" fill="rgb(206,182,49)" fg:x="4577" fg:w="7"/><text x="26.2173%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (2,226 samples, 12.63%)</title><rect x="13.4234%" y="709" width="12.6291%" height="15" fill="rgb(216,140,1)" fg:x="2366" fg:w="2226"/><text x="13.6734%" y="719.50">&lt;neuralang::MainSta..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (490 samples, 2.78%)</title><rect x="23.2724%" y="693" width="2.7800%" height="15" fill="rgb(232,57,40)" fg:x="4102" fg:w="490"/><text x="23.5224%" y="703.50">gg..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (490 samples, 2.78%)</title><rect x="23.2724%" y="677" width="2.7800%" height="15" fill="rgb(224,186,18)" fg:x="4102" fg:w="490"/><text x="23.5224%" y="687.50">&lt;a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (490 samples, 2.78%)</title><rect x="23.2724%" y="661" width="2.7800%" height="15" fill="rgb(215,121,11)" fg:x="4102" fg:w="490"/><text x="23.5224%" y="671.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (490 samples, 2.78%)</title><rect x="23.2724%" y="645" width="2.7800%" height="15" fill="rgb(245,147,10)" fg:x="4102" fg:w="490"/><text x="23.5224%" y="655.50">al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (489 samples, 2.77%)</title><rect x="23.2781%" y="629" width="2.7743%" height="15" fill="rgb(238,153,13)" fg:x="4103" fg:w="489"/><text x="23.5281%" y="639.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (489 samples, 2.77%)</title><rect x="23.2781%" y="613" width="2.7743%" height="15" fill="rgb(233,108,0)" fg:x="4103" fg:w="489"/><text x="23.5281%" y="623.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (485 samples, 2.75%)</title><rect x="23.3008%" y="597" width="2.7516%" height="15" fill="rgb(212,157,17)" fg:x="4107" fg:w="485"/><text x="23.5508%" y="607.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (436 samples, 2.47%)</title><rect x="23.5788%" y="581" width="2.4736%" height="15" fill="rgb(225,213,38)" fg:x="4156" fg:w="436"/><text x="23.8288%" y="591.50">co..</text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (292 samples, 1.66%)</title><rect x="24.3958%" y="565" width="1.6566%" height="15" fill="rgb(248,16,11)" fg:x="4300" fg:w="292"/><text x="24.6458%" y="575.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (253 samples, 1.44%)</title><rect x="24.6170%" y="549" width="1.4354%" height="15" fill="rgb(241,33,4)" fg:x="4339" fg:w="253"/><text x="24.8670%" y="559.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (40 samples, 0.23%)</title><rect x="25.8255%" y="533" width="0.2269%" height="15" fill="rgb(222,26,43)" fg:x="4552" fg:w="40"/><text x="26.0755%" y="543.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (8 samples, 0.05%)</title><rect x="26.0070%" y="517" width="0.0454%" height="15" fill="rgb(243,29,36)" fg:x="4584" fg:w="8"/><text x="26.2570%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (8 samples, 0.05%)</title><rect x="26.0070%" y="501" width="0.0454%" height="15" fill="rgb(241,9,27)" fg:x="4584" fg:w="8"/><text x="26.2570%" y="511.50"></text></g><g><title>__sincosf_fma (8 samples, 0.05%)</title><rect x="26.0070%" y="485" width="0.0454%" height="15" fill="rgb(205,117,26)" fg:x="4584" fg:w="8"/><text x="26.2570%" y="495.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (458 samples, 2.60%)</title><rect x="26.0638%" y="677" width="2.5984%" height="15" fill="rgb(209,80,39)" fg:x="4594" fg:w="458"/><text x="26.3138%" y="687.50">&lt;n..</text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="28.6338%" y="661" width="0.0284%" height="15" fill="rgb(239,155,6)" fg:x="5047" fg:w="5"/><text x="28.8838%" y="671.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,501 samples, 14.19%)</title><rect x="33.0081%" y="661" width="14.1893%" height="15" fill="rgb(212,104,12)" fg:x="5818" fg:w="2501"/><text x="33.2581%" y="671.50">&lt;&amp;alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,501 samples, 14.19%)</title><rect x="33.0081%" y="645" width="14.1893%" height="15" fill="rgb(234,204,3)" fg:x="5818" fg:w="2501"/><text x="33.2581%" y="655.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (8 samples, 0.05%)</title><rect x="47.1973%" y="629" width="0.0454%" height="15" fill="rgb(251,218,7)" fg:x="8319" fg:w="8"/><text x="47.4473%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (31 samples, 0.18%)</title><rect x="47.1973%" y="661" width="0.1759%" height="15" fill="rgb(221,81,32)" fg:x="8319" fg:w="31"/><text x="47.4473%" y="671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (31 samples, 0.18%)</title><rect x="47.1973%" y="645" width="0.1759%" height="15" fill="rgb(214,152,26)" fg:x="8319" fg:w="31"/><text x="47.4473%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23 samples, 0.13%)</title><rect x="47.2427%" y="629" width="0.1305%" height="15" fill="rgb(223,22,3)" fg:x="8327" fg:w="23"/><text x="47.4927%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="47.3619%" y="613" width="0.0113%" height="15" fill="rgb(207,174,7)" fg:x="8348" fg:w="2"/><text x="47.6119%" y="623.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.12%)</title><rect x="47.3732%" y="645" width="0.1248%" height="15" fill="rgb(224,19,52)" fg:x="8350" fg:w="22"/><text x="47.6232%" y="655.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (16 samples, 0.09%)</title><rect x="47.4072%" y="629" width="0.0908%" height="15" fill="rgb(228,24,14)" fg:x="8356" fg:w="16"/><text x="47.6572%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (10 samples, 0.06%)</title><rect x="47.4980%" y="581" width="0.0567%" height="15" fill="rgb(230,153,43)" fg:x="8372" fg:w="10"/><text x="47.7480%" y="591.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.19%)</title><rect x="47.3732%" y="661" width="0.1929%" height="15" fill="rgb(231,106,12)" fg:x="8350" fg:w="34"/><text x="47.6232%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.07%)</title><rect x="47.4980%" y="645" width="0.0681%" height="15" fill="rgb(215,92,2)" fg:x="8372" fg:w="12"/><text x="47.7480%" y="655.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (12 samples, 0.07%)</title><rect x="47.4980%" y="629" width="0.0681%" height="15" fill="rgb(249,143,25)" fg:x="8372" fg:w="12"/><text x="47.7480%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (12 samples, 0.07%)</title><rect x="47.4980%" y="613" width="0.0681%" height="15" fill="rgb(252,7,35)" fg:x="8372" fg:w="12"/><text x="47.7480%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (12 samples, 0.07%)</title><rect x="47.4980%" y="597" width="0.0681%" height="15" fill="rgb(216,69,40)" fg:x="8372" fg:w="12"/><text x="47.7480%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.01%)</title><rect x="47.5547%" y="581" width="0.0113%" height="15" fill="rgb(240,36,33)" fg:x="8382" fg:w="2"/><text x="47.8047%" y="591.50"></text></g><g><title>[unknown] (48 samples, 0.27%)</title><rect x="49.0639%" y="645" width="0.2723%" height="15" fill="rgb(231,128,14)" fg:x="8648" fg:w="48"/><text x="49.3139%" y="655.50"></text></g><g><title>[unknown] (22 samples, 0.12%)</title><rect x="49.2114%" y="629" width="0.1248%" height="15" fill="rgb(245,143,14)" fg:x="8674" fg:w="22"/><text x="49.4614%" y="639.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="49.2227%" y="613" width="0.1135%" height="15" fill="rgb(222,130,28)" fg:x="8676" fg:w="20"/><text x="49.4727%" y="623.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="49.2227%" y="597" width="0.1135%" height="15" fill="rgb(212,10,48)" fg:x="8676" fg:w="20"/><text x="49.4727%" y="607.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="49.2398%" y="581" width="0.0964%" height="15" fill="rgb(254,118,45)" fg:x="8679" fg:w="17"/><text x="49.4898%" y="591.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="49.2454%" y="565" width="0.0908%" height="15" fill="rgb(228,6,45)" fg:x="8680" fg:w="16"/><text x="49.4954%" y="575.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="49.2454%" y="549" width="0.0908%" height="15" fill="rgb(241,18,35)" fg:x="8680" fg:w="16"/><text x="49.4954%" y="559.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="49.2511%" y="533" width="0.0851%" height="15" fill="rgb(227,214,53)" fg:x="8681" fg:w="15"/><text x="49.5011%" y="543.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="49.2625%" y="517" width="0.0738%" height="15" fill="rgb(224,107,51)" fg:x="8683" fg:w="13"/><text x="49.5125%" y="527.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="49.2851%" y="501" width="0.0511%" height="15" fill="rgb(248,60,28)" fg:x="8687" fg:w="9"/><text x="49.5351%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="49.2965%" y="485" width="0.0397%" height="15" fill="rgb(249,101,23)" fg:x="8689" fg:w="7"/><text x="49.5465%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="49.3078%" y="469" width="0.0284%" height="15" fill="rgb(228,51,19)" fg:x="8691" fg:w="5"/><text x="49.5578%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.3192%" y="453" width="0.0170%" height="15" fill="rgb(213,20,6)" fg:x="8693" fg:w="3"/><text x="49.5692%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (320 samples, 1.82%)</title><rect x="47.5661%" y="661" width="1.8155%" height="15" fill="rgb(212,124,10)" fg:x="8384" fg:w="320"/><text x="47.8161%" y="671.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (8 samples, 0.05%)</title><rect x="49.3362%" y="645" width="0.0454%" height="15" fill="rgb(248,3,40)" fg:x="8696" fg:w="8"/><text x="49.5862%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (8 samples, 0.05%)</title><rect x="49.3362%" y="629" width="0.0454%" height="15" fill="rgb(223,178,23)" fg:x="8696" fg:w="8"/><text x="49.5862%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (8 samples, 0.05%)</title><rect x="49.3362%" y="613" width="0.0454%" height="15" fill="rgb(240,132,45)" fg:x="8696" fg:w="8"/><text x="49.5862%" y="623.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (31 samples, 0.18%)</title><rect x="49.3816%" y="661" width="0.1759%" height="15" fill="rgb(245,164,36)" fg:x="8704" fg:w="31"/><text x="49.6316%" y="671.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="49.5575%" y="661" width="0.0794%" height="15" fill="rgb(231,188,53)" fg:x="8735" fg:w="14"/><text x="49.8075%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.6199%" y="645" width="0.0170%" height="15" fill="rgb(237,198,39)" fg:x="8746" fg:w="3"/><text x="49.8699%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.6199%" y="629" width="0.0170%" height="15" fill="rgb(223,120,35)" fg:x="8746" fg:w="3"/><text x="49.8699%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="49.6256%" y="613" width="0.0113%" height="15" fill="rgb(253,107,49)" fg:x="8747" fg:w="2"/><text x="49.8756%" y="623.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (6 samples, 0.03%)</title><rect x="49.6482%" y="613" width="0.0340%" height="15" fill="rgb(216,44,31)" fg:x="8751" fg:w="6"/><text x="49.8982%" y="623.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (8 samples, 0.05%)</title><rect x="49.6482%" y="629" width="0.0454%" height="15" fill="rgb(253,87,21)" fg:x="8751" fg:w="8"/><text x="49.8982%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.01%)</title><rect x="49.6823%" y="613" width="0.0113%" height="15" fill="rgb(226,18,2)" fg:x="8757" fg:w="2"/><text x="49.9323%" y="623.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (23 samples, 0.13%)</title><rect x="49.6369%" y="661" width="0.1305%" height="15" fill="rgb(216,8,46)" fg:x="8749" fg:w="23"/><text x="49.8869%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.13%)</title><rect x="49.6369%" y="645" width="0.1305%" height="15" fill="rgb(226,140,39)" fg:x="8749" fg:w="23"/><text x="49.8869%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (13 samples, 0.07%)</title><rect x="49.6936%" y="629" width="0.0738%" height="15" fill="rgb(221,194,54)" fg:x="8759" fg:w="13"/><text x="49.9436%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (14 samples, 0.08%)</title><rect x="49.7731%" y="661" width="0.0794%" height="15" fill="rgb(213,92,11)" fg:x="8773" fg:w="14"/><text x="50.0231%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (14 samples, 0.08%)</title><rect x="49.7731%" y="645" width="0.0794%" height="15" fill="rgb(229,162,46)" fg:x="8773" fg:w="14"/><text x="50.0231%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="49.8355%" y="629" width="0.0170%" height="15" fill="rgb(214,111,36)" fg:x="8784" fg:w="3"/><text x="50.0855%" y="639.50"></text></g><g><title>neuralang::balls_collide (9 samples, 0.05%)</title><rect x="49.8525%" y="661" width="0.0511%" height="15" fill="rgb(207,6,21)" fg:x="8787" fg:w="9"/><text x="50.1025%" y="671.50"></text></g><g><title>neuralang::dist_2d (6 samples, 0.03%)</title><rect x="49.8695%" y="645" width="0.0340%" height="15" fill="rgb(213,127,38)" fg:x="8790" fg:w="6"/><text x="50.1195%" y="655.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (5 samples, 0.03%)</title><rect x="49.8752%" y="629" width="0.0284%" height="15" fill="rgb(238,118,32)" fg:x="8791" fg:w="5"/><text x="50.1252%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="49.9433%" y="645" width="0.0113%" height="15" fill="rgb(240,139,39)" fg:x="8803" fg:w="2"/><text x="50.1933%" y="655.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (2 samples, 0.01%)</title><rect x="49.9830%" y="629" width="0.0113%" height="15" fill="rgb(235,10,37)" fg:x="8810" fg:w="2"/><text x="50.2330%" y="639.50"></text></g><g><title>neuralang::food_collide (23 samples, 0.13%)</title><rect x="49.9036%" y="661" width="0.1305%" height="15" fill="rgb(249,171,38)" fg:x="8796" fg:w="23"/><text x="50.1536%" y="671.50"></text></g><g><title>neuralang::dist_2d (14 samples, 0.08%)</title><rect x="49.9546%" y="645" width="0.0794%" height="15" fill="rgb(242,144,32)" fg:x="8805" fg:w="14"/><text x="50.2046%" y="655.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (7 samples, 0.04%)</title><rect x="49.9943%" y="629" width="0.0397%" height="15" fill="rgb(217,117,21)" fg:x="8812" fg:w="7"/><text x="50.2443%" y="639.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="52.2410%" y="629" width="0.0624%" height="15" fill="rgb(249,87,1)" fg:x="9208" fg:w="11"/><text x="52.4910%" y="639.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="52.2864%" y="613" width="0.0170%" height="15" fill="rgb(248,196,48)" fg:x="9216" fg:w="3"/><text x="52.5364%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="52.2864%" y="597" width="0.0170%" height="15" fill="rgb(251,206,33)" fg:x="9216" fg:w="3"/><text x="52.5364%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="52.2864%" y="581" width="0.0170%" height="15" fill="rgb(232,141,28)" fg:x="9216" fg:w="3"/><text x="52.5364%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.2921%" y="565" width="0.0113%" height="15" fill="rgb(209,167,14)" fg:x="9217" fg:w="2"/><text x="52.5421%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.2921%" y="549" width="0.0113%" height="15" fill="rgb(225,11,50)" fg:x="9217" fg:w="2"/><text x="52.5421%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.2921%" y="533" width="0.0113%" height="15" fill="rgb(209,50,20)" fg:x="9217" fg:w="2"/><text x="52.5421%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.2921%" y="517" width="0.0113%" height="15" fill="rgb(212,17,46)" fg:x="9217" fg:w="2"/><text x="52.5421%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.2921%" y="501" width="0.0113%" height="15" fill="rgb(216,101,39)" fg:x="9217" fg:w="2"/><text x="52.5421%" y="511.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powi (7 samples, 0.04%)</title><rect x="52.3034%" y="629" width="0.0397%" height="15" fill="rgb(212,228,48)" fg:x="9219" fg:w="7"/><text x="52.5534%" y="639.50"></text></g><g><title>neuralang::obstruct_collide (423 samples, 2.40%)</title><rect x="50.0340%" y="661" width="2.3999%" height="15" fill="rgb(250,6,50)" fg:x="8819" fg:w="423"/><text x="50.2840%" y="671.50">ne..</text></g><g><title>neuralang::dist_2d (52 samples, 0.30%)</title><rect x="52.1389%" y="645" width="0.2950%" height="15" fill="rgb(250,160,48)" fg:x="9190" fg:w="52"/><text x="52.3889%" y="655.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (16 samples, 0.09%)</title><rect x="52.3431%" y="629" width="0.0908%" height="15" fill="rgb(244,216,33)" fg:x="9226" fg:w="16"/><text x="52.5931%" y="639.50"></text></g><g><title>neuralang::scale_2d (3 samples, 0.02%)</title><rect x="52.4339%" y="661" width="0.0170%" height="15" fill="rgb(207,157,5)" fg:x="9242" fg:w="3"/><text x="52.6839%" y="671.50"></text></g><g><title>neuralang::two_to_one (19 samples, 0.11%)</title><rect x="52.4509%" y="661" width="0.1078%" height="15" fill="rgb(228,199,8)" fg:x="9245" fg:w="19"/><text x="52.7009%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="52.5417%" y="645" width="0.0170%" height="15" fill="rgb(227,80,20)" fg:x="9261" fg:w="3"/><text x="52.7917%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.5474%" y="629" width="0.0113%" height="15" fill="rgb(222,9,33)" fg:x="9262" fg:w="2"/><text x="52.7974%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.5474%" y="613" width="0.0113%" height="15" fill="rgb(239,44,28)" fg:x="9262" fg:w="2"/><text x="52.7974%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.5474%" y="597" width="0.0113%" height="15" fill="rgb(249,187,43)" fg:x="9262" fg:w="2"/><text x="52.7974%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.5474%" y="581" width="0.0113%" height="15" fill="rgb(216,141,28)" fg:x="9262" fg:w="2"/><text x="52.7974%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.5474%" y="565" width="0.0113%" height="15" fill="rgb(230,154,53)" fg:x="9262" fg:w="2"/><text x="52.7974%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="52.5474%" y="549" width="0.0113%" height="15" fill="rgb(227,82,4)" fg:x="9262" fg:w="2"/><text x="52.7974%" y="559.50"></text></g><g><title>neuralang::World::check_collisions (4,215 samples, 23.91%)</title><rect x="28.6622%" y="677" width="23.9135%" height="15" fill="rgb(220,107,16)" fg:x="5052" fg:w="4215"/><text x="28.9122%" y="687.50">neuralang::World::check_collisions</text></g><g><title>splitmut::SplitMut::get2_mut (3 samples, 0.02%)</title><rect x="52.5587%" y="661" width="0.0170%" height="15" fill="rgb(207,187,2)" fg:x="9264" fg:w="3"/><text x="52.8087%" y="671.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (2 samples, 0.01%)</title><rect x="52.7516%" y="629" width="0.0113%" height="15" fill="rgb(210,162,52)" fg:x="9298" fg:w="2"/><text x="53.0016%" y="639.50"></text></g><g><title>neuralang::add_2d (8 samples, 0.05%)</title><rect x="52.7630%" y="629" width="0.0454%" height="15" fill="rgb(217,216,49)" fg:x="9300" fg:w="8"/><text x="53.0130%" y="639.50"></text></g><g><title>do_cos (11 samples, 0.06%)</title><rect x="52.9502%" y="581" width="0.0624%" height="15" fill="rgb(218,146,49)" fg:x="9333" fg:w="11"/><text x="53.2002%" y="591.50"></text></g><g><title>do_sin (118 samples, 0.67%)</title><rect x="53.0126%" y="581" width="0.6695%" height="15" fill="rgb(216,55,40)" fg:x="9344" fg:w="118"/><text x="53.2626%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="53.6650%" y="565" width="0.0170%" height="15" fill="rgb(208,196,21)" fg:x="9459" fg:w="3"/><text x="53.9150%" y="575.50"></text></g><g><title>libc_feholdsetround_sse_ctx (8 samples, 0.05%)</title><rect x="53.6821%" y="581" width="0.0454%" height="15" fill="rgb(242,117,42)" fg:x="9462" fg:w="8"/><text x="53.9321%" y="591.50"></text></g><g><title>libc_feresetround_sse_ctx (2 samples, 0.01%)</title><rect x="53.7274%" y="581" width="0.0113%" height="15" fill="rgb(210,11,23)" fg:x="9470" fg:w="2"/><text x="53.9774%" y="591.50"></text></g><g><title>neuralang::dir_from_theta (187 samples, 1.06%)</title><rect x="52.8084%" y="629" width="1.0609%" height="15" fill="rgb(217,110,2)" fg:x="9308" fg:w="187"/><text x="53.0584%" y="639.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::cos (187 samples, 1.06%)</title><rect x="52.8084%" y="613" width="1.0609%" height="15" fill="rgb(229,77,54)" fg:x="9308" fg:w="187"/><text x="53.0584%" y="623.50"></text></g><g><title>__sincos (184 samples, 1.04%)</title><rect x="52.8254%" y="597" width="1.0439%" height="15" fill="rgb(218,53,16)" fg:x="9311" fg:w="184"/><text x="53.0754%" y="607.50"></text></g><g><title>reduce_sincos (23 samples, 0.13%)</title><rect x="53.7388%" y="581" width="0.1305%" height="15" fill="rgb(215,38,13)" fg:x="9472" fg:w="23"/><text x="53.9888%" y="591.50"></text></g><g><title>neuralang::oob (19 samples, 0.11%)</title><rect x="53.8693%" y="629" width="0.1078%" height="15" fill="rgb(235,42,18)" fg:x="9495" fg:w="19"/><text x="54.1193%" y="639.50"></text></g><g><title>neuralang::lef_border_trespass (15 samples, 0.09%)</title><rect x="53.8920%" y="613" width="0.0851%" height="15" fill="rgb(219,66,54)" fg:x="9499" fg:w="15"/><text x="54.1420%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (257 samples, 1.46%)</title><rect x="52.5757%" y="661" width="1.4581%" height="15" fill="rgb(222,205,4)" fg:x="9267" fg:w="257"/><text x="52.8257%" y="671.50"></text></g><g><title>neuralang::World::move_balls::{{closure}} (257 samples, 1.46%)</title><rect x="52.5757%" y="645" width="1.4581%" height="15" fill="rgb(227,213,46)" fg:x="9267" fg:w="257"/><text x="52.8257%" y="655.50"></text></g><g><title>neuralang::scale_2d (10 samples, 0.06%)</title><rect x="53.9771%" y="629" width="0.0567%" height="15" fill="rgb(250,145,42)" fg:x="9514" fg:w="10"/><text x="54.2271%" y="639.50"></text></g><g><title>neuralang::World::move_balls (260 samples, 1.48%)</title><rect x="52.5757%" y="677" width="1.4751%" height="15" fill="rgb(219,15,2)" fg:x="9267" fg:w="260"/><text x="52.8257%" y="687.50"></text></g><g><title>rand::rngs::thread::thread_rng (3 samples, 0.02%)</title><rect x="54.0338%" y="661" width="0.0170%" height="15" fill="rgb(231,181,52)" fg:x="9524" fg:w="3"/><text x="54.2838%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="54.0338%" y="645" width="0.0170%" height="15" fill="rgb(235,1,42)" fg:x="9524" fg:w="3"/><text x="54.2838%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.02%)</title><rect x="54.0338%" y="629" width="0.0170%" height="15" fill="rgb(249,88,27)" fg:x="9524" fg:w="3"/><text x="54.2838%" y="639.50"></text></g><g><title>rand::rngs::thread::thread_rng::{{closure}} (2 samples, 0.01%)</title><rect x="54.0395%" y="613" width="0.0113%" height="15" fill="rgb(235,145,16)" fg:x="9525" fg:w="2"/><text x="54.2895%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="54.0395%" y="597" width="0.0113%" height="15" fill="rgb(237,114,19)" fg:x="9525" fg:w="2"/><text x="54.2895%" y="607.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.01%)</title><rect x="54.0395%" y="581" width="0.0113%" height="15" fill="rgb(238,51,50)" fg:x="9525" fg:w="2"/><text x="54.2895%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.02%)</title><rect x="54.1530%" y="661" width="0.0170%" height="15" fill="rgb(205,194,25)" fg:x="9545" fg:w="3"/><text x="54.4030%" y="671.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (3 samples, 0.02%)</title><rect x="54.1530%" y="645" width="0.0170%" height="15" fill="rgb(215,203,17)" fg:x="9545" fg:w="3"/><text x="54.4030%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (3 samples, 0.02%)</title><rect x="54.1530%" y="629" width="0.0170%" height="15" fill="rgb(233,112,49)" fg:x="9545" fg:w="3"/><text x="54.4030%" y="639.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (17 samples, 0.10%)</title><rect x="54.1700%" y="661" width="0.0964%" height="15" fill="rgb(241,130,26)" fg:x="9548" fg:w="17"/><text x="54.4200%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="54.2891%" y="597" width="0.0227%" height="15" fill="rgb(252,223,19)" fg:x="9569" fg:w="4"/><text x="54.5391%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (5 samples, 0.03%)</title><rect x="54.2891%" y="645" width="0.0284%" height="15" fill="rgb(211,95,25)" fg:x="9569" fg:w="5"/><text x="54.5391%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.03%)</title><rect x="54.2891%" y="629" width="0.0284%" height="15" fill="rgb(251,182,27)" fg:x="9569" fg:w="5"/><text x="54.5391%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.03%)</title><rect x="54.2891%" y="613" width="0.0284%" height="15" fill="rgb(238,24,4)" fg:x="9569" fg:w="5"/><text x="54.5391%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.09%)</title><rect x="54.2664%" y="661" width="0.0851%" height="15" fill="rgb(224,220,25)" fg:x="9565" fg:w="15"/><text x="54.5164%" y="671.50"></text></g><g><title>core::ptr::write (6 samples, 0.03%)</title><rect x="54.3175%" y="645" width="0.0340%" height="15" fill="rgb(239,133,26)" fg:x="9574" fg:w="6"/><text x="54.5675%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (30 samples, 0.17%)</title><rect x="54.3515%" y="629" width="0.1702%" height="15" fill="rgb(211,94,48)" fg:x="9580" fg:w="30"/><text x="54.6015%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (72 samples, 0.41%)</title><rect x="54.3515%" y="661" width="0.4085%" height="15" fill="rgb(239,87,6)" fg:x="9580" fg:w="72"/><text x="54.6015%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (72 samples, 0.41%)</title><rect x="54.3515%" y="645" width="0.4085%" height="15" fill="rgb(227,62,0)" fg:x="9580" fg:w="72"/><text x="54.6015%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (41 samples, 0.23%)</title><rect x="54.5274%" y="629" width="0.2326%" height="15" fill="rgb(211,226,4)" fg:x="9611" fg:w="41"/><text x="54.7774%" y="639.50"></text></g><g><title>__fmod (36 samples, 0.20%)</title><rect x="54.9926%" y="645" width="0.2042%" height="15" fill="rgb(253,38,52)" fg:x="9693" fg:w="36"/><text x="55.2426%" y="655.50"></text></g><g><title>neuralang::pos_to_cell (420 samples, 2.38%)</title><rect x="54.7714%" y="661" width="2.3828%" height="15" fill="rgb(229,126,40)" fg:x="9654" fg:w="420"/><text x="55.0214%" y="671.50">ne..</text></g><g><title>__ieee754_fmod (345 samples, 1.96%)</title><rect x="55.1969%" y="645" width="1.9573%" height="15" fill="rgb(229,165,44)" fg:x="9729" fg:w="345"/><text x="55.4469%" y="655.50">_..</text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="57.1429%" y="629" width="0.0113%" height="15" fill="rgb(247,95,47)" fg:x="10072" fg:w="2"/><text x="57.3929%" y="639.50"></text></g><g><title>neuralang::World::step (5,483 samples, 31.11%)</title><rect x="26.0638%" y="693" width="31.1075%" height="15" fill="rgb(216,140,30)" fg:x="4594" fg:w="5483"/><text x="26.3138%" y="703.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (550 samples, 3.12%)</title><rect x="54.0508%" y="677" width="3.1204%" height="15" fill="rgb(246,214,8)" fg:x="9527" fg:w="550"/><text x="54.3008%" y="687.50">neu..</text></g><g><title>neuralang::same_index (3 samples, 0.02%)</title><rect x="57.1542%" y="661" width="0.0170%" height="15" fill="rgb(227,224,15)" fg:x="10074" fg:w="3"/><text x="57.4042%" y="671.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (6 samples, 0.03%)</title><rect x="57.1712%" y="533" width="0.0340%" height="15" fill="rgb(233,175,4)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="543.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (6 samples, 0.03%)</title><rect x="57.1712%" y="517" width="0.0340%" height="15" fill="rgb(221,66,45)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="527.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (6 samples, 0.03%)</title><rect x="57.1712%" y="501" width="0.0340%" height="15" fill="rgb(221,178,18)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (6 samples, 0.03%)</title><rect x="57.1712%" y="485" width="0.0340%" height="15" fill="rgb(213,81,29)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="495.50"></text></g><g><title>__GI___libc_write (6 samples, 0.03%)</title><rect x="57.1712%" y="469" width="0.0340%" height="15" fill="rgb(220,89,49)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="479.50"></text></g><g><title>__GI___libc_write (6 samples, 0.03%)</title><rect x="57.1712%" y="453" width="0.0340%" height="15" fill="rgb(227,60,33)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="437" width="0.0340%" height="15" fill="rgb(205,113,12)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="421" width="0.0340%" height="15" fill="rgb(211,32,1)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="405" width="0.0340%" height="15" fill="rgb(246,2,12)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="389" width="0.0340%" height="15" fill="rgb(243,37,27)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="373" width="0.0340%" height="15" fill="rgb(248,211,31)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="357" width="0.0340%" height="15" fill="rgb(242,146,47)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="341" width="0.0340%" height="15" fill="rgb(206,70,20)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="57.1712%" y="325" width="0.0340%" height="15" fill="rgb(215,10,51)" fg:x="10077" fg:w="6"/><text x="57.4212%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="57.1769%" y="309" width="0.0284%" height="15" fill="rgb(243,178,53)" fg:x="10078" fg:w="5"/><text x="57.4269%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="57.1769%" y="293" width="0.0284%" height="15" fill="rgb(233,221,20)" fg:x="10078" fg:w="5"/><text x="57.4269%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="57.1769%" y="277" width="0.0284%" height="15" fill="rgb(218,95,35)" fg:x="10078" fg:w="5"/><text x="57.4269%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="57.1769%" y="261" width="0.0284%" height="15" fill="rgb(229,13,5)" fg:x="10078" fg:w="5"/><text x="57.4269%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="57.1769%" y="245" width="0.0284%" height="15" fill="rgb(252,164,30)" fg:x="10078" fg:w="5"/><text x="57.4269%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="57.1826%" y="229" width="0.0227%" height="15" fill="rgb(232,68,36)" fg:x="10079" fg:w="4"/><text x="57.4326%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="57.1826%" y="213" width="0.0227%" height="15" fill="rgb(219,59,54)" fg:x="10079" fg:w="4"/><text x="57.4326%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="57.1882%" y="197" width="0.0170%" height="15" fill="rgb(250,92,33)" fg:x="10080" fg:w="3"/><text x="57.4382%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="57.1882%" y="181" width="0.0170%" height="15" fill="rgb(229,162,54)" fg:x="10080" fg:w="3"/><text x="57.4382%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="57.1882%" y="165" width="0.0170%" height="15" fill="rgb(244,114,52)" fg:x="10080" fg:w="3"/><text x="57.4382%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="57.1882%" y="149" width="0.0170%" height="15" fill="rgb(212,211,43)" fg:x="10080" fg:w="3"/><text x="57.4382%" y="159.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (5,492 samples, 31.16%)</title><rect x="26.0524%" y="709" width="31.1585%" height="15" fill="rgb(226,147,8)" fg:x="4592" fg:w="5492"/><text x="26.3024%" y="719.50">&lt;neuralang::MainState as ggez::event::EventHandler..</text></g><g><title>std::io::stdio::_print (7 samples, 0.04%)</title><rect x="57.1712%" y="693" width="0.0397%" height="15" fill="rgb(226,23,13)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="703.50"></text></g><g><title>std::io::stdio::print_to (7 samples, 0.04%)</title><rect x="57.1712%" y="677" width="0.0397%" height="15" fill="rgb(240,63,4)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="687.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.04%)</title><rect x="57.1712%" y="661" width="0.0397%" height="15" fill="rgb(221,1,32)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="671.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (7 samples, 0.04%)</title><rect x="57.1712%" y="645" width="0.0397%" height="15" fill="rgb(242,117,10)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="655.50"></text></g><g><title>std::io::Write::write_fmt (7 samples, 0.04%)</title><rect x="57.1712%" y="629" width="0.0397%" height="15" fill="rgb(249,172,44)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="639.50"></text></g><g><title>core::fmt::write (7 samples, 0.04%)</title><rect x="57.1712%" y="613" width="0.0397%" height="15" fill="rgb(244,46,45)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="623.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.04%)</title><rect x="57.1712%" y="597" width="0.0397%" height="15" fill="rgb(206,43,17)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="607.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.04%)</title><rect x="57.1712%" y="581" width="0.0397%" height="15" fill="rgb(239,218,39)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="591.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (7 samples, 0.04%)</title><rect x="57.1712%" y="565" width="0.0397%" height="15" fill="rgb(208,169,54)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="575.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (7 samples, 0.04%)</title><rect x="57.1712%" y="549" width="0.0397%" height="15" fill="rgb(247,25,42)" fg:x="10077" fg:w="7"/><text x="57.4212%" y="559.50"></text></g><g><title>&lt;ggez::graphics::context::FrameArenas as core::default::Default&gt;::default (7 samples, 0.04%)</title><rect x="57.2393%" y="693" width="0.0397%" height="15" fill="rgb(226,23,31)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="703.50"></text></g><g><title>&lt;typed_arena::Arena&lt;T&gt; as core::default::Default&gt;::default (7 samples, 0.04%)</title><rect x="57.2393%" y="677" width="0.0397%" height="15" fill="rgb(247,16,28)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="687.50"></text></g><g><title>typed_arena::Arena&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="57.2393%" y="661" width="0.0397%" height="15" fill="rgb(231,147,38)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="671.50"></text></g><g><title>typed_arena::Arena&lt;T&gt;::with_capacity (7 samples, 0.04%)</title><rect x="57.2393%" y="645" width="0.0397%" height="15" fill="rgb(253,81,48)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.04%)</title><rect x="57.2393%" y="629" width="0.0397%" height="15" fill="rgb(249,222,43)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="57.2393%" y="613" width="0.0397%" height="15" fill="rgb(221,3,27)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="57.2393%" y="597" width="0.0397%" height="15" fill="rgb(228,180,5)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.04%)</title><rect x="57.2393%" y="581" width="0.0397%" height="15" fill="rgb(227,131,42)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="57.2393%" y="565" width="0.0397%" height="15" fill="rgb(212,3,39)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="57.2393%" y="549" width="0.0397%" height="15" fill="rgb(226,45,5)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="559.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="57.2393%" y="533" width="0.0397%" height="15" fill="rgb(215,167,45)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="543.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="57.2393%" y="517" width="0.0397%" height="15" fill="rgb(250,218,53)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="527.50"></text></g><g><title>tcache_get (7 samples, 0.04%)</title><rect x="57.2393%" y="501" width="0.0397%" height="15" fill="rgb(207,140,0)" fg:x="10089" fg:w="7"/><text x="57.4893%" y="511.50"></text></g><g><title>&lt;ggez::graphics::image::Image as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="57.2790%" y="693" width="0.0227%" height="15" fill="rgb(238,133,51)" fg:x="10096" fg:w="4"/><text x="57.5290%" y="703.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="57.2790%" y="677" width="0.0227%" height="15" fill="rgb(218,203,53)" fg:x="10096" fg:w="4"/><text x="57.5290%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="57.2790%" y="661" width="0.0227%" height="15" fill="rgb(226,184,25)" fg:x="10096" fg:w="4"/><text x="57.5290%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.02%)</title><rect x="57.2790%" y="645" width="0.0227%" height="15" fill="rgb(231,121,21)" fg:x="10096" fg:w="4"/><text x="57.5290%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.02%)</title><rect x="57.2790%" y="629" width="0.0227%" height="15" fill="rgb(251,14,34)" fg:x="10096" fg:w="4"/><text x="57.5290%" y="639.50"></text></g><g><title>&lt;wgpu_types::Limits as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="57.3358%" y="629" width="0.0170%" height="15" fill="rgb(249,193,11)" fg:x="10106" fg:w="3"/><text x="57.5858%" y="639.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::new (4 samples, 0.02%)</title><rect x="57.3584%" y="629" width="0.0227%" height="15" fill="rgb(220,172,37)" fg:x="10110" fg:w="4"/><text x="57.6084%" y="639.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="57.3698%" y="613" width="0.0113%" height="15" fill="rgb(231,229,43)" fg:x="10112" fg:w="2"/><text x="57.6198%" y="623.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::new (2 samples, 0.01%)</title><rect x="57.3698%" y="597" width="0.0113%" height="15" fill="rgb(250,161,5)" fg:x="10112" fg:w="2"/><text x="57.6198%" y="607.50"></text></g><g><title>wgpu_core::track::texture::TextureStateSet::new (2 samples, 0.01%)</title><rect x="57.3698%" y="581" width="0.0113%" height="15" fill="rgb(218,225,18)" fg:x="10112" fg:w="2"/><text x="57.6198%" y="591.50"></text></g><g><title>wgpu_core::device::CommandAllocator&lt;A&gt;::acquire_encoder (2 samples, 0.01%)</title><rect x="57.3811%" y="629" width="0.0113%" height="15" fill="rgb(245,45,42)" fg:x="10114" fg:w="2"/><text x="57.6311%" y="639.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (6 samples, 0.03%)</title><rect x="57.3925%" y="629" width="0.0340%" height="15" fill="rgb(211,115,1)" fg:x="10116" fg:w="6"/><text x="57.6425%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (5 samples, 0.03%)</title><rect x="57.3982%" y="613" width="0.0284%" height="15" fill="rgb(248,133,52)" fg:x="10117" fg:w="5"/><text x="57.6482%" y="623.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (4 samples, 0.02%)</title><rect x="57.4038%" y="597" width="0.0227%" height="15" fill="rgb(238,100,21)" fg:x="10118" fg:w="4"/><text x="57.6538%" y="607.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="57.4038%" y="581" width="0.0227%" height="15" fill="rgb(247,144,11)" fg:x="10118" fg:w="4"/><text x="57.6538%" y="591.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="57.4038%" y="565" width="0.0227%" height="15" fill="rgb(206,164,16)" fg:x="10118" fg:w="4"/><text x="57.6538%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="57.4038%" y="549" width="0.0227%" height="15" fill="rgb(222,34,3)" fg:x="10118" fg:w="4"/><text x="57.6538%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_command_encoder (21 samples, 0.12%)</title><rect x="57.3131%" y="661" width="0.1191%" height="15" fill="rgb(248,82,4)" fg:x="10102" fg:w="21"/><text x="57.5631%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (18 samples, 0.10%)</title><rect x="57.3301%" y="645" width="0.1021%" height="15" fill="rgb(228,81,46)" fg:x="10105" fg:w="18"/><text x="57.5801%" y="655.50"></text></g><g><title>wgpu::Device::create_command_encoder (24 samples, 0.14%)</title><rect x="57.3131%" y="693" width="0.1362%" height="15" fill="rgb(227,67,47)" fg:x="10102" fg:w="24"/><text x="57.5631%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (24 samples, 0.14%)</title><rect x="57.3131%" y="677" width="0.1362%" height="15" fill="rgb(215,93,53)" fg:x="10102" fg:w="24"/><text x="57.5631%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="57.4322%" y="661" width="0.0170%" height="15" fill="rgb(248,194,39)" fg:x="10123" fg:w="3"/><text x="57.6822%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="57.4322%" y="645" width="0.0170%" height="15" fill="rgb(215,5,19)" fg:x="10123" fg:w="3"/><text x="57.6822%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="57.4322%" y="629" width="0.0170%" height="15" fill="rgb(226,215,51)" fg:x="10123" fg:w="3"/><text x="57.6822%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="57.4322%" y="613" width="0.0170%" height="15" fill="rgb(225,56,26)" fg:x="10123" fg:w="3"/><text x="57.6822%" y="623.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="57.4322%" y="597" width="0.0170%" height="15" fill="rgb(222,75,29)" fg:x="10123" fg:w="3"/><text x="57.6822%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="57.4322%" y="581" width="0.0170%" height="15" fill="rgb(236,139,6)" fg:x="10123" fg:w="3"/><text x="57.6822%" y="591.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="57.4379%" y="565" width="0.0113%" height="15" fill="rgb(223,137,36)" fg:x="10124" fg:w="2"/><text x="57.6879%" y="575.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="57.4946%" y="645" width="0.0113%" height="15" fill="rgb(226,99,2)" fg:x="10134" fg:w="2"/><text x="57.7446%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="57.4946%" y="629" width="0.0113%" height="15" fill="rgb(206,133,23)" fg:x="10134" fg:w="2"/><text x="57.7446%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="57.4946%" y="613" width="0.0113%" height="15" fill="rgb(243,173,15)" fg:x="10134" fg:w="2"/><text x="57.7446%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="57.4946%" y="597" width="0.0113%" height="15" fill="rgb(228,69,28)" fg:x="10134" fg:w="2"/><text x="57.7446%" y="607.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.03%)</title><rect x="57.5854%" y="629" width="0.0284%" height="15" fill="rgb(212,51,22)" fg:x="10150" fg:w="5"/><text x="57.8354%" y="639.50"></text></g><g><title>&lt;wgpu_hal::FormatAspects as core::convert::From&lt;wgpu_types::TextureFormat&gt;&gt;::from (5 samples, 0.03%)</title><rect x="57.5854%" y="613" width="0.0284%" height="15" fill="rgb(227,113,0)" fg:x="10150" fg:w="5"/><text x="57.8354%" y="623.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="57.6138%" y="613" width="0.0113%" height="15" fill="rgb(252,84,27)" fg:x="10155" fg:w="2"/><text x="57.8638%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="57.6138%" y="597" width="0.0113%" height="15" fill="rgb(223,145,39)" fg:x="10155" fg:w="2"/><text x="57.8638%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="57.6138%" y="581" width="0.0113%" height="15" fill="rgb(239,219,30)" fg:x="10155" fg:w="2"/><text x="57.8638%" y="591.50"></text></g><g><title>&lt;wgpu_core::Stored&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="57.6138%" y="629" width="0.0170%" height="15" fill="rgb(224,196,39)" fg:x="10155" fg:w="3"/><text x="57.8638%" y="639.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Api as wgpu_core::hub::HalApi&gt;::get_surface (2 samples, 0.01%)</title><rect x="57.6364%" y="629" width="0.0113%" height="15" fill="rgb(205,35,43)" fg:x="10159" fg:w="2"/><text x="57.8864%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="57.6478%" y="629" width="0.0170%" height="15" fill="rgb(228,201,21)" fg:x="10161" fg:w="3"/><text x="57.8978%" y="639.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="57.6932%" y="517" width="0.0113%" height="15" fill="rgb(237,118,16)" fg:x="10169" fg:w="2"/><text x="57.9432%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="57.6932%" y="501" width="0.0113%" height="15" fill="rgb(241,17,19)" fg:x="10169" fg:w="2"/><text x="57.9432%" y="511.50"></text></g><g><title>__rust_alloc (3 samples, 0.02%)</title><rect x="57.7045%" y="517" width="0.0170%" height="15" fill="rgb(214,10,25)" fg:x="10171" fg:w="3"/><text x="57.9545%" y="527.50"></text></g><g><title>wgpu_core::LifeGuard::new (7 samples, 0.04%)</title><rect x="57.6932%" y="629" width="0.0397%" height="15" fill="rgb(238,37,29)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="639.50"></text></g><g><title>wgpu_core::RefCount::new (7 samples, 0.04%)</title><rect x="57.6932%" y="613" width="0.0397%" height="15" fill="rgb(253,83,25)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.04%)</title><rect x="57.6932%" y="597" width="0.0397%" height="15" fill="rgb(234,192,12)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.04%)</title><rect x="57.6932%" y="581" width="0.0397%" height="15" fill="rgb(241,216,45)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="57.6932%" y="565" width="0.0397%" height="15" fill="rgb(242,22,33)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="57.6932%" y="549" width="0.0397%" height="15" fill="rgb(231,105,49)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="559.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="57.6932%" y="533" width="0.0397%" height="15" fill="rgb(218,204,15)" fg:x="10169" fg:w="7"/><text x="57.9432%" y="543.50"></text></g><g><title>core::ptr::read_volatile (2 samples, 0.01%)</title><rect x="57.7215%" y="517" width="0.0113%" height="15" fill="rgb(235,138,41)" fg:x="10174" fg:w="2"/><text x="57.9715%" y="527.50"></text></g><g><title>wgpu_core::conv::map_texture_usage (3 samples, 0.02%)</title><rect x="57.7329%" y="629" width="0.0170%" height="15" fill="rgb(246,0,9)" fg:x="10176" fg:w="3"/><text x="57.9829%" y="639.50"></text></g><g><title>wgpu_hal::_::&lt;impl wgpu_hal::TextureUses&gt;::set (3 samples, 0.02%)</title><rect x="57.7329%" y="613" width="0.0170%" height="15" fill="rgb(210,74,4)" fg:x="10176" fg:w="3"/><text x="57.9829%" y="623.50"></text></g><g><title>wgpu_hal::_::InternalBitFlags::set (3 samples, 0.02%)</title><rect x="57.7329%" y="597" width="0.0170%" height="15" fill="rgb(250,60,41)" fg:x="10176" fg:w="3"/><text x="57.9829%" y="607.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (9 samples, 0.05%)</title><rect x="57.7499%" y="629" width="0.0511%" height="15" fill="rgb(220,115,12)" fg:x="10179" fg:w="9"/><text x="57.9999%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (8 samples, 0.05%)</title><rect x="57.7556%" y="613" width="0.0454%" height="15" fill="rgb(237,100,13)" fg:x="10180" fg:w="8"/><text x="58.0056%" y="623.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (7 samples, 0.04%)</title><rect x="57.7613%" y="597" width="0.0397%" height="15" fill="rgb(213,55,26)" fg:x="10181" fg:w="7"/><text x="58.0113%" y="607.50"></text></g><g><title>core::mem::replace (7 samples, 0.04%)</title><rect x="57.7613%" y="581" width="0.0397%" height="15" fill="rgb(216,17,4)" fg:x="10181" fg:w="7"/><text x="58.0113%" y="591.50"></text></g><g><title>core::ptr::read (7 samples, 0.04%)</title><rect x="57.7613%" y="565" width="0.0397%" height="15" fill="rgb(220,153,47)" fg:x="10181" fg:w="7"/><text x="58.0113%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7 samples, 0.04%)</title><rect x="57.7613%" y="549" width="0.0397%" height="15" fill="rgb(215,131,9)" fg:x="10181" fg:w="7"/><text x="58.0113%" y="559.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (4 samples, 0.02%)</title><rect x="57.8010%" y="629" width="0.0227%" height="15" fill="rgb(233,46,42)" fg:x="10188" fg:w="4"/><text x="58.0510%" y="639.50"></text></g><g><title>wgpu_core::init_tracker::texture::TextureInitTracker::new (3 samples, 0.02%)</title><rect x="57.8237%" y="629" width="0.0170%" height="15" fill="rgb(226,86,7)" fg:x="10192" fg:w="3"/><text x="58.0737%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.01%)</title><rect x="57.8293%" y="613" width="0.0113%" height="15" fill="rgb(239,226,21)" fg:x="10193" fg:w="2"/><text x="58.0793%" y="623.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="57.8293%" y="597" width="0.0113%" height="15" fill="rgb(244,137,22)" fg:x="10193" fg:w="2"/><text x="58.0793%" y="607.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::contains_unchecked (4 samples, 0.02%)</title><rect x="57.8407%" y="613" width="0.0227%" height="15" fill="rgb(211,139,35)" fg:x="10195" fg:w="4"/><text x="58.0907%" y="623.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::get (4 samples, 0.02%)</title><rect x="57.8407%" y="597" width="0.0227%" height="15" fill="rgb(214,62,50)" fg:x="10195" fg:w="4"/><text x="58.0907%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="57.8407%" y="581" width="0.0227%" height="15" fill="rgb(212,113,44)" fg:x="10195" fg:w="4"/><text x="58.0907%" y="591.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::insert_single (5 samples, 0.03%)</title><rect x="57.8407%" y="629" width="0.0284%" height="15" fill="rgb(226,150,43)" fg:x="10195" fg:w="5"/><text x="58.0907%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.02%)</title><rect x="57.9088%" y="613" width="0.0227%" height="15" fill="rgb(250,71,37)" fg:x="10207" fg:w="4"/><text x="58.1588%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (4 samples, 0.02%)</title><rect x="57.9088%" y="597" width="0.0227%" height="15" fill="rgb(219,76,19)" fg:x="10207" fg:w="4"/><text x="58.1588%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.02%)</title><rect x="57.9088%" y="581" width="0.0227%" height="15" fill="rgb(250,39,11)" fg:x="10207" fg:w="4"/><text x="58.1588%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.08%)</title><rect x="58.1924%" y="533" width="0.0794%" height="15" fill="rgb(230,64,31)" fg:x="10257" fg:w="14"/><text x="58.4424%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="58.2378%" y="517" width="0.0340%" height="15" fill="rgb(208,222,23)" fg:x="10265" fg:w="6"/><text x="58.4878%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="58.2549%" y="501" width="0.0170%" height="15" fill="rgb(227,125,18)" fg:x="10268" fg:w="3"/><text x="58.5049%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="58.2605%" y="485" width="0.0113%" height="15" fill="rgb(234,210,9)" fg:x="10269" fg:w="2"/><text x="58.5105%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (37 samples, 0.21%)</title><rect x="58.1017%" y="549" width="0.2099%" height="15" fill="rgb(217,127,24)" fg:x="10241" fg:w="37"/><text x="58.3517%" y="559.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.04%)</title><rect x="58.2719%" y="533" width="0.0397%" height="15" fill="rgb(239,141,48)" fg:x="10271" fg:w="7"/><text x="58.5219%" y="543.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="58.2889%" y="517" width="0.0227%" height="15" fill="rgb(227,109,8)" fg:x="10274" fg:w="4"/><text x="58.5389%" y="527.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="58.3229%" y="549" width="0.0170%" height="15" fill="rgb(235,184,23)" fg:x="10280" fg:w="3"/><text x="58.5729%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (56 samples, 0.32%)</title><rect x="58.0279%" y="565" width="0.3177%" height="15" fill="rgb(227,226,48)" fg:x="10228" fg:w="56"/><text x="58.2779%" y="575.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="58.3456%" y="565" width="0.0340%" height="15" fill="rgb(206,150,11)" fg:x="10284" fg:w="6"/><text x="58.5956%" y="575.50"></text></g><g><title>tcache_get (3 samples, 0.02%)</title><rect x="58.3626%" y="549" width="0.0170%" height="15" fill="rgb(254,2,33)" fg:x="10287" fg:w="3"/><text x="58.6126%" y="559.50"></text></g><g><title>ash::device::Device::create_image_view (80 samples, 0.45%)</title><rect x="57.9315%" y="613" width="0.4539%" height="15" fill="rgb(243,160,20)" fg:x="10211" fg:w="80"/><text x="58.1815%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (80 samples, 0.45%)</title><rect x="57.9315%" y="597" width="0.4539%" height="15" fill="rgb(218,208,30)" fg:x="10211" fg:w="80"/><text x="58.1815%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (73 samples, 0.41%)</title><rect x="57.9712%" y="581" width="0.4142%" height="15" fill="rgb(224,120,49)" fg:x="10218" fg:w="73"/><text x="58.2212%" y="591.50"></text></g><g><title>ash::vk::definitions::ImageViewUsageCreateInfo::builder (4 samples, 0.02%)</title><rect x="58.3967%" y="613" width="0.0227%" height="15" fill="rgb(246,12,2)" fg:x="10293" fg:w="4"/><text x="58.6467%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::conv::&lt;impl wgpu_hal::vulkan::PrivateCapabilities&gt;::map_texture_format (5 samples, 0.03%)</title><rect x="58.4251%" y="613" width="0.0284%" height="15" fill="rgb(236,117,3)" fg:x="10298" fg:w="5"/><text x="58.6751%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_subresource_range (4 samples, 0.02%)</title><rect x="58.4534%" y="613" width="0.0227%" height="15" fill="rgb(216,128,52)" fg:x="10303" fg:w="4"/><text x="58.7034%" y="623.50"></text></g><g><title>wgpu_hal::FormatAspects::new (4 samples, 0.02%)</title><rect x="58.4534%" y="597" width="0.0227%" height="15" fill="rgb(246,145,19)" fg:x="10303" fg:w="4"/><text x="58.7034%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (108 samples, 0.61%)</title><rect x="57.8691%" y="629" width="0.6127%" height="15" fill="rgb(222,11,46)" fg:x="10200" fg:w="108"/><text x="58.1191%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.02%)</title><rect x="58.4988%" y="613" width="0.0227%" height="15" fill="rgb(245,82,36)" fg:x="10311" fg:w="4"/><text x="58.7488%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (4 samples, 0.02%)</title><rect x="58.4988%" y="597" width="0.0227%" height="15" fill="rgb(250,73,51)" fg:x="10311" fg:w="4"/><text x="58.7488%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.02%)</title><rect x="58.4988%" y="581" width="0.0227%" height="15" fill="rgb(221,189,23)" fg:x="10311" fg:w="4"/><text x="58.7488%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="58.5215%" y="613" width="0.0227%" height="15" fill="rgb(210,33,7)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="58.5215%" y="597" width="0.0227%" height="15" fill="rgb(210,107,22)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="58.5215%" y="581" width="0.0227%" height="15" fill="rgb(222,116,37)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="58.5215%" y="565" width="0.0227%" height="15" fill="rgb(254,17,48)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="58.5215%" y="549" width="0.0227%" height="15" fill="rgb(224,36,32)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="58.5215%" y="533" width="0.0227%" height="15" fill="rgb(232,90,46)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="58.5215%" y="517" width="0.0227%" height="15" fill="rgb(241,66,40)" fg:x="10315" fg:w="4"/><text x="58.7715%" y="527.50"></text></g><g><title>ash::device::Device::reset_fences (2 samples, 0.01%)</title><rect x="58.5442%" y="613" width="0.0113%" height="15" fill="rgb(249,184,29)" fg:x="10319" fg:w="2"/><text x="58.7942%" y="623.50"></text></g><g><title>ash::device::Device::handle (2 samples, 0.01%)</title><rect x="58.5442%" y="597" width="0.0113%" height="15" fill="rgb(231,181,1)" fg:x="10319" fg:w="2"/><text x="58.7942%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="59.1626%" y="517" width="0.0113%" height="15" fill="rgb(224,94,2)" fg:x="10428" fg:w="2"/><text x="59.4126%" y="527.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="59.1626%" y="501" width="0.0113%" height="15" fill="rgb(229,170,15)" fg:x="10428" fg:w="2"/><text x="59.4126%" y="511.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="59.1626%" y="485" width="0.0113%" height="15" fill="rgb(240,127,35)" fg:x="10428" fg:w="2"/><text x="59.4126%" y="495.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="59.1626%" y="469" width="0.0113%" height="15" fill="rgb(248,196,34)" fg:x="10428" fg:w="2"/><text x="59.4126%" y="479.50"></text></g><g><title>[[vdso]] (5 samples, 0.03%)</title><rect x="59.2080%" y="501" width="0.0284%" height="15" fill="rgb(236,137,7)" fg:x="10436" fg:w="5"/><text x="59.4580%" y="511.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="59.2250%" y="485" width="0.0113%" height="15" fill="rgb(235,127,16)" fg:x="10439" fg:w="2"/><text x="59.4750%" y="495.50"></text></g><g><title>__GI___clock_gettime (15 samples, 0.09%)</title><rect x="59.1739%" y="517" width="0.0851%" height="15" fill="rgb(250,192,54)" fg:x="10430" fg:w="15"/><text x="59.4239%" y="527.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="59.2420%" y="501" width="0.0170%" height="15" fill="rgb(218,98,20)" fg:x="10442" fg:w="3"/><text x="59.4920%" y="511.50"></text></g><g><title>__GI___libc_free (20 samples, 0.11%)</title><rect x="59.2590%" y="517" width="0.1135%" height="15" fill="rgb(230,176,47)" fg:x="10445" fg:w="20"/><text x="59.5090%" y="527.50"></text></g><g><title>_int_free (9 samples, 0.05%)</title><rect x="59.3215%" y="501" width="0.0511%" height="15" fill="rgb(244,2,33)" fg:x="10456" fg:w="9"/><text x="59.5715%" y="511.50"></text></g><g><title>[unknown] (248 samples, 1.41%)</title><rect x="59.4122%" y="501" width="1.4070%" height="15" fill="rgb(231,100,17)" fg:x="10472" fg:w="248"/><text x="59.6622%" y="511.50"></text></g><g><title>[unknown] (223 samples, 1.27%)</title><rect x="59.5541%" y="485" width="1.2652%" height="15" fill="rgb(245,23,12)" fg:x="10497" fg:w="223"/><text x="59.8041%" y="495.50"></text></g><g><title>[unknown] (221 samples, 1.25%)</title><rect x="59.5654%" y="469" width="1.2538%" height="15" fill="rgb(249,55,22)" fg:x="10499" fg:w="221"/><text x="59.8154%" y="479.50"></text></g><g><title>[unknown] (202 samples, 1.15%)</title><rect x="59.6732%" y="453" width="1.1460%" height="15" fill="rgb(207,134,9)" fg:x="10518" fg:w="202"/><text x="59.9232%" y="463.50"></text></g><g><title>[unknown] (189 samples, 1.07%)</title><rect x="59.7470%" y="437" width="1.0723%" height="15" fill="rgb(218,134,0)" fg:x="10531" fg:w="189"/><text x="59.9970%" y="447.50"></text></g><g><title>[unknown] (155 samples, 0.88%)</title><rect x="59.9399%" y="421" width="0.8794%" height="15" fill="rgb(213,212,33)" fg:x="10565" fg:w="155"/><text x="60.1899%" y="431.50"></text></g><g><title>[unknown] (127 samples, 0.72%)</title><rect x="60.0987%" y="405" width="0.7205%" height="15" fill="rgb(252,106,18)" fg:x="10593" fg:w="127"/><text x="60.3487%" y="415.50"></text></g><g><title>[unknown] (98 samples, 0.56%)</title><rect x="60.2632%" y="389" width="0.5560%" height="15" fill="rgb(208,126,42)" fg:x="10622" fg:w="98"/><text x="60.5132%" y="399.50"></text></g><g><title>[unknown] (87 samples, 0.49%)</title><rect x="60.3257%" y="373" width="0.4936%" height="15" fill="rgb(246,175,29)" fg:x="10633" fg:w="87"/><text x="60.5757%" y="383.50"></text></g><g><title>[unknown] (76 samples, 0.43%)</title><rect x="60.3881%" y="357" width="0.4312%" height="15" fill="rgb(215,13,50)" fg:x="10644" fg:w="76"/><text x="60.6381%" y="367.50"></text></g><g><title>[unknown] (66 samples, 0.37%)</title><rect x="60.4448%" y="341" width="0.3744%" height="15" fill="rgb(216,172,15)" fg:x="10654" fg:w="66"/><text x="60.6948%" y="351.50"></text></g><g><title>[unknown] (35 samples, 0.20%)</title><rect x="60.6207%" y="325" width="0.1986%" height="15" fill="rgb(212,103,13)" fg:x="10685" fg:w="35"/><text x="60.8707%" y="335.50"></text></g><g><title>[unknown] (27 samples, 0.15%)</title><rect x="60.6661%" y="309" width="0.1532%" height="15" fill="rgb(231,171,36)" fg:x="10693" fg:w="27"/><text x="60.9161%" y="319.50"></text></g><g><title>[unknown] (22 samples, 0.12%)</title><rect x="60.6944%" y="293" width="0.1248%" height="15" fill="rgb(250,123,20)" fg:x="10698" fg:w="22"/><text x="60.9444%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="60.8079%" y="277" width="0.0113%" height="15" fill="rgb(212,53,50)" fg:x="10718" fg:w="2"/><text x="61.0579%" y="287.50"></text></g><g><title>__GI___poll (257 samples, 1.46%)</title><rect x="59.3782%" y="517" width="1.4581%" height="15" fill="rgb(243,54,12)" fg:x="10466" fg:w="257"/><text x="59.6282%" y="527.50"></text></g><g><title>__GI___pthread_enable_asynccancel (3 samples, 0.02%)</title><rect x="60.8192%" y="501" width="0.0170%" height="15" fill="rgb(234,101,34)" fg:x="10720" fg:w="3"/><text x="61.0692%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (351 samples, 1.99%)</title><rect x="58.8506%" y="533" width="1.9914%" height="15" fill="rgb(254,67,22)" fg:x="10373" fg:w="351"/><text x="59.1006%" y="543.50">[..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (406 samples, 2.30%)</title><rect x="58.5555%" y="597" width="2.3034%" height="15" fill="rgb(250,35,47)" fg:x="10321" fg:w="406"/><text x="58.8055%" y="607.50">[..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (406 samples, 2.30%)</title><rect x="58.5555%" y="581" width="2.3034%" height="15" fill="rgb(226,126,38)" fg:x="10321" fg:w="406"/><text x="58.8055%" y="591.50">[..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (405 samples, 2.30%)</title><rect x="58.5612%" y="565" width="2.2977%" height="15" fill="rgb(216,138,53)" fg:x="10322" fg:w="405"/><text x="58.8112%" y="575.50">[..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (393 samples, 2.23%)</title><rect x="58.6293%" y="549" width="2.2297%" height="15" fill="rgb(246,199,43)" fg:x="10334" fg:w="393"/><text x="58.8793%" y="559.50">[..</text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="60.8419%" y="533" width="0.0170%" height="15" fill="rgb(232,125,11)" fg:x="10724" fg:w="3"/><text x="61.0919%" y="543.50"></text></g><g><title>ash::device::Device::wait_for_fences (410 samples, 2.33%)</title><rect x="58.5555%" y="613" width="2.3261%" height="15" fill="rgb(218,219,45)" fg:x="10321" fg:w="410"/><text x="58.8055%" y="623.50">a..</text></g><g><title>ash::prelude::&lt;impl ash::vk::enums::Result&gt;::result (4 samples, 0.02%)</title><rect x="60.8590%" y="597" width="0.0227%" height="15" fill="rgb(216,102,54)" fg:x="10727" fg:w="4"/><text x="61.1090%" y="607.50"></text></g><g><title>ash::prelude::&lt;impl ash::vk::enums::Result&gt;::result_with_success (4 samples, 0.02%)</title><rect x="60.8590%" y="581" width="0.0227%" height="15" fill="rgb(250,228,7)" fg:x="10727" fg:w="4"/><text x="61.1090%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (11 samples, 0.06%)</title><rect x="60.8817%" y="581" width="0.0624%" height="15" fill="rgb(226,125,25)" fg:x="10731" fg:w="11"/><text x="61.1317%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="60.8817%" y="565" width="0.0624%" height="15" fill="rgb(224,165,27)" fg:x="10731" fg:w="11"/><text x="61.1317%" y="575.50"></text></g><g><title>syscall (11 samples, 0.06%)</title><rect x="60.8817%" y="549" width="0.0624%" height="15" fill="rgb(233,86,3)" fg:x="10731" fg:w="11"/><text x="61.1317%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="60.8817%" y="533" width="0.0624%" height="15" fill="rgb(228,116,20)" fg:x="10731" fg:w="11"/><text x="61.1317%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="60.8987%" y="517" width="0.0454%" height="15" fill="rgb(209,192,17)" fg:x="10734" fg:w="8"/><text x="61.1487%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="60.9043%" y="501" width="0.0397%" height="15" fill="rgb(224,88,34)" fg:x="10735" fg:w="7"/><text x="61.1543%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="60.9270%" y="485" width="0.0170%" height="15" fill="rgb(233,38,6)" fg:x="10739" fg:w="3"/><text x="61.1770%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="60.9951%" y="533" width="0.0511%" height="15" fill="rgb(212,59,30)" fg:x="10751" fg:w="9"/><text x="61.2451%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (15 samples, 0.09%)</title><rect x="60.9668%" y="565" width="0.0851%" height="15" fill="rgb(213,80,3)" fg:x="10746" fg:w="15"/><text x="61.2168%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="60.9951%" y="549" width="0.0567%" height="15" fill="rgb(251,178,7)" fg:x="10751" fg:w="10"/><text x="61.2451%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (642 samples, 3.64%)</title><rect x="57.4776%" y="661" width="3.6423%" height="15" fill="rgb(213,154,26)" fg:x="10131" fg:w="642"/><text x="57.7276%" y="671.50">&lt;wgp..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (637 samples, 3.61%)</title><rect x="57.5060%" y="645" width="3.6140%" height="15" fill="rgb(238,165,49)" fg:x="10136" fg:w="637"/><text x="57.7560%" y="655.50">wgpu..</text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (465 samples, 2.64%)</title><rect x="58.4818%" y="629" width="2.6381%" height="15" fill="rgb(248,91,46)" fg:x="10308" fg:w="465"/><text x="58.7318%" y="639.50">wg..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (42 samples, 0.24%)</title><rect x="60.8817%" y="613" width="0.2383%" height="15" fill="rgb(244,21,52)" fg:x="10731" fg:w="42"/><text x="61.1317%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (42 samples, 0.24%)</title><rect x="60.8817%" y="597" width="0.2383%" height="15" fill="rgb(247,122,20)" fg:x="10731" fg:w="42"/><text x="61.1317%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (31 samples, 0.18%)</title><rect x="60.9441%" y="581" width="0.1759%" height="15" fill="rgb(218,27,9)" fg:x="10742" fg:w="31"/><text x="61.1941%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="61.0519%" y="565" width="0.0681%" height="15" fill="rgb(246,7,6)" fg:x="10761" fg:w="12"/><text x="61.3019%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="61.1029%" y="549" width="0.0170%" height="15" fill="rgb(227,135,54)" fg:x="10770" fg:w="3"/><text x="61.3529%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (647 samples, 3.67%)</title><rect x="57.4719%" y="677" width="3.6707%" height="15" fill="rgb(247,14,11)" fg:x="10130" fg:w="647"/><text x="57.7219%" y="687.50">&lt;T a..</text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="61.1199%" y="661" width="0.0227%" height="15" fill="rgb(206,149,34)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture::{{closure}} (4 samples, 0.02%)</title><rect x="61.1199%" y="645" width="0.0227%" height="15" fill="rgb(227,228,4)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="61.1199%" y="629" width="0.0227%" height="15" fill="rgb(238,218,28)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="61.1199%" y="613" width="0.0227%" height="15" fill="rgb(252,86,40)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="61.1199%" y="597" width="0.0227%" height="15" fill="rgb(251,225,11)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="61.1199%" y="581" width="0.0227%" height="15" fill="rgb(206,46,49)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="591.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="61.1199%" y="565" width="0.0227%" height="15" fill="rgb(245,128,24)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="575.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="61.1199%" y="549" width="0.0227%" height="15" fill="rgb(219,177,34)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="559.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="61.1199%" y="533" width="0.0227%" height="15" fill="rgb(218,60,48)" fg:x="10773" fg:w="4"/><text x="61.3699%" y="543.50"></text></g><g><title>wgpu::Surface::get_current_texture (653 samples, 3.70%)</title><rect x="57.4492%" y="693" width="3.7048%" height="15" fill="rgb(221,11,5)" fg:x="10126" fg:w="653"/><text x="57.6992%" y="703.50">wgpu..</text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::resource::TextureViewDescriptor&gt; (3 samples, 0.02%)</title><rect x="61.1653%" y="645" width="0.0170%" height="15" fill="rgb(220,148,13)" fg:x="10781" fg:w="3"/><text x="61.4153%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="61.1653%" y="629" width="0.0170%" height="15" fill="rgb(210,16,3)" fg:x="10781" fg:w="3"/><text x="61.4153%" y="639.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (4 samples, 0.02%)</title><rect x="61.1880%" y="629" width="0.0227%" height="15" fill="rgb(236,80,2)" fg:x="10785" fg:w="4"/><text x="61.4380%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.02%)</title><rect x="61.1880%" y="613" width="0.0227%" height="15" fill="rgb(239,129,19)" fg:x="10785" fg:w="4"/><text x="61.4380%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (3 samples, 0.02%)</title><rect x="61.2277%" y="613" width="0.0170%" height="15" fill="rgb(220,106,35)" fg:x="10792" fg:w="3"/><text x="61.4777%" y="623.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view::{{closure}} (3 samples, 0.02%)</title><rect x="61.2277%" y="597" width="0.0170%" height="15" fill="rgb(252,139,45)" fg:x="10792" fg:w="3"/><text x="61.4777%" y="607.50"></text></g><g><title>wgpu_types::TextureFormat::aspect_specific_format (3 samples, 0.02%)</title><rect x="61.2277%" y="581" width="0.0170%" height="15" fill="rgb(229,8,36)" fg:x="10792" fg:w="3"/><text x="61.4777%" y="591.50"></text></g><g><title>wgpu_core::LifeGuard::new (4 samples, 0.02%)</title><rect x="61.2504%" y="613" width="0.0227%" height="15" fill="rgb(230,126,33)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="623.50"></text></g><g><title>wgpu_core::RefCount::new (4 samples, 0.02%)</title><rect x="61.2504%" y="597" width="0.0227%" height="15" fill="rgb(239,140,21)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="61.2504%" y="581" width="0.0227%" height="15" fill="rgb(254,104,9)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.02%)</title><rect x="61.2504%" y="565" width="0.0227%" height="15" fill="rgb(239,52,14)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="61.2504%" y="549" width="0.0227%" height="15" fill="rgb(208,227,44)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="61.2504%" y="533" width="0.0227%" height="15" fill="rgb(246,18,19)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="543.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="61.2504%" y="517" width="0.0227%" height="15" fill="rgb(235,228,25)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="527.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="61.2504%" y="501" width="0.0227%" height="15" fill="rgb(240,156,20)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="511.50"></text></g><g><title>tcache_get (4 samples, 0.02%)</title><rect x="61.2504%" y="485" width="0.0227%" height="15" fill="rgb(224,8,20)" fg:x="10796" fg:w="4"/><text x="61.5004%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="61.2958%" y="517" width="0.0170%" height="15" fill="rgb(214,12,52)" fg:x="10804" fg:w="3"/><text x="61.5458%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="61.3015%" y="501" width="0.0113%" height="15" fill="rgb(211,220,47)" fg:x="10805" fg:w="2"/><text x="61.5515%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="61.2845%" y="533" width="0.0340%" height="15" fill="rgb(250,173,5)" fg:x="10802" fg:w="6"/><text x="61.5345%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="61.2845%" y="549" width="0.0454%" height="15" fill="rgb(250,125,52)" fg:x="10802" fg:w="8"/><text x="61.5345%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (16 samples, 0.09%)</title><rect x="61.2731%" y="613" width="0.0908%" height="15" fill="rgb(209,133,18)" fg:x="10800" fg:w="16"/><text x="61.5231%" y="623.50"></text></g><g><title>ash::device::Device::create_image_view (15 samples, 0.09%)</title><rect x="61.2788%" y="597" width="0.0851%" height="15" fill="rgb(216,173,22)" fg:x="10801" fg:w="15"/><text x="61.5288%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="61.2788%" y="581" width="0.0851%" height="15" fill="rgb(205,3,22)" fg:x="10801" fg:w="15"/><text x="61.5288%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="61.2788%" y="565" width="0.0851%" height="15" fill="rgb(248,22,20)" fg:x="10801" fg:w="15"/><text x="61.5288%" y="575.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="61.3299%" y="549" width="0.0340%" height="15" fill="rgb(233,6,29)" fg:x="10810" fg:w="6"/><text x="61.5799%" y="559.50"></text></g><g><title>tcache_get (5 samples, 0.03%)</title><rect x="61.3355%" y="533" width="0.0284%" height="15" fill="rgb(240,22,54)" fg:x="10811" fg:w="5"/><text x="61.5855%" y="543.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_texture_view (30 samples, 0.17%)</title><rect x="61.2107%" y="629" width="0.1702%" height="15" fill="rgb(231,133,32)" fg:x="10789" fg:w="30"/><text x="61.4607%" y="639.50"></text></g><g><title>wgpu_types::TextureViewDimension::compatible_texture_dimension (3 samples, 0.02%)</title><rect x="61.3639%" y="613" width="0.0170%" height="15" fill="rgb(248,193,4)" fg:x="10816" fg:w="3"/><text x="61.6139%" y="623.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::prepare (5 samples, 0.03%)</title><rect x="61.3866%" y="629" width="0.0284%" height="15" fill="rgb(211,178,46)" fg:x="10820" fg:w="5"/><text x="61.6366%" y="639.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (4 samples, 0.02%)</title><rect x="61.3923%" y="613" width="0.0227%" height="15" fill="rgb(224,5,42)" fg:x="10821" fg:w="4"/><text x="61.6423%" y="623.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (4 samples, 0.02%)</title><rect x="61.3923%" y="597" width="0.0227%" height="15" fill="rgb(239,176,25)" fg:x="10821" fg:w="4"/><text x="61.6423%" y="607.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::set (2 samples, 0.01%)</title><rect x="61.4206%" y="597" width="0.0113%" height="15" fill="rgb(245,187,50)" fg:x="10826" fg:w="2"/><text x="61.6706%" y="607.50"></text></g><g><title>wgpu::Texture::create_view (50 samples, 0.28%)</title><rect x="61.1540%" y="693" width="0.2837%" height="15" fill="rgb(248,24,15)" fg:x="10779" fg:w="50"/><text x="61.4040%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_create_view (50 samples, 0.28%)</title><rect x="61.1540%" y="677" width="0.2837%" height="15" fill="rgb(205,166,13)" fg:x="10779" fg:w="50"/><text x="61.4040%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::texture_create_view (50 samples, 0.28%)</title><rect x="61.1540%" y="661" width="0.2837%" height="15" fill="rgb(208,114,23)" fg:x="10779" fg:w="50"/><text x="61.4040%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (45 samples, 0.26%)</title><rect x="61.1823%" y="645" width="0.2553%" height="15" fill="rgb(239,127,18)" fg:x="10784" fg:w="45"/><text x="61.4323%" y="655.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::insert_single (3 samples, 0.02%)</title><rect x="61.4206%" y="629" width="0.0170%" height="15" fill="rgb(219,154,28)" fg:x="10826" fg:w="3"/><text x="61.6706%" y="639.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::insert (3 samples, 0.02%)</title><rect x="61.4206%" y="613" width="0.0170%" height="15" fill="rgb(225,157,23)" fg:x="10826" fg:w="3"/><text x="61.6706%" y="623.50"></text></g><g><title>[libX11.so.6.4.0] (5 samples, 0.03%)</title><rect x="61.4717%" y="597" width="0.0284%" height="15" fill="rgb(219,8,6)" fg:x="10835" fg:w="5"/><text x="61.7217%" y="607.50"></text></g><g><title>___pthread_mutex_lock (4 samples, 0.02%)</title><rect x="61.4774%" y="581" width="0.0227%" height="15" fill="rgb(212,47,6)" fg:x="10836" fg:w="4"/><text x="61.7274%" y="591.50"></text></g><g><title>__GI___errno_location (2 samples, 0.01%)</title><rect x="61.5511%" y="517" width="0.0113%" height="15" fill="rgb(224,190,4)" fg:x="10849" fg:w="2"/><text x="61.8011%" y="527.50"></text></g><g><title>[libxcb.so.1.1.0] (25 samples, 0.14%)</title><rect x="61.5454%" y="533" width="0.1418%" height="15" fill="rgb(239,183,29)" fg:x="10848" fg:w="25"/><text x="61.7954%" y="543.50"></text></g><g><title>__libc_recvmsg (22 samples, 0.12%)</title><rect x="61.5625%" y="517" width="0.1248%" height="15" fill="rgb(213,57,7)" fg:x="10851" fg:w="22"/><text x="61.8125%" y="527.50"></text></g><g><title>__recvmsg_syscall (22 samples, 0.12%)</title><rect x="61.5625%" y="501" width="0.1248%" height="15" fill="rgb(216,148,1)" fg:x="10851" fg:w="22"/><text x="61.8125%" y="511.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="61.5738%" y="485" width="0.1135%" height="15" fill="rgb(236,182,29)" fg:x="10853" fg:w="20"/><text x="61.8238%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="61.6192%" y="469" width="0.0681%" height="15" fill="rgb(244,120,48)" fg:x="10861" fg:w="12"/><text x="61.8692%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="61.6192%" y="453" width="0.0681%" height="15" fill="rgb(206,71,34)" fg:x="10861" fg:w="12"/><text x="61.8692%" y="463.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="61.6362%" y="437" width="0.0511%" height="15" fill="rgb(242,32,6)" fg:x="10864" fg:w="9"/><text x="61.8862%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="61.6362%" y="421" width="0.0511%" height="15" fill="rgb(241,35,3)" fg:x="10864" fg:w="9"/><text x="61.8862%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="61.6362%" y="405" width="0.0511%" height="15" fill="rgb(222,62,19)" fg:x="10864" fg:w="9"/><text x="61.8862%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="61.6476%" y="389" width="0.0397%" height="15" fill="rgb(223,110,41)" fg:x="10866" fg:w="7"/><text x="61.8976%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="61.6589%" y="373" width="0.0284%" height="15" fill="rgb(208,224,4)" fg:x="10868" fg:w="5"/><text x="61.9089%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="61.6646%" y="357" width="0.0227%" height="15" fill="rgb(241,137,19)" fg:x="10869" fg:w="4"/><text x="61.9146%" y="367.50"></text></g><g><title>[libX11.so.6.4.0] (27 samples, 0.15%)</title><rect x="61.5398%" y="565" width="0.1532%" height="15" fill="rgb(244,24,17)" fg:x="10847" fg:w="27"/><text x="61.7898%" y="575.50"></text></g><g><title>[libxcb.so.1.1.0] (26 samples, 0.15%)</title><rect x="61.5454%" y="549" width="0.1475%" height="15" fill="rgb(245,178,49)" fg:x="10848" fg:w="26"/><text x="61.7954%" y="559.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="61.6930%" y="565" width="0.0170%" height="15" fill="rgb(219,160,38)" fg:x="10874" fg:w="3"/><text x="61.9430%" y="575.50"></text></g><g><title>[libX11.so.6.4.0] (34 samples, 0.19%)</title><rect x="61.5228%" y="581" width="0.1929%" height="15" fill="rgb(228,137,14)" fg:x="10844" fg:w="34"/><text x="61.7728%" y="591.50"></text></g><g><title>__GI___poll (26 samples, 0.15%)</title><rect x="61.7610%" y="517" width="0.1475%" height="15" fill="rgb(237,134,11)" fg:x="10886" fg:w="26"/><text x="62.0110%" y="527.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="61.7724%" y="501" width="0.1362%" height="15" fill="rgb(211,126,44)" fg:x="10888" fg:w="24"/><text x="62.0224%" y="511.50"></text></g><g><title>[unknown] (21 samples, 0.12%)</title><rect x="61.7894%" y="485" width="0.1191%" height="15" fill="rgb(226,171,33)" fg:x="10891" fg:w="21"/><text x="62.0394%" y="495.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="61.8007%" y="469" width="0.1078%" height="15" fill="rgb(253,99,13)" fg:x="10893" fg:w="19"/><text x="62.0507%" y="479.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="61.8348%" y="453" width="0.0738%" height="15" fill="rgb(244,48,7)" fg:x="10899" fg:w="13"/><text x="62.0848%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="61.8518%" y="437" width="0.0567%" height="15" fill="rgb(244,217,54)" fg:x="10902" fg:w="10"/><text x="62.1018%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="61.8688%" y="421" width="0.0397%" height="15" fill="rgb(224,15,18)" fg:x="10905" fg:w="7"/><text x="62.1188%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="61.8745%" y="405" width="0.0340%" height="15" fill="rgb(244,99,12)" fg:x="10906" fg:w="6"/><text x="62.1245%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="61.8915%" y="389" width="0.0170%" height="15" fill="rgb(233,226,8)" fg:x="10909" fg:w="3"/><text x="62.1415%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="61.8972%" y="373" width="0.0113%" height="15" fill="rgb(229,211,3)" fg:x="10910" fg:w="2"/><text x="62.1472%" y="383.50"></text></g><g><title>_XSend (130 samples, 0.74%)</title><rect x="61.7156%" y="581" width="0.7375%" height="15" fill="rgb(216,140,21)" fg:x="10878" fg:w="130"/><text x="61.9656%" y="591.50"></text></g><g><title>xcb_writev (129 samples, 0.73%)</title><rect x="61.7213%" y="565" width="0.7319%" height="15" fill="rgb(234,122,30)" fg:x="10879" fg:w="129"/><text x="61.9713%" y="575.50"></text></g><g><title>[libxcb.so.1.1.0] (125 samples, 0.71%)</title><rect x="61.7440%" y="549" width="0.7092%" height="15" fill="rgb(236,25,46)" fg:x="10883" fg:w="125"/><text x="61.9940%" y="559.50"></text></g><g><title>[libxcb.so.1.1.0] (125 samples, 0.71%)</title><rect x="61.7440%" y="533" width="0.7092%" height="15" fill="rgb(217,52,54)" fg:x="10883" fg:w="125"/><text x="61.9940%" y="543.50"></text></g><g><title>__GI___writev (96 samples, 0.54%)</title><rect x="61.9085%" y="517" width="0.5446%" height="15" fill="rgb(222,29,26)" fg:x="10912" fg:w="96"/><text x="62.1585%" y="527.50"></text></g><g><title>__GI___writev (96 samples, 0.54%)</title><rect x="61.9085%" y="501" width="0.5446%" height="15" fill="rgb(216,177,29)" fg:x="10912" fg:w="96"/><text x="62.1585%" y="511.50"></text></g><g><title>[unknown] (96 samples, 0.54%)</title><rect x="61.9085%" y="485" width="0.5446%" height="15" fill="rgb(247,136,51)" fg:x="10912" fg:w="96"/><text x="62.1585%" y="495.50"></text></g><g><title>[unknown] (90 samples, 0.51%)</title><rect x="61.9426%" y="469" width="0.5106%" height="15" fill="rgb(231,47,47)" fg:x="10918" fg:w="90"/><text x="62.1926%" y="479.50"></text></g><g><title>[unknown] (88 samples, 0.50%)</title><rect x="61.9539%" y="453" width="0.4993%" height="15" fill="rgb(211,192,36)" fg:x="10920" fg:w="88"/><text x="62.2039%" y="463.50"></text></g><g><title>[unknown] (84 samples, 0.48%)</title><rect x="61.9766%" y="437" width="0.4766%" height="15" fill="rgb(229,156,32)" fg:x="10924" fg:w="84"/><text x="62.2266%" y="447.50"></text></g><g><title>[unknown] (80 samples, 0.45%)</title><rect x="61.9993%" y="421" width="0.4539%" height="15" fill="rgb(248,213,20)" fg:x="10928" fg:w="80"/><text x="62.2493%" y="431.50"></text></g><g><title>[unknown] (80 samples, 0.45%)</title><rect x="61.9993%" y="405" width="0.4539%" height="15" fill="rgb(217,64,7)" fg:x="10928" fg:w="80"/><text x="62.2493%" y="415.50"></text></g><g><title>[unknown] (80 samples, 0.45%)</title><rect x="61.9993%" y="389" width="0.4539%" height="15" fill="rgb(232,142,8)" fg:x="10928" fg:w="80"/><text x="62.2493%" y="399.50"></text></g><g><title>[unknown] (79 samples, 0.45%)</title><rect x="62.0050%" y="373" width="0.4482%" height="15" fill="rgb(224,92,44)" fg:x="10929" fg:w="79"/><text x="62.2550%" y="383.50"></text></g><g><title>[unknown] (75 samples, 0.43%)</title><rect x="62.0277%" y="357" width="0.4255%" height="15" fill="rgb(214,169,17)" fg:x="10933" fg:w="75"/><text x="62.2777%" y="367.50"></text></g><g><title>[unknown] (73 samples, 0.41%)</title><rect x="62.0390%" y="341" width="0.4142%" height="15" fill="rgb(210,59,37)" fg:x="10935" fg:w="73"/><text x="62.2890%" y="351.50"></text></g><g><title>[unknown] (61 samples, 0.35%)</title><rect x="62.1071%" y="325" width="0.3461%" height="15" fill="rgb(214,116,48)" fg:x="10947" fg:w="61"/><text x="62.3571%" y="335.50"></text></g><g><title>[unknown] (56 samples, 0.32%)</title><rect x="62.1355%" y="309" width="0.3177%" height="15" fill="rgb(244,191,6)" fg:x="10952" fg:w="56"/><text x="62.3855%" y="319.50"></text></g><g><title>[unknown] (50 samples, 0.28%)</title><rect x="62.1695%" y="293" width="0.2837%" height="15" fill="rgb(241,50,52)" fg:x="10958" fg:w="50"/><text x="62.4195%" y="303.50"></text></g><g><title>[unknown] (47 samples, 0.27%)</title><rect x="62.1865%" y="277" width="0.2667%" height="15" fill="rgb(236,75,39)" fg:x="10961" fg:w="47"/><text x="62.4365%" y="287.50"></text></g><g><title>[unknown] (40 samples, 0.23%)</title><rect x="62.2263%" y="261" width="0.2269%" height="15" fill="rgb(236,99,0)" fg:x="10968" fg:w="40"/><text x="62.4763%" y="271.50"></text></g><g><title>[unknown] (28 samples, 0.16%)</title><rect x="62.2943%" y="245" width="0.1589%" height="15" fill="rgb(207,202,15)" fg:x="10980" fg:w="28"/><text x="62.5443%" y="255.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="62.3397%" y="229" width="0.1135%" height="15" fill="rgb(233,207,14)" fg:x="10988" fg:w="20"/><text x="62.5897%" y="239.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="62.3454%" y="213" width="0.1078%" height="15" fill="rgb(226,27,51)" fg:x="10989" fg:w="19"/><text x="62.5954%" y="223.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="62.3681%" y="197" width="0.0851%" height="15" fill="rgb(206,104,42)" fg:x="10993" fg:w="15"/><text x="62.6181%" y="207.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="62.3965%" y="181" width="0.0567%" height="15" fill="rgb(212,225,4)" fg:x="10998" fg:w="10"/><text x="62.6465%" y="191.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="62.3965%" y="165" width="0.0567%" height="15" fill="rgb(233,96,42)" fg:x="10998" fg:w="10"/><text x="62.6465%" y="175.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="62.4078%" y="149" width="0.0454%" height="15" fill="rgb(229,21,32)" fg:x="11000" fg:w="8"/><text x="62.6578%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="62.4362%" y="133" width="0.0170%" height="15" fill="rgb(226,216,24)" fg:x="11005" fg:w="3"/><text x="62.6862%" y="143.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="62.4929%" y="517" width="0.0170%" height="15" fill="rgb(221,163,17)" fg:x="11015" fg:w="3"/><text x="62.7429%" y="527.50"></text></g><g><title>[libxcb.so.1.1.0] (49 samples, 0.28%)</title><rect x="62.4816%" y="533" width="0.2780%" height="15" fill="rgb(216,216,42)" fg:x="11013" fg:w="49"/><text x="62.7316%" y="543.50"></text></g><g><title>__libc_recvmsg (44 samples, 0.25%)</title><rect x="62.5099%" y="517" width="0.2496%" height="15" fill="rgb(240,118,7)" fg:x="11018" fg:w="44"/><text x="62.7599%" y="527.50"></text></g><g><title>__recvmsg_syscall (43 samples, 0.24%)</title><rect x="62.5156%" y="501" width="0.2440%" height="15" fill="rgb(221,67,37)" fg:x="11019" fg:w="43"/><text x="62.7656%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.24%)</title><rect x="62.5156%" y="485" width="0.2440%" height="15" fill="rgb(241,32,44)" fg:x="11019" fg:w="43"/><text x="62.7656%" y="495.50"></text></g><g><title>[unknown] (40 samples, 0.23%)</title><rect x="62.5326%" y="469" width="0.2269%" height="15" fill="rgb(235,204,43)" fg:x="11022" fg:w="40"/><text x="62.7826%" y="479.50"></text></g><g><title>[unknown] (39 samples, 0.22%)</title><rect x="62.5383%" y="453" width="0.2213%" height="15" fill="rgb(213,116,10)" fg:x="11023" fg:w="39"/><text x="62.7883%" y="463.50"></text></g><g><title>[unknown] (36 samples, 0.20%)</title><rect x="62.5553%" y="437" width="0.2042%" height="15" fill="rgb(239,15,48)" fg:x="11026" fg:w="36"/><text x="62.8053%" y="447.50"></text></g><g><title>[unknown] (36 samples, 0.20%)</title><rect x="62.5553%" y="421" width="0.2042%" height="15" fill="rgb(207,123,36)" fg:x="11026" fg:w="36"/><text x="62.8053%" y="431.50"></text></g><g><title>[unknown] (36 samples, 0.20%)</title><rect x="62.5553%" y="405" width="0.2042%" height="15" fill="rgb(209,103,30)" fg:x="11026" fg:w="36"/><text x="62.8053%" y="415.50"></text></g><g><title>[unknown] (34 samples, 0.19%)</title><rect x="62.5667%" y="389" width="0.1929%" height="15" fill="rgb(238,100,19)" fg:x="11028" fg:w="34"/><text x="62.8167%" y="399.50"></text></g><g><title>[unknown] (34 samples, 0.19%)</title><rect x="62.5667%" y="373" width="0.1929%" height="15" fill="rgb(244,30,14)" fg:x="11028" fg:w="34"/><text x="62.8167%" y="383.50"></text></g><g><title>[unknown] (34 samples, 0.19%)</title><rect x="62.5667%" y="357" width="0.1929%" height="15" fill="rgb(249,174,6)" fg:x="11028" fg:w="34"/><text x="62.8167%" y="367.50"></text></g><g><title>[unknown] (29 samples, 0.16%)</title><rect x="62.5950%" y="341" width="0.1645%" height="15" fill="rgb(235,213,41)" fg:x="11033" fg:w="29"/><text x="62.8450%" y="351.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="62.6121%" y="325" width="0.1475%" height="15" fill="rgb(213,118,6)" fg:x="11036" fg:w="26"/><text x="62.8621%" y="335.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="62.6234%" y="309" width="0.1362%" height="15" fill="rgb(235,44,51)" fg:x="11038" fg:w="24"/><text x="62.8734%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.12%)</title><rect x="62.6404%" y="293" width="0.1191%" height="15" fill="rgb(217,9,53)" fg:x="11041" fg:w="21"/><text x="62.8904%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="62.6461%" y="277" width="0.1135%" height="15" fill="rgb(237,172,34)" fg:x="11042" fg:w="20"/><text x="62.8961%" y="287.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="62.6745%" y="261" width="0.0851%" height="15" fill="rgb(206,206,11)" fg:x="11047" fg:w="15"/><text x="62.9245%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="62.6972%" y="245" width="0.0624%" height="15" fill="rgb(214,149,29)" fg:x="11051" fg:w="11"/><text x="62.9472%" y="255.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="62.6972%" y="229" width="0.0624%" height="15" fill="rgb(208,123,3)" fg:x="11051" fg:w="11"/><text x="62.9472%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="62.7312%" y="213" width="0.0284%" height="15" fill="rgb(229,126,4)" fg:x="11057" fg:w="5"/><text x="62.9812%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="62.7369%" y="197" width="0.0227%" height="15" fill="rgb(222,92,36)" fg:x="11058" fg:w="4"/><text x="62.9869%" y="207.50"></text></g><g><title>__GI___poll (70 samples, 0.40%)</title><rect x="62.7596%" y="533" width="0.3971%" height="15" fill="rgb(216,39,41)" fg:x="11062" fg:w="70"/><text x="63.0096%" y="543.50"></text></g><g><title>[unknown] (69 samples, 0.39%)</title><rect x="62.7652%" y="517" width="0.3915%" height="15" fill="rgb(253,127,28)" fg:x="11063" fg:w="69"/><text x="63.0152%" y="527.50"></text></g><g><title>[unknown] (61 samples, 0.35%)</title><rect x="62.8106%" y="501" width="0.3461%" height="15" fill="rgb(249,152,51)" fg:x="11071" fg:w="61"/><text x="63.0606%" y="511.50"></text></g><g><title>[unknown] (61 samples, 0.35%)</title><rect x="62.8106%" y="485" width="0.3461%" height="15" fill="rgb(209,123,42)" fg:x="11071" fg:w="61"/><text x="63.0606%" y="495.50"></text></g><g><title>[unknown] (58 samples, 0.33%)</title><rect x="62.8276%" y="469" width="0.3291%" height="15" fill="rgb(241,118,22)" fg:x="11074" fg:w="58"/><text x="63.0776%" y="479.50"></text></g><g><title>[unknown] (55 samples, 0.31%)</title><rect x="62.8447%" y="453" width="0.3120%" height="15" fill="rgb(208,25,7)" fg:x="11077" fg:w="55"/><text x="63.0947%" y="463.50"></text></g><g><title>[unknown] (50 samples, 0.28%)</title><rect x="62.8730%" y="437" width="0.2837%" height="15" fill="rgb(243,144,39)" fg:x="11082" fg:w="50"/><text x="63.1230%" y="447.50"></text></g><g><title>[unknown] (46 samples, 0.26%)</title><rect x="62.8957%" y="421" width="0.2610%" height="15" fill="rgb(250,50,5)" fg:x="11086" fg:w="46"/><text x="63.1457%" y="431.50"></text></g><g><title>[unknown] (44 samples, 0.25%)</title><rect x="62.9071%" y="405" width="0.2496%" height="15" fill="rgb(207,67,11)" fg:x="11088" fg:w="44"/><text x="63.1571%" y="415.50"></text></g><g><title>[unknown] (42 samples, 0.24%)</title><rect x="62.9184%" y="389" width="0.2383%" height="15" fill="rgb(245,204,40)" fg:x="11090" fg:w="42"/><text x="63.1684%" y="399.50"></text></g><g><title>[unknown] (39 samples, 0.22%)</title><rect x="62.9354%" y="373" width="0.2213%" height="15" fill="rgb(238,228,24)" fg:x="11093" fg:w="39"/><text x="63.1854%" y="383.50"></text></g><g><title>[unknown] (32 samples, 0.18%)</title><rect x="62.9752%" y="357" width="0.1815%" height="15" fill="rgb(217,116,22)" fg:x="11100" fg:w="32"/><text x="63.2252%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="63.0829%" y="341" width="0.0738%" height="15" fill="rgb(234,98,12)" fg:x="11119" fg:w="13"/><text x="63.3329%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="63.1056%" y="325" width="0.0511%" height="15" fill="rgb(242,170,50)" fg:x="11123" fg:w="9"/><text x="63.3556%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="63.1227%" y="309" width="0.0340%" height="15" fill="rgb(235,7,5)" fg:x="11126" fg:w="6"/><text x="63.3727%" y="319.50"></text></g><g><title>[libxcb.so.1.1.0] (125 samples, 0.71%)</title><rect x="62.4589%" y="549" width="0.7092%" height="15" fill="rgb(241,114,28)" fg:x="11009" fg:w="125"/><text x="62.7089%" y="559.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="63.1567%" y="533" width="0.0113%" height="15" fill="rgb(246,112,42)" fg:x="11132" fg:w="2"/><text x="63.4067%" y="543.50"></text></g><g><title>XGetGeometry (304 samples, 1.72%)</title><rect x="61.4490%" y="613" width="1.7247%" height="15" fill="rgb(248,228,14)" fg:x="10831" fg:w="304"/><text x="61.6990%" y="623.50"></text></g><g><title>_XReply (295 samples, 1.67%)</title><rect x="61.5001%" y="597" width="1.6737%" height="15" fill="rgb(208,133,18)" fg:x="10840" fg:w="295"/><text x="61.7501%" y="607.50"></text></g><g><title>xcb_wait_for_reply64 (126 samples, 0.71%)</title><rect x="62.4589%" y="581" width="0.7149%" height="15" fill="rgb(207,35,49)" fg:x="11009" fg:w="126"/><text x="62.7089%" y="591.50"></text></g><g><title>[libxcb.so.1.1.0] (126 samples, 0.71%)</title><rect x="62.4589%" y="565" width="0.7149%" height="15" fill="rgb(205,68,36)" fg:x="11009" fg:w="126"/><text x="62.7089%" y="575.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (1,053 samples, 5.97%)</title><rect x="57.2109%" y="709" width="5.9741%" height="15" fill="rgb(245,62,40)" fg:x="10084" fg:w="1053"/><text x="57.4609%" y="719.50">ggez::gr..</text></g><g><title>winit::window::Window::inner_size (308 samples, 1.75%)</title><rect x="61.4376%" y="693" width="1.7474%" height="15" fill="rgb(228,27,24)" fg:x="10829" fg:w="308"/><text x="61.6876%" y="703.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (308 samples, 1.75%)</title><rect x="61.4376%" y="677" width="1.7474%" height="15" fill="rgb(253,19,12)" fg:x="10829" fg:w="308"/><text x="61.6876%" y="687.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (308 samples, 1.75%)</title><rect x="61.4376%" y="661" width="1.7474%" height="15" fill="rgb(232,28,20)" fg:x="10829" fg:w="308"/><text x="61.6876%" y="671.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (307 samples, 1.74%)</title><rect x="61.4433%" y="645" width="1.7417%" height="15" fill="rgb(218,35,51)" fg:x="10830" fg:w="307"/><text x="61.6933%" y="655.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (306 samples, 1.74%)</title><rect x="61.4490%" y="629" width="1.7361%" height="15" fill="rgb(212,90,40)" fg:x="10831" fg:w="306"/><text x="61.6990%" y="639.50"></text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::check_errors (2 samples, 0.01%)</title><rect x="63.1737%" y="613" width="0.0113%" height="15" fill="rgb(220,172,12)" fg:x="11135" fg:w="2"/><text x="63.4237%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="63.1737%" y="597" width="0.0113%" height="15" fill="rgb(226,159,20)" fg:x="11135" fg:w="2"/><text x="63.4237%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="63.1964%" y="693" width="0.0113%" height="15" fill="rgb(234,205,16)" fg:x="11139" fg:w="2"/><text x="63.4464%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.08%)</title><rect x="63.2248%" y="581" width="0.0794%" height="15" fill="rgb(207,9,39)" fg:x="11144" fg:w="14"/><text x="63.4748%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="63.2645%" y="565" width="0.0397%" height="15" fill="rgb(249,143,15)" fg:x="11151" fg:w="7"/><text x="63.5145%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="63.2815%" y="549" width="0.0227%" height="15" fill="rgb(253,133,29)" fg:x="11154" fg:w="4"/><text x="63.5315%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="63.3156%" y="581" width="0.0170%" height="15" fill="rgb(221,187,0)" fg:x="11160" fg:w="3"/><text x="63.5656%" y="591.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="63.3156%" y="565" width="0.0170%" height="15" fill="rgb(205,204,26)" fg:x="11160" fg:w="3"/><text x="63.5656%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (3 samples, 0.02%)</title><rect x="63.3156%" y="549" width="0.0170%" height="15" fill="rgb(224,68,54)" fg:x="11160" fg:w="3"/><text x="63.5656%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="63.3156%" y="533" width="0.0170%" height="15" fill="rgb(209,67,4)" fg:x="11160" fg:w="3"/><text x="63.5656%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="63.3156%" y="517" width="0.0170%" height="15" fill="rgb(228,229,18)" fg:x="11160" fg:w="3"/><text x="63.5656%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Texture&lt;wgpu_hal::vulkan::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="63.3326%" y="581" width="0.0113%" height="15" fill="rgb(231,89,13)" fg:x="11163" fg:w="2"/><text x="63.5826%" y="591.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="63.3326%" y="565" width="0.0113%" height="15" fill="rgb(210,182,18)" fg:x="11163" fg:w="2"/><text x="63.5826%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.01%)</title><rect x="63.3326%" y="549" width="0.0113%" height="15" fill="rgb(240,105,2)" fg:x="11163" fg:w="2"/><text x="63.5826%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="63.3326%" y="533" width="0.0113%" height="15" fill="rgb(207,170,50)" fg:x="11163" fg:w="2"/><text x="63.5826%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="63.3326%" y="517" width="0.0113%" height="15" fill="rgb(232,133,24)" fg:x="11163" fg:w="2"/><text x="63.5826%" y="527.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (10 samples, 0.06%)</title><rect x="63.3723%" y="533" width="0.0567%" height="15" fill="rgb(235,166,27)" fg:x="11170" fg:w="10"/><text x="63.6223%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="63.3723%" y="517" width="0.0567%" height="15" fill="rgb(209,19,13)" fg:x="11170" fg:w="10"/><text x="63.6223%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="63.3836%" y="501" width="0.0454%" height="15" fill="rgb(226,79,39)" fg:x="11172" fg:w="8"/><text x="63.6336%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="63.3893%" y="485" width="0.0397%" height="15" fill="rgb(222,163,10)" fg:x="11173" fg:w="7"/><text x="63.6393%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="63.4120%" y="469" width="0.0170%" height="15" fill="rgb(214,44,19)" fg:x="11177" fg:w="3"/><text x="63.6620%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::conv::derive_image_layout (4 samples, 0.02%)</title><rect x="63.4290%" y="533" width="0.0227%" height="15" fill="rgb(210,217,13)" fg:x="11180" fg:w="4"/><text x="63.6790%" y="543.50"></text></g><g><title>&lt;wgpu_hal::FormatAspects as core::convert::From&lt;wgpu_types::TextureFormat&gt;&gt;::from (2 samples, 0.01%)</title><rect x="63.4404%" y="517" width="0.0113%" height="15" fill="rgb(237,61,54)" fg:x="11182" fg:w="2"/><text x="63.6904%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::conv::map_subresource_range (3 samples, 0.02%)</title><rect x="63.4517%" y="533" width="0.0170%" height="15" fill="rgb(226,184,24)" fg:x="11184" fg:w="3"/><text x="63.7017%" y="543.50"></text></g><g><title>wgpu_hal::FormatAspects::new (2 samples, 0.01%)</title><rect x="63.4574%" y="517" width="0.0113%" height="15" fill="rgb(223,226,4)" fg:x="11185" fg:w="2"/><text x="63.7074%" y="527.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (22 samples, 0.12%)</title><rect x="63.3496%" y="565" width="0.1248%" height="15" fill="rgb(210,26,41)" fg:x="11166" fg:w="22"/><text x="63.5996%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (22 samples, 0.12%)</title><rect x="63.3496%" y="549" width="0.1248%" height="15" fill="rgb(220,221,6)" fg:x="11166" fg:w="22"/><text x="63.5996%" y="559.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_scope (28 samples, 0.16%)</title><rect x="63.3496%" y="581" width="0.1589%" height="15" fill="rgb(225,89,49)" fg:x="11166" fg:w="28"/><text x="63.5996%" y="591.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (6 samples, 0.03%)</title><rect x="63.4744%" y="565" width="0.0340%" height="15" fill="rgb(218,70,45)" fg:x="11188" fg:w="6"/><text x="63.7244%" y="575.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (4 samples, 0.02%)</title><rect x="63.4858%" y="549" width="0.0227%" height="15" fill="rgb(238,166,21)" fg:x="11190" fg:w="4"/><text x="63.7358%" y="559.50"></text></g><g><title>wgpu_core::track::texture::update (3 samples, 0.02%)</title><rect x="63.4914%" y="533" width="0.0170%" height="15" fill="rgb(224,141,44)" fg:x="11191" fg:w="3"/><text x="63.7414%" y="543.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::close (6 samples, 0.03%)</title><rect x="63.5085%" y="581" width="0.0340%" height="15" fill="rgb(230,12,49)" fg:x="11194" fg:w="6"/><text x="63.7585%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (6 samples, 0.03%)</title><rect x="63.5085%" y="565" width="0.0340%" height="15" fill="rgb(212,174,12)" fg:x="11194" fg:w="6"/><text x="63.7585%" y="575.50"></text></g><g><title>ash::device::Device::end_command_buffer (6 samples, 0.03%)</title><rect x="63.5085%" y="549" width="0.0340%" height="15" fill="rgb(246,67,9)" fg:x="11194" fg:w="6"/><text x="63.7585%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="63.5085%" y="533" width="0.0340%" height="15" fill="rgb(239,35,23)" fg:x="11194" fg:w="6"/><text x="63.7585%" y="543.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open (12 samples, 0.07%)</title><rect x="63.5425%" y="581" width="0.0681%" height="15" fill="rgb(211,167,0)" fg:x="11200" fg:w="12"/><text x="63.7925%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (12 samples, 0.07%)</title><rect x="63.5425%" y="565" width="0.0681%" height="15" fill="rgb(225,119,45)" fg:x="11200" fg:w="12"/><text x="63.7925%" y="575.50"></text></g><g><title>ash::device::Device::begin_command_buffer (12 samples, 0.07%)</title><rect x="63.5425%" y="549" width="0.0681%" height="15" fill="rgb(210,162,6)" fg:x="11200" fg:w="12"/><text x="63.7925%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="63.5425%" y="533" width="0.0681%" height="15" fill="rgb(208,118,35)" fg:x="11200" fg:w="12"/><text x="63.7925%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.06%)</title><rect x="63.5482%" y="517" width="0.0624%" height="15" fill="rgb(239,4,53)" fg:x="11201" fg:w="11"/><text x="63.7982%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="63.5709%" y="501" width="0.0397%" height="15" fill="rgb(213,130,21)" fg:x="11205" fg:w="7"/><text x="63.8209%" y="511.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (16 samples, 0.09%)</title><rect x="63.6106%" y="581" width="0.0908%" height="15" fill="rgb(235,148,0)" fg:x="11212" fg:w="16"/><text x="63.8606%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (16 samples, 0.09%)</title><rect x="63.6106%" y="565" width="0.0908%" height="15" fill="rgb(244,224,18)" fg:x="11212" fg:w="16"/><text x="63.8606%" y="575.50"></text></g><g><title>ash::device::Device::begin_command_buffer (16 samples, 0.09%)</title><rect x="63.6106%" y="549" width="0.0908%" height="15" fill="rgb(211,214,4)" fg:x="11212" fg:w="16"/><text x="63.8606%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="63.6106%" y="533" width="0.0908%" height="15" fill="rgb(206,119,25)" fg:x="11212" fg:w="16"/><text x="63.8606%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.07%)</title><rect x="63.6276%" y="517" width="0.0738%" height="15" fill="rgb(243,93,47)" fg:x="11215" fg:w="13"/><text x="63.8776%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="63.6560%" y="501" width="0.0454%" height="15" fill="rgb(224,194,6)" fg:x="11220" fg:w="8"/><text x="63.9060%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="63.6843%" y="485" width="0.0170%" height="15" fill="rgb(243,229,6)" fg:x="11225" fg:w="3"/><text x="63.9343%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="63.6900%" y="469" width="0.0113%" height="15" fill="rgb(207,23,50)" fg:x="11226" fg:w="2"/><text x="63.9400%" y="479.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="63.7014%" y="565" width="0.0113%" height="15" fill="rgb(253,192,32)" fg:x="11228" fg:w="2"/><text x="63.9514%" y="575.50"></text></g><g><title>arrayvec::arrayvec::ArrayVec&lt;T,_&gt;::as_slice (2 samples, 0.01%)</title><rect x="63.7014%" y="549" width="0.0113%" height="15" fill="rgb(213,21,6)" fg:x="11228" fg:w="2"/><text x="63.9514%" y="559.50"></text></g><g><title>arrayvec::arrayvec_impl::ArrayVecImpl::as_slice (2 samples, 0.01%)</title><rect x="63.7014%" y="533" width="0.0113%" height="15" fill="rgb(243,151,13)" fg:x="11228" fg:w="2"/><text x="63.9514%" y="543.50"></text></g><g><title>wgpu_core::command::bind::Binder::change_pipeline_layout (4 samples, 0.02%)</title><rect x="63.7014%" y="581" width="0.0227%" height="15" fill="rgb(233,165,41)" fg:x="11228" fg:w="4"/><text x="63.9514%" y="591.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::finish (6 samples, 0.03%)</title><rect x="63.7354%" y="581" width="0.0340%" height="15" fill="rgb(246,176,45)" fg:x="11234" fg:w="6"/><text x="63.9854%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_render_pass (4 samples, 0.02%)</title><rect x="63.7467%" y="565" width="0.0227%" height="15" fill="rgb(217,170,52)" fg:x="11236" fg:w="4"/><text x="63.9967%" y="575.50"></text></g><g><title>ash::device::Device::cmd_end_render_pass (4 samples, 0.02%)</title><rect x="63.7467%" y="549" width="0.0227%" height="15" fill="rgb(214,203,54)" fg:x="11236" fg:w="4"/><text x="63.9967%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="63.7467%" y="533" width="0.0227%" height="15" fill="rgb(248,215,49)" fg:x="11236" fg:w="4"/><text x="63.9967%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="63.7524%" y="517" width="0.0170%" height="15" fill="rgb(208,46,10)" fg:x="11237" fg:w="3"/><text x="64.0024%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="63.7524%" y="501" width="0.0170%" height="15" fill="rgb(254,5,31)" fg:x="11237" fg:w="3"/><text x="64.0024%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="63.7581%" y="485" width="0.0113%" height="15" fill="rgb(222,104,33)" fg:x="11238" fg:w="2"/><text x="64.0081%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="63.7751%" y="565" width="0.0170%" height="15" fill="rgb(248,49,16)" fg:x="11241" fg:w="3"/><text x="64.0251%" y="575.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (4 samples, 0.02%)</title><rect x="63.7978%" y="533" width="0.0227%" height="15" fill="rgb(232,198,41)" fg:x="11245" fg:w="4"/><text x="64.0478%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (4 samples, 0.02%)</title><rect x="63.7978%" y="517" width="0.0227%" height="15" fill="rgb(214,125,3)" fg:x="11245" fg:w="4"/><text x="64.0478%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.02%)</title><rect x="63.7978%" y="501" width="0.0227%" height="15" fill="rgb(229,220,28)" fg:x="11245" fg:w="4"/><text x="64.0478%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.02%)</title><rect x="63.7978%" y="485" width="0.0227%" height="15" fill="rgb(222,64,37)" fg:x="11245" fg:w="4"/><text x="64.0478%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="63.8035%" y="469" width="0.0170%" height="15" fill="rgb(249,184,13)" fg:x="11246" fg:w="3"/><text x="64.0535%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.02%)</title><rect x="63.8035%" y="453" width="0.0170%" height="15" fill="rgb(252,176,6)" fg:x="11246" fg:w="3"/><text x="64.0535%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.02%)</title><rect x="63.8035%" y="437" width="0.0170%" height="15" fill="rgb(228,153,7)" fg:x="11246" fg:w="3"/><text x="64.0535%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="63.8035%" y="421" width="0.0170%" height="15" fill="rgb(242,193,5)" fg:x="11246" fg:w="3"/><text x="64.0535%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="63.8035%" y="405" width="0.0170%" height="15" fill="rgb(232,140,9)" fg:x="11246" fg:w="3"/><text x="64.0535%" y="415.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.02%)</title><rect x="63.8035%" y="389" width="0.0170%" height="15" fill="rgb(213,222,16)" fg:x="11246" fg:w="3"/><text x="64.0535%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="63.8091%" y="373" width="0.0113%" height="15" fill="rgb(222,75,50)" fg:x="11247" fg:w="2"/><text x="64.0591%" y="383.50"></text></g><g><title>wgpu_core::track::buffer::BufferUsageScope&lt;A&gt;::set_size (6 samples, 0.03%)</title><rect x="63.7921%" y="549" width="0.0340%" height="15" fill="rgb(205,180,2)" fg:x="11244" fg:w="6"/><text x="64.0421%" y="559.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (9 samples, 0.05%)</title><rect x="63.7921%" y="565" width="0.0511%" height="15" fill="rgb(216,34,7)" fg:x="11244" fg:w="9"/><text x="64.0421%" y="575.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (3 samples, 0.02%)</title><rect x="63.8262%" y="549" width="0.0170%" height="15" fill="rgb(253,16,32)" fg:x="11250" fg:w="3"/><text x="64.0762%" y="559.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="63.8318%" y="533" width="0.0113%" height="15" fill="rgb(208,97,28)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.01%)</title><rect x="63.8318%" y="517" width="0.0113%" height="15" fill="rgb(225,92,11)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 0.01%)</title><rect x="63.8318%" y="501" width="0.0113%" height="15" fill="rgb(243,38,12)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="63.8318%" y="485" width="0.0113%" height="15" fill="rgb(208,139,16)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="63.8318%" y="469" width="0.0113%" height="15" fill="rgb(227,24,9)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="63.8318%" y="453" width="0.0113%" height="15" fill="rgb(206,62,11)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="63.8318%" y="437" width="0.0113%" height="15" fill="rgb(228,134,27)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="63.8318%" y="421" width="0.0113%" height="15" fill="rgb(205,55,33)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="431.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="63.8318%" y="405" width="0.0113%" height="15" fill="rgb(243,75,43)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="415.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="63.8318%" y="389" width="0.0113%" height="15" fill="rgb(223,27,42)" fg:x="11251" fg:w="2"/><text x="64.0818%" y="399.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (15 samples, 0.09%)</title><rect x="63.7694%" y="581" width="0.0851%" height="15" fill="rgb(232,189,33)" fg:x="11240" fg:w="15"/><text x="64.0194%" y="591.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (2 samples, 0.01%)</title><rect x="63.8432%" y="565" width="0.0113%" height="15" fill="rgb(210,9,39)" fg:x="11253" fg:w="2"/><text x="64.0932%" y="575.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (2 samples, 0.01%)</title><rect x="63.8432%" y="549" width="0.0113%" height="15" fill="rgb(242,85,26)" fg:x="11253" fg:w="2"/><text x="64.0932%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="63.8432%" y="533" width="0.0113%" height="15" fill="rgb(248,44,4)" fg:x="11253" fg:w="2"/><text x="64.0932%" y="543.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="63.8432%" y="517" width="0.0113%" height="15" fill="rgb(250,96,46)" fg:x="11253" fg:w="2"/><text x="64.0932%" y="527.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (3 samples, 0.02%)</title><rect x="63.8602%" y="581" width="0.0170%" height="15" fill="rgb(229,116,26)" fg:x="11256" fg:w="3"/><text x="64.1102%" y="591.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.01%)</title><rect x="63.8659%" y="565" width="0.0113%" height="15" fill="rgb(246,94,34)" fg:x="11257" fg:w="2"/><text x="64.1159%" y="575.50"></text></g><g><title>&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="63.8659%" y="549" width="0.0113%" height="15" fill="rgb(251,73,21)" fg:x="11257" fg:w="2"/><text x="64.1159%" y="559.50"></text></g><g><title>wgpu_core::track::Tracker&lt;A&gt;::set_size (2 samples, 0.01%)</title><rect x="63.8829%" y="581" width="0.0113%" height="15" fill="rgb(254,121,25)" fg:x="11260" fg:w="2"/><text x="64.1329%" y="591.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (4 samples, 0.02%)</title><rect x="63.8942%" y="565" width="0.0227%" height="15" fill="rgb(215,161,49)" fg:x="11262" fg:w="4"/><text x="64.1442%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="63.8942%" y="549" width="0.0227%" height="15" fill="rgb(221,43,13)" fg:x="11262" fg:w="4"/><text x="64.1442%" y="559.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="63.9056%" y="533" width="0.0113%" height="15" fill="rgb(249,5,37)" fg:x="11264" fg:w="2"/><text x="64.1556%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="63.9056%" y="517" width="0.0113%" height="15" fill="rgb(226,25,44)" fg:x="11264" fg:w="2"/><text x="64.1556%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="63.9056%" y="501" width="0.0113%" height="15" fill="rgb(238,189,16)" fg:x="11264" fg:w="2"/><text x="64.1556%" y="511.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::add_single (5 samples, 0.03%)</title><rect x="63.8942%" y="581" width="0.0284%" height="15" fill="rgb(251,186,8)" fg:x="11262" fg:w="5"/><text x="64.1442%" y="591.50"></text></g><g><title>core::mem::drop (135 samples, 0.77%)</title><rect x="63.2078%" y="693" width="0.7659%" height="15" fill="rgb(254,34,31)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (135 samples, 0.77%)</title><rect x="63.2078%" y="677" width="0.7659%" height="15" fill="rgb(225,215,27)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="687.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (135 samples, 0.77%)</title><rect x="63.2078%" y="661" width="0.7659%" height="15" fill="rgb(221,192,48)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (135 samples, 0.77%)</title><rect x="63.2078%" y="645" width="0.7659%" height="15" fill="rgb(219,137,20)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (135 samples, 0.77%)</title><rect x="63.2078%" y="629" width="0.7659%" height="15" fill="rgb(219,84,11)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="639.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (135 samples, 0.77%)</title><rect x="63.2078%" y="613" width="0.7659%" height="15" fill="rgb(224,10,23)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (135 samples, 0.77%)</title><rect x="63.2078%" y="597" width="0.7659%" height="15" fill="rgb(248,22,39)" fg:x="11141" fg:w="135"/><text x="63.4578%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_bind_group (9 samples, 0.05%)</title><rect x="63.9226%" y="581" width="0.0511%" height="15" fill="rgb(212,154,20)" fg:x="11267" fg:w="9"/><text x="64.1726%" y="591.50"></text></g><g><title>ash::device::Device::cmd_bind_descriptor_sets (9 samples, 0.05%)</title><rect x="63.9226%" y="565" width="0.0511%" height="15" fill="rgb(236,199,50)" fg:x="11267" fg:w="9"/><text x="64.1726%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="63.9226%" y="549" width="0.0511%" height="15" fill="rgb(211,9,17)" fg:x="11267" fg:w="9"/><text x="64.1726%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="63.9226%" y="533" width="0.0511%" height="15" fill="rgb(243,216,36)" fg:x="11267" fg:w="9"/><text x="64.1726%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="63.9453%" y="517" width="0.0284%" height="15" fill="rgb(250,2,10)" fg:x="11271" fg:w="5"/><text x="64.1953%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.01%)</title><rect x="63.9737%" y="693" width="0.0113%" height="15" fill="rgb(226,50,48)" fg:x="11276" fg:w="2"/><text x="64.2237%" y="703.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="63.9737%" y="677" width="0.0113%" height="15" fill="rgb(243,81,16)" fg:x="11276" fg:w="2"/><text x="64.2237%" y="687.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="63.9737%" y="661" width="0.0113%" height="15" fill="rgb(250,14,2)" fg:x="11276" fg:w="2"/><text x="64.2237%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::inner (2 samples, 0.01%)</title><rect x="63.9964%" y="517" width="0.0113%" height="15" fill="rgb(233,135,29)" fg:x="11280" fg:w="2"/><text x="64.2464%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="63.9964%" y="501" width="0.0113%" height="15" fill="rgb(224,64,43)" fg:x="11280" fg:w="2"/><text x="64.2464%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::Arena&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="63.9907%" y="677" width="0.0284%" height="15" fill="rgb(238,84,13)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="63.9907%" y="661" width="0.0284%" height="15" fill="rgb(253,48,26)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="63.9907%" y="645" width="0.0284%" height="15" fill="rgb(205,223,31)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="63.9907%" y="629" width="0.0284%" height="15" fill="rgb(221,41,32)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="63.9907%" y="613" width="0.0284%" height="15" fill="rgb(213,158,31)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="63.9907%" y="597" width="0.0284%" height="15" fill="rgb(245,126,43)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;]&gt; (5 samples, 0.03%)</title><rect x="63.9907%" y="581" width="0.0284%" height="15" fill="rgb(227,7,22)" fg:x="11279" fg:w="5"/><text x="64.2407%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::BindGroup&gt;&gt; (4 samples, 0.02%)</title><rect x="63.9964%" y="565" width="0.0227%" height="15" fill="rgb(252,90,44)" fg:x="11280" fg:w="4"/><text x="64.2464%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::BindGroup&gt;&gt; (4 samples, 0.02%)</title><rect x="63.9964%" y="549" width="0.0227%" height="15" fill="rgb(253,91,0)" fg:x="11280" fg:w="4"/><text x="64.2464%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="63.9964%" y="533" width="0.0227%" height="15" fill="rgb(252,175,49)" fg:x="11280" fg:w="4"/><text x="64.2464%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="64.0077%" y="517" width="0.0113%" height="15" fill="rgb(246,150,1)" fg:x="11282" fg:w="2"/><text x="64.2577%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="64.0077%" y="501" width="0.0113%" height="15" fill="rgb(241,192,25)" fg:x="11282" fg:w="2"/><text x="64.2577%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::Arena&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0191%" y="677" width="0.0170%" height="15" fill="rgb(239,187,11)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0191%" y="661" width="0.0170%" height="15" fill="rgb(218,202,51)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0191%" y="645" width="0.0170%" height="15" fill="rgb(225,176,8)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0191%" y="629" width="0.0170%" height="15" fill="rgb(219,122,41)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0191%" y="613" width="0.0170%" height="15" fill="rgb(248,140,20)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::Buffer&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0191%" y="597" width="0.0170%" height="15" fill="rgb(245,41,37)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="64.0191%" y="581" width="0.0170%" height="15" fill="rgb(235,82,39)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="64.0191%" y="565" width="0.0170%" height="15" fill="rgb(230,108,42)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="64.0191%" y="549" width="0.0170%" height="15" fill="rgb(215,150,50)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="64.0191%" y="533" width="0.0170%" height="15" fill="rgb(233,212,5)" fg:x="11284" fg:w="3"/><text x="64.2691%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="64.0247%" y="517" width="0.0113%" height="15" fill="rgb(245,80,22)" fg:x="11285" fg:w="2"/><text x="64.2747%" y="527.50"></text></g><g><title>tcache_put (2 samples, 0.01%)</title><rect x="64.0247%" y="501" width="0.0113%" height="15" fill="rgb(238,129,16)" fg:x="11285" fg:w="2"/><text x="64.2747%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="64.0361%" y="597" width="0.0170%" height="15" fill="rgb(240,19,0)" fg:x="11287" fg:w="3"/><text x="64.2861%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;]&gt; (3 samples, 0.02%)</title><rect x="64.0361%" y="581" width="0.0170%" height="15" fill="rgb(232,42,35)" fg:x="11287" fg:w="3"/><text x="64.2861%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0361%" y="565" width="0.0170%" height="15" fill="rgb(223,130,24)" fg:x="11287" fg:w="3"/><text x="64.2861%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::RenderPipeline&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0361%" y="549" width="0.0170%" height="15" fill="rgb(237,16,22)" fg:x="11287" fg:w="3"/><text x="64.2861%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="64.0361%" y="533" width="0.0170%" height="15" fill="rgb(248,192,20)" fg:x="11287" fg:w="3"/><text x="64.2861%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="64.0418%" y="517" width="0.0113%" height="15" fill="rgb(233,167,2)" fg:x="11288" fg:w="2"/><text x="64.2918%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="64.0418%" y="501" width="0.0113%" height="15" fill="rgb(252,71,44)" fg:x="11288" fg:w="2"/><text x="64.2918%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::context::FrameArenas&gt; (13 samples, 0.07%)</title><rect x="63.9850%" y="693" width="0.0738%" height="15" fill="rgb(238,37,47)" fg:x="11278" fg:w="13"/><text x="64.2350%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::Arena&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="64.0361%" y="677" width="0.0227%" height="15" fill="rgb(214,202,54)" fg:x="11287" fg:w="4"/><text x="64.2861%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="64.0361%" y="661" width="0.0227%" height="15" fill="rgb(254,165,40)" fg:x="11287" fg:w="4"/><text x="64.2861%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="64.0361%" y="645" width="0.0227%" height="15" fill="rgb(246,173,38)" fg:x="11287" fg:w="4"/><text x="64.2861%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;typed_arena::ChunkList&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="64.0361%" y="629" width="0.0227%" height="15" fill="rgb(215,3,27)" fg:x="11287" fg:w="4"/><text x="64.2861%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ggez::graphics::gpu::arc::ArcHandle&lt;wgpu::RenderPipeline&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="64.0361%" y="613" width="0.0227%" height="15" fill="rgb(239,169,51)" fg:x="11287" fg:w="4"/><text x="64.2861%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SubmissionIndex&gt; (3 samples, 0.02%)</title><rect x="64.0588%" y="693" width="0.0170%" height="15" fill="rgb(212,5,25)" fg:x="11291" fg:w="3"/><text x="64.3088%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (3 samples, 0.02%)</title><rect x="64.0588%" y="677" width="0.0170%" height="15" fill="rgb(243,45,17)" fg:x="11291" fg:w="3"/><text x="64.3088%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="64.0588%" y="661" width="0.0170%" height="15" fill="rgb(242,97,9)" fg:x="11291" fg:w="3"/><text x="64.3088%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="64.0588%" y="645" width="0.0170%" height="15" fill="rgb(228,71,31)" fg:x="11291" fg:w="3"/><text x="64.3088%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::get_mut_unchecked (3 samples, 0.02%)</title><rect x="64.0588%" y="629" width="0.0170%" height="15" fill="rgb(252,184,16)" fg:x="11291" fg:w="3"/><text x="64.3088%" y="639.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.01%)</title><rect x="64.0815%" y="645" width="0.0113%" height="15" fill="rgb(236,169,46)" fg:x="11295" fg:w="2"/><text x="64.3315%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.01%)</title><rect x="64.0815%" y="629" width="0.0113%" height="15" fill="rgb(207,17,47)" fg:x="11295" fg:w="2"/><text x="64.3315%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (5 samples, 0.03%)</title><rect x="64.0758%" y="661" width="0.0284%" height="15" fill="rgb(206,201,28)" fg:x="11294" fg:w="5"/><text x="64.3258%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::Queue&gt; (2 samples, 0.01%)</title><rect x="64.0928%" y="645" width="0.0113%" height="15" fill="rgb(224,184,23)" fg:x="11297" fg:w="2"/><text x="64.3428%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="64.0928%" y="629" width="0.0113%" height="15" fill="rgb(208,139,48)" fg:x="11297" fg:w="2"/><text x="64.3428%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="64.0928%" y="613" width="0.0113%" height="15" fill="rgb(208,130,10)" fg:x="11297" fg:w="2"/><text x="64.3428%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SurfaceTexture&gt; (7 samples, 0.04%)</title><rect x="64.0758%" y="693" width="0.0397%" height="15" fill="rgb(211,213,45)" fg:x="11294" fg:w="7"/><text x="64.3258%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Texture&gt; (7 samples, 0.04%)</title><rect x="64.0758%" y="677" width="0.0397%" height="15" fill="rgb(235,100,30)" fg:x="11294" fg:w="7"/><text x="64.3258%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;dyn wgpu::context::DynContext&gt;&gt; (2 samples, 0.01%)</title><rect x="64.1042%" y="661" width="0.0113%" height="15" fill="rgb(206,144,31)" fg:x="11299" fg:w="2"/><text x="64.3542%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="64.1042%" y="645" width="0.0113%" height="15" fill="rgb(224,200,26)" fg:x="11299" fg:w="2"/><text x="64.3542%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="64.1042%" y="629" width="0.0113%" height="15" fill="rgb(247,104,53)" fg:x="11299" fg:w="2"/><text x="64.3542%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="64.1042%" y="613" width="0.0113%" height="15" fill="rgb(220,14,17)" fg:x="11299" fg:w="2"/><text x="64.3542%" y="623.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (2 samples, 0.01%)</title><rect x="64.1382%" y="645" width="0.0113%" height="15" fill="rgb(230,140,40)" fg:x="11305" fg:w="2"/><text x="64.3882%" y="655.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="64.1382%" y="629" width="0.0113%" height="15" fill="rgb(229,2,41)" fg:x="11305" fg:w="2"/><text x="64.3882%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (2 samples, 0.01%)</title><rect x="64.1496%" y="645" width="0.0113%" height="15" fill="rgb(232,89,16)" fg:x="11307" fg:w="2"/><text x="64.3996%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="64.1496%" y="629" width="0.0113%" height="15" fill="rgb(247,59,52)" fg:x="11307" fg:w="2"/><text x="64.3996%" y="639.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="64.1496%" y="613" width="0.0113%" height="15" fill="rgb(226,110,21)" fg:x="11307" fg:w="2"/><text x="64.3996%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="64.1496%" y="597" width="0.0113%" height="15" fill="rgb(224,176,43)" fg:x="11307" fg:w="2"/><text x="64.3996%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (10 samples, 0.06%)</title><rect x="64.1155%" y="693" width="0.0567%" height="15" fill="rgb(221,73,6)" fg:x="11301" fg:w="10"/><text x="64.3655%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::texture_view_drop (10 samples, 0.06%)</title><rect x="64.1155%" y="677" width="0.0567%" height="15" fill="rgb(232,78,19)" fg:x="11301" fg:w="10"/><text x="64.3655%" y="687.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_view_drop (9 samples, 0.05%)</title><rect x="64.1212%" y="661" width="0.0511%" height="15" fill="rgb(233,112,48)" fg:x="11302" fg:w="9"/><text x="64.3712%" y="671.50"></text></g><g><title>&lt;ggez::graphics::gpu::arc::ArcHandle&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="64.1893%" y="661" width="0.0113%" height="15" fill="rgb(243,131,47)" fg:x="11314" fg:w="2"/><text x="64.4393%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="64.1893%" y="645" width="0.0113%" height="15" fill="rgb(226,51,1)" fg:x="11314" fg:w="2"/><text x="64.4393%" y="655.50"></text></g><g><title>&lt;wgpu_types::BindingType as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="64.2063%" y="501" width="0.0113%" height="15" fill="rgb(247,58,7)" fg:x="11317" fg:w="2"/><text x="64.4563%" y="511.50"></text></g><g><title>&lt;wgpu_types::ShaderStages as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="64.2176%" y="501" width="0.0113%" height="15" fill="rgb(209,7,32)" fg:x="11319" fg:w="2"/><text x="64.4676%" y="511.50"></text></g><g><title>&lt;wgpu_types::_::InternalBitFlags as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="64.2176%" y="485" width="0.0113%" height="15" fill="rgb(209,39,41)" fg:x="11319" fg:w="2"/><text x="64.4676%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.01%)</title><rect x="64.2176%" y="469" width="0.0113%" height="15" fill="rgb(226,182,46)" fg:x="11319" fg:w="2"/><text x="64.4676%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.01%)</title><rect x="64.2176%" y="453" width="0.0113%" height="15" fill="rgb(230,219,10)" fg:x="11319" fg:w="2"/><text x="64.4676%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (6 samples, 0.03%)</title><rect x="64.2006%" y="629" width="0.0340%" height="15" fill="rgb(227,175,30)" fg:x="11316" fg:w="6"/><text x="64.4506%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.03%)</title><rect x="64.2006%" y="613" width="0.0340%" height="15" fill="rgb(217,2,50)" fg:x="11316" fg:w="6"/><text x="64.4506%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.03%)</title><rect x="64.2063%" y="597" width="0.0284%" height="15" fill="rgb(229,160,0)" fg:x="11317" fg:w="5"/><text x="64.4563%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (5 samples, 0.03%)</title><rect x="64.2063%" y="581" width="0.0284%" height="15" fill="rgb(207,78,37)" fg:x="11317" fg:w="5"/><text x="64.4563%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="64.2063%" y="565" width="0.0284%" height="15" fill="rgb(225,57,0)" fg:x="11317" fg:w="5"/><text x="64.4563%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.03%)</title><rect x="64.2063%" y="549" width="0.0284%" height="15" fill="rgb(232,154,2)" fg:x="11317" fg:w="5"/><text x="64.4563%" y="559.50"></text></g><g><title>core::hash::Hash::hash_slice (5 samples, 0.03%)</title><rect x="64.2063%" y="533" width="0.0284%" height="15" fill="rgb(241,212,25)" fg:x="11317" fg:w="5"/><text x="64.4563%" y="543.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::hash::Hash&gt;::hash (5 samples, 0.03%)</title><rect x="64.2063%" y="517" width="0.0284%" height="15" fill="rgb(226,69,20)" fg:x="11317" fg:w="5"/><text x="64.4563%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.01%)</title><rect x="64.2347%" y="597" width="0.0113%" height="15" fill="rgb(247,184,54)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.01%)</title><rect x="64.2347%" y="581" width="0.0113%" height="15" fill="rgb(210,145,0)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="591.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2 samples, 0.01%)</title><rect x="64.2347%" y="565" width="0.0113%" height="15" fill="rgb(253,82,12)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="575.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.01%)</title><rect x="64.2347%" y="549" width="0.0113%" height="15" fill="rgb(245,42,11)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="64.2347%" y="533" width="0.0113%" height="15" fill="rgb(219,147,32)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="64.2347%" y="517" width="0.0113%" height="15" fill="rgb(246,12,7)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.01%)</title><rect x="64.2347%" y="501" width="0.0113%" height="15" fill="rgb(243,50,9)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.01%)</title><rect x="64.2347%" y="485" width="0.0113%" height="15" fill="rgb(219,149,6)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (2 samples, 0.01%)</title><rect x="64.2347%" y="469" width="0.0113%" height="15" fill="rgb(241,51,42)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (2 samples, 0.01%)</title><rect x="64.2347%" y="453" width="0.0113%" height="15" fill="rgb(226,128,27)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.01%)</title><rect x="64.2347%" y="437" width="0.0113%" height="15" fill="rgb(244,144,4)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="447.50"></text></g><g><title>&lt;wgpu_types::BindGroupLayoutEntry as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="64.2347%" y="421" width="0.0113%" height="15" fill="rgb(221,4,13)" fg:x="11322" fg:w="2"/><text x="64.4847%" y="431.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::bind_group (14 samples, 0.08%)</title><rect x="64.1722%" y="693" width="0.0794%" height="15" fill="rgb(208,170,28)" fg:x="11311" fg:w="14"/><text x="64.4222%" y="703.50"></text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (11 samples, 0.06%)</title><rect x="64.1893%" y="677" width="0.0624%" height="15" fill="rgb(226,131,13)" fg:x="11314" fg:w="11"/><text x="64.4393%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.05%)</title><rect x="64.2006%" y="661" width="0.0511%" height="15" fill="rgb(215,72,41)" fg:x="11316" fg:w="9"/><text x="64.4506%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.05%)</title><rect x="64.2006%" y="645" width="0.0511%" height="15" fill="rgb(243,108,20)" fg:x="11316" fg:w="9"/><text x="64.4506%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="64.2347%" y="629" width="0.0170%" height="15" fill="rgb(230,189,17)" fg:x="11322" fg:w="3"/><text x="64.4847%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="64.2347%" y="613" width="0.0170%" height="15" fill="rgb(220,50,17)" fg:x="11322" fg:w="3"/><text x="64.4847%" y="623.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::layout (4 samples, 0.02%)</title><rect x="64.2517%" y="693" width="0.0227%" height="15" fill="rgb(248,152,48)" fg:x="11325" fg:w="4"/><text x="64.5017%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="64.2630%" y="677" width="0.0113%" height="15" fill="rgb(244,91,11)" fg:x="11327" fg:w="2"/><text x="64.5130%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.01%)</title><rect x="64.2630%" y="661" width="0.0113%" height="15" fill="rgb(220,157,5)" fg:x="11327" fg:w="2"/><text x="64.5130%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="64.2800%" y="661" width="0.0113%" height="15" fill="rgb(253,137,8)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="64.2800%" y="645" width="0.0113%" height="15" fill="rgb(217,137,51)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="64.2800%" y="629" width="0.0113%" height="15" fill="rgb(218,209,53)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="64.2800%" y="613" width="0.0113%" height="15" fill="rgb(249,137,25)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="64.2800%" y="597" width="0.0113%" height="15" fill="rgb(239,155,26)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="64.2800%" y="581" width="0.0113%" height="15" fill="rgb(227,85,46)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="64.2800%" y="565" width="0.0113%" height="15" fill="rgb(251,107,43)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="64.2800%" y="549" width="0.0113%" height="15" fill="rgb(234,170,33)" fg:x="11330" fg:w="2"/><text x="64.5300%" y="559.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="64.2800%" y="677" width="0.0170%" height="15" fill="rgb(206,29,35)" fg:x="11330" fg:w="3"/><text x="64.5300%" y="687.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="64.3027%" y="597" width="0.0113%" height="15" fill="rgb(227,138,25)" fg:x="11334" fg:w="2"/><text x="64.5527%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.03%)</title><rect x="64.3027%" y="645" width="0.0284%" height="15" fill="rgb(249,131,35)" fg:x="11334" fg:w="5"/><text x="64.5527%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.03%)</title><rect x="64.3027%" y="629" width="0.0284%" height="15" fill="rgb(239,6,40)" fg:x="11334" fg:w="5"/><text x="64.5527%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.03%)</title><rect x="64.3027%" y="613" width="0.0284%" height="15" fill="rgb(246,136,47)" fg:x="11334" fg:w="5"/><text x="64.5527%" y="623.50"></text></g><g><title>&lt;wgpu::VertexBufferLayout as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="64.3141%" y="597" width="0.0170%" height="15" fill="rgb(253,58,26)" fg:x="11336" fg:w="3"/><text x="64.5641%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.02%)</title><rect x="64.3141%" y="581" width="0.0170%" height="15" fill="rgb(237,141,10)" fg:x="11336" fg:w="3"/><text x="64.5641%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.02%)</title><rect x="64.3141%" y="565" width="0.0170%" height="15" fill="rgb(234,156,12)" fg:x="11336" fg:w="3"/><text x="64.5641%" y="575.50"></text></g><g><title>core::hash::Hash::hash_slice (3 samples, 0.02%)</title><rect x="64.3141%" y="549" width="0.0170%" height="15" fill="rgb(243,224,36)" fg:x="11336" fg:w="3"/><text x="64.5641%" y="559.50"></text></g><g><title>&lt;wgpu_types::VertexAttribute as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="64.3141%" y="533" width="0.0170%" height="15" fill="rgb(205,229,51)" fg:x="11336" fg:w="3"/><text x="64.5641%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.01%)</title><rect x="64.3198%" y="517" width="0.0113%" height="15" fill="rgb(223,189,4)" fg:x="11337" fg:w="2"/><text x="64.5698%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.01%)</title><rect x="64.3198%" y="501" width="0.0113%" height="15" fill="rgb(249,167,54)" fg:x="11337" fg:w="2"/><text x="64.5698%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="64.3198%" y="485" width="0.0113%" height="15" fill="rgb(218,34,28)" fg:x="11337" fg:w="2"/><text x="64.5698%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="64.3198%" y="469" width="0.0113%" height="15" fill="rgb(232,109,42)" fg:x="11337" fg:w="2"/><text x="64.5698%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.01%)</title><rect x="64.3198%" y="453" width="0.0113%" height="15" fill="rgb(248,214,46)" fg:x="11337" fg:w="2"/><text x="64.5698%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="64.3311%" y="565" width="0.0113%" height="15" fill="rgb(244,216,40)" fg:x="11339" fg:w="2"/><text x="64.5811%" y="575.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.01%)</title><rect x="64.3311%" y="549" width="0.0113%" height="15" fill="rgb(231,226,31)" fg:x="11339" fg:w="2"/><text x="64.5811%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.01%)</title><rect x="64.3311%" y="533" width="0.0113%" height="15" fill="rgb(238,38,43)" fg:x="11339" fg:w="2"/><text x="64.5811%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.01%)</title><rect x="64.3311%" y="517" width="0.0113%" height="15" fill="rgb(208,88,43)" fg:x="11339" fg:w="2"/><text x="64.5811%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.01%)</title><rect x="64.3311%" y="501" width="0.0113%" height="15" fill="rgb(205,136,37)" fg:x="11339" fg:w="2"/><text x="64.5811%" y="511.50"></text></g><g><title>ggez::graphics::gpu::pipeline::PipelineCache::render_pipeline (13 samples, 0.07%)</title><rect x="64.2744%" y="693" width="0.0738%" height="15" fill="rgb(237,34,14)" fg:x="11329" fg:w="13"/><text x="64.5244%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.05%)</title><rect x="64.3027%" y="677" width="0.0454%" height="15" fill="rgb(236,193,44)" fg:x="11334" fg:w="8"/><text x="64.5527%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.05%)</title><rect x="64.3027%" y="661" width="0.0454%" height="15" fill="rgb(231,48,10)" fg:x="11334" fg:w="8"/><text x="64.5527%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.02%)</title><rect x="64.3311%" y="645" width="0.0170%" height="15" fill="rgb(213,141,34)" fg:x="11339" fg:w="3"/><text x="64.5811%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.02%)</title><rect x="64.3311%" y="629" width="0.0170%" height="15" fill="rgb(249,130,34)" fg:x="11339" fg:w="3"/><text x="64.5811%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.02%)</title><rect x="64.3311%" y="613" width="0.0170%" height="15" fill="rgb(219,42,41)" fg:x="11339" fg:w="3"/><text x="64.5811%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3 samples, 0.02%)</title><rect x="64.3311%" y="597" width="0.0170%" height="15" fill="rgb(224,100,54)" fg:x="11339" fg:w="3"/><text x="64.5811%" y="607.50"></text></g><g><title>&lt;ggez::graphics::gpu::pipeline::RenderPipelineInfo as core::cmp::PartialEq&gt;::eq (3 samples, 0.02%)</title><rect x="64.3311%" y="581" width="0.0170%" height="15" fill="rgb(229,200,27)" fg:x="11339" fg:w="3"/><text x="64.5811%" y="591.50"></text></g><g><title>ggez::graphics::sampler::SamplerCache::get (3 samples, 0.02%)</title><rect x="64.3481%" y="693" width="0.0170%" height="15" fill="rgb(217,118,10)" fg:x="11342" fg:w="3"/><text x="64.5981%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.01%)</title><rect x="64.3538%" y="677" width="0.0113%" height="15" fill="rgb(206,22,3)" fg:x="11343" fg:w="2"/><text x="64.6038%" y="687.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_finish (3 samples, 0.02%)</title><rect x="64.3708%" y="677" width="0.0170%" height="15" fill="rgb(232,163,46)" fg:x="11346" fg:w="3"/><text x="64.6208%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_finish (3 samples, 0.02%)</title><rect x="64.3708%" y="661" width="0.0170%" height="15" fill="rgb(206,95,13)" fg:x="11346" fg:w="3"/><text x="64.6208%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="64.3878%" y="677" width="0.0113%" height="15" fill="rgb(253,154,18)" fg:x="11349" fg:w="2"/><text x="64.6378%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="64.3878%" y="661" width="0.0113%" height="15" fill="rgb(219,32,23)" fg:x="11349" fg:w="2"/><text x="64.6378%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="64.3878%" y="645" width="0.0113%" height="15" fill="rgb(230,191,45)" fg:x="11349" fg:w="2"/><text x="64.6378%" y="655.50"></text></g><g><title>wgpu::CommandEncoder::finish (8 samples, 0.05%)</title><rect x="64.3708%" y="693" width="0.0454%" height="15" fill="rgb(229,64,36)" fg:x="11346" fg:w="8"/><text x="64.6208%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::CommandEncoder&gt; (3 samples, 0.02%)</title><rect x="64.3992%" y="677" width="0.0170%" height="15" fill="rgb(205,129,25)" fg:x="11351" fg:w="3"/><text x="64.6492%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (3 samples, 0.02%)</title><rect x="64.3992%" y="661" width="0.0170%" height="15" fill="rgb(254,112,7)" fg:x="11351" fg:w="3"/><text x="64.6492%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::CommandEncoder&gt; (2 samples, 0.01%)</title><rect x="64.4049%" y="645" width="0.0113%" height="15" fill="rgb(226,53,48)" fg:x="11352" fg:w="2"/><text x="64.6549%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="64.4049%" y="629" width="0.0113%" height="15" fill="rgb(214,153,38)" fg:x="11352" fg:w="2"/><text x="64.6549%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="64.4049%" y="613" width="0.0113%" height="15" fill="rgb(243,101,7)" fg:x="11352" fg:w="2"/><text x="64.6549%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="64.4049%" y="597" width="0.0113%" height="15" fill="rgb(240,140,22)" fg:x="11352" fg:w="2"/><text x="64.6549%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="64.4049%" y="581" width="0.0113%" height="15" fill="rgb(235,114,2)" fg:x="11352" fg:w="2"/><text x="64.6549%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="64.5013%" y="421" width="0.0113%" height="15" fill="rgb(242,59,12)" fg:x="11369" fg:w="2"/><text x="64.7513%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="64.5013%" y="581" width="0.0227%" height="15" fill="rgb(252,134,9)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (4 samples, 0.02%)</title><rect x="64.5013%" y="565" width="0.0227%" height="15" fill="rgb(236,4,44)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="575.50"></text></g><g><title>core::iter::adapters::fuse::and_then_or_clear (4 samples, 0.02%)</title><rect x="64.5013%" y="549" width="0.0227%" height="15" fill="rgb(254,172,41)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.02%)</title><rect x="64.5013%" y="533" width="0.0227%" height="15" fill="rgb(244,63,20)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="64.5013%" y="517" width="0.0227%" height="15" fill="rgb(250,73,31)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="64.5013%" y="501" width="0.0227%" height="15" fill="rgb(241,38,36)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4 samples, 0.02%)</title><rect x="64.5013%" y="485" width="0.0227%" height="15" fill="rgb(245,211,2)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.02%)</title><rect x="64.5013%" y="469" width="0.0227%" height="15" fill="rgb(206,120,28)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="64.5013%" y="453" width="0.0227%" height="15" fill="rgb(211,59,34)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="463.50"></text></g><g><title>&lt;bit_vec::Blocks&lt;B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="64.5013%" y="437" width="0.0227%" height="15" fill="rgb(233,168,5)" fg:x="11369" fg:w="4"/><text x="64.7513%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.01%)</title><rect x="64.5127%" y="421" width="0.0113%" height="15" fill="rgb(234,33,13)" fg:x="11371" fg:w="2"/><text x="64.7627%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.05%)</title><rect x="64.5013%" y="597" width="0.0511%" height="15" fill="rgb(231,150,26)" fg:x="11369" fg:w="9"/><text x="64.7513%" y="607.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (5 samples, 0.03%)</title><rect x="64.5240%" y="581" width="0.0284%" height="15" fill="rgb(217,191,4)" fg:x="11373" fg:w="5"/><text x="64.7740%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.02%)</title><rect x="64.5353%" y="565" width="0.0170%" height="15" fill="rgb(246,198,38)" fg:x="11375" fg:w="3"/><text x="64.7853%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="64.5353%" y="549" width="0.0170%" height="15" fill="rgb(245,64,37)" fg:x="11375" fg:w="3"/><text x="64.7853%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.02%)</title><rect x="64.5353%" y="533" width="0.0170%" height="15" fill="rgb(250,30,36)" fg:x="11375" fg:w="3"/><text x="64.7853%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.02%)</title><rect x="64.5353%" y="517" width="0.0170%" height="15" fill="rgb(217,86,53)" fg:x="11375" fg:w="3"/><text x="64.7853%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.02%)</title><rect x="64.5353%" y="501" width="0.0170%" height="15" fill="rgb(228,157,16)" fg:x="11375" fg:w="3"/><text x="64.7853%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.02%)</title><rect x="64.5353%" y="485" width="0.0170%" height="15" fill="rgb(217,59,31)" fg:x="11375" fg:w="3"/><text x="64.7853%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.01%)</title><rect x="64.5410%" y="469" width="0.0113%" height="15" fill="rgb(237,138,41)" fg:x="11376" fg:w="2"/><text x="64.7910%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.06%)</title><rect x="64.5013%" y="613" width="0.0567%" height="15" fill="rgb(227,91,49)" fg:x="11369" fg:w="10"/><text x="64.7513%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.08%)</title><rect x="64.5013%" y="629" width="0.0794%" height="15" fill="rgb(247,21,44)" fg:x="11369" fg:w="14"/><text x="64.7513%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.02%)</title><rect x="64.5580%" y="613" width="0.0227%" height="15" fill="rgb(219,210,51)" fg:x="11379" fg:w="4"/><text x="64.8080%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.02%)</title><rect x="64.5580%" y="597" width="0.0227%" height="15" fill="rgb(209,140,6)" fg:x="11379" fg:w="4"/><text x="64.8080%" y="607.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::owned_ids::{{closure}} (2 samples, 0.01%)</title><rect x="64.5694%" y="581" width="0.0113%" height="15" fill="rgb(221,188,24)" fg:x="11381" fg:w="2"/><text x="64.8194%" y="591.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (2 samples, 0.01%)</title><rect x="64.5807%" y="629" width="0.0113%" height="15" fill="rgb(232,154,20)" fg:x="11383" fg:w="2"/><text x="64.8307%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.01%)</title><rect x="64.5807%" y="613" width="0.0113%" height="15" fill="rgb(244,137,50)" fg:x="11383" fg:w="2"/><text x="64.8307%" y="623.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::IndexMut&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index_mut (6 samples, 0.03%)</title><rect x="64.5921%" y="629" width="0.0340%" height="15" fill="rgb(225,185,43)" fg:x="11385" fg:w="6"/><text x="64.8421%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (5 samples, 0.03%)</title><rect x="64.5978%" y="613" width="0.0284%" height="15" fill="rgb(213,205,38)" fg:x="11386" fg:w="5"/><text x="64.8478%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (17 samples, 0.10%)</title><rect x="64.6375%" y="581" width="0.0964%" height="15" fill="rgb(236,73,12)" fg:x="11393" fg:w="17"/><text x="64.8875%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.08%)</title><rect x="64.6545%" y="565" width="0.0794%" height="15" fill="rgb(235,219,13)" fg:x="11396" fg:w="14"/><text x="64.9045%" y="575.50"></text></g><g><title>syscall (14 samples, 0.08%)</title><rect x="64.6545%" y="549" width="0.0794%" height="15" fill="rgb(218,59,36)" fg:x="11396" fg:w="14"/><text x="64.9045%" y="559.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="64.6545%" y="533" width="0.0794%" height="15" fill="rgb(205,110,39)" fg:x="11396" fg:w="14"/><text x="64.9045%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="64.7055%" y="517" width="0.0284%" height="15" fill="rgb(218,206,42)" fg:x="11405" fg:w="5"/><text x="64.9555%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="64.7055%" y="501" width="0.0284%" height="15" fill="rgb(248,125,24)" fg:x="11405" fg:w="5"/><text x="64.9555%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.7226%" y="485" width="0.0113%" height="15" fill="rgb(242,28,27)" fg:x="11408" fg:w="2"/><text x="64.9726%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="64.7339%" y="549" width="0.0397%" height="15" fill="rgb(216,228,15)" fg:x="11410" fg:w="7"/><text x="64.9839%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="64.7339%" y="533" width="0.0397%" height="15" fill="rgb(235,116,46)" fg:x="11410" fg:w="7"/><text x="64.9839%" y="543.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.05%)</title><rect x="64.7339%" y="565" width="0.0511%" height="15" fill="rgb(224,18,32)" fg:x="11410" fg:w="9"/><text x="64.9839%" y="575.50"></text></g><g><title>___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="64.7736%" y="549" width="0.0113%" height="15" fill="rgb(252,5,12)" fg:x="11417" fg:w="2"/><text x="65.0236%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="65.9707%" y="389" width="0.0227%" height="15" fill="rgb(251,36,5)" fg:x="11628" fg:w="4"/><text x="66.2207%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (50 samples, 0.28%)</title><rect x="65.7154%" y="421" width="0.2837%" height="15" fill="rgb(217,53,14)" fg:x="11583" fg:w="50"/><text x="65.9654%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (5 samples, 0.03%)</title><rect x="65.9707%" y="405" width="0.0284%" height="15" fill="rgb(215,86,45)" fg:x="11628" fg:w="5"/><text x="66.2207%" y="415.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.01%)</title><rect x="66.0048%" y="421" width="0.0113%" height="15" fill="rgb(242,169,11)" fg:x="11634" fg:w="2"/><text x="66.2548%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (80 samples, 0.45%)</title><rect x="65.5679%" y="437" width="0.4539%" height="15" fill="rgb(211,213,45)" fg:x="11557" fg:w="80"/><text x="65.8179%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (145 samples, 0.82%)</title><rect x="65.2218%" y="469" width="0.8226%" height="15" fill="rgb(205,88,11)" fg:x="11496" fg:w="145"/><text x="65.4718%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (90 samples, 0.51%)</title><rect x="65.5339%" y="453" width="0.5106%" height="15" fill="rgb(252,69,26)" fg:x="11551" fg:w="90"/><text x="65.7839%" y="463.50"></text></g><g><title>memset@plt (2 samples, 0.01%)</title><rect x="66.0331%" y="437" width="0.0113%" height="15" fill="rgb(246,123,37)" fg:x="11639" fg:w="2"/><text x="66.2831%" y="447.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="66.0445%" y="469" width="0.0170%" height="15" fill="rgb(212,205,5)" fg:x="11641" fg:w="3"/><text x="66.2945%" y="479.50"></text></g><g><title>lll_mutex_lock_optimized (3 samples, 0.02%)</title><rect x="66.0445%" y="453" width="0.0170%" height="15" fill="rgb(253,148,0)" fg:x="11641" fg:w="3"/><text x="66.2945%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (155 samples, 0.88%)</title><rect x="65.1935%" y="485" width="0.8794%" height="15" fill="rgb(239,22,4)" fg:x="11491" fg:w="155"/><text x="65.4435%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (163 samples, 0.92%)</title><rect x="65.1538%" y="501" width="0.9248%" height="15" fill="rgb(226,26,53)" fg:x="11484" fg:w="163"/><text x="65.4038%" y="511.50"></text></g><g><title>ash::device::Device::queue_submit (258 samples, 1.46%)</title><rect x="64.6375%" y="613" width="1.4637%" height="15" fill="rgb(225,229,45)" fg:x="11393" fg:w="258"/><text x="64.8875%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (258 samples, 1.46%)</title><rect x="64.6375%" y="597" width="1.4637%" height="15" fill="rgb(220,60,37)" fg:x="11393" fg:w="258"/><text x="64.8875%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (241 samples, 1.37%)</title><rect x="64.7339%" y="581" width="1.3673%" height="15" fill="rgb(217,180,35)" fg:x="11410" fg:w="241"/><text x="64.9839%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (232 samples, 1.32%)</title><rect x="64.7850%" y="565" width="1.3162%" height="15" fill="rgb(229,7,53)" fg:x="11419" fg:w="232"/><text x="65.0350%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (220 samples, 1.25%)</title><rect x="64.8531%" y="549" width="1.2482%" height="15" fill="rgb(254,137,3)" fg:x="11431" fg:w="220"/><text x="65.1031%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (195 samples, 1.11%)</title><rect x="64.9949%" y="533" width="1.1063%" height="15" fill="rgb(215,140,41)" fg:x="11456" fg:w="195"/><text x="65.2449%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (172 samples, 0.98%)</title><rect x="65.1254%" y="517" width="0.9758%" height="15" fill="rgb(250,80,15)" fg:x="11479" fg:w="172"/><text x="65.3754%" y="527.50"></text></g><g><title>__GI___clock_gettime (4 samples, 0.02%)</title><rect x="66.0785%" y="501" width="0.0227%" height="15" fill="rgb(252,191,6)" fg:x="11647" fg:w="4"/><text x="66.3285%" y="511.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="66.0842%" y="485" width="0.0170%" height="15" fill="rgb(246,217,18)" fg:x="11648" fg:w="3"/><text x="66.3342%" y="495.50"></text></g><g><title>ash::vk::definitions::SubmitInfoBuilder::command_buffers (2 samples, 0.01%)</title><rect x="66.1069%" y="613" width="0.0113%" height="15" fill="rgb(223,93,7)" fg:x="11652" fg:w="2"/><text x="66.3569%" y="623.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (265 samples, 1.50%)</title><rect x="64.6261%" y="629" width="1.5035%" height="15" fill="rgb(225,55,52)" fg:x="11391" fg:w="265"/><text x="64.8761%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="66.1296%" y="629" width="0.0113%" height="15" fill="rgb(240,31,24)" fg:x="11656" fg:w="2"/><text x="66.3796%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="66.1409%" y="613" width="0.0397%" height="15" fill="rgb(205,56,52)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.04%)</title><rect x="66.1409%" y="597" width="0.0397%" height="15" fill="rgb(246,146,12)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.04%)</title><rect x="66.1409%" y="581" width="0.0397%" height="15" fill="rgb(239,84,36)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="66.1409%" y="565" width="0.0397%" height="15" fill="rgb(207,41,40)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="66.1409%" y="549" width="0.0397%" height="15" fill="rgb(241,179,25)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.04%)</title><rect x="66.1409%" y="533" width="0.0397%" height="15" fill="rgb(210,0,34)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.04%)</title><rect x="66.1409%" y="517" width="0.0397%" height="15" fill="rgb(225,217,29)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="527.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.04%)</title><rect x="66.1409%" y="501" width="0.0397%" height="15" fill="rgb(216,191,38)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="511.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.04%)</title><rect x="66.1409%" y="485" width="0.0397%" height="15" fill="rgb(232,140,52)" fg:x="11658" fg:w="7"/><text x="66.3909%" y="495.50"></text></g><g><title>_int_realloc (4 samples, 0.02%)</title><rect x="66.1579%" y="469" width="0.0227%" height="15" fill="rgb(223,158,51)" fg:x="11661" fg:w="4"/><text x="66.4079%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (8 samples, 0.05%)</title><rect x="66.1409%" y="629" width="0.0454%" height="15" fill="rgb(235,29,51)" fg:x="11658" fg:w="8"/><text x="66.3909%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="66.1920%" y="629" width="0.0170%" height="15" fill="rgb(215,181,18)" fg:x="11667" fg:w="3"/><text x="66.4420%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="66.1920%" y="613" width="0.0170%" height="15" fill="rgb(227,125,34)" fg:x="11667" fg:w="3"/><text x="66.4420%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="66.1920%" y="597" width="0.0170%" height="15" fill="rgb(230,197,49)" fg:x="11667" fg:w="3"/><text x="66.4420%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="66.1920%" y="581" width="0.0170%" height="15" fill="rgb(239,141,16)" fg:x="11667" fg:w="3"/><text x="66.4420%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="66.1977%" y="565" width="0.0113%" height="15" fill="rgb(225,105,43)" fg:x="11668" fg:w="2"/><text x="66.4477%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.01%)</title><rect x="66.1977%" y="549" width="0.0113%" height="15" fill="rgb(214,131,14)" fg:x="11668" fg:w="2"/><text x="66.4477%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="66.2487%" y="581" width="0.0170%" height="15" fill="rgb(229,177,11)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="66.2487%" y="565" width="0.0170%" height="15" fill="rgb(231,180,14)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;wgpu_core::RefCount&gt;]&gt; (3 samples, 0.02%)</title><rect x="66.2487%" y="549" width="0.0170%" height="15" fill="rgb(232,88,2)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (3 samples, 0.02%)</title><rect x="66.2487%" y="533" width="0.0170%" height="15" fill="rgb(205,220,8)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (3 samples, 0.02%)</title><rect x="66.2487%" y="517" width="0.0170%" height="15" fill="rgb(225,23,53)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="527.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="66.2487%" y="501" width="0.0170%" height="15" fill="rgb(213,62,29)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="66.2487%" y="485" width="0.0170%" height="15" fill="rgb(227,75,7)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="66.2487%" y="469" width="0.0170%" height="15" fill="rgb(207,105,14)" fg:x="11677" fg:w="3"/><text x="66.4987%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::stateless::StatelessTracker&lt;wgpu_hal::gles::Api,wgpu_core::binding_model::BindGroup&lt;wgpu_hal::gles::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="66.2487%" y="613" width="0.0227%" height="15" fill="rgb(245,62,29)" fg:x="11677" fg:w="4"/><text x="66.4987%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (4 samples, 0.02%)</title><rect x="66.2487%" y="597" width="0.0227%" height="15" fill="rgb(236,202,4)" fg:x="11677" fg:w="4"/><text x="66.4987%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::stateless::StatelessTracker&lt;wgpu_hal::gles::Api,wgpu_core::pipeline::RenderPipeline&lt;wgpu_hal::gles::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::pipeline::RenderPipeline&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="66.2771%" y="613" width="0.0113%" height="15" fill="rgb(250,67,1)" fg:x="11682" fg:w="2"/><text x="66.5271%" y="623.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="66.2884%" y="597" width="0.0113%" height="15" fill="rgb(253,115,44)" fg:x="11684" fg:w="2"/><text x="66.5384%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="66.2998%" y="581" width="0.0113%" height="15" fill="rgb(251,139,18)" fg:x="11686" fg:w="2"/><text x="66.5498%" y="591.50"></text></g><g><title>__GI___libc_free (4 samples, 0.02%)</title><rect x="66.3111%" y="485" width="0.0227%" height="15" fill="rgb(218,22,32)" fg:x="11688" fg:w="4"/><text x="66.5611%" y="495.50"></text></g><g><title>_int_free (3 samples, 0.02%)</title><rect x="66.3168%" y="469" width="0.0170%" height="15" fill="rgb(243,53,5)" fg:x="11689" fg:w="3"/><text x="66.5668%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::stateless::StatelessTracker&lt;wgpu_hal::gles::Api,wgpu_core::resource::TextureView&lt;wgpu_hal::gles::Api&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (9 samples, 0.05%)</title><rect x="66.2884%" y="613" width="0.0511%" height="15" fill="rgb(227,56,16)" fg:x="11684" fg:w="9"/><text x="66.5384%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (7 samples, 0.04%)</title><rect x="66.2998%" y="597" width="0.0397%" height="15" fill="rgb(245,53,0)" fg:x="11686" fg:w="7"/><text x="66.5498%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&lt;usize&gt;&gt; (5 samples, 0.03%)</title><rect x="66.3111%" y="581" width="0.0284%" height="15" fill="rgb(216,170,35)" fg:x="11688" fg:w="5"/><text x="66.5611%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (5 samples, 0.03%)</title><rect x="66.3111%" y="565" width="0.0284%" height="15" fill="rgb(211,200,8)" fg:x="11688" fg:w="5"/><text x="66.5611%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (5 samples, 0.03%)</title><rect x="66.3111%" y="549" width="0.0284%" height="15" fill="rgb(228,204,44)" fg:x="11688" fg:w="5"/><text x="66.5611%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="66.3111%" y="533" width="0.0284%" height="15" fill="rgb(214,121,17)" fg:x="11688" fg:w="5"/><text x="66.5611%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="66.3111%" y="517" width="0.0284%" height="15" fill="rgb(233,64,38)" fg:x="11688" fg:w="5"/><text x="66.5611%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="66.3111%" y="501" width="0.0284%" height="15" fill="rgb(253,54,19)" fg:x="11688" fg:w="5"/><text x="66.5611%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&lt;wgpu_hal::gles::Api&gt;&gt; (21 samples, 0.12%)</title><rect x="66.2317%" y="629" width="0.1191%" height="15" fill="rgb(253,94,18)" fg:x="11674" fg:w="21"/><text x="66.4817%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureTracker&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="66.3395%" y="613" width="0.0113%" height="15" fill="rgb(227,57,52)" fg:x="11693" fg:w="2"/><text x="66.5895%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="66.3395%" y="597" width="0.0113%" height="15" fill="rgb(230,228,50)" fg:x="11693" fg:w="2"/><text x="66.5895%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="66.3395%" y="581" width="0.0113%" height="15" fill="rgb(217,205,27)" fg:x="11693" fg:w="2"/><text x="66.5895%" y="591.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="66.3508%" y="613" width="0.0170%" height="15" fill="rgb(252,71,50)" fg:x="11695" fg:w="3"/><text x="66.6008%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="66.3565%" y="597" width="0.0113%" height="15" fill="rgb(209,86,4)" fg:x="11696" fg:w="2"/><text x="66.6065%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="66.3679%" y="581" width="0.0113%" height="15" fill="rgb(229,94,0)" fg:x="11698" fg:w="2"/><text x="66.6179%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;wgpu_core::RefCount&gt;]&gt; (2 samples, 0.01%)</title><rect x="66.3679%" y="565" width="0.0113%" height="15" fill="rgb(252,223,21)" fg:x="11698" fg:w="2"/><text x="66.6179%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (2 samples, 0.01%)</title><rect x="66.3679%" y="549" width="0.0113%" height="15" fill="rgb(230,210,4)" fg:x="11698" fg:w="2"/><text x="66.6179%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureUsageScope&lt;wgpu_hal::vulkan::Api&gt;&gt; (6 samples, 0.03%)</title><rect x="66.3508%" y="629" width="0.0340%" height="15" fill="rgb(240,149,38)" fg:x="11695" fg:w="6"/><text x="66.6008%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;wgpu_hal::gles::Api&gt;&gt; (3 samples, 0.02%)</title><rect x="66.3679%" y="613" width="0.0170%" height="15" fill="rgb(254,105,20)" fg:x="11698" fg:w="3"/><text x="66.6179%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="66.3679%" y="597" width="0.0170%" height="15" fill="rgb(253,87,46)" fg:x="11698" fg:w="3"/><text x="66.6179%" y="607.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (3 samples, 0.02%)</title><rect x="66.3849%" y="581" width="0.0170%" height="15" fill="rgb(253,116,33)" fg:x="11701" fg:w="3"/><text x="66.6349%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="66.3849%" y="565" width="0.0170%" height="15" fill="rgb(229,198,5)" fg:x="11701" fg:w="3"/><text x="66.6349%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="66.3849%" y="549" width="0.0170%" height="15" fill="rgb(242,38,37)" fg:x="11701" fg:w="3"/><text x="66.6349%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="66.3849%" y="533" width="0.0170%" height="15" fill="rgb(242,69,53)" fg:x="11701" fg:w="3"/><text x="66.6349%" y="543.50"></text></g><g><title>ash::vk::definitions::BufferMemoryBarrier::builder (2 samples, 0.01%)</title><rect x="66.4019%" y="581" width="0.0113%" height="15" fill="rgb(249,80,16)" fg:x="11704" fg:w="2"/><text x="66.6519%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (6 samples, 0.03%)</title><rect x="66.3849%" y="597" width="0.0340%" height="15" fill="rgb(206,128,11)" fg:x="11701" fg:w="6"/><text x="66.6349%" y="607.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (9 samples, 0.05%)</title><rect x="66.4303%" y="581" width="0.0511%" height="15" fill="rgb(212,35,20)" fg:x="11709" fg:w="9"/><text x="66.6803%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="66.4303%" y="565" width="0.0511%" height="15" fill="rgb(236,79,13)" fg:x="11709" fg:w="9"/><text x="66.6803%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="66.4359%" y="549" width="0.0454%" height="15" fill="rgb(233,123,3)" fg:x="11710" fg:w="8"/><text x="66.6859%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="66.4416%" y="533" width="0.0397%" height="15" fill="rgb(214,93,52)" fg:x="11711" fg:w="7"/><text x="66.6916%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="66.4586%" y="517" width="0.0227%" height="15" fill="rgb(251,37,40)" fg:x="11714" fg:w="4"/><text x="66.7086%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="66.4700%" y="501" width="0.0113%" height="15" fill="rgb(227,80,54)" fg:x="11716" fg:w="2"/><text x="66.7200%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="66.4700%" y="485" width="0.0113%" height="15" fill="rgb(254,48,11)" fg:x="11716" fg:w="2"/><text x="66.7200%" y="495.50"></text></g><g><title>ash::vk::definitions::ImageMemoryBarrierBuilder::build (2 samples, 0.01%)</title><rect x="66.4813%" y="581" width="0.0113%" height="15" fill="rgb(235,193,26)" fg:x="11718" fg:w="2"/><text x="66.7313%" y="591.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::drain_barriers (20 samples, 0.11%)</title><rect x="66.3849%" y="613" width="0.1135%" height="15" fill="rgb(229,99,21)" fg:x="11701" fg:w="20"/><text x="66.6349%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (14 samples, 0.08%)</title><rect x="66.4189%" y="597" width="0.0794%" height="15" fill="rgb(211,140,41)" fg:x="11707" fg:w="14"/><text x="66.6689%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="66.4984%" y="597" width="0.0113%" height="15" fill="rgb(240,227,30)" fg:x="11721" fg:w="2"/><text x="66.7484%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.01%)</title><rect x="66.4984%" y="581" width="0.0113%" height="15" fill="rgb(215,224,45)" fg:x="11721" fg:w="2"/><text x="66.7484%" y="591.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (2 samples, 0.01%)</title><rect x="66.4984%" y="565" width="0.0113%" height="15" fill="rgb(206,123,31)" fg:x="11721" fg:w="2"/><text x="66.7484%" y="575.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_tracker (4 samples, 0.02%)</title><rect x="66.4984%" y="613" width="0.0227%" height="15" fill="rgb(210,138,16)" fg:x="11721" fg:w="4"/><text x="66.7484%" y="623.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (4 samples, 0.02%)</title><rect x="66.5381%" y="597" width="0.0227%" height="15" fill="rgb(228,57,28)" fg:x="11728" fg:w="4"/><text x="66.7881%" y="607.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (39 samples, 0.22%)</title><rect x="66.3849%" y="629" width="0.2213%" height="15" fill="rgb(242,170,10)" fg:x="11701" fg:w="39"/><text x="66.6349%" y="639.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (15 samples, 0.09%)</title><rect x="66.5210%" y="613" width="0.0851%" height="15" fill="rgb(228,214,39)" fg:x="11725" fg:w="15"/><text x="66.7710%" y="623.50"></text></g><g><title>wgpu_core::track::texture::insert_or_barrier_update (8 samples, 0.05%)</title><rect x="66.5608%" y="597" width="0.0454%" height="15" fill="rgb(218,179,33)" fg:x="11732" fg:w="8"/><text x="66.8108%" y="607.50"></text></g><g><title>wgpu_core::track::texture::update (5 samples, 0.03%)</title><rect x="66.5778%" y="581" width="0.0284%" height="15" fill="rgb(235,193,39)" fg:x="11735" fg:w="5"/><text x="66.8278%" y="591.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::into_baked (2 samples, 0.01%)</title><rect x="66.6062%" y="629" width="0.0113%" height="15" fill="rgb(219,221,36)" fg:x="11740" fg:w="2"/><text x="66.8562%" y="639.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="66.6345%" y="613" width="0.0113%" height="15" fill="rgb(248,218,19)" fg:x="11745" fg:w="2"/><text x="66.8845%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="66.6515%" y="613" width="0.0681%" height="15" fill="rgb(205,50,9)" fg:x="11748" fg:w="12"/><text x="66.9015%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="66.6969%" y="597" width="0.0227%" height="15" fill="rgb(238,81,28)" fg:x="11756" fg:w="4"/><text x="66.9469%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.02%)</title><rect x="66.7196%" y="613" width="0.0170%" height="15" fill="rgb(235,110,19)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="66.7196%" y="597" width="0.0170%" height="15" fill="rgb(214,7,14)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="66.7196%" y="581" width="0.0170%" height="15" fill="rgb(211,77,3)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.02%)</title><rect x="66.7196%" y="565" width="0.0170%" height="15" fill="rgb(229,5,9)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.02%)</title><rect x="66.7196%" y="549" width="0.0170%" height="15" fill="rgb(225,90,11)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.02%)</title><rect x="66.7196%" y="533" width="0.0170%" height="15" fill="rgb(242,56,8)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="543.50"></text></g><g><title>&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="66.7196%" y="517" width="0.0170%" height="15" fill="rgb(249,212,39)" fg:x="11760" fg:w="3"/><text x="66.9696%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (6 samples, 0.03%)</title><rect x="66.7480%" y="581" width="0.0340%" height="15" fill="rgb(236,90,9)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.03%)</title><rect x="66.7480%" y="565" width="0.0340%" height="15" fill="rgb(206,88,35)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.03%)</title><rect x="66.7480%" y="549" width="0.0340%" height="15" fill="rgb(205,126,30)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (6 samples, 0.03%)</title><rect x="66.7480%" y="533" width="0.0340%" height="15" fill="rgb(230,176,12)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (6 samples, 0.03%)</title><rect x="66.7480%" y="517" width="0.0340%" height="15" fill="rgb(243,19,9)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (6 samples, 0.03%)</title><rect x="66.7480%" y="501" width="0.0340%" height="15" fill="rgb(245,171,17)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (6 samples, 0.03%)</title><rect x="66.7480%" y="485" width="0.0340%" height="15" fill="rgb(227,52,21)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (6 samples, 0.03%)</title><rect x="66.7480%" y="469" width="0.0340%" height="15" fill="rgb(238,69,14)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (6 samples, 0.03%)</title><rect x="66.7480%" y="453" width="0.0340%" height="15" fill="rgb(241,156,39)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.03%)</title><rect x="66.7480%" y="437" width="0.0340%" height="15" fill="rgb(212,227,28)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.03%)</title><rect x="66.7480%" y="421" width="0.0340%" height="15" fill="rgb(209,118,27)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="431.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.03%)</title><rect x="66.7480%" y="405" width="0.0340%" height="15" fill="rgb(226,102,5)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="415.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="66.7480%" y="389" width="0.0340%" height="15" fill="rgb(223,34,3)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="399.50"></text></g><g><title>tcache_get (6 samples, 0.03%)</title><rect x="66.7480%" y="373" width="0.0340%" height="15" fill="rgb(221,81,38)" fg:x="11765" fg:w="6"/><text x="66.9980%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.05%)</title><rect x="66.7480%" y="613" width="0.0454%" height="15" fill="rgb(236,219,28)" fg:x="11765" fg:w="8"/><text x="66.9980%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.05%)</title><rect x="66.7480%" y="597" width="0.0454%" height="15" fill="rgb(213,200,14)" fg:x="11765" fg:w="8"/><text x="66.9980%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.01%)</title><rect x="66.7820%" y="581" width="0.0113%" height="15" fill="rgb(240,33,19)" fg:x="11771" fg:w="2"/><text x="67.0320%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.01%)</title><rect x="66.7820%" y="565" width="0.0113%" height="15" fill="rgb(233,113,27)" fg:x="11771" fg:w="2"/><text x="67.0320%" y="575.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (7 samples, 0.04%)</title><rect x="66.8104%" y="597" width="0.0397%" height="15" fill="rgb(220,221,18)" fg:x="11776" fg:w="7"/><text x="67.0604%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="66.8104%" y="581" width="0.0397%" height="15" fill="rgb(238,92,8)" fg:x="11776" fg:w="7"/><text x="67.0604%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="66.8274%" y="565" width="0.0227%" height="15" fill="rgb(222,164,16)" fg:x="11779" fg:w="4"/><text x="67.0774%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="66.8388%" y="549" width="0.0113%" height="15" fill="rgb(241,119,3)" fg:x="11781" fg:w="2"/><text x="67.0888%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="66.8388%" y="533" width="0.0113%" height="15" fill="rgb(241,44,8)" fg:x="11781" fg:w="2"/><text x="67.0888%" y="543.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_buffer_memory (42 samples, 0.24%)</title><rect x="66.6175%" y="629" width="0.2383%" height="15" fill="rgb(230,36,40)" fg:x="11742" fg:w="42"/><text x="66.8675%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_buffers (10 samples, 0.06%)</title><rect x="66.7990%" y="613" width="0.0567%" height="15" fill="rgb(243,16,36)" fg:x="11774" fg:w="10"/><text x="67.0490%" y="623.50"></text></g><g><title>wgpu_core::command::memory_init::&lt;impl wgpu_core::command::BakedCommands&lt;A&gt;&gt;::initialize_texture_memory (5 samples, 0.03%)</title><rect x="66.8558%" y="629" width="0.0284%" height="15" fill="rgb(231,4,26)" fg:x="11784" fg:w="5"/><text x="67.1058%" y="639.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (2 samples, 0.01%)</title><rect x="66.9125%" y="517" width="0.0113%" height="15" fill="rgb(240,9,31)" fg:x="11794" fg:w="2"/><text x="67.1625%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="66.9125%" y="501" width="0.0113%" height="15" fill="rgb(207,173,15)" fg:x="11794" fg:w="2"/><text x="67.1625%" y="511.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::free (13 samples, 0.07%)</title><rect x="66.9068%" y="549" width="0.0738%" height="15" fill="rgb(224,192,53)" fg:x="11793" fg:w="13"/><text x="67.1568%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_descriptor_types::device::DescriptorDevice&lt;ash::vk::definitions::DescriptorSetLayout,ash::vk::definitions::DescriptorPool,ash::vk::definitions::DescriptorSet&gt; for wgpu_hal::vulkan::DeviceShared&gt;::dealloc_descriptor_sets (13 samples, 0.07%)</title><rect x="66.9068%" y="533" width="0.0738%" height="15" fill="rgb(223,67,28)" fg:x="11793" fg:w="13"/><text x="67.1568%" y="543.50"></text></g><g><title>ash::device::Device::free_descriptor_sets (10 samples, 0.06%)</title><rect x="66.9239%" y="517" width="0.0567%" height="15" fill="rgb(211,20,47)" fg:x="11796" fg:w="10"/><text x="67.1739%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="66.9239%" y="501" width="0.0567%" height="15" fill="rgb(240,228,2)" fg:x="11796" fg:w="10"/><text x="67.1739%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="66.9239%" y="485" width="0.0567%" height="15" fill="rgb(248,151,12)" fg:x="11796" fg:w="10"/><text x="67.1739%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="66.9295%" y="469" width="0.0511%" height="15" fill="rgb(244,8,39)" fg:x="11797" fg:w="9"/><text x="67.1795%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="66.9409%" y="453" width="0.0397%" height="15" fill="rgb(222,26,8)" fg:x="11799" fg:w="7"/><text x="67.1909%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="66.9579%" y="437" width="0.0227%" height="15" fill="rgb(213,106,44)" fg:x="11802" fg:w="4"/><text x="67.2079%" y="447.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="66.9636%" y="421" width="0.0170%" height="15" fill="rgb(214,129,20)" fg:x="11803" fg:w="3"/><text x="67.2136%" y="431.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (17 samples, 0.10%)</title><rect x="66.9068%" y="565" width="0.0964%" height="15" fill="rgb(212,32,13)" fg:x="11793" fg:w="17"/><text x="67.1568%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.02%)</title><rect x="66.9806%" y="549" width="0.0227%" height="15" fill="rgb(208,168,33)" fg:x="11806" fg:w="4"/><text x="67.2306%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.02%)</title><rect x="66.9806%" y="533" width="0.0227%" height="15" fill="rgb(231,207,8)" fg:x="11806" fg:w="4"/><text x="67.2306%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.01%)</title><rect x="66.9919%" y="517" width="0.0113%" height="15" fill="rgb(235,219,23)" fg:x="11808" fg:w="2"/><text x="67.2419%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (2 samples, 0.01%)</title><rect x="66.9919%" y="501" width="0.0113%" height="15" fill="rgb(226,216,26)" fg:x="11808" fg:w="2"/><text x="67.2419%" y="511.50"></text></g><g><title>&lt;gpu_descriptor_types::types::DescriptorTotalCount as core::hash::Hash&gt;::hash (2 samples, 0.01%)</title><rect x="66.9919%" y="485" width="0.0113%" height="15" fill="rgb(239,137,16)" fg:x="11808" fg:w="2"/><text x="67.2419%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.01%)</title><rect x="66.9919%" y="469" width="0.0113%" height="15" fill="rgb(207,12,36)" fg:x="11808" fg:w="2"/><text x="67.2419%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_bind_group (20 samples, 0.11%)</title><rect x="66.9012%" y="581" width="0.1135%" height="15" fill="rgb(210,214,24)" fg:x="11792" fg:w="20"/><text x="67.1512%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="67.0033%" y="565" width="0.0113%" height="15" fill="rgb(206,56,30)" fg:x="11810" fg:w="2"/><text x="67.2533%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="67.0033%" y="549" width="0.0113%" height="15" fill="rgb(228,143,26)" fg:x="11810" fg:w="2"/><text x="67.2533%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="67.0033%" y="533" width="0.0113%" height="15" fill="rgb(216,218,46)" fg:x="11810" fg:w="2"/><text x="67.2533%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="67.0033%" y="517" width="0.0113%" height="15" fill="rgb(206,6,19)" fg:x="11810" fg:w="2"/><text x="67.2533%" y="527.50"></text></g><g><title>ash::device::Device::destroy_buffer (17 samples, 0.10%)</title><rect x="67.0146%" y="565" width="0.0964%" height="15" fill="rgb(239,177,51)" fg:x="11812" fg:w="17"/><text x="67.2646%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.10%)</title><rect x="67.0146%" y="549" width="0.0964%" height="15" fill="rgb(216,55,25)" fg:x="11812" fg:w="17"/><text x="67.2646%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="67.0884%" y="533" width="0.0227%" height="15" fill="rgb(231,163,29)" fg:x="11825" fg:w="4"/><text x="67.3384%" y="543.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="67.0997%" y="517" width="0.0113%" height="15" fill="rgb(232,149,50)" fg:x="11827" fg:w="2"/><text x="67.3497%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::buddy::BuddyBlock&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (2 samples, 0.01%)</title><rect x="67.1281%" y="533" width="0.0113%" height="15" fill="rgb(223,142,48)" fg:x="11832" fg:w="2"/><text x="67.3781%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;ash::vk::definitions::DeviceMemory&gt;&gt; (2 samples, 0.01%)</title><rect x="67.1281%" y="517" width="0.0113%" height="15" fill="rgb(245,83,23)" fg:x="11832" fg:w="2"/><text x="67.3781%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="67.1281%" y="501" width="0.0113%" height="15" fill="rgb(224,63,2)" fg:x="11832" fg:w="2"/><text x="67.3781%" y="511.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (6 samples, 0.03%)</title><rect x="67.1281%" y="549" width="0.0340%" height="15" fill="rgb(218,65,53)" fg:x="11832" fg:w="6"/><text x="67.3781%" y="559.50"></text></g><g><title>gpu_alloc::buddy::Size::release (4 samples, 0.02%)</title><rect x="67.1395%" y="533" width="0.0227%" height="15" fill="rgb(221,84,29)" fg:x="11834" fg:w="4"/><text x="67.3895%" y="543.50"></text></g><g><title>gpu_alloc::slab::Slab&lt;T&gt;::get_mut (4 samples, 0.02%)</title><rect x="67.1395%" y="517" width="0.0227%" height="15" fill="rgb(234,0,32)" fg:x="11834" fg:w="4"/><text x="67.3895%" y="527.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (10 samples, 0.06%)</title><rect x="67.1168%" y="565" width="0.0567%" height="15" fill="rgb(206,20,16)" fg:x="11830" fg:w="10"/><text x="67.3668%" y="575.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::dealloc (2 samples, 0.01%)</title><rect x="67.1621%" y="549" width="0.0113%" height="15" fill="rgb(244,172,18)" fg:x="11838" fg:w="2"/><text x="67.4121%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (30 samples, 0.17%)</title><rect x="67.0146%" y="581" width="0.1702%" height="15" fill="rgb(254,133,1)" fg:x="11812" fg:w="30"/><text x="67.2646%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="67.1735%" y="565" width="0.0113%" height="15" fill="rgb(222,206,41)" fg:x="11840" fg:w="2"/><text x="67.4235%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="67.1735%" y="549" width="0.0113%" height="15" fill="rgb(212,3,42)" fg:x="11840" fg:w="2"/><text x="67.4235%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="67.1735%" y="533" width="0.0113%" height="15" fill="rgb(241,11,4)" fg:x="11840" fg:w="2"/><text x="67.4235%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="67.1735%" y="517" width="0.0113%" height="15" fill="rgb(205,19,26)" fg:x="11840" fg:w="2"/><text x="67.4235%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="67.2132%" y="533" width="0.0113%" height="15" fill="rgb(210,179,32)" fg:x="11847" fg:w="2"/><text x="67.4632%" y="543.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (60 samples, 0.34%)</title><rect x="66.8898%" y="613" width="0.3404%" height="15" fill="rgb(227,116,49)" fg:x="11790" fg:w="60"/><text x="67.1398%" y="623.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (60 samples, 0.34%)</title><rect x="66.8898%" y="597" width="0.3404%" height="15" fill="rgb(211,146,6)" fg:x="11790" fg:w="60"/><text x="67.1398%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (8 samples, 0.05%)</title><rect x="67.1848%" y="581" width="0.0454%" height="15" fill="rgb(219,44,39)" fg:x="11842" fg:w="8"/><text x="67.4348%" y="591.50"></text></g><g><title>ash::device::Device::destroy_image_view (7 samples, 0.04%)</title><rect x="67.1905%" y="565" width="0.0397%" height="15" fill="rgb(234,128,11)" fg:x="11843" fg:w="7"/><text x="67.4405%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="67.1905%" y="549" width="0.0397%" height="15" fill="rgb(220,183,53)" fg:x="11843" fg:w="7"/><text x="67.4405%" y="559.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="67.2359%" y="597" width="0.0170%" height="15" fill="rgb(213,219,32)" fg:x="11851" fg:w="3"/><text x="67.4859%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.02%)</title><rect x="67.2359%" y="581" width="0.0170%" height="15" fill="rgb(232,156,16)" fg:x="11851" fg:w="3"/><text x="67.4859%" y="591.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3 samples, 0.02%)</title><rect x="67.2359%" y="565" width="0.0170%" height="15" fill="rgb(246,135,34)" fg:x="11851" fg:w="3"/><text x="67.4859%" y="575.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="67.2359%" y="549" width="0.0170%" height="15" fill="rgb(241,99,0)" fg:x="11851" fg:w="3"/><text x="67.4859%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="67.2359%" y="533" width="0.0170%" height="15" fill="rgb(222,103,45)" fg:x="11851" fg:w="3"/><text x="67.4859%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.03%)</title><rect x="67.2529%" y="597" width="0.0284%" height="15" fill="rgb(212,57,4)" fg:x="11854" fg:w="5"/><text x="67.5029%" y="607.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="67.2586%" y="581" width="0.0227%" height="15" fill="rgb(215,68,47)" fg:x="11855" fg:w="4"/><text x="67.5086%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu_core::device::life::ActiveSubmission&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="67.2926%" y="597" width="0.0113%" height="15" fill="rgb(230,84,2)" fg:x="11861" fg:w="2"/><text x="67.5426%" y="607.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="67.2926%" y="581" width="0.0113%" height="15" fill="rgb(220,102,14)" fg:x="11861" fg:w="2"/><text x="67.5426%" y="591.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="67.3097%" y="581" width="0.0113%" height="15" fill="rgb(240,10,32)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu_core::device::queue::EncoderInFlight&lt;wgpu_hal::vulkan::Api&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="67.3097%" y="565" width="0.0113%" height="15" fill="rgb(215,47,27)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="575.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="67.3097%" y="549" width="0.0113%" height="15" fill="rgb(233,188,43)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_core::device::queue::EncoderInFlight&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="67.3097%" y="533" width="0.0113%" height="15" fill="rgb(253,190,1)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="67.3097%" y="517" width="0.0113%" height="15" fill="rgb(206,114,52)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="67.3097%" y="501" width="0.0113%" height="15" fill="rgb(233,120,37)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="67.3097%" y="485" width="0.0113%" height="15" fill="rgb(214,52,39)" fg:x="11864" fg:w="2"/><text x="67.5597%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;wgpu_core::device::queue::EncoderInFlight&lt;wgpu_hal::vulkan::Api&gt;&gt;&gt; (10 samples, 0.06%)</title><rect x="67.3040%" y="597" width="0.0567%" height="15" fill="rgb(223,80,29)" fg:x="11863" fg:w="10"/><text x="67.5540%" y="607.50"></text></g><g><title>__GI___libc_free (7 samples, 0.04%)</title><rect x="67.3210%" y="581" width="0.0397%" height="15" fill="rgb(230,101,40)" fg:x="11866" fg:w="7"/><text x="67.5710%" y="591.50"></text></g><g><title>_int_free (6 samples, 0.03%)</title><rect x="67.3267%" y="565" width="0.0340%" height="15" fill="rgb(219,211,8)" fg:x="11867" fg:w="6"/><text x="67.5767%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="67.3664%" y="533" width="0.0170%" height="15" fill="rgb(252,126,28)" fg:x="11874" fg:w="3"/><text x="67.6164%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="67.3664%" y="517" width="0.0170%" height="15" fill="rgb(215,56,38)" fg:x="11874" fg:w="3"/><text x="67.6164%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.03%)</title><rect x="67.3664%" y="549" width="0.0340%" height="15" fill="rgb(249,55,44)" fg:x="11874" fg:w="6"/><text x="67.6164%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.02%)</title><rect x="67.3834%" y="533" width="0.0170%" height="15" fill="rgb(220,221,32)" fg:x="11877" fg:w="3"/><text x="67.6334%" y="543.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::extend (8 samples, 0.05%)</title><rect x="67.3664%" y="597" width="0.0454%" height="15" fill="rgb(212,216,41)" fg:x="11874" fg:w="8"/><text x="67.6164%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.05%)</title><rect x="67.3664%" y="581" width="0.0454%" height="15" fill="rgb(228,213,43)" fg:x="11874" fg:w="8"/><text x="67.6164%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.05%)</title><rect x="67.3664%" y="565" width="0.0454%" height="15" fill="rgb(211,31,26)" fg:x="11874" fg:w="8"/><text x="67.6164%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="67.4118%" y="565" width="0.0113%" height="15" fill="rgb(229,202,19)" fg:x="11882" fg:w="2"/><text x="67.6618%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="67.4118%" y="549" width="0.0113%" height="15" fill="rgb(229,105,46)" fg:x="11882" fg:w="2"/><text x="67.6618%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="67.4118%" y="533" width="0.0113%" height="15" fill="rgb(235,108,1)" fg:x="11882" fg:w="2"/><text x="67.6618%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="67.4118%" y="517" width="0.0113%" height="15" fill="rgb(245,111,35)" fg:x="11882" fg:w="2"/><text x="67.6618%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="67.4118%" y="501" width="0.0113%" height="15" fill="rgb(219,185,31)" fg:x="11882" fg:w="2"/><text x="67.6618%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="67.4118%" y="485" width="0.0113%" height="15" fill="rgb(214,4,43)" fg:x="11882" fg:w="2"/><text x="67.6618%" y="495.50"></text></g><g><title>&lt;ash::vk::bitflags::VideoEncodeH265TransformBlockSizeFlagsEXT as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="67.4231%" y="565" width="0.0113%" height="15" fill="rgb(235,227,40)" fg:x="11884" fg:w="2"/><text x="67.6731%" y="575.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (118 samples, 0.67%)</title><rect x="67.2359%" y="613" width="0.6695%" height="15" fill="rgb(230,88,30)" fg:x="11851" fg:w="118"/><text x="67.4859%" y="623.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (87 samples, 0.49%)</title><rect x="67.4118%" y="597" width="0.4936%" height="15" fill="rgb(216,217,1)" fg:x="11882" fg:w="87"/><text x="67.6618%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (87 samples, 0.49%)</title><rect x="67.4118%" y="581" width="0.4936%" height="15" fill="rgb(248,139,50)" fg:x="11882" fg:w="87"/><text x="67.6618%" y="591.50"></text></g><g><title>ash::device::Device::reset_command_pool (83 samples, 0.47%)</title><rect x="67.4345%" y="565" width="0.4709%" height="15" fill="rgb(233,1,21)" fg:x="11886" fg:w="83"/><text x="67.6845%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (83 samples, 0.47%)</title><rect x="67.4345%" y="549" width="0.4709%" height="15" fill="rgb(215,183,12)" fg:x="11886" fg:w="83"/><text x="67.6845%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (76 samples, 0.43%)</title><rect x="67.4742%" y="533" width="0.4312%" height="15" fill="rgb(229,104,42)" fg:x="11893" fg:w="76"/><text x="67.7242%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (39 samples, 0.22%)</title><rect x="67.6841%" y="517" width="0.2213%" height="15" fill="rgb(243,34,48)" fg:x="11930" fg:w="39"/><text x="67.9341%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.16%)</title><rect x="67.7408%" y="501" width="0.1645%" height="15" fill="rgb(239,11,44)" fg:x="11940" fg:w="29"/><text x="67.9908%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="67.8373%" y="485" width="0.0681%" height="15" fill="rgb(231,98,35)" fg:x="11957" fg:w="12"/><text x="68.0873%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (11 samples, 0.06%)</title><rect x="67.9508%" y="597" width="0.0624%" height="15" fill="rgb(233,28,25)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 0.06%)</title><rect x="67.9508%" y="581" width="0.0624%" height="15" fill="rgb(234,123,11)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (11 samples, 0.06%)</title><rect x="67.9508%" y="565" width="0.0624%" height="15" fill="rgb(220,69,3)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.06%)</title><rect x="67.9508%" y="549" width="0.0624%" height="15" fill="rgb(214,64,36)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.06%)</title><rect x="67.9508%" y="533" width="0.0624%" height="15" fill="rgb(211,138,32)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.06%)</title><rect x="67.9508%" y="517" width="0.0624%" height="15" fill="rgb(213,118,47)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.06%)</title><rect x="67.9508%" y="501" width="0.0624%" height="15" fill="rgb(243,124,49)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.06%)</title><rect x="67.9508%" y="485" width="0.0624%" height="15" fill="rgb(221,30,28)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.06%)</title><rect x="67.9508%" y="469" width="0.0624%" height="15" fill="rgb(246,37,13)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.06%)</title><rect x="67.9508%" y="453" width="0.0624%" height="15" fill="rgb(249,66,14)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="463.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.06%)</title><rect x="67.9508%" y="437" width="0.0624%" height="15" fill="rgb(213,166,5)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="447.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.06%)</title><rect x="67.9508%" y="421" width="0.0624%" height="15" fill="rgb(221,66,24)" fg:x="11977" fg:w="11"/><text x="68.2008%" y="431.50"></text></g><g><title>_int_realloc (6 samples, 0.03%)</title><rect x="67.9791%" y="405" width="0.0340%" height="15" fill="rgb(210,132,17)" fg:x="11982" fg:w="6"/><text x="68.2291%" y="415.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="68.0018%" y="389" width="0.0113%" height="15" fill="rgb(243,202,5)" fg:x="11986" fg:w="2"/><text x="68.2518%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.03%)</title><rect x="68.0245%" y="597" width="0.0284%" height="15" fill="rgb(233,70,48)" fg:x="11990" fg:w="5"/><text x="68.2745%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;core::num::nonzero::NonZeroU64&gt;&gt; (3 samples, 0.02%)</title><rect x="68.0529%" y="597" width="0.0170%" height="15" fill="rgb(238,41,26)" fg:x="11995" fg:w="3"/><text x="68.3029%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;core::num::nonzero::NonZeroU64&gt;&gt; (3 samples, 0.02%)</title><rect x="68.0529%" y="581" width="0.0170%" height="15" fill="rgb(241,19,31)" fg:x="11995" fg:w="3"/><text x="68.3029%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="68.0529%" y="565" width="0.0170%" height="15" fill="rgb(214,76,10)" fg:x="11995" fg:w="3"/><text x="68.3029%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="68.0529%" y="549" width="0.0170%" height="15" fill="rgb(254,202,22)" fg:x="11995" fg:w="3"/><text x="68.3029%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="68.0529%" y="533" width="0.0170%" height="15" fill="rgb(214,72,24)" fg:x="11995" fg:w="3"/><text x="68.3029%" y="543.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="68.0529%" y="517" width="0.0170%" height="15" fill="rgb(221,92,46)" fg:x="11995" fg:w="3"/><text x="68.3029%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::init_tracker::buffer::BufferInitTrackerAction&gt;&gt; (5 samples, 0.03%)</title><rect x="68.0699%" y="597" width="0.0284%" height="15" fill="rgb(246,13,50)" fg:x="11998" fg:w="5"/><text x="68.3199%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_core::init_tracker::buffer::BufferInitTrackerAction&gt;&gt; (5 samples, 0.03%)</title><rect x="68.0699%" y="581" width="0.0284%" height="15" fill="rgb(240,165,38)" fg:x="11998" fg:w="5"/><text x="68.3199%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="68.0699%" y="565" width="0.0284%" height="15" fill="rgb(241,24,51)" fg:x="11998" fg:w="5"/><text x="68.3199%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="68.0699%" y="549" width="0.0284%" height="15" fill="rgb(227,51,44)" fg:x="11998" fg:w="5"/><text x="68.3199%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="68.0699%" y="533" width="0.0284%" height="15" fill="rgb(231,121,3)" fg:x="11998" fg:w="5"/><text x="68.3199%" y="543.50"></text></g><g><title>__GI___libc_free (5 samples, 0.03%)</title><rect x="68.0699%" y="517" width="0.0284%" height="15" fill="rgb(245,3,41)" fg:x="11998" fg:w="5"/><text x="68.3199%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="68.1266%" y="597" width="0.0113%" height="15" fill="rgb(214,13,26)" fg:x="12008" fg:w="2"/><text x="68.3766%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="68.1266%" y="581" width="0.0113%" height="15" fill="rgb(252,75,11)" fg:x="12008" fg:w="2"/><text x="68.3766%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="68.1266%" y="565" width="0.0113%" height="15" fill="rgb(218,226,17)" fg:x="12008" fg:w="2"/><text x="68.3766%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::buffer::BufferBindGroupState&lt;wgpu_hal::gles::Api&gt;&gt; (2 samples, 0.01%)</title><rect x="68.1380%" y="581" width="0.0113%" height="15" fill="rgb(248,89,38)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount,wgpu_hal::BufferUses)&gt;&gt; (2 samples, 0.01%)</title><rect x="68.1380%" y="565" width="0.0113%" height="15" fill="rgb(237,73,46)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="68.1380%" y="549" width="0.0113%" height="15" fill="rgb(242,78,33)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount,wgpu_hal::BufferUses)]&gt; (2 samples, 0.01%)</title><rect x="68.1380%" y="533" width="0.0113%" height="15" fill="rgb(235,60,3)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(wgpu_core::id::Valid&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;wgpu_hal::empty::Api&gt;&gt;&gt;,wgpu_core::RefCount,wgpu_hal::BufferUses)&gt; (2 samples, 0.01%)</title><rect x="68.1380%" y="517" width="0.0113%" height="15" fill="rgb(216,172,19)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="68.1380%" y="501" width="0.0113%" height="15" fill="rgb(227,6,42)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="511.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="68.1380%" y="485" width="0.0113%" height="15" fill="rgb(223,207,42)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="68.1380%" y="469" width="0.0113%" height="15" fill="rgb(246,138,30)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="68.1380%" y="453" width="0.0113%" height="15" fill="rgb(251,199,47)" fg:x="12010" fg:w="2"/><text x="68.3880%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::BindGroupStates&lt;wgpu_hal::gles::Api&gt;&gt; (3 samples, 0.02%)</title><rect x="68.1380%" y="597" width="0.0170%" height="15" fill="rgb(228,218,44)" fg:x="12010" fg:w="3"/><text x="68.3880%" y="607.50"></text></g><g><title>wgpu_core::MultiRefCount::dec_and_check_empty (5 samples, 0.03%)</title><rect x="68.1550%" y="597" width="0.0284%" height="15" fill="rgb(220,68,6)" fg:x="12013" fg:w="5"/><text x="68.4050%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.03%)</title><rect x="68.1550%" y="581" width="0.0284%" height="15" fill="rgb(240,60,26)" fg:x="12013" fg:w="5"/><text x="68.4050%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.03%)</title><rect x="68.1550%" y="565" width="0.0284%" height="15" fill="rgb(211,200,19)" fg:x="12013" fg:w="5"/><text x="68.4050%" y="575.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::add_bind_group_states (2 samples, 0.01%)</title><rect x="68.1890%" y="597" width="0.0113%" height="15" fill="rgb(242,145,30)" fg:x="12019" fg:w="2"/><text x="68.4390%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="68.1890%" y="581" width="0.0113%" height="15" fill="rgb(225,64,13)" fg:x="12019" fg:w="2"/><text x="68.4390%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="68.1890%" y="565" width="0.0113%" height="15" fill="rgb(218,103,35)" fg:x="12019" fg:w="2"/><text x="68.4390%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="68.1890%" y="549" width="0.0113%" height="15" fill="rgb(216,93,46)" fg:x="12019" fg:w="2"/><text x="68.4390%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="68.1890%" y="533" width="0.0113%" height="15" fill="rgb(225,159,27)" fg:x="12019" fg:w="2"/><text x="68.4390%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="68.1890%" y="517" width="0.0113%" height="15" fill="rgb(225,204,11)" fg:x="12019" fg:w="2"/><text x="68.4390%" y="527.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="68.2117%" y="581" width="0.0113%" height="15" fill="rgb(205,56,4)" fg:x="12023" fg:w="2"/><text x="68.4617%" y="591.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (10 samples, 0.06%)</title><rect x="68.2004%" y="597" width="0.0567%" height="15" fill="rgb(206,6,35)" fg:x="12021" fg:w="10"/><text x="68.4504%" y="607.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (6 samples, 0.03%)</title><rect x="68.2231%" y="581" width="0.0340%" height="15" fill="rgb(247,73,52)" fg:x="12025" fg:w="6"/><text x="68.4731%" y="591.50"></text></g><g><title>core::mem::replace (6 samples, 0.03%)</title><rect x="68.2231%" y="565" width="0.0340%" height="15" fill="rgb(246,97,4)" fg:x="12025" fg:w="6"/><text x="68.4731%" y="575.50"></text></g><g><title>core::ptr::read (6 samples, 0.03%)</title><rect x="68.2231%" y="549" width="0.0340%" height="15" fill="rgb(212,37,15)" fg:x="12025" fg:w="6"/><text x="68.4731%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="68.2288%" y="533" width="0.0284%" height="15" fill="rgb(208,130,40)" fg:x="12026" fg:w="5"/><text x="68.4788%" y="543.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (3 samples, 0.02%)</title><rect x="68.2571%" y="597" width="0.0170%" height="15" fill="rgb(236,55,29)" fg:x="12031" fg:w="3"/><text x="68.5071%" y="607.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3 samples, 0.02%)</title><rect x="68.2571%" y="581" width="0.0170%" height="15" fill="rgb(209,156,45)" fg:x="12031" fg:w="3"/><text x="68.5071%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3 samples, 0.02%)</title><rect x="68.2571%" y="565" width="0.0170%" height="15" fill="rgb(249,107,4)" fg:x="12031" fg:w="3"/><text x="68.5071%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.02%)</title><rect x="68.2571%" y="549" width="0.0170%" height="15" fill="rgb(227,7,13)" fg:x="12031" fg:w="3"/><text x="68.5071%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="68.2571%" y="533" width="0.0170%" height="15" fill="rgb(250,129,14)" fg:x="12031" fg:w="3"/><text x="68.5071%" y="543.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="68.2855%" y="533" width="0.0113%" height="15" fill="rgb(229,92,13)" fg:x="12036" fg:w="2"/><text x="68.5355%" y="543.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::remove_abandoned (5 samples, 0.03%)</title><rect x="68.2741%" y="597" width="0.0284%" height="15" fill="rgb(245,98,39)" fg:x="12034" fg:w="5"/><text x="68.5241%" y="607.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::remove (3 samples, 0.02%)</title><rect x="68.2855%" y="581" width="0.0170%" height="15" fill="rgb(234,135,48)" fg:x="12036" fg:w="3"/><text x="68.5355%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (3 samples, 0.02%)</title><rect x="68.2855%" y="565" width="0.0170%" height="15" fill="rgb(230,98,28)" fg:x="12036" fg:w="3"/><text x="68.5355%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (3 samples, 0.02%)</title><rect x="68.2855%" y="549" width="0.0170%" height="15" fill="rgb(223,121,0)" fg:x="12036" fg:w="3"/><text x="68.5355%" y="559.50"></text></g><g><title>wgpu_core::RefCount::load (7 samples, 0.04%)</title><rect x="68.3082%" y="581" width="0.0397%" height="15" fill="rgb(234,173,33)" fg:x="12040" fg:w="7"/><text x="68.5582%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.03%)</title><rect x="68.3139%" y="565" width="0.0340%" height="15" fill="rgb(245,47,8)" fg:x="12041" fg:w="6"/><text x="68.5639%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.03%)</title><rect x="68.3139%" y="549" width="0.0340%" height="15" fill="rgb(205,17,20)" fg:x="12041" fg:w="6"/><text x="68.5639%" y="559.50"></text></g><g><title>wgpu_core::track::stateless::StatelessTracker&lt;A,T,Id&gt;::remove_abandoned (10 samples, 0.06%)</title><rect x="68.3025%" y="597" width="0.0567%" height="15" fill="rgb(232,151,16)" fg:x="12039" fg:w="10"/><text x="68.5525%" y="607.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (82 samples, 0.47%)</title><rect x="67.9054%" y="613" width="0.4652%" height="15" fill="rgb(208,30,32)" fg:x="11969" fg:w="82"/><text x="68.1554%" y="623.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove_abandoned (2 samples, 0.01%)</title><rect x="68.3592%" y="597" width="0.0113%" height="15" fill="rgb(254,26,3)" fg:x="12049" fg:w="2"/><text x="68.6092%" y="607.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::get_epoch_unchecked (2 samples, 0.01%)</title><rect x="68.3592%" y="581" width="0.0113%" height="15" fill="rgb(240,177,30)" fg:x="12049" fg:w="2"/><text x="68.6092%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="68.3592%" y="565" width="0.0113%" height="15" fill="rgb(248,76,44)" fg:x="12049" fg:w="2"/><text x="68.6092%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.01%)</title><rect x="68.3592%" y="549" width="0.0113%" height="15" fill="rgb(241,186,54)" fg:x="12049" fg:w="2"/><text x="68.6092%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.01%)</title><rect x="68.3592%" y="533" width="0.0113%" height="15" fill="rgb(249,171,29)" fg:x="12049" fg:w="2"/><text x="68.6092%" y="543.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (262 samples, 1.49%)</title><rect x="66.8898%" y="629" width="1.4864%" height="15" fill="rgb(237,151,44)" fg:x="11790" fg:w="262"/><text x="67.1398%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="68.3876%" y="613" width="0.0170%" height="15" fill="rgb(228,174,30)" fg:x="12054" fg:w="3"/><text x="68.6376%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="68.4046%" y="565" width="0.0113%" height="15" fill="rgb(252,14,37)" fg:x="12057" fg:w="2"/><text x="68.6546%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="68.4046%" y="549" width="0.0113%" height="15" fill="rgb(207,111,40)" fg:x="12057" fg:w="2"/><text x="68.6546%" y="559.50"></text></g><g><title>tcache_get (2 samples, 0.01%)</title><rect x="68.4046%" y="533" width="0.0113%" height="15" fill="rgb(248,171,54)" fg:x="12057" fg:w="2"/><text x="68.6546%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="68.4046%" y="597" width="0.0170%" height="15" fill="rgb(211,127,2)" fg:x="12057" fg:w="3"/><text x="68.6546%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.02%)</title><rect x="68.4046%" y="581" width="0.0170%" height="15" fill="rgb(236,87,47)" fg:x="12057" fg:w="3"/><text x="68.6546%" y="591.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::track_submission (9 samples, 0.05%)</title><rect x="68.3876%" y="629" width="0.0511%" height="15" fill="rgb(223,190,45)" fg:x="12054" fg:w="9"/><text x="68.6376%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.03%)</title><rect x="68.4046%" y="613" width="0.0340%" height="15" fill="rgb(215,5,16)" fg:x="12057" fg:w="6"/><text x="68.6546%" y="623.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="68.4273%" y="597" width="0.0113%" height="15" fill="rgb(252,82,33)" fg:x="12061" fg:w="2"/><text x="68.6773%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="68.4273%" y="581" width="0.0113%" height="15" fill="rgb(247,213,44)" fg:x="12061" fg:w="2"/><text x="68.6773%" y="591.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::pre_submit (9 samples, 0.05%)</title><rect x="68.4387%" y="629" width="0.0511%" height="15" fill="rgb(205,196,44)" fg:x="12063" fg:w="9"/><text x="68.6887%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (8 samples, 0.05%)</title><rect x="68.4443%" y="613" width="0.0454%" height="15" fill="rgb(237,96,54)" fg:x="12064" fg:w="8"/><text x="68.6943%" y="623.50"></text></g><g><title>ash::device::Device::end_command_buffer (8 samples, 0.05%)</title><rect x="68.4443%" y="597" width="0.0454%" height="15" fill="rgb(230,113,34)" fg:x="12064" fg:w="8"/><text x="68.6943%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="68.4443%" y="581" width="0.0454%" height="15" fill="rgb(221,224,12)" fg:x="12064" fg:w="8"/><text x="68.6943%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="68.4727%" y="565" width="0.0170%" height="15" fill="rgb(219,112,44)" fg:x="12069" fg:w="3"/><text x="68.7227%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="68.4727%" y="549" width="0.0170%" height="15" fill="rgb(210,31,13)" fg:x="12069" fg:w="3"/><text x="68.7227%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="68.4727%" y="533" width="0.0170%" height="15" fill="rgb(230,25,16)" fg:x="12069" fg:w="3"/><text x="68.7227%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="68.4727%" y="517" width="0.0170%" height="15" fill="rgb(246,108,53)" fg:x="12069" fg:w="3"/><text x="68.7227%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="68.4727%" y="501" width="0.0170%" height="15" fill="rgb(241,172,50)" fg:x="12069" fg:w="3"/><text x="68.7227%" y="511.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (3 samples, 0.02%)</title><rect x="68.4897%" y="629" width="0.0170%" height="15" fill="rgb(235,141,10)" fg:x="12072" fg:w="3"/><text x="68.7397%" y="639.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (3 samples, 0.02%)</title><rect x="68.4897%" y="613" width="0.0170%" height="15" fill="rgb(220,174,43)" fg:x="12072" fg:w="3"/><text x="68.7397%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (3 samples, 0.02%)</title><rect x="68.4897%" y="597" width="0.0170%" height="15" fill="rgb(215,181,40)" fg:x="12072" fg:w="3"/><text x="68.7397%" y="607.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (3 samples, 0.02%)</title><rect x="68.4897%" y="581" width="0.0170%" height="15" fill="rgb(230,97,2)" fg:x="12072" fg:w="3"/><text x="68.7397%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="68.4897%" y="565" width="0.0170%" height="15" fill="rgb(211,25,27)" fg:x="12072" fg:w="3"/><text x="68.7397%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="68.4897%" y="549" width="0.0170%" height="15" fill="rgb(230,87,26)" fg:x="12072" fg:w="3"/><text x="68.7397%" y="559.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_usage_scope (2 samples, 0.01%)</title><rect x="68.5181%" y="629" width="0.0113%" height="15" fill="rgb(227,160,17)" fg:x="12077" fg:w="2"/><text x="68.7681%" y="639.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::merge_single (4 samples, 0.02%)</title><rect x="68.5294%" y="629" width="0.0227%" height="15" fill="rgb(244,85,34)" fg:x="12079" fg:w="4"/><text x="68.7794%" y="639.50"></text></g><g><title>wgpu_core::track::texture::insert_or_merge (4 samples, 0.02%)</title><rect x="68.5294%" y="613" width="0.0227%" height="15" fill="rgb(207,70,0)" fg:x="12079" fg:w="4"/><text x="68.7794%" y="623.50"></text></g><g><title>wgpu_core::track::texture::insert (4 samples, 0.02%)</title><rect x="68.5294%" y="597" width="0.0227%" height="15" fill="rgb(223,129,7)" fg:x="12079" fg:w="4"/><text x="68.7794%" y="607.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="68.5521%" y="629" width="0.0170%" height="15" fill="rgb(246,105,7)" fg:x="12083" fg:w="3"/><text x="68.8021%" y="639.50"></text></g><g><title>wgpu_core::track::texture::TextureStateSet::new (2 samples, 0.01%)</title><rect x="68.5578%" y="613" width="0.0113%" height="15" fill="rgb(215,154,42)" fg:x="12084" fg:w="2"/><text x="68.8078%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="68.5692%" y="597" width="0.0113%" height="15" fill="rgb(220,215,30)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="68.5692%" y="581" width="0.0113%" height="15" fill="rgb(228,81,51)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="68.5692%" y="565" width="0.0113%" height="15" fill="rgb(247,71,54)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="68.5692%" y="549" width="0.0113%" height="15" fill="rgb(234,176,34)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.01%)</title><rect x="68.5692%" y="533" width="0.0113%" height="15" fill="rgb(241,103,54)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.01%)</title><rect x="68.5692%" y="517" width="0.0113%" height="15" fill="rgb(228,22,34)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.01%)</title><rect x="68.5692%" y="501" width="0.0113%" height="15" fill="rgb(241,179,48)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.01%)</title><rect x="68.5692%" y="485" width="0.0113%" height="15" fill="rgb(235,167,37)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.01%)</title><rect x="68.5692%" y="469" width="0.0113%" height="15" fill="rgb(213,109,30)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="479.50"></text></g><g><title>_int_malloc (2 samples, 0.01%)</title><rect x="68.5692%" y="453" width="0.0113%" height="15" fill="rgb(222,172,16)" fg:x="12086" fg:w="2"/><text x="68.8192%" y="463.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::grow (3 samples, 0.02%)</title><rect x="68.5692%" y="613" width="0.0170%" height="15" fill="rgb(233,192,5)" fg:x="12086" fg:w="3"/><text x="68.8192%" y="623.50"></text></g><g><title>wgpu_core::track::texture::TextureUsageScope&lt;A&gt;::set_size (5 samples, 0.03%)</title><rect x="68.5692%" y="629" width="0.0284%" height="15" fill="rgb(247,189,41)" fg:x="12086" fg:w="5"/><text x="68.8192%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (30 samples, 0.17%)</title><rect x="68.5975%" y="629" width="0.1702%" height="15" fill="rgb(218,134,47)" fg:x="12091" fg:w="30"/><text x="68.8475%" y="639.50"></text></g><g><title>ash::device::Device::begin_command_buffer (30 samples, 0.17%)</title><rect x="68.5975%" y="613" width="0.1702%" height="15" fill="rgb(216,29,3)" fg:x="12091" fg:w="30"/><text x="68.8475%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (30 samples, 0.17%)</title><rect x="68.5975%" y="597" width="0.1702%" height="15" fill="rgb(246,140,12)" fg:x="12091" fg:w="30"/><text x="68.8475%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.14%)</title><rect x="68.6316%" y="581" width="0.1362%" height="15" fill="rgb(230,136,11)" fg:x="12097" fg:w="24"/><text x="68.8816%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.09%)</title><rect x="68.6770%" y="565" width="0.0908%" height="15" fill="rgb(247,22,47)" fg:x="12105" fg:w="16"/><text x="68.9270%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="68.7507%" y="549" width="0.0170%" height="15" fill="rgb(218,84,22)" fg:x="12118" fg:w="3"/><text x="69.0007%" y="559.50"></text></g><g><title>ash::device::Device::cmd_pipeline_barrier (6 samples, 0.03%)</title><rect x="68.7734%" y="613" width="0.0340%" height="15" fill="rgb(216,87,39)" fg:x="12122" fg:w="6"/><text x="69.0234%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="68.7734%" y="597" width="0.0340%" height="15" fill="rgb(221,178,8)" fg:x="12122" fg:w="6"/><text x="69.0234%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="68.7734%" y="581" width="0.0340%" height="15" fill="rgb(230,42,11)" fg:x="12122" fg:w="6"/><text x="69.0234%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="68.7961%" y="565" width="0.0113%" height="15" fill="rgb(237,229,4)" fg:x="12126" fg:w="2"/><text x="69.0461%" y="575.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (771 samples, 4.37%)</title><rect x="64.4389%" y="661" width="4.3742%" height="15" fill="rgb(222,31,33)" fg:x="11358" fg:w="771"/><text x="64.6889%" y="671.50">&lt;wgpu..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (770 samples, 4.37%)</title><rect x="64.4446%" y="645" width="4.3685%" height="15" fill="rgb(210,17,39)" fg:x="11359" fg:w="770"/><text x="64.6946%" y="655.50">wgpu_..</text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::transition_textures (8 samples, 0.05%)</title><rect x="68.7677%" y="629" width="0.0454%" height="15" fill="rgb(244,93,20)" fg:x="12121" fg:w="8"/><text x="69.0177%" y="639.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (772 samples, 4.38%)</title><rect x="64.4389%" y="677" width="4.3799%" height="15" fill="rgb(210,40,47)" fg:x="11358" fg:w="772"/><text x="64.6889%" y="687.50">&lt;T as..</text></g><g><title>wgpu::Queue::submit (777 samples, 4.41%)</title><rect x="64.4162%" y="693" width="4.4083%" height="15" fill="rgb(239,211,47)" fg:x="11354" fg:w="777"/><text x="64.6662%" y="703.50">wgpu:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.01%)</title><rect x="68.8415%" y="613" width="0.0113%" height="15" fill="rgb(251,223,49)" fg:x="12134" fg:w="2"/><text x="69.0915%" y="623.50"></text></g><g><title>wgpu::RenderPass::set_pipeline (5 samples, 0.03%)</title><rect x="68.8358%" y="693" width="0.0284%" height="15" fill="rgb(221,149,5)" fg:x="12133" fg:w="5"/><text x="69.0858%" y="703.50"></text></g><g><title>wgpu_render_pass_set_pipeline (4 samples, 0.02%)</title><rect x="68.8415%" y="677" width="0.0227%" height="15" fill="rgb(219,224,51)" fg:x="12134" fg:w="4"/><text x="69.0915%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="68.8415%" y="661" width="0.0227%" height="15" fill="rgb(223,7,8)" fg:x="12134" fg:w="4"/><text x="69.0915%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.02%)</title><rect x="68.8415%" y="645" width="0.0227%" height="15" fill="rgb(241,217,22)" fg:x="12134" fg:w="4"/><text x="69.0915%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.02%)</title><rect x="68.8415%" y="629" width="0.0227%" height="15" fill="rgb(248,209,0)" fg:x="12134" fg:w="4"/><text x="69.0915%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.05%)</title><rect x="68.9550%" y="581" width="0.0511%" height="15" fill="rgb(217,205,4)" fg:x="12154" fg:w="9"/><text x="69.2050%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="68.9606%" y="565" width="0.0454%" height="15" fill="rgb(228,124,39)" fg:x="12155" fg:w="8"/><text x="69.2106%" y="575.50"></text></g><g><title>syscall (8 samples, 0.05%)</title><rect x="68.9606%" y="549" width="0.0454%" height="15" fill="rgb(250,116,42)" fg:x="12155" fg:w="8"/><text x="69.2106%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="68.9606%" y="533" width="0.0454%" height="15" fill="rgb(223,202,9)" fg:x="12155" fg:w="8"/><text x="69.2106%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="68.9776%" y="517" width="0.0284%" height="15" fill="rgb(242,222,40)" fg:x="12158" fg:w="5"/><text x="69.2276%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="68.9776%" y="501" width="0.0284%" height="15" fill="rgb(229,99,46)" fg:x="12158" fg:w="5"/><text x="69.2276%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="69.0287%" y="565" width="0.0113%" height="15" fill="rgb(225,56,46)" fg:x="12167" fg:w="2"/><text x="69.2787%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="69.0287%" y="549" width="0.0113%" height="15" fill="rgb(227,94,5)" fg:x="12167" fg:w="2"/><text x="69.2787%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (14 samples, 0.08%)</title><rect x="69.4599%" y="485" width="0.0794%" height="15" fill="rgb(205,112,38)" fg:x="12243" fg:w="14"/><text x="69.7099%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (14 samples, 0.08%)</title><rect x="69.4599%" y="469" width="0.0794%" height="15" fill="rgb(231,133,46)" fg:x="12243" fg:w="14"/><text x="69.7099%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="69.4826%" y="453" width="0.0567%" height="15" fill="rgb(217,16,9)" fg:x="12247" fg:w="10"/><text x="69.7326%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="69.4826%" y="437" width="0.0567%" height="15" fill="rgb(249,173,9)" fg:x="12247" fg:w="10"/><text x="69.7326%" y="447.50"></text></g><g><title>__GI___sched_yield (10 samples, 0.06%)</title><rect x="69.4826%" y="421" width="0.0567%" height="15" fill="rgb(205,163,53)" fg:x="12247" fg:w="10"/><text x="69.7326%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="69.4826%" y="405" width="0.0567%" height="15" fill="rgb(217,54,41)" fg:x="12247" fg:w="10"/><text x="69.7326%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="69.4939%" y="389" width="0.0454%" height="15" fill="rgb(228,216,12)" fg:x="12249" fg:w="8"/><text x="69.7439%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="69.4939%" y="373" width="0.0454%" height="15" fill="rgb(244,228,15)" fg:x="12249" fg:w="8"/><text x="69.7439%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="69.5109%" y="357" width="0.0284%" height="15" fill="rgb(221,176,53)" fg:x="12252" fg:w="5"/><text x="69.7609%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="69.5109%" y="341" width="0.0284%" height="15" fill="rgb(205,94,34)" fg:x="12252" fg:w="5"/><text x="69.7609%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="69.5166%" y="325" width="0.0227%" height="15" fill="rgb(213,110,48)" fg:x="12253" fg:w="4"/><text x="69.7666%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="69.5223%" y="309" width="0.0170%" height="15" fill="rgb(236,142,28)" fg:x="12254" fg:w="3"/><text x="69.7723%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="69.5223%" y="293" width="0.0170%" height="15" fill="rgb(225,135,29)" fg:x="12254" fg:w="3"/><text x="69.7723%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="69.5280%" y="277" width="0.0113%" height="15" fill="rgb(252,45,31)" fg:x="12255" fg:w="2"/><text x="69.7780%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (17 samples, 0.10%)</title><rect x="69.4542%" y="501" width="0.0964%" height="15" fill="rgb(211,187,50)" fg:x="12242" fg:w="17"/><text x="69.7042%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="69.5393%" y="485" width="0.0113%" height="15" fill="rgb(229,109,7)" fg:x="12257" fg:w="2"/><text x="69.7893%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="69.8230%" y="453" width="0.0227%" height="15" fill="rgb(251,131,51)" fg:x="12307" fg:w="4"/><text x="70.0730%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (4 samples, 0.02%)</title><rect x="69.8230%" y="437" width="0.0227%" height="15" fill="rgb(251,180,35)" fg:x="12307" fg:w="4"/><text x="70.0730%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="69.8457%" y="437" width="0.0113%" height="15" fill="rgb(211,46,32)" fg:x="12311" fg:w="2"/><text x="70.0957%" y="447.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (45 samples, 0.26%)</title><rect x="69.8173%" y="485" width="0.2553%" height="15" fill="rgb(248,123,17)" fg:x="12306" fg:w="45"/><text x="70.0673%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.26%)</title><rect x="69.8173%" y="469" width="0.2553%" height="15" fill="rgb(227,141,18)" fg:x="12306" fg:w="45"/><text x="70.0673%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (40 samples, 0.23%)</title><rect x="69.8457%" y="453" width="0.2269%" height="15" fill="rgb(216,102,9)" fg:x="12311" fg:w="40"/><text x="70.0957%" y="463.50"></text></g><g><title>__GI___sched_yield (38 samples, 0.22%)</title><rect x="69.8570%" y="437" width="0.2156%" height="15" fill="rgb(253,47,13)" fg:x="12313" fg:w="38"/><text x="70.1070%" y="447.50"></text></g><g><title>[unknown] (33 samples, 0.19%)</title><rect x="69.8854%" y="421" width="0.1872%" height="15" fill="rgb(226,93,23)" fg:x="12318" fg:w="33"/><text x="70.1354%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.14%)</title><rect x="69.9308%" y="405" width="0.1418%" height="15" fill="rgb(247,104,17)" fg:x="12326" fg:w="25"/><text x="70.1808%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="69.9365%" y="389" width="0.1362%" height="15" fill="rgb(233,203,26)" fg:x="12327" fg:w="24"/><text x="70.1865%" y="399.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="69.9592%" y="373" width="0.1135%" height="15" fill="rgb(244,98,49)" fg:x="12331" fg:w="20"/><text x="70.2092%" y="383.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="69.9705%" y="357" width="0.1021%" height="15" fill="rgb(235,134,22)" fg:x="12333" fg:w="18"/><text x="70.2205%" y="367.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="69.9818%" y="341" width="0.0908%" height="15" fill="rgb(221,70,32)" fg:x="12335" fg:w="16"/><text x="70.2318%" y="351.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="70.0216%" y="325" width="0.0511%" height="15" fill="rgb(238,15,50)" fg:x="12342" fg:w="9"/><text x="70.2716%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="70.0216%" y="309" width="0.0511%" height="15" fill="rgb(215,221,48)" fg:x="12342" fg:w="9"/><text x="70.2716%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="70.0329%" y="293" width="0.0397%" height="15" fill="rgb(236,73,3)" fg:x="12344" fg:w="7"/><text x="70.2829%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="70.0329%" y="277" width="0.0397%" height="15" fill="rgb(250,107,11)" fg:x="12344" fg:w="7"/><text x="70.2829%" y="287.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (14 samples, 0.08%)</title><rect x="70.5322%" y="469" width="0.0794%" height="15" fill="rgb(242,39,14)" fg:x="12432" fg:w="14"/><text x="70.7822%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.08%)</title><rect x="70.5322%" y="453" width="0.0794%" height="15" fill="rgb(248,164,37)" fg:x="12432" fg:w="14"/><text x="70.7822%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="70.5435%" y="437" width="0.0681%" height="15" fill="rgb(217,60,12)" fg:x="12434" fg:w="12"/><text x="70.7935%" y="447.50"></text></g><g><title>__GI___sched_yield (12 samples, 0.07%)</title><rect x="70.5435%" y="421" width="0.0681%" height="15" fill="rgb(240,125,29)" fg:x="12434" fg:w="12"/><text x="70.7935%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="70.5435%" y="405" width="0.0681%" height="15" fill="rgb(208,207,28)" fg:x="12434" fg:w="12"/><text x="70.7935%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="70.5776%" y="389" width="0.0340%" height="15" fill="rgb(209,159,27)" fg:x="12440" fg:w="6"/><text x="70.8276%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="70.5832%" y="373" width="0.0284%" height="15" fill="rgb(251,176,53)" fg:x="12441" fg:w="5"/><text x="70.8332%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5946%" y="357" width="0.0170%" height="15" fill="rgb(211,85,7)" fg:x="12443" fg:w="3"/><text x="70.8446%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5946%" y="341" width="0.0170%" height="15" fill="rgb(216,64,54)" fg:x="12443" fg:w="3"/><text x="70.8446%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5946%" y="325" width="0.0170%" height="15" fill="rgb(217,54,24)" fg:x="12443" fg:w="3"/><text x="70.8446%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5946%" y="309" width="0.0170%" height="15" fill="rgb(208,206,53)" fg:x="12443" fg:w="3"/><text x="70.8446%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.6002%" y="293" width="0.0113%" height="15" fill="rgb(251,74,39)" fg:x="12444" fg:w="2"/><text x="70.8502%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="74.4639%" y="325" width="0.0113%" height="15" fill="rgb(226,47,5)" fg:x="13125" fg:w="2"/><text x="74.7139%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="74.4639%" y="309" width="0.0113%" height="15" fill="rgb(234,111,33)" fg:x="13125" fg:w="2"/><text x="74.7139%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="74.4639%" y="293" width="0.0113%" height="15" fill="rgb(251,14,10)" fg:x="13125" fg:w="2"/><text x="74.7139%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="74.4639%" y="277" width="0.0113%" height="15" fill="rgb(232,43,0)" fg:x="13125" fg:w="2"/><text x="74.7139%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (46 samples, 0.26%)</title><rect x="74.2312%" y="341" width="0.2610%" height="15" fill="rgb(222,68,43)" fg:x="13084" fg:w="46"/><text x="74.4812%" y="351.50"></text></g><g><title>___pthread_rwlock_unlock (2 samples, 0.01%)</title><rect x="74.4809%" y="325" width="0.0113%" height="15" fill="rgb(217,24,23)" fg:x="13128" fg:w="2"/><text x="74.7309%" y="335.50"></text></g><g><title>__pthread_rwlock_wrunlock (2 samples, 0.01%)</title><rect x="74.4809%" y="309" width="0.0113%" height="15" fill="rgb(229,209,14)" fg:x="13128" fg:w="2"/><text x="74.7309%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (120 samples, 0.68%)</title><rect x="73.8284%" y="357" width="0.6808%" height="15" fill="rgb(250,149,48)" fg:x="13013" fg:w="120"/><text x="74.0784%" y="367.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 0.02%)</title><rect x="74.4922%" y="341" width="0.0170%" height="15" fill="rgb(210,120,37)" fg:x="13130" fg:w="3"/><text x="74.7422%" y="351.50"></text></g><g><title>__pthread_rwlock_wrunlock (3 samples, 0.02%)</title><rect x="74.4922%" y="325" width="0.0170%" height="15" fill="rgb(210,21,8)" fg:x="13130" fg:w="3"/><text x="74.7422%" y="335.50"></text></g><g><title>___pthread_rwlock_wrlock (2 samples, 0.01%)</title><rect x="74.5263%" y="357" width="0.0113%" height="15" fill="rgb(243,145,7)" fg:x="13136" fg:w="2"/><text x="74.7763%" y="367.50"></text></g><g><title>__pthread_rwlock_wrlock_full64 (2 samples, 0.01%)</title><rect x="74.5263%" y="341" width="0.0113%" height="15" fill="rgb(238,178,32)" fg:x="13136" fg:w="2"/><text x="74.7763%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (242 samples, 1.37%)</title><rect x="73.1703%" y="373" width="1.3730%" height="15" fill="rgb(222,4,10)" fg:x="12897" fg:w="242"/><text x="73.4203%" y="383.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 0.02%)</title><rect x="74.5490%" y="373" width="0.0170%" height="15" fill="rgb(239,7,37)" fg:x="13140" fg:w="3"/><text x="74.7990%" y="383.50"></text></g><g><title>__pthread_rwlock_wrunlock (3 samples, 0.02%)</title><rect x="74.5490%" y="357" width="0.0170%" height="15" fill="rgb(215,31,37)" fg:x="13140" fg:w="3"/><text x="74.7990%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (313 samples, 1.78%)</title><rect x="72.8015%" y="389" width="1.7758%" height="15" fill="rgb(224,83,33)" fg:x="12832" fg:w="313"/><text x="73.0515%" y="399.50">[..</text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="74.5887%" y="389" width="0.0113%" height="15" fill="rgb(239,55,3)" fg:x="13147" fg:w="2"/><text x="74.8387%" y="399.50"></text></g><g><title>lll_mutex_lock_optimized (2 samples, 0.01%)</title><rect x="74.5887%" y="373" width="0.0113%" height="15" fill="rgb(247,92,11)" fg:x="13147" fg:w="2"/><text x="74.8387%" y="383.50"></text></g><g><title>___pthread_rwlock_unlock (3 samples, 0.02%)</title><rect x="74.6057%" y="389" width="0.0170%" height="15" fill="rgb(239,200,7)" fg:x="13150" fg:w="3"/><text x="74.8557%" y="399.50"></text></g><g><title>__pthread_rwlock_wrunlock (3 samples, 0.02%)</title><rect x="74.6057%" y="373" width="0.0170%" height="15" fill="rgb(227,115,8)" fg:x="13150" fg:w="3"/><text x="74.8557%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (582 samples, 3.30%)</title><rect x="71.3378%" y="405" width="3.3019%" height="15" fill="rgb(215,189,27)" fg:x="12574" fg:w="582"/><text x="71.5878%" y="415.50">[li..</text></g><g><title>___pthread_rwlock_wrlock (3 samples, 0.02%)</title><rect x="74.6227%" y="389" width="0.0170%" height="15" fill="rgb(251,216,39)" fg:x="13153" fg:w="3"/><text x="74.8727%" y="399.50"></text></g><g><title>__pthread_rwlock_wrlock_full64 (3 samples, 0.02%)</title><rect x="74.6227%" y="373" width="0.0170%" height="15" fill="rgb(207,29,47)" fg:x="13153" fg:w="3"/><text x="74.8727%" y="383.50"></text></g><g><title>___pthread_mutex_unlock (4 samples, 0.02%)</title><rect x="74.6454%" y="405" width="0.0227%" height="15" fill="rgb(210,71,34)" fg:x="13157" fg:w="4"/><text x="74.8954%" y="415.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (3 samples, 0.02%)</title><rect x="74.6511%" y="389" width="0.0170%" height="15" fill="rgb(253,217,51)" fg:x="13158" fg:w="3"/><text x="74.9011%" y="399.50"></text></g><g><title>lll_mutex_unlock_optimized (3 samples, 0.02%)</title><rect x="74.6511%" y="373" width="0.0170%" height="15" fill="rgb(222,117,46)" fg:x="13158" fg:w="3"/><text x="74.9011%" y="383.50"></text></g><g><title>___pthread_rwlock_rdlock (2 samples, 0.01%)</title><rect x="74.6681%" y="405" width="0.0113%" height="15" fill="rgb(226,132,6)" fg:x="13161" fg:w="2"/><text x="74.9181%" y="415.50"></text></g><g><title>___pthread_rwlock_wrlock (2 samples, 0.01%)</title><rect x="74.6851%" y="405" width="0.0113%" height="15" fill="rgb(254,145,51)" fg:x="13164" fg:w="2"/><text x="74.9351%" y="415.50"></text></g><g><title>__pthread_rwlock_wrlock_full64 (2 samples, 0.01%)</title><rect x="74.6851%" y="389" width="0.0113%" height="15" fill="rgb(231,199,27)" fg:x="13164" fg:w="2"/><text x="74.9351%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (653 samples, 3.70%)</title><rect x="70.9974%" y="421" width="3.7048%" height="15" fill="rgb(245,158,14)" fg:x="12514" fg:w="653"/><text x="71.2474%" y="431.50">[lib..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (671 samples, 3.81%)</title><rect x="70.9009%" y="437" width="3.8069%" height="15" fill="rgb(240,113,14)" fg:x="12497" fg:w="671"/><text x="71.1509%" y="447.50">[lib..</text></g><g><title>__GI___ioctl (1,108 samples, 6.29%)</title><rect x="74.7135%" y="437" width="6.2862%" height="15" fill="rgb(210,20,13)" fg:x="13169" fg:w="1108"/><text x="74.9635%" y="447.50">__GI___i..</text></g><g><title>[unknown] (1,108 samples, 6.29%)</title><rect x="74.7135%" y="421" width="6.2862%" height="15" fill="rgb(241,144,13)" fg:x="13169" fg:w="1108"/><text x="74.9635%" y="431.50">[unknown]</text></g><g><title>[unknown] (111 samples, 0.63%)</title><rect x="80.3699%" y="405" width="0.6298%" height="15" fill="rgb(235,43,34)" fg:x="14166" fg:w="111"/><text x="80.6199%" y="415.50"></text></g><g><title>[unknown] (52 samples, 0.30%)</title><rect x="80.7046%" y="389" width="0.2950%" height="15" fill="rgb(208,36,20)" fg:x="14225" fg:w="52"/><text x="80.9546%" y="399.50"></text></g><g><title>[unknown] (41 samples, 0.23%)</title><rect x="80.7670%" y="373" width="0.2326%" height="15" fill="rgb(239,204,10)" fg:x="14236" fg:w="41"/><text x="81.0170%" y="383.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="80.9032%" y="357" width="0.0964%" height="15" fill="rgb(217,84,43)" fg:x="14260" fg:w="17"/><text x="81.1532%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="80.9202%" y="341" width="0.0794%" height="15" fill="rgb(241,170,50)" fg:x="14263" fg:w="14"/><text x="81.1702%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="80.9429%" y="325" width="0.0567%" height="15" fill="rgb(226,205,29)" fg:x="14267" fg:w="10"/><text x="81.1929%" y="335.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="80.9486%" y="309" width="0.0511%" height="15" fill="rgb(233,113,1)" fg:x="14268" fg:w="9"/><text x="81.1986%" y="319.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="80.9543%" y="293" width="0.0454%" height="15" fill="rgb(253,98,13)" fg:x="14269" fg:w="8"/><text x="81.2043%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="80.9656%" y="277" width="0.0340%" height="15" fill="rgb(211,115,12)" fg:x="14271" fg:w="6"/><text x="81.2156%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="80.9826%" y="261" width="0.0170%" height="15" fill="rgb(208,12,16)" fg:x="14274" fg:w="3"/><text x="81.2326%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="80.9826%" y="245" width="0.0170%" height="15" fill="rgb(237,193,54)" fg:x="14274" fg:w="3"/><text x="81.2326%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,806 samples, 10.25%)</title><rect x="70.7591%" y="453" width="10.2462%" height="15" fill="rgb(243,22,42)" fg:x="12472" fg:w="1806"/><text x="71.0091%" y="463.50">[libnvidia-glco..</text></g><g><title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="81.0053%" y="453" width="0.0113%" height="15" fill="rgb(233,151,36)" fg:x="14278" fg:w="2"/><text x="81.2553%" y="463.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="81.0053%" y="437" width="0.0113%" height="15" fill="rgb(237,57,45)" fg:x="14278" fg:w="2"/><text x="81.2553%" y="447.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="81.0167%" y="453" width="0.0113%" height="15" fill="rgb(221,88,17)" fg:x="14280" fg:w="2"/><text x="81.2667%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,837 samples, 10.42%)</title><rect x="70.6116%" y="469" width="10.4221%" height="15" fill="rgb(230,79,15)" fg:x="12446" fg:w="1837"/><text x="70.8616%" y="479.50">[libnvidia-glco..</text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="81.0337%" y="469" width="0.0113%" height="15" fill="rgb(213,57,13)" fg:x="14283" fg:w="2"/><text x="81.2837%" y="479.50"></text></g><g><title>lll_mutex_lock_optimized (2 samples, 0.01%)</title><rect x="81.0337%" y="453" width="0.0113%" height="15" fill="rgb(222,116,39)" fg:x="14283" fg:w="2"/><text x="81.2837%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,936 samples, 10.98%)</title><rect x="70.0726%" y="485" width="10.9838%" height="15" fill="rgb(245,107,2)" fg:x="12351" fg:w="1936"/><text x="70.3226%" y="495.50">[libnvidia-glcor..</text></g><g><title>___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="81.0450%" y="469" width="0.0113%" height="15" fill="rgb(238,1,10)" fg:x="14285" fg:w="2"/><text x="81.2950%" y="479.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.01%)</title><rect x="81.0450%" y="453" width="0.0113%" height="15" fill="rgb(249,4,48)" fg:x="14285" fg:w="2"/><text x="81.2950%" y="463.50"></text></g><g><title>lll_mutex_unlock_optimized (2 samples, 0.01%)</title><rect x="81.0450%" y="437" width="0.0113%" height="15" fill="rgb(223,151,18)" fg:x="14285" fg:w="2"/><text x="81.2950%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,074 samples, 11.77%)</title><rect x="69.3010%" y="517" width="11.7667%" height="15" fill="rgb(227,65,43)" fg:x="12215" fg:w="2074"/><text x="69.5510%" y="527.50">[libnvidia-glcore..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,030 samples, 11.52%)</title><rect x="69.5507%" y="501" width="11.5171%" height="15" fill="rgb(218,40,45)" fg:x="12259" fg:w="2030"/><text x="69.8007%" y="511.50">[libnvidia-glcore..</text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="81.0564%" y="485" width="0.0113%" height="15" fill="rgb(252,121,31)" fg:x="14287" fg:w="2"/><text x="81.3064%" y="495.50"></text></g><g><title>___pthread_cond_broadcast (51 samples, 0.29%)</title><rect x="81.0677%" y="517" width="0.2893%" height="15" fill="rgb(219,158,43)" fg:x="14289" fg:w="51"/><text x="81.3177%" y="527.50"></text></g><g><title>futex_wake (48 samples, 0.27%)</title><rect x="81.0848%" y="501" width="0.2723%" height="15" fill="rgb(231,162,42)" fg:x="14292" fg:w="48"/><text x="81.3348%" y="511.50"></text></g><g><title>[unknown] (48 samples, 0.27%)</title><rect x="81.0848%" y="485" width="0.2723%" height="15" fill="rgb(217,179,25)" fg:x="14292" fg:w="48"/><text x="81.3348%" y="495.50"></text></g><g><title>[unknown] (40 samples, 0.23%)</title><rect x="81.1301%" y="469" width="0.2269%" height="15" fill="rgb(206,212,31)" fg:x="14300" fg:w="40"/><text x="81.3801%" y="479.50"></text></g><g><title>[unknown] (39 samples, 0.22%)</title><rect x="81.1358%" y="453" width="0.2213%" height="15" fill="rgb(235,144,12)" fg:x="14301" fg:w="39"/><text x="81.3858%" y="463.50"></text></g><g><title>[unknown] (33 samples, 0.19%)</title><rect x="81.1699%" y="437" width="0.1872%" height="15" fill="rgb(213,51,10)" fg:x="14307" fg:w="33"/><text x="81.4199%" y="447.50"></text></g><g><title>[unknown] (30 samples, 0.17%)</title><rect x="81.1869%" y="421" width="0.1702%" height="15" fill="rgb(231,145,14)" fg:x="14310" fg:w="30"/><text x="81.4369%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="81.2606%" y="405" width="0.0964%" height="15" fill="rgb(235,15,28)" fg:x="14323" fg:w="17"/><text x="81.5106%" y="415.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="81.2777%" y="389" width="0.0794%" height="15" fill="rgb(237,206,10)" fg:x="14326" fg:w="14"/><text x="81.5277%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="81.2947%" y="373" width="0.0624%" height="15" fill="rgb(236,227,27)" fg:x="14329" fg:w="11"/><text x="81.5447%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="81.3287%" y="357" width="0.0284%" height="15" fill="rgb(246,83,35)" fg:x="14335" fg:w="5"/><text x="81.5787%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="81.3344%" y="341" width="0.0227%" height="15" fill="rgb(220,136,24)" fg:x="14336" fg:w="4"/><text x="81.5844%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,152 samples, 12.21%)</title><rect x="69.1649%" y="533" width="12.2092%" height="15" fill="rgb(217,3,25)" fg:x="12191" fg:w="2152"/><text x="69.4149%" y="543.50">[libnvidia-glcore...</text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="81.3571%" y="517" width="0.0170%" height="15" fill="rgb(239,24,14)" fg:x="14340" fg:w="3"/><text x="81.6071%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,166 samples, 12.29%)</title><rect x="69.1025%" y="549" width="12.2887%" height="15" fill="rgb(244,16,53)" fg:x="12180" fg:w="2166"/><text x="69.3525%" y="559.50">[libnvidia-glcore...</text></g><g><title>___pthread_rwlock_wrlock (3 samples, 0.02%)</title><rect x="81.3741%" y="533" width="0.0170%" height="15" fill="rgb(208,175,44)" fg:x="14343" fg:w="3"/><text x="81.6241%" y="543.50"></text></g><g><title>__pthread_rwlock_wrlock_full64 (3 samples, 0.02%)</title><rect x="81.3741%" y="517" width="0.0170%" height="15" fill="rgb(252,18,48)" fg:x="14343" fg:w="3"/><text x="81.6241%" y="527.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (2,196 samples, 12.46%)</title><rect x="68.9379%" y="629" width="12.4589%" height="15" fill="rgb(234,199,32)" fg:x="12151" fg:w="2196"/><text x="69.1879%" y="639.50">&lt;wgpu_hal::vulkan::..</text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (2,194 samples, 12.45%)</title><rect x="68.9493%" y="613" width="12.4475%" height="15" fill="rgb(225,77,54)" fg:x="12153" fg:w="2194"/><text x="69.1993%" y="623.50">ash::extensions::kh..</text></g><g><title>[libGLX_nvidia.so.530.30.02] (2,194 samples, 12.45%)</title><rect x="68.9493%" y="597" width="12.4475%" height="15" fill="rgb(225,42,25)" fg:x="12153" fg:w="2194"/><text x="69.1993%" y="607.50">[libGLX_nvidia.so.5..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,184 samples, 12.39%)</title><rect x="69.0060%" y="581" width="12.3908%" height="15" fill="rgb(242,227,46)" fg:x="12163" fg:w="2184"/><text x="69.2560%" y="591.50">[libnvidia-glcore.s..</text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,178 samples, 12.36%)</title><rect x="69.0401%" y="565" width="12.3567%" height="15" fill="rgb(246,197,35)" fg:x="12169" fg:w="2178"/><text x="69.2901%" y="575.50">[libnvidia-glcore...</text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;wgpu_hal::empty::Api&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="81.4081%" y="629" width="0.0170%" height="15" fill="rgb(215,159,26)" fg:x="14349" fg:w="3"/><text x="81.6581%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="81.4138%" y="613" width="0.0113%" height="15" fill="rgb(212,194,50)" fg:x="14350" fg:w="2"/><text x="81.6638%" y="623.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.4138%" y="597" width="0.0113%" height="15" fill="rgb(246,132,1)" fg:x="14350" fg:w="2"/><text x="81.6638%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="81.4138%" y="581" width="0.0113%" height="15" fill="rgb(217,71,7)" fg:x="14350" fg:w="2"/><text x="81.6638%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="81.4138%" y="565" width="0.0113%" height="15" fill="rgb(252,59,32)" fg:x="14350" fg:w="2"/><text x="81.6638%" y="575.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (6 samples, 0.03%)</title><rect x="81.4252%" y="629" width="0.0340%" height="15" fill="rgb(253,204,25)" fg:x="14352" fg:w="6"/><text x="81.6752%" y="639.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (4 samples, 0.02%)</title><rect x="81.4365%" y="613" width="0.0227%" height="15" fill="rgb(232,21,16)" fg:x="14354" fg:w="4"/><text x="81.6865%" y="623.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="81.4365%" y="597" width="0.0227%" height="15" fill="rgb(248,90,29)" fg:x="14354" fg:w="4"/><text x="81.6865%" y="607.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="81.4365%" y="581" width="0.0227%" height="15" fill="rgb(249,223,7)" fg:x="14354" fg:w="4"/><text x="81.6865%" y="591.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4 samples, 0.02%)</title><rect x="81.4365%" y="565" width="0.0227%" height="15" fill="rgb(231,119,42)" fg:x="14354" fg:w="4"/><text x="81.6865%" y="575.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (2 samples, 0.01%)</title><rect x="81.4592%" y="629" width="0.0113%" height="15" fill="rgb(215,41,35)" fg:x="14358" fg:w="2"/><text x="81.7092%" y="639.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::remove (5 samples, 0.03%)</title><rect x="81.4706%" y="629" width="0.0284%" height="15" fill="rgb(220,44,45)" fg:x="14360" fg:w="5"/><text x="81.7206%" y="639.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::remove (2 samples, 0.01%)</title><rect x="81.4876%" y="613" width="0.0113%" height="15" fill="rgb(253,197,36)" fg:x="14363" fg:w="2"/><text x="81.7376%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (2 samples, 0.01%)</title><rect x="81.4876%" y="597" width="0.0113%" height="15" fill="rgb(245,225,54)" fg:x="14363" fg:w="2"/><text x="81.7376%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.01%)</title><rect x="81.4876%" y="581" width="0.0113%" height="15" fill="rgb(239,94,37)" fg:x="14363" fg:w="2"/><text x="81.7376%" y="591.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.4876%" y="565" width="0.0113%" height="15" fill="rgb(242,217,10)" fg:x="14363" fg:w="2"/><text x="81.7376%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="81.4876%" y="549" width="0.0113%" height="15" fill="rgb(250,193,7)" fg:x="14363" fg:w="2"/><text x="81.7376%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="81.4876%" y="533" width="0.0113%" height="15" fill="rgb(230,104,19)" fg:x="14363" fg:w="2"/><text x="81.7376%" y="543.50"></text></g><g><title>wgpu::SurfaceTexture::present (2,233 samples, 12.67%)</title><rect x="68.8642%" y="693" width="12.6688%" height="15" fill="rgb(230,181,4)" fg:x="12138" fg:w="2233"/><text x="69.1142%" y="703.50">wgpu::SurfaceTextur..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (2,232 samples, 12.66%)</title><rect x="68.8699%" y="677" width="12.6631%" height="15" fill="rgb(216,219,49)" fg:x="12139" fg:w="2232"/><text x="69.1199%" y="687.50">&lt;T as wgpu::context..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (2,231 samples, 12.66%)</title><rect x="68.8755%" y="661" width="12.6574%" height="15" fill="rgb(254,144,0)" fg:x="12140" fg:w="2231"/><text x="69.1255%" y="671.50">&lt;wgpu::backend::dir..</text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (2,227 samples, 12.63%)</title><rect x="68.8982%" y="645" width="12.6347%" height="15" fill="rgb(205,209,38)" fg:x="12144" fg:w="2227"/><text x="69.1482%" y="655.50">wgpu_core::present:..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_texture_view (6 samples, 0.03%)</title><rect x="81.4989%" y="629" width="0.0340%" height="15" fill="rgb(240,21,42)" fg:x="14365" fg:w="6"/><text x="81.7489%" y="639.50"></text></g><g><title>ash::device::Device::destroy_image_view (6 samples, 0.03%)</title><rect x="81.4989%" y="613" width="0.0340%" height="15" fill="rgb(241,132,3)" fg:x="14365" fg:w="6"/><text x="81.7489%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="81.4989%" y="597" width="0.0340%" height="15" fill="rgb(225,14,2)" fg:x="14365" fg:w="6"/><text x="81.7489%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="81.5159%" y="581" width="0.0170%" height="15" fill="rgb(210,141,35)" fg:x="14368" fg:w="3"/><text x="81.7659%" y="591.50"></text></g><g><title>wgpu::util::belt::StagingBelt::finish (3 samples, 0.02%)</title><rect x="81.5330%" y="693" width="0.0170%" height="15" fill="rgb(251,14,44)" fg:x="14371" fg:w="3"/><text x="81.7830%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu::util::belt::Chunk&gt;&gt; (2 samples, 0.01%)</title><rect x="81.5386%" y="677" width="0.0113%" height="15" fill="rgb(247,48,18)" fg:x="14372" fg:w="2"/><text x="81.7886%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.5386%" y="661" width="0.0113%" height="15" fill="rgb(225,0,40)" fg:x="14372" fg:w="2"/><text x="81.7886%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu::util::belt::Chunk,alloc::alloc::Global&gt;&gt; (2 samples, 0.01%)</title><rect x="81.5386%" y="645" width="0.0113%" height="15" fill="rgb(221,31,33)" fg:x="14372" fg:w="2"/><text x="81.7886%" y="655.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="81.5386%" y="629" width="0.0113%" height="15" fill="rgb(237,42,40)" fg:x="14372" fg:w="2"/><text x="81.7886%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="81.5727%" y="597" width="0.0227%" height="15" fill="rgb(233,51,29)" fg:x="14378" fg:w="4"/><text x="81.8227%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="81.5727%" y="581" width="0.0227%" height="15" fill="rgb(226,58,20)" fg:x="14378" fg:w="4"/><text x="81.8227%" y="591.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (3,247 samples, 18.42%)</title><rect x="63.1851%" y="709" width="18.4216%" height="15" fill="rgb(208,98,7)" fg:x="11137" fg:w="3247"/><text x="63.4351%" y="719.50">ggez::graphics::context::Grap..</text></g><g><title>wgpu::util::belt::StagingBelt::recall (10 samples, 0.06%)</title><rect x="81.5500%" y="693" width="0.0567%" height="15" fill="rgb(228,143,44)" fg:x="14374" fg:w="10"/><text x="81.8000%" y="703.50"></text></g><g><title>wgpu::util::belt::StagingBelt::receive_chunks (10 samples, 0.06%)</title><rect x="81.5500%" y="677" width="0.0567%" height="15" fill="rgb(246,55,38)" fg:x="14374" fg:w="10"/><text x="81.8000%" y="687.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (10 samples, 0.06%)</title><rect x="81.5500%" y="661" width="0.0567%" height="15" fill="rgb(247,87,16)" fg:x="14374" fg:w="10"/><text x="81.8000%" y="671.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (10 samples, 0.06%)</title><rect x="81.5500%" y="645" width="0.0567%" height="15" fill="rgb(234,129,42)" fg:x="14374" fg:w="10"/><text x="81.8000%" y="655.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (9 samples, 0.05%)</title><rect x="81.5557%" y="629" width="0.0511%" height="15" fill="rgb(220,82,16)" fg:x="14375" fg:w="9"/><text x="81.8057%" y="639.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (8 samples, 0.05%)</title><rect x="81.5613%" y="613" width="0.0454%" height="15" fill="rgb(211,88,4)" fg:x="14376" fg:w="8"/><text x="81.8113%" y="623.50"></text></g><g><title>core::sync::atomic::fence (2 samples, 0.01%)</title><rect x="81.5954%" y="597" width="0.0113%" height="15" fill="rgb(248,151,21)" fg:x="14382" fg:w="2"/><text x="81.8454%" y="607.50"></text></g><g><title>gilrs::ev::filter::axis_dpad_to_button (2 samples, 0.01%)</title><rect x="81.6067%" y="613" width="0.0113%" height="15" fill="rgb(238,163,6)" fg:x="14384" fg:w="2"/><text x="81.8567%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;gilrs::ev::Event&gt; as gilrs::ev::filter::Filter&gt;::filter_ev (3 samples, 0.02%)</title><rect x="81.6067%" y="661" width="0.0170%" height="15" fill="rgb(209,183,11)" fg:x="14384" fg:w="3"/><text x="81.8567%" y="671.50"></text></g><g><title>&lt;F as gilrs::ev::filter::FilterFn&gt;::filter (3 samples, 0.02%)</title><rect x="81.6067%" y="645" width="0.0170%" height="15" fill="rgb(219,37,20)" fg:x="14384" fg:w="3"/><text x="81.8567%" y="655.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.02%)</title><rect x="81.6067%" y="629" width="0.0170%" height="15" fill="rgb(210,158,4)" fg:x="14384" fg:w="3"/><text x="81.8567%" y="639.50"></text></g><g><title>epoll_wait (13 samples, 0.07%)</title><rect x="81.6464%" y="581" width="0.0738%" height="15" fill="rgb(221,167,53)" fg:x="14391" fg:w="13"/><text x="81.8964%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="81.6464%" y="565" width="0.0738%" height="15" fill="rgb(237,151,45)" fg:x="14391" fg:w="13"/><text x="81.8964%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="81.6805%" y="549" width="0.0397%" height="15" fill="rgb(231,39,3)" fg:x="14397" fg:w="7"/><text x="81.9305%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="81.6805%" y="533" width="0.0397%" height="15" fill="rgb(212,167,28)" fg:x="14397" fg:w="7"/><text x="81.9305%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="81.6918%" y="517" width="0.0284%" height="15" fill="rgb(232,178,8)" fg:x="14399" fg:w="5"/><text x="81.9418%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="81.6975%" y="501" width="0.0227%" height="15" fill="rgb(225,151,20)" fg:x="14400" fg:w="4"/><text x="81.9475%" y="511.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::next_event (21 samples, 0.12%)</title><rect x="81.6067%" y="709" width="0.1191%" height="15" fill="rgb(238,3,37)" fg:x="14384" fg:w="21"/><text x="81.8567%" y="719.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event (21 samples, 0.12%)</title><rect x="81.6067%" y="693" width="0.1191%" height="15" fill="rgb(251,147,42)" fg:x="14384" fg:w="21"/><text x="81.8567%" y="703.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_inner (21 samples, 0.12%)</title><rect x="81.6067%" y="677" width="0.1191%" height="15" fill="rgb(208,173,10)" fg:x="14384" fg:w="21"/><text x="81.8567%" y="687.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_priv (18 samples, 0.10%)</title><rect x="81.6237%" y="661" width="0.1021%" height="15" fill="rgb(246,225,4)" fg:x="14387" fg:w="18"/><text x="81.8737%" y="671.50"></text></g><g><title>gilrs_core::Gilrs::next_event (17 samples, 0.10%)</title><rect x="81.6294%" y="645" width="0.0964%" height="15" fill="rgb(248,102,6)" fg:x="14388" fg:w="17"/><text x="81.8794%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event (17 samples, 0.10%)</title><rect x="81.6294%" y="629" width="0.0964%" height="15" fill="rgb(232,6,21)" fg:x="14388" fg:w="17"/><text x="81.8794%" y="639.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event_impl (17 samples, 0.10%)</title><rect x="81.6294%" y="613" width="0.0964%" height="15" fill="rgb(221,179,22)" fg:x="14388" fg:w="17"/><text x="81.8794%" y="623.50"></text></g><g><title>nix::sys::epoll::epoll_wait (14 samples, 0.08%)</title><rect x="81.6464%" y="597" width="0.0794%" height="15" fill="rgb(252,50,20)" fg:x="14391" fg:w="14"/><text x="81.8964%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (12 samples, 0.07%)</title><rect x="81.7259%" y="613" width="0.0681%" height="15" fill="rgb(222,56,38)" fg:x="14405" fg:w="12"/><text x="81.9759%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.07%)</title><rect x="81.7259%" y="597" width="0.0681%" height="15" fill="rgb(206,193,29)" fg:x="14405" fg:w="12"/><text x="81.9759%" y="607.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12 samples, 0.07%)</title><rect x="81.7259%" y="581" width="0.0681%" height="15" fill="rgb(239,192,45)" fg:x="14405" fg:w="12"/><text x="81.9759%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (13 samples, 0.07%)</title><rect x="81.7259%" y="629" width="0.0738%" height="15" fill="rgb(254,18,36)" fg:x="14405" fg:w="13"/><text x="81.9759%" y="639.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (2 samples, 0.01%)</title><rect x="81.8053%" y="597" width="0.0113%" height="15" fill="rgb(221,127,11)" fg:x="14419" fg:w="2"/><text x="82.0553%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (45 samples, 0.26%)</title><rect x="81.7259%" y="693" width="0.2553%" height="15" fill="rgb(234,146,35)" fg:x="14405" fg:w="45"/><text x="81.9759%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.26%)</title><rect x="81.7259%" y="677" width="0.2553%" height="15" fill="rgb(254,201,37)" fg:x="14405" fg:w="45"/><text x="81.9759%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.26%)</title><rect x="81.7259%" y="661" width="0.2553%" height="15" fill="rgb(211,202,23)" fg:x="14405" fg:w="45"/><text x="81.9759%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.26%)</title><rect x="81.7259%" y="645" width="0.2553%" height="15" fill="rgb(237,91,2)" fg:x="14405" fg:w="45"/><text x="81.9759%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (32 samples, 0.18%)</title><rect x="81.7996%" y="629" width="0.1815%" height="15" fill="rgb(226,228,36)" fg:x="14418" fg:w="32"/><text x="82.0496%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (32 samples, 0.18%)</title><rect x="81.7996%" y="613" width="0.1815%" height="15" fill="rgb(213,63,50)" fg:x="14418" fg:w="32"/><text x="82.0496%" y="623.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (29 samples, 0.16%)</title><rect x="81.8166%" y="597" width="0.1645%" height="15" fill="rgb(235,194,19)" fg:x="14421" fg:w="29"/><text x="82.0666%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.16%)</title><rect x="81.8166%" y="581" width="0.1645%" height="15" fill="rgb(207,204,18)" fg:x="14421" fg:w="29"/><text x="82.0666%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.16%)</title><rect x="81.8166%" y="565" width="0.1645%" height="15" fill="rgb(248,8,7)" fg:x="14421" fg:w="29"/><text x="82.0666%" y="575.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.16%)</title><rect x="81.8166%" y="549" width="0.1645%" height="15" fill="rgb(223,145,47)" fg:x="14421" fg:w="29"/><text x="82.0666%" y="559.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.16%)</title><rect x="81.8166%" y="533" width="0.1645%" height="15" fill="rgb(228,84,11)" fg:x="14421" fg:w="29"/><text x="82.0666%" y="543.50"></text></g><g><title>_int_malloc (28 samples, 0.16%)</title><rect x="81.8223%" y="517" width="0.1589%" height="15" fill="rgb(218,76,45)" fg:x="14422" fg:w="28"/><text x="82.0723%" y="527.50"></text></g><g><title>malloc_consolidate (17 samples, 0.10%)</title><rect x="81.8847%" y="501" width="0.0964%" height="15" fill="rgb(223,80,15)" fg:x="14433" fg:w="17"/><text x="82.1347%" y="511.50"></text></g><g><title>neuralang::main (12,266 samples, 69.59%)</title><rect x="12.4021%" y="853" width="69.5904%" height="15" fill="rgb(219,218,33)" fg:x="2186" fg:w="12266"/><text x="12.6521%" y="863.50">neuralang::main</text></g><g><title>ggez::event::run (12,176 samples, 69.08%)</title><rect x="12.9127%" y="837" width="69.0798%" height="15" fill="rgb(208,51,11)" fg:x="2276" fg:w="12176"/><text x="13.1627%" y="847.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (12,176 samples, 69.08%)</title><rect x="12.9127%" y="821" width="69.0798%" height="15" fill="rgb(229,165,39)" fg:x="2276" fg:w="12176"/><text x="13.1627%" y="831.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (12,176 samples, 69.08%)</title><rect x="12.9127%" y="805" width="69.0798%" height="15" fill="rgb(241,100,24)" fg:x="2276" fg:w="12176"/><text x="13.1627%" y="815.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (12,176 samples, 69.08%)</title><rect x="12.9127%" y="789" width="69.0798%" height="15" fill="rgb(228,14,23)" fg:x="2276" fg:w="12176"/><text x="13.1627%" y="799.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (12,176 samples, 69.08%)</title><rect x="12.9127%" y="773" width="69.0798%" height="15" fill="rgb(247,116,52)" fg:x="2276" fg:w="12176"/><text x="13.1627%" y="783.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (12,139 samples, 68.87%)</title><rect x="13.1227%" y="757" width="68.8699%" height="15" fill="rgb(216,149,33)" fg:x="2313" fg:w="12139"/><text x="13.3727%" y="767.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (12,086 samples, 68.57%)</title><rect x="13.4234%" y="741" width="68.5692%" height="15" fill="rgb(238,142,29)" fg:x="2366" fg:w="12086"/><text x="13.6734%" y="751.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (12,086 samples, 68.57%)</title><rect x="13.4234%" y="725" width="68.5692%" height="15" fill="rgb(224,83,40)" fg:x="2366" fg:w="12086"/><text x="13.6734%" y="735.50">ggez::event::run::{{closure}}</text></g><g><title>ggez::input::keyboard::KeyboardContext::save_keyboard_state (47 samples, 0.27%)</title><rect x="81.7259%" y="709" width="0.2667%" height="15" fill="rgb(234,165,11)" fg:x="14405" fg:w="47"/><text x="81.9759%" y="719.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (2 samples, 0.01%)</title><rect x="81.9982%" y="693" width="0.0113%" height="15" fill="rgb(215,96,23)" fg:x="14453" fg:w="2"/><text x="82.2482%" y="703.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (2 samples, 0.01%)</title><rect x="81.9982%" y="677" width="0.0113%" height="15" fill="rgb(233,179,26)" fg:x="14453" fg:w="2"/><text x="82.2482%" y="687.50"></text></g><g><title>XCheckIfEvent (2 samples, 0.01%)</title><rect x="81.9982%" y="661" width="0.0113%" height="15" fill="rgb(225,129,33)" fg:x="14453" fg:w="2"/><text x="82.2482%" y="671.50"></text></g><g><title>std::rt::lang_start::{{closure}} (9 samples, 0.05%)</title><rect x="81.9982%" y="853" width="0.0511%" height="15" fill="rgb(237,49,13)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="863.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (9 samples, 0.05%)</title><rect x="81.9982%" y="837" width="0.0511%" height="15" fill="rgb(211,3,31)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.05%)</title><rect x="81.9982%" y="821" width="0.0511%" height="15" fill="rgb(216,152,19)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="831.50"></text></g><g><title>neuralang::main (9 samples, 0.05%)</title><rect x="81.9982%" y="805" width="0.0511%" height="15" fill="rgb(251,121,35)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="815.50"></text></g><g><title>ggez::event::run (9 samples, 0.05%)</title><rect x="81.9982%" y="789" width="0.0511%" height="15" fill="rgb(210,217,47)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="799.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (9 samples, 0.05%)</title><rect x="81.9982%" y="773" width="0.0511%" height="15" fill="rgb(244,116,22)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="783.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (9 samples, 0.05%)</title><rect x="81.9982%" y="757" width="0.0511%" height="15" fill="rgb(228,17,21)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="767.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (9 samples, 0.05%)</title><rect x="81.9982%" y="741" width="0.0511%" height="15" fill="rgb(240,149,34)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="751.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (9 samples, 0.05%)</title><rect x="81.9982%" y="725" width="0.0511%" height="15" fill="rgb(208,125,47)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="735.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (9 samples, 0.05%)</title><rect x="81.9982%" y="709" width="0.0511%" height="15" fill="rgb(249,186,39)" fg:x="14453" fg:w="9"/><text x="82.2482%" y="719.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (7 samples, 0.04%)</title><rect x="82.0095%" y="693" width="0.0397%" height="15" fill="rgb(240,220,33)" fg:x="14455" fg:w="7"/><text x="82.2595%" y="703.50"></text></g><g><title>ggez::event::run::{{closure}} (6 samples, 0.03%)</title><rect x="82.0152%" y="677" width="0.0340%" height="15" fill="rgb(243,110,23)" fg:x="14456" fg:w="6"/><text x="82.2652%" y="687.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (3 samples, 0.02%)</title><rect x="82.0663%" y="549" width="0.0170%" height="15" fill="rgb(219,163,46)" fg:x="14465" fg:w="3"/><text x="82.3163%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (4 samples, 0.02%)</title><rect x="82.0833%" y="549" width="0.0227%" height="15" fill="rgb(216,126,30)" fg:x="14468" fg:w="4"/><text x="82.3333%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (4 samples, 0.02%)</title><rect x="82.0833%" y="533" width="0.0227%" height="15" fill="rgb(208,139,11)" fg:x="14468" fg:w="4"/><text x="82.3333%" y="543.50"></text></g><g><title>XCheckIfEvent (4 samples, 0.02%)</title><rect x="82.0833%" y="517" width="0.0227%" height="15" fill="rgb(213,118,36)" fg:x="14468" fg:w="4"/><text x="82.3333%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (16 samples, 0.09%)</title><rect x="82.0549%" y="565" width="0.0908%" height="15" fill="rgb(226,43,17)" fg:x="14463" fg:w="16"/><text x="82.3049%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::PeekableReceiver&lt;T&gt;::try_recv (7 samples, 0.04%)</title><rect x="82.1060%" y="549" width="0.0397%" height="15" fill="rgb(254,217,4)" fg:x="14472" fg:w="7"/><text x="82.3560%" y="559.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (6 samples, 0.03%)</title><rect x="82.1117%" y="533" width="0.0340%" height="15" fill="rgb(210,134,47)" fg:x="14473" fg:w="6"/><text x="82.3617%" y="543.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (6 samples, 0.03%)</title><rect x="82.1117%" y="517" width="0.0340%" height="15" fill="rgb(237,24,49)" fg:x="14473" fg:w="6"/><text x="82.3617%" y="527.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (6 samples, 0.03%)</title><rect x="82.1117%" y="501" width="0.0340%" height="15" fill="rgb(251,39,46)" fg:x="14473" fg:w="6"/><text x="82.3617%" y="511.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (6 samples, 0.03%)</title><rect x="82.1117%" y="485" width="0.0340%" height="15" fill="rgb(251,220,3)" fg:x="14473" fg:w="6"/><text x="82.3617%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="82.1230%" y="469" width="0.0227%" height="15" fill="rgb(228,105,12)" fg:x="14475" fg:w="4"/><text x="82.3730%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="82.1230%" y="453" width="0.0227%" height="15" fill="rgb(215,196,1)" fg:x="14475" fg:w="4"/><text x="82.3730%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.02%)</title><rect x="82.1457%" y="453" width="0.0170%" height="15" fill="rgb(214,33,39)" fg:x="14479" fg:w="3"/><text x="82.3957%" y="463.50"></text></g><g><title>[libX11.so.6.4.0] (35 samples, 0.20%)</title><rect x="82.1457%" y="501" width="0.1986%" height="15" fill="rgb(220,19,52)" fg:x="14479" fg:w="35"/><text x="82.3957%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.20%)</title><rect x="82.1457%" y="485" width="0.1986%" height="15" fill="rgb(221,78,38)" fg:x="14479" fg:w="35"/><text x="82.3957%" y="495.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.20%)</title><rect x="82.1457%" y="469" width="0.1986%" height="15" fill="rgb(253,30,16)" fg:x="14479" fg:w="35"/><text x="82.3957%" y="479.50"></text></g><g><title>__libc_recvmsg (32 samples, 0.18%)</title><rect x="82.1627%" y="453" width="0.1815%" height="15" fill="rgb(242,65,0)" fg:x="14482" fg:w="32"/><text x="82.4127%" y="463.50"></text></g><g><title>__recvmsg_syscall (32 samples, 0.18%)</title><rect x="82.1627%" y="437" width="0.1815%" height="15" fill="rgb(235,201,12)" fg:x="14482" fg:w="32"/><text x="82.4127%" y="447.50"></text></g><g><title>[unknown] (32 samples, 0.18%)</title><rect x="82.1627%" y="421" width="0.1815%" height="15" fill="rgb(233,161,9)" fg:x="14482" fg:w="32"/><text x="82.4127%" y="431.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="82.1968%" y="405" width="0.1475%" height="15" fill="rgb(241,207,41)" fg:x="14488" fg:w="26"/><text x="82.4468%" y="415.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="82.1968%" y="389" width="0.1475%" height="15" fill="rgb(212,69,46)" fg:x="14488" fg:w="26"/><text x="82.4468%" y="399.50"></text></g><g><title>[unknown] (22 samples, 0.12%)</title><rect x="82.2194%" y="373" width="0.1248%" height="15" fill="rgb(239,69,45)" fg:x="14492" fg:w="22"/><text x="82.4694%" y="383.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="82.2308%" y="357" width="0.1135%" height="15" fill="rgb(242,117,48)" fg:x="14494" fg:w="20"/><text x="82.4808%" y="367.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="82.2421%" y="341" width="0.1021%" height="15" fill="rgb(228,41,36)" fg:x="14496" fg:w="18"/><text x="82.4921%" y="351.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="82.2535%" y="325" width="0.0908%" height="15" fill="rgb(212,3,32)" fg:x="14498" fg:w="16"/><text x="82.5035%" y="335.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="82.2819%" y="309" width="0.0624%" height="15" fill="rgb(233,41,49)" fg:x="14503" fg:w="11"/><text x="82.5319%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="82.3102%" y="293" width="0.0340%" height="15" fill="rgb(252,170,49)" fg:x="14508" fg:w="6"/><text x="82.5602%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.3329%" y="277" width="0.0113%" height="15" fill="rgb(229,53,26)" fg:x="14512" fg:w="2"/><text x="82.5829%" y="287.50"></text></g><g><title>std::rt::lang_start_internal (58 samples, 0.33%)</title><rect x="82.0492%" y="853" width="0.3291%" height="15" fill="rgb(217,157,12)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="863.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.33%)</title><rect x="82.0492%" y="837" width="0.3291%" height="15" fill="rgb(227,17,9)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="847.50"></text></g><g><title>std::panicking::try (58 samples, 0.33%)</title><rect x="82.0492%" y="821" width="0.3291%" height="15" fill="rgb(218,84,12)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="831.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.33%)</title><rect x="82.0492%" y="805" width="0.3291%" height="15" fill="rgb(212,79,24)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="815.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (58 samples, 0.33%)</title><rect x="82.0492%" y="789" width="0.3291%" height="15" fill="rgb(217,222,37)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="799.50"></text></g><g><title>std::panic::catch_unwind (58 samples, 0.33%)</title><rect x="82.0492%" y="773" width="0.3291%" height="15" fill="rgb(246,208,8)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="783.50"></text></g><g><title>std::panicking::try (58 samples, 0.33%)</title><rect x="82.0492%" y="757" width="0.3291%" height="15" fill="rgb(244,133,10)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="767.50"></text></g><g><title>std::panicking::try::do_call (58 samples, 0.33%)</title><rect x="82.0492%" y="741" width="0.3291%" height="15" fill="rgb(209,219,41)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (58 samples, 0.33%)</title><rect x="82.0492%" y="725" width="0.3291%" height="15" fill="rgb(253,175,45)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="735.50"></text></g><g><title>std::rt::lang_start::{{closure}} (58 samples, 0.33%)</title><rect x="82.0492%" y="709" width="0.3291%" height="15" fill="rgb(235,100,37)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="719.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (58 samples, 0.33%)</title><rect x="82.0492%" y="693" width="0.3291%" height="15" fill="rgb(225,87,19)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (58 samples, 0.33%)</title><rect x="82.0492%" y="677" width="0.3291%" height="15" fill="rgb(217,152,17)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="687.50"></text></g><g><title>neuralang::main (58 samples, 0.33%)</title><rect x="82.0492%" y="661" width="0.3291%" height="15" fill="rgb(235,72,13)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="671.50"></text></g><g><title>ggez::event::run (58 samples, 0.33%)</title><rect x="82.0492%" y="645" width="0.3291%" height="15" fill="rgb(233,140,18)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="655.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (58 samples, 0.33%)</title><rect x="82.0492%" y="629" width="0.3291%" height="15" fill="rgb(207,212,28)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="639.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (58 samples, 0.33%)</title><rect x="82.0492%" y="613" width="0.3291%" height="15" fill="rgb(220,130,25)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="623.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (58 samples, 0.33%)</title><rect x="82.0492%" y="597" width="0.3291%" height="15" fill="rgb(205,55,34)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="607.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (58 samples, 0.33%)</title><rect x="82.0492%" y="581" width="0.3291%" height="15" fill="rgb(237,54,35)" fg:x="14462" fg:w="58"/><text x="82.2992%" y="591.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (41 samples, 0.23%)</title><rect x="82.1457%" y="565" width="0.2326%" height="15" fill="rgb(208,67,23)" fg:x="14479" fg:w="41"/><text x="82.3957%" y="575.50"></text></g><g><title>XPending (41 samples, 0.23%)</title><rect x="82.1457%" y="549" width="0.2326%" height="15" fill="rgb(206,207,50)" fg:x="14479" fg:w="41"/><text x="82.3957%" y="559.50"></text></g><g><title>_XEventsQueued (41 samples, 0.23%)</title><rect x="82.1457%" y="533" width="0.2326%" height="15" fill="rgb(213,211,42)" fg:x="14479" fg:w="41"/><text x="82.3957%" y="543.50"></text></g><g><title>[libX11.so.6.4.0] (41 samples, 0.23%)</title><rect x="82.1457%" y="517" width="0.2326%" height="15" fill="rgb(252,197,50)" fg:x="14479" fg:w="41"/><text x="82.3957%" y="527.50"></text></g><g><title>xcb_poll_for_reply64 (6 samples, 0.03%)</title><rect x="82.3443%" y="501" width="0.0340%" height="15" fill="rgb(251,211,41)" fg:x="14514" fg:w="6"/><text x="82.5943%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.03%)</title><rect x="82.3443%" y="485" width="0.0340%" height="15" fill="rgb(229,211,5)" fg:x="14514" fg:w="6"/><text x="82.5943%" y="495.50"></text></g><g><title>__libc_recvmsg (6 samples, 0.03%)</title><rect x="82.3443%" y="469" width="0.0340%" height="15" fill="rgb(239,36,31)" fg:x="14514" fg:w="6"/><text x="82.5943%" y="479.50"></text></g><g><title>__recvmsg_syscall (6 samples, 0.03%)</title><rect x="82.3443%" y="453" width="0.0340%" height="15" fill="rgb(248,67,31)" fg:x="14514" fg:w="6"/><text x="82.5943%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="82.3443%" y="437" width="0.0340%" height="15" fill="rgb(249,55,44)" fg:x="14514" fg:w="6"/><text x="82.5943%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="82.3556%" y="421" width="0.0227%" height="15" fill="rgb(216,82,12)" fg:x="14516" fg:w="4"/><text x="82.6056%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="82.3556%" y="405" width="0.0227%" height="15" fill="rgb(242,174,1)" fg:x="14516" fg:w="4"/><text x="82.6056%" y="415.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (4 samples, 0.02%)</title><rect x="82.3783%" y="853" width="0.0227%" height="15" fill="rgb(208,120,29)" fg:x="14520" fg:w="4"/><text x="82.6283%" y="863.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="82.4180%" y="853" width="0.0227%" height="15" fill="rgb(221,105,43)" fg:x="14527" fg:w="4"/><text x="82.6680%" y="863.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="82.4180%" y="837" width="0.0227%" height="15" fill="rgb(234,124,22)" fg:x="14527" fg:w="4"/><text x="82.6680%" y="847.50"></text></g><g><title>wgpu::Device::create_command_encoder (3 samples, 0.02%)</title><rect x="82.4407%" y="853" width="0.0170%" height="15" fill="rgb(212,23,30)" fg:x="14531" fg:w="3"/><text x="82.6907%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="677" width="0.0113%" height="15" fill="rgb(219,122,53)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="661" width="0.0113%" height="15" fill="rgb(248,84,24)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="645" width="0.0113%" height="15" fill="rgb(245,115,18)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="629" width="0.0113%" height="15" fill="rgb(227,176,51)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="613" width="0.0113%" height="15" fill="rgb(229,63,42)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="597" width="0.0113%" height="15" fill="rgb(247,202,24)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="581" width="0.0113%" height="15" fill="rgb(244,173,20)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="82.4577%" y="565" width="0.0113%" height="15" fill="rgb(242,81,47)" fg:x="14534" fg:w="2"/><text x="82.7077%" y="575.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (3 samples, 0.02%)</title><rect x="82.4577%" y="709" width="0.0170%" height="15" fill="rgb(231,185,54)" fg:x="14534" fg:w="3"/><text x="82.7077%" y="719.50"></text></g><g><title>[libvulkan.so.1.3.204] (3 samples, 0.02%)</title><rect x="82.4577%" y="693" width="0.0170%" height="15" fill="rgb(243,55,32)" fg:x="14534" fg:w="3"/><text x="82.7077%" y="703.50"></text></g><g><title>ash::entry::Entry::create_instance (4 samples, 0.02%)</title><rect x="82.4577%" y="757" width="0.0227%" height="15" fill="rgb(208,167,19)" fg:x="14534" fg:w="4"/><text x="82.7077%" y="767.50"></text></g><g><title>vkCreateInstance (4 samples, 0.02%)</title><rect x="82.4577%" y="741" width="0.0227%" height="15" fill="rgb(231,72,35)" fg:x="14534" fg:w="4"/><text x="82.7077%" y="751.50"></text></g><g><title>[libvulkan.so.1.3.204] (4 samples, 0.02%)</title><rect x="82.4577%" y="725" width="0.0227%" height="15" fill="rgb(250,173,51)" fg:x="14534" fg:w="4"/><text x="82.7077%" y="735.50"></text></g><g><title>_dl_map_object_deps (2 samples, 0.01%)</title><rect x="82.4804%" y="469" width="0.0113%" height="15" fill="rgb(209,5,22)" fg:x="14538" fg:w="2"/><text x="82.7304%" y="479.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.01%)</title><rect x="82.4804%" y="453" width="0.0113%" height="15" fill="rgb(250,174,19)" fg:x="14538" fg:w="2"/><text x="82.7304%" y="463.50"></text></g><g><title>openaux (2 samples, 0.01%)</title><rect x="82.4804%" y="437" width="0.0113%" height="15" fill="rgb(217,3,49)" fg:x="14538" fg:w="2"/><text x="82.7304%" y="447.50"></text></g><g><title>_dl_map_object (2 samples, 0.01%)</title><rect x="82.4804%" y="421" width="0.0113%" height="15" fill="rgb(218,225,5)" fg:x="14538" fg:w="2"/><text x="82.7304%" y="431.50"></text></g><g><title>elf_machine_rela (3 samples, 0.02%)</title><rect x="82.4974%" y="437" width="0.0170%" height="15" fill="rgb(236,89,11)" fg:x="14541" fg:w="3"/><text x="82.7474%" y="447.50"></text></g><g><title>_dl_lookup_symbol_x (2 samples, 0.01%)</title><rect x="82.5031%" y="421" width="0.0113%" height="15" fill="rgb(206,33,28)" fg:x="14542" fg:w="2"/><text x="82.7531%" y="431.50"></text></g><g><title>__GI__dl_catch_exception (11 samples, 0.06%)</title><rect x="82.4804%" y="501" width="0.0624%" height="15" fill="rgb(241,56,42)" fg:x="14538" fg:w="11"/><text x="82.7304%" y="511.50"></text></g><g><title>dl_open_worker_begin (11 samples, 0.06%)</title><rect x="82.4804%" y="485" width="0.0624%" height="15" fill="rgb(222,44,11)" fg:x="14538" fg:w="11"/><text x="82.7304%" y="495.50"></text></g><g><title>_dl_relocate_object (9 samples, 0.05%)</title><rect x="82.4918%" y="469" width="0.0511%" height="15" fill="rgb(234,111,20)" fg:x="14540" fg:w="9"/><text x="82.7418%" y="479.50"></text></g><g><title>elf_dynamic_do_Rela (9 samples, 0.05%)</title><rect x="82.4918%" y="453" width="0.0511%" height="15" fill="rgb(237,77,6)" fg:x="14540" fg:w="9"/><text x="82.7418%" y="463.50"></text></g><g><title>elf_machine_rela_relative (5 samples, 0.03%)</title><rect x="82.5145%" y="437" width="0.0284%" height="15" fill="rgb(235,111,23)" fg:x="14544" fg:w="5"/><text x="82.7645%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="82.5145%" y="421" width="0.0284%" height="15" fill="rgb(251,135,29)" fg:x="14544" fg:w="5"/><text x="82.7645%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="82.5201%" y="405" width="0.0227%" height="15" fill="rgb(217,57,1)" fg:x="14545" fg:w="4"/><text x="82.7701%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="82.5201%" y="389" width="0.0227%" height="15" fill="rgb(249,119,31)" fg:x="14545" fg:w="4"/><text x="82.7701%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="82.5201%" y="373" width="0.0227%" height="15" fill="rgb(233,164,33)" fg:x="14545" fg:w="4"/><text x="82.7701%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.5315%" y="357" width="0.0113%" height="15" fill="rgb(250,217,43)" fg:x="14547" fg:w="2"/><text x="82.7815%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.5315%" y="341" width="0.0113%" height="15" fill="rgb(232,154,50)" fg:x="14547" fg:w="2"/><text x="82.7815%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.5315%" y="325" width="0.0113%" height="15" fill="rgb(227,190,8)" fg:x="14547" fg:w="2"/><text x="82.7815%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.5315%" y="309" width="0.0113%" height="15" fill="rgb(209,217,32)" fg:x="14547" fg:w="2"/><text x="82.7815%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.5315%" y="293" width="0.0113%" height="15" fill="rgb(243,203,50)" fg:x="14547" fg:w="2"/><text x="82.7815%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="82.5315%" y="277" width="0.0113%" height="15" fill="rgb(232,152,27)" fg:x="14547" fg:w="2"/><text x="82.7815%" y="287.50"></text></g><g><title>___dlopen (12 samples, 0.07%)</title><rect x="82.4804%" y="645" width="0.0681%" height="15" fill="rgb(240,34,29)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="655.50"></text></g><g><title>dlopen_implementation (12 samples, 0.07%)</title><rect x="82.4804%" y="629" width="0.0681%" height="15" fill="rgb(215,185,52)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="639.50"></text></g><g><title>_dlerror_run (12 samples, 0.07%)</title><rect x="82.4804%" y="613" width="0.0681%" height="15" fill="rgb(240,89,49)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="623.50"></text></g><g><title>__GI__dl_catch_error (12 samples, 0.07%)</title><rect x="82.4804%" y="597" width="0.0681%" height="15" fill="rgb(225,12,52)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="607.50"></text></g><g><title>__GI__dl_catch_exception (12 samples, 0.07%)</title><rect x="82.4804%" y="581" width="0.0681%" height="15" fill="rgb(239,128,45)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="591.50"></text></g><g><title>dlopen_doit (12 samples, 0.07%)</title><rect x="82.4804%" y="565" width="0.0681%" height="15" fill="rgb(211,78,47)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="575.50"></text></g><g><title>_dl_open (12 samples, 0.07%)</title><rect x="82.4804%" y="549" width="0.0681%" height="15" fill="rgb(232,31,21)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="559.50"></text></g><g><title>__GI__dl_catch_exception (12 samples, 0.07%)</title><rect x="82.4804%" y="533" width="0.0681%" height="15" fill="rgb(222,168,14)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="543.50"></text></g><g><title>dl_open_worker (12 samples, 0.07%)</title><rect x="82.4804%" y="517" width="0.0681%" height="15" fill="rgb(209,128,24)" fg:x="14538" fg:w="12"/><text x="82.7304%" y="527.50"></text></g><g><title>wgpu::Instance::new (17 samples, 0.10%)</title><rect x="82.4577%" y="853" width="0.0964%" height="15" fill="rgb(249,35,13)" fg:x="14534" fg:w="17"/><text x="82.7077%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (17 samples, 0.10%)</title><rect x="82.4577%" y="837" width="0.0964%" height="15" fill="rgb(218,7,2)" fg:x="14534" fg:w="17"/><text x="82.7077%" y="847.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (17 samples, 0.10%)</title><rect x="82.4577%" y="821" width="0.0964%" height="15" fill="rgb(238,107,27)" fg:x="14534" fg:w="17"/><text x="82.7077%" y="831.50"></text></g><g><title>wgpu_core::instance::Instance::new (17 samples, 0.10%)</title><rect x="82.4577%" y="805" width="0.0964%" height="15" fill="rgb(217,88,38)" fg:x="14534" fg:w="17"/><text x="82.7077%" y="815.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (17 samples, 0.10%)</title><rect x="82.4577%" y="789" width="0.0964%" height="15" fill="rgb(230,207,0)" fg:x="14534" fg:w="17"/><text x="82.7077%" y="799.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (17 samples, 0.10%)</title><rect x="82.4577%" y="773" width="0.0964%" height="15" fill="rgb(249,64,54)" fg:x="14534" fg:w="17"/><text x="82.7077%" y="783.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (13 samples, 0.07%)</title><rect x="82.4804%" y="757" width="0.0738%" height="15" fill="rgb(231,7,11)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="767.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (13 samples, 0.07%)</title><rect x="82.4804%" y="741" width="0.0738%" height="15" fill="rgb(205,149,21)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="751.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (13 samples, 0.07%)</title><rect x="82.4804%" y="725" width="0.0738%" height="15" fill="rgb(215,126,34)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="735.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (13 samples, 0.07%)</title><rect x="82.4804%" y="709" width="0.0738%" height="15" fill="rgb(241,132,45)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="719.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (13 samples, 0.07%)</title><rect x="82.4804%" y="693" width="0.0738%" height="15" fill="rgb(252,69,32)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.204] (13 samples, 0.07%)</title><rect x="82.4804%" y="677" width="0.0738%" height="15" fill="rgb(232,204,19)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (13 samples, 0.07%)</title><rect x="82.4804%" y="661" width="0.0738%" height="15" fill="rgb(249,15,47)" fg:x="14538" fg:w="13"/><text x="82.7304%" y="671.50"></text></g><g><title>wgpu::Queue::write_buffer (4 samples, 0.02%)</title><rect x="82.5599%" y="853" width="0.0227%" height="15" fill="rgb(209,227,23)" fg:x="14552" fg:w="4"/><text x="82.8099%" y="863.50"></text></g><g><title>wgpu::Surface::get_current_texture (2 samples, 0.01%)</title><rect x="82.5882%" y="853" width="0.0113%" height="15" fill="rgb(248,92,24)" fg:x="14557" fg:w="2"/><text x="82.8382%" y="863.50"></text></g><g><title>wgpu::Texture::create_view (3 samples, 0.02%)</title><rect x="82.5996%" y="853" width="0.0170%" height="15" fill="rgb(247,59,2)" fg:x="14559" fg:w="3"/><text x="82.8496%" y="863.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (3 samples, 0.02%)</title><rect x="82.6279%" y="853" width="0.0170%" height="15" fill="rgb(221,30,5)" fg:x="14564" fg:w="3"/><text x="82.8779%" y="863.50"></text></g><g><title>wgpu_core::command::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_finish (2 samples, 0.01%)</title><rect x="82.6450%" y="853" width="0.0113%" height="15" fill="rgb(208,108,53)" fg:x="14567" fg:w="2"/><text x="82.8950%" y="863.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.04%)</title><rect x="82.6620%" y="853" width="0.0397%" height="15" fill="rgb(211,183,26)" fg:x="14570" fg:w="7"/><text x="82.9120%" y="863.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (2 samples, 0.01%)</title><rect x="82.7074%" y="853" width="0.0113%" height="15" fill="rgb(232,132,4)" fg:x="14578" fg:w="2"/><text x="82.9574%" y="863.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::texture_create_view (5 samples, 0.03%)</title><rect x="82.7187%" y="853" width="0.0284%" height="15" fill="rgb(253,128,37)" fg:x="14580" fg:w="5"/><text x="82.9687%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (4 samples, 0.02%)</title><rect x="82.7528%" y="853" width="0.0227%" height="15" fill="rgb(221,58,24)" fg:x="14586" fg:w="4"/><text x="83.0028%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer_binding (4 samples, 0.02%)</title><rect x="82.7754%" y="853" width="0.0227%" height="15" fill="rgb(230,54,45)" fg:x="14590" fg:w="4"/><text x="83.0254%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (5 samples, 0.03%)</title><rect x="82.7981%" y="853" width="0.0284%" height="15" fill="rgb(254,21,18)" fg:x="14594" fg:w="5"/><text x="83.0481%" y="863.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (6 samples, 0.03%)</title><rect x="82.8322%" y="853" width="0.0340%" height="15" fill="rgb(221,108,0)" fg:x="14600" fg:w="6"/><text x="83.0822%" y="863.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (5 samples, 0.03%)</title><rect x="82.8379%" y="837" width="0.0284%" height="15" fill="rgb(206,95,1)" fg:x="14601" fg:w="5"/><text x="83.0879%" y="847.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (5 samples, 0.03%)</title><rect x="82.8379%" y="821" width="0.0284%" height="15" fill="rgb(237,52,5)" fg:x="14601" fg:w="5"/><text x="83.0879%" y="831.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (3 samples, 0.02%)</title><rect x="82.8662%" y="853" width="0.0170%" height="15" fill="rgb(218,150,34)" fg:x="14606" fg:w="3"/><text x="83.1162%" y="863.50"></text></g><g><title>wgpu_core::hub::FutureId&lt;I,T&gt;::assign (3 samples, 0.02%)</title><rect x="82.8889%" y="853" width="0.0170%" height="15" fill="rgb(235,194,28)" fg:x="14610" fg:w="3"/><text x="83.1389%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (13 samples, 0.07%)</title><rect x="82.9059%" y="853" width="0.0738%" height="15" fill="rgb(245,92,18)" fg:x="14613" fg:w="13"/><text x="83.1559%" y="863.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (2 samples, 0.01%)</title><rect x="82.9797%" y="853" width="0.0113%" height="15" fill="rgb(253,203,53)" fg:x="14626" fg:w="2"/><text x="83.2297%" y="863.50"></text></g><g><title>wgpu_core::hub::Token&lt;wgpu_core::hub::Root&gt;::root (5 samples, 0.03%)</title><rect x="82.9967%" y="853" width="0.0284%" height="15" fill="rgb(249,185,47)" fg:x="14629" fg:w="5"/><text x="83.2467%" y="863.50"></text></g><g><title>wgpu_core::init_tracker::buffer::&lt;impl wgpu_core::init_tracker::InitTracker&lt;u64&gt;&gt;::create_action (2 samples, 0.01%)</title><rect x="83.0251%" y="853" width="0.0113%" height="15" fill="rgb(252,194,52)" fg:x="14634" fg:w="2"/><text x="83.2751%" y="863.50"></text></g><g><title>wgpu_core::init_tracker::texture::TextureInitTracker::new (2 samples, 0.01%)</title><rect x="83.0364%" y="853" width="0.0113%" height="15" fill="rgb(210,53,36)" fg:x="14636" fg:w="2"/><text x="83.2864%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.0591%" y="389" width="0.0113%" height="15" fill="rgb(237,37,25)" fg:x="14640" fg:w="2"/><text x="83.3091%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="83.0591%" y="405" width="0.0170%" height="15" fill="rgb(242,116,27)" fg:x="14640" fg:w="3"/><text x="83.3091%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="83.0591%" y="421" width="0.0227%" height="15" fill="rgb(213,185,26)" fg:x="14640" fg:w="4"/><text x="83.3091%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="83.0591%" y="453" width="0.0397%" height="15" fill="rgb(225,204,8)" fg:x="14640" fg:w="7"/><text x="83.3091%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="83.0591%" y="437" width="0.0397%" height="15" fill="rgb(254,111,37)" fg:x="14640" fg:w="7"/><text x="83.3091%" y="447.50"></text></g><g><title>__GI___ioctl (3 samples, 0.02%)</title><rect x="83.0818%" y="421" width="0.0170%" height="15" fill="rgb(242,35,9)" fg:x="14644" fg:w="3"/><text x="83.3318%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="83.0818%" y="405" width="0.0170%" height="15" fill="rgb(232,138,49)" fg:x="14644" fg:w="3"/><text x="83.3318%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.0875%" y="389" width="0.0113%" height="15" fill="rgb(247,56,4)" fg:x="14645" fg:w="2"/><text x="83.3375%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.0875%" y="373" width="0.0113%" height="15" fill="rgb(226,179,17)" fg:x="14645" fg:w="2"/><text x="83.3375%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.0875%" y="357" width="0.0113%" height="15" fill="rgb(216,163,45)" fg:x="14645" fg:w="2"/><text x="83.3375%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="83.0591%" y="485" width="0.0454%" height="15" fill="rgb(211,157,3)" fg:x="14640" fg:w="8"/><text x="83.3091%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (8 samples, 0.05%)</title><rect x="83.0591%" y="469" width="0.0454%" height="15" fill="rgb(234,44,20)" fg:x="14640" fg:w="8"/><text x="83.3091%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="83.0591%" y="501" width="0.0511%" height="15" fill="rgb(254,138,23)" fg:x="14640" fg:w="9"/><text x="83.3091%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.07%)</title><rect x="83.0591%" y="517" width="0.0681%" height="15" fill="rgb(206,119,39)" fg:x="14640" fg:w="12"/><text x="83.3091%" y="527.50"></text></g><g><title>__GI___ioctl (3 samples, 0.02%)</title><rect x="83.1102%" y="501" width="0.0170%" height="15" fill="rgb(231,105,52)" fg:x="14649" fg:w="3"/><text x="83.3602%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="83.1102%" y="485" width="0.0170%" height="15" fill="rgb(250,20,5)" fg:x="14649" fg:w="3"/><text x="83.3602%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="83.0591%" y="549" width="0.0851%" height="15" fill="rgb(215,198,30)" fg:x="14640" fg:w="15"/><text x="83.3091%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="83.0591%" y="533" width="0.0851%" height="15" fill="rgb(246,142,8)" fg:x="14640" fg:w="15"/><text x="83.3091%" y="543.50"></text></g><g><title>__GI___ioctl (3 samples, 0.02%)</title><rect x="83.1272%" y="517" width="0.0170%" height="15" fill="rgb(243,26,38)" fg:x="14652" fg:w="3"/><text x="83.3772%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="83.1272%" y="501" width="0.0170%" height="15" fill="rgb(205,133,28)" fg:x="14652" fg:w="3"/><text x="83.3772%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.11%)</title><rect x="83.0591%" y="597" width="0.1135%" height="15" fill="rgb(212,34,0)" fg:x="14640" fg:w="20"/><text x="83.3091%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.11%)</title><rect x="83.0591%" y="581" width="0.1135%" height="15" fill="rgb(251,226,22)" fg:x="14640" fg:w="20"/><text x="83.3091%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.11%)</title><rect x="83.0591%" y="565" width="0.1135%" height="15" fill="rgb(252,119,9)" fg:x="14640" fg:w="20"/><text x="83.3091%" y="575.50"></text></g><g><title>__GI___ioctl (5 samples, 0.03%)</title><rect x="83.1442%" y="549" width="0.0284%" height="15" fill="rgb(213,150,50)" fg:x="14655" fg:w="5"/><text x="83.3942%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="83.1442%" y="533" width="0.0284%" height="15" fill="rgb(212,24,39)" fg:x="14655" fg:w="5"/><text x="83.3942%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.1612%" y="517" width="0.0113%" height="15" fill="rgb(213,46,39)" fg:x="14658" fg:w="2"/><text x="83.4112%" y="527.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (27 samples, 0.15%)</title><rect x="83.0478%" y="853" width="0.1532%" height="15" fill="rgb(239,106,12)" fg:x="14638" fg:w="27"/><text x="83.2978%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (27 samples, 0.15%)</title><rect x="83.0478%" y="837" width="0.1532%" height="15" fill="rgb(249,229,21)" fg:x="14638" fg:w="27"/><text x="83.2978%" y="847.50"></text></g><g><title>ash::instance::Instance::create_device (27 samples, 0.15%)</title><rect x="83.0478%" y="821" width="0.1532%" height="15" fill="rgb(212,158,3)" fg:x="14638" fg:w="27"/><text x="83.2978%" y="831.50"></text></g><g><title>vkCreateDevice (27 samples, 0.15%)</title><rect x="83.0478%" y="805" width="0.1532%" height="15" fill="rgb(253,26,48)" fg:x="14638" fg:w="27"/><text x="83.2978%" y="815.50"></text></g><g><title>[libvulkan.so.1.3.204] (27 samples, 0.15%)</title><rect x="83.0478%" y="789" width="0.1532%" height="15" fill="rgb(238,178,20)" fg:x="14638" fg:w="27"/><text x="83.2978%" y="799.50"></text></g><g><title>[libvulkan.so.1.3.204] (27 samples, 0.15%)</title><rect x="83.0478%" y="773" width="0.1532%" height="15" fill="rgb(208,86,15)" fg:x="14638" fg:w="27"/><text x="83.2978%" y="783.50"></text></g><g><title>[libvulkan.so.1.3.204] (26 samples, 0.15%)</title><rect x="83.0534%" y="757" width="0.1475%" height="15" fill="rgb(239,42,53)" fg:x="14639" fg:w="26"/><text x="83.3034%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="741" width="0.1418%" height="15" fill="rgb(245,226,8)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="725" width="0.1418%" height="15" fill="rgb(216,176,32)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="709" width="0.1418%" height="15" fill="rgb(231,186,21)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="693" width="0.1418%" height="15" fill="rgb(205,95,49)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="677" width="0.1418%" height="15" fill="rgb(217,145,8)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="661" width="0.1418%" height="15" fill="rgb(239,144,48)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="645" width="0.1418%" height="15" fill="rgb(214,189,23)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="629" width="0.1418%" height="15" fill="rgb(229,157,17)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.14%)</title><rect x="83.0591%" y="613" width="0.1418%" height="15" fill="rgb(230,5,48)" fg:x="14640" fg:w="25"/><text x="83.3091%" y="623.50"></text></g><g><title>__GI___ioctl (5 samples, 0.03%)</title><rect x="83.1726%" y="597" width="0.0284%" height="15" fill="rgb(224,156,48)" fg:x="14660" fg:w="5"/><text x="83.4226%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="83.1726%" y="581" width="0.0284%" height="15" fill="rgb(223,14,29)" fg:x="14660" fg:w="5"/><text x="83.4226%" y="591.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (9 samples, 0.05%)</title><rect x="83.2010%" y="853" width="0.0511%" height="15" fill="rgb(229,96,36)" fg:x="14665" fg:w="9"/><text x="83.4510%" y="863.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="83.2407%" y="837" width="0.0113%" height="15" fill="rgb(231,102,53)" fg:x="14672" fg:w="2"/><text x="83.4907%" y="847.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (2 samples, 0.01%)</title><rect x="83.2520%" y="853" width="0.0113%" height="15" fill="rgb(210,77,38)" fg:x="14674" fg:w="2"/><text x="83.5020%" y="863.50"></text></g><g><title>wgpu_core::track::UsageScope&lt;A&gt;::new (3 samples, 0.02%)</title><rect x="83.2634%" y="853" width="0.0170%" height="15" fill="rgb(235,131,6)" fg:x="14676" fg:w="3"/><text x="83.5134%" y="863.50"></text></g><g><title>wgpu_core::track::buffer::BufferTracker&lt;A&gt;::set_from_usage_scope (5 samples, 0.03%)</title><rect x="83.2804%" y="853" width="0.0284%" height="15" fill="rgb(252,55,38)" fg:x="14679" fg:w="5"/><text x="83.5304%" y="863.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::owned_indices (2 samples, 0.01%)</title><rect x="83.2974%" y="837" width="0.0113%" height="15" fill="rgb(246,38,14)" fg:x="14682" fg:w="2"/><text x="83.5474%" y="847.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::insert_single (2 samples, 0.01%)</title><rect x="83.3087%" y="853" width="0.0113%" height="15" fill="rgb(242,27,5)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="863.50"></text></g><g><title>wgpu_core::track::texture::insert (2 samples, 0.01%)</title><rect x="83.3087%" y="837" width="0.0113%" height="15" fill="rgb(228,65,35)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="847.50"></text></g><g><title>wgpu_core::track::metadata::ResourceMetadata&lt;A&gt;::insert (2 samples, 0.01%)</title><rect x="83.3087%" y="821" width="0.0113%" height="15" fill="rgb(245,93,11)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="83.3087%" y="805" width="0.0113%" height="15" fill="rgb(213,1,31)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="815.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.01%)</title><rect x="83.3087%" y="789" width="0.0113%" height="15" fill="rgb(237,205,14)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut::runtime (2 samples, 0.01%)</title><rect x="83.3087%" y="773" width="0.0113%" height="15" fill="rgb(232,118,45)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="783.50"></text></g><g><title>core::intrinsics::is_valid_allocation_size (2 samples, 0.01%)</title><rect x="83.3087%" y="757" width="0.0113%" height="15" fill="rgb(218,5,6)" fg:x="14684" fg:w="2"/><text x="83.5587%" y="767.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::end_encoding (4 samples, 0.02%)</title><rect x="83.3258%" y="853" width="0.0227%" height="15" fill="rgb(251,87,51)" fg:x="14687" fg:w="4"/><text x="83.5758%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::set_scissor_rect (2 samples, 0.01%)</title><rect x="83.3485%" y="853" width="0.0113%" height="15" fill="rgb(207,225,20)" fg:x="14691" fg:w="2"/><text x="83.5985%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::conv::&lt;impl wgpu_hal::ColorAttachment&lt;wgpu_hal::vulkan::Api&gt;&gt;::make_vk_clear_color (4 samples, 0.02%)</title><rect x="83.3655%" y="853" width="0.0227%" height="15" fill="rgb(222,78,54)" fg:x="14694" fg:w="4"/><text x="83.6155%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (3 samples, 0.02%)</title><rect x="83.3882%" y="853" width="0.0170%" height="15" fill="rgb(232,85,16)" fg:x="14698" fg:w="3"/><text x="83.6382%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (2 samples, 0.01%)</title><rect x="83.4052%" y="853" width="0.0113%" height="15" fill="rgb(244,25,33)" fg:x="14701" fg:w="2"/><text x="83.6552%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (6 samples, 0.03%)</title><rect x="83.4165%" y="853" width="0.0340%" height="15" fill="rgb(233,24,36)" fg:x="14703" fg:w="6"/><text x="83.6665%" y="863.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::cleanup (2 samples, 0.01%)</title><rect x="83.4506%" y="837" width="0.0113%" height="15" fill="rgb(253,49,54)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="847.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::cleanup (2 samples, 0.01%)</title><rect x="83.4506%" y="821" width="0.0113%" height="15" fill="rgb(245,12,22)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="83.4506%" y="805" width="0.0113%" height="15" fill="rgb(253,141,28)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="83.4506%" y="789" width="0.0113%" height="15" fill="rgb(225,207,27)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="83.4506%" y="773" width="0.0113%" height="15" fill="rgb(220,84,2)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.01%)</title><rect x="83.4506%" y="757" width="0.0113%" height="15" fill="rgb(224,37,37)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.01%)</title><rect x="83.4506%" y="741" width="0.0113%" height="15" fill="rgb(220,143,18)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="751.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::cleanup::{{closure}} (2 samples, 0.01%)</title><rect x="83.4506%" y="725" width="0.0113%" height="15" fill="rgb(210,88,33)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl gpu_alloc_types::device::MemoryDevice&lt;ash::vk::definitions::DeviceMemory&gt; for wgpu_hal::vulkan::DeviceShared&gt;::deallocate_memory (2 samples, 0.01%)</title><rect x="83.4506%" y="709" width="0.0113%" height="15" fill="rgb(219,87,51)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="719.50"></text></g><g><title>ash::device::Device::free_memory (2 samples, 0.01%)</title><rect x="83.4506%" y="693" width="0.0113%" height="15" fill="rgb(211,7,35)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="677" width="0.0113%" height="15" fill="rgb(232,77,2)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="661" width="0.0113%" height="15" fill="rgb(249,94,25)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="645" width="0.0113%" height="15" fill="rgb(215,112,2)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="629" width="0.0113%" height="15" fill="rgb(226,115,48)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="613" width="0.0113%" height="15" fill="rgb(249,196,10)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="597" width="0.0113%" height="15" fill="rgb(237,109,14)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="581" width="0.0113%" height="15" fill="rgb(217,103,53)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4506%" y="565" width="0.0113%" height="15" fill="rgb(244,137,9)" fg:x="14709" fg:w="2"/><text x="83.7006%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4619%" y="549" width="0.0113%" height="15" fill="rgb(227,201,3)" fg:x="14711" fg:w="2"/><text x="83.7119%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2 samples, 0.01%)</title><rect x="83.4619%" y="533" width="0.0113%" height="15" fill="rgb(243,94,6)" fg:x="14711" fg:w="2"/><text x="83.7119%" y="543.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="83.4619%" y="517" width="0.0113%" height="15" fill="rgb(235,118,5)" fg:x="14711" fg:w="2"/><text x="83.7119%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4619%" y="501" width="0.0113%" height="15" fill="rgb(247,10,30)" fg:x="14711" fg:w="2"/><text x="83.7119%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="83.4619%" y="565" width="0.0170%" height="15" fill="rgb(205,26,28)" fg:x="14711" fg:w="3"/><text x="83.7119%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="83.4619%" y="597" width="0.0227%" height="15" fill="rgb(206,99,35)" fg:x="14711" fg:w="4"/><text x="83.7119%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (4 samples, 0.02%)</title><rect x="83.4619%" y="581" width="0.0227%" height="15" fill="rgb(238,130,40)" fg:x="14711" fg:w="4"/><text x="83.7119%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="83.4619%" y="629" width="0.0340%" height="15" fill="rgb(224,126,31)" fg:x="14711" fg:w="6"/><text x="83.7119%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (6 samples, 0.03%)</title><rect x="83.4619%" y="613" width="0.0340%" height="15" fill="rgb(254,105,17)" fg:x="14711" fg:w="6"/><text x="83.7119%" y="623.50"></text></g><g><title>__GI___ioctl (2 samples, 0.01%)</title><rect x="83.4846%" y="597" width="0.0113%" height="15" fill="rgb(216,87,36)" fg:x="14715" fg:w="2"/><text x="83.7346%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="83.4846%" y="581" width="0.0113%" height="15" fill="rgb(240,21,12)" fg:x="14715" fg:w="2"/><text x="83.7346%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (7 samples, 0.04%)</title><rect x="83.4619%" y="645" width="0.0397%" height="15" fill="rgb(245,192,34)" fg:x="14711" fg:w="7"/><text x="83.7119%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="83.4619%" y="693" width="0.0511%" height="15" fill="rgb(226,100,49)" fg:x="14711" fg:w="9"/><text x="83.7119%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="83.4619%" y="677" width="0.0511%" height="15" fill="rgb(245,188,27)" fg:x="14711" fg:w="9"/><text x="83.7119%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.05%)</title><rect x="83.4619%" y="661" width="0.0511%" height="15" fill="rgb(212,170,8)" fg:x="14711" fg:w="9"/><text x="83.7119%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::exit (12 samples, 0.07%)</title><rect x="83.4506%" y="853" width="0.0681%" height="15" fill="rgb(217,113,29)" fg:x="14709" fg:w="12"/><text x="83.7006%" y="863.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::free_resources (10 samples, 0.06%)</title><rect x="83.4619%" y="837" width="0.0567%" height="15" fill="rgb(237,30,3)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="847.50"></text></g><g><title>ash::device::Device::destroy_device (10 samples, 0.06%)</title><rect x="83.4619%" y="821" width="0.0567%" height="15" fill="rgb(227,19,28)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="831.50"></text></g><g><title>vkDestroyDevice (10 samples, 0.06%)</title><rect x="83.4619%" y="805" width="0.0567%" height="15" fill="rgb(239,172,45)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (10 samples, 0.06%)</title><rect x="83.4619%" y="789" width="0.0567%" height="15" fill="rgb(254,55,39)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="83.4619%" y="773" width="0.0567%" height="15" fill="rgb(249,208,12)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="83.4619%" y="757" width="0.0567%" height="15" fill="rgb(240,52,13)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="83.4619%" y="741" width="0.0567%" height="15" fill="rgb(252,149,13)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="83.4619%" y="725" width="0.0567%" height="15" fill="rgb(232,81,48)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.06%)</title><rect x="83.4619%" y="709" width="0.0567%" height="15" fill="rgb(222,144,2)" fg:x="14711" fg:w="10"/><text x="83.7119%" y="719.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (4 samples, 0.02%)</title><rect x="83.5300%" y="853" width="0.0227%" height="15" fill="rgb(216,81,32)" fg:x="14723" fg:w="4"/><text x="83.7800%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.02%)</title><rect x="83.5357%" y="837" width="0.0170%" height="15" fill="rgb(244,78,51)" fg:x="14724" fg:w="3"/><text x="83.7857%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (2 samples, 0.01%)</title><rect x="83.5584%" y="837" width="0.0113%" height="15" fill="rgb(217,66,21)" fg:x="14728" fg:w="2"/><text x="83.8084%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (2 samples, 0.01%)</title><rect x="83.5584%" y="821" width="0.0113%" height="15" fill="rgb(247,101,42)" fg:x="14728" fg:w="2"/><text x="83.8084%" y="831.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.01%)</title><rect x="83.5754%" y="645" width="0.0113%" height="15" fill="rgb(227,81,39)" fg:x="14731" fg:w="2"/><text x="83.8254%" y="655.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (3 samples, 0.02%)</title><rect x="83.5867%" y="645" width="0.0170%" height="15" fill="rgb(220,223,44)" fg:x="14733" fg:w="3"/><text x="83.8367%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (3 samples, 0.02%)</title><rect x="83.5867%" y="629" width="0.0170%" height="15" fill="rgb(205,218,2)" fg:x="14733" fg:w="3"/><text x="83.8367%" y="639.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (12 samples, 0.07%)</title><rect x="83.5527%" y="853" width="0.0681%" height="15" fill="rgb(212,207,28)" fg:x="14727" fg:w="12"/><text x="83.8027%" y="863.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (9 samples, 0.05%)</title><rect x="83.5697%" y="837" width="0.0511%" height="15" fill="rgb(224,12,41)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="847.50"></text></g><g><title>ggez::event::run::{{closure}} (9 samples, 0.05%)</title><rect x="83.5697%" y="821" width="0.0511%" height="15" fill="rgb(216,118,12)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="831.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (9 samples, 0.05%)</title><rect x="83.5697%" y="805" width="0.0511%" height="15" fill="rgb(252,97,46)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="815.50"></text></g><g><title>core::mem::drop (9 samples, 0.05%)</title><rect x="83.5697%" y="789" width="0.0511%" height="15" fill="rgb(244,206,19)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (9 samples, 0.05%)</title><rect x="83.5697%" y="773" width="0.0511%" height="15" fill="rgb(231,84,31)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="783.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (9 samples, 0.05%)</title><rect x="83.5697%" y="757" width="0.0511%" height="15" fill="rgb(244,133,0)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="767.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (9 samples, 0.05%)</title><rect x="83.5697%" y="741" width="0.0511%" height="15" fill="rgb(223,15,50)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (9 samples, 0.05%)</title><rect x="83.5697%" y="725" width="0.0511%" height="15" fill="rgb(250,118,49)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="735.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (9 samples, 0.05%)</title><rect x="83.5697%" y="709" width="0.0511%" height="15" fill="rgb(248,25,38)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="719.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (9 samples, 0.05%)</title><rect x="83.5697%" y="693" width="0.0511%" height="15" fill="rgb(215,70,14)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="703.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (9 samples, 0.05%)</title><rect x="83.5697%" y="677" width="0.0511%" height="15" fill="rgb(215,28,15)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="687.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (9 samples, 0.05%)</title><rect x="83.5697%" y="661" width="0.0511%" height="15" fill="rgb(243,6,28)" fg:x="14730" fg:w="9"/><text x="83.8197%" y="671.50"></text></g><g><title>[unknown] (13,328 samples, 75.62%)</title><rect x="8.0222%" y="869" width="75.6156%" height="15" fill="rgb(222,130,1)" fg:x="1414" fg:w="13328"/><text x="8.2722%" y="879.50">[unknown]</text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (3 samples, 0.02%)</title><rect x="83.6208%" y="853" width="0.0170%" height="15" fill="rgb(236,166,44)" fg:x="14739" fg:w="3"/><text x="83.8708%" y="863.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (3 samples, 0.02%)</title><rect x="83.6208%" y="837" width="0.0170%" height="15" fill="rgb(221,108,14)" fg:x="14739" fg:w="3"/><text x="83.8708%" y="847.50"></text></g><g><title>[[vdso]] (2 samples, 0.01%)</title><rect x="84.0690%" y="725" width="0.0113%" height="15" fill="rgb(252,3,45)" fg:x="14818" fg:w="2"/><text x="84.3190%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.09%)</title><rect x="84.0123%" y="757" width="0.0851%" height="15" fill="rgb(237,68,30)" fg:x="14808" fg:w="15"/><text x="84.2623%" y="767.50"></text></g><g><title>__GI___clock_gettime (15 samples, 0.09%)</title><rect x="84.0123%" y="741" width="0.0851%" height="15" fill="rgb(211,79,22)" fg:x="14808" fg:w="15"/><text x="84.2623%" y="751.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="84.0803%" y="725" width="0.0170%" height="15" fill="rgb(252,185,21)" fg:x="14820" fg:w="3"/><text x="84.3303%" y="735.50"></text></g><g><title>___pthread_mutex_lock (6 samples, 0.03%)</title><rect x="84.0974%" y="757" width="0.0340%" height="15" fill="rgb(225,189,26)" fg:x="14823" fg:w="6"/><text x="84.3474%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (33 samples, 0.19%)</title><rect x="83.9612%" y="773" width="0.1872%" height="15" fill="rgb(241,30,40)" fg:x="14799" fg:w="33"/><text x="84.2112%" y="783.50"></text></g><g><title>__pthread_equal (3 samples, 0.02%)</title><rect x="84.1314%" y="757" width="0.0170%" height="15" fill="rgb(235,215,44)" fg:x="14829" fg:w="3"/><text x="84.3814%" y="767.50"></text></g><g><title>[[vdso]] (5 samples, 0.03%)</title><rect x="84.1825%" y="757" width="0.0284%" height="15" fill="rgb(205,8,29)" fg:x="14838" fg:w="5"/><text x="84.4325%" y="767.50"></text></g><g><title>__GI___clock_gettime (13 samples, 0.07%)</title><rect x="84.1484%" y="773" width="0.0738%" height="15" fill="rgb(241,137,42)" fg:x="14832" fg:w="13"/><text x="84.3984%" y="783.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="84.2108%" y="757" width="0.0113%" height="15" fill="rgb(237,155,2)" fg:x="14843" fg:w="2"/><text x="84.4608%" y="767.50"></text></g><g><title>[unknown] (157 samples, 0.89%)</title><rect x="84.2846%" y="693" width="0.8907%" height="15" fill="rgb(245,29,42)" fg:x="14856" fg:w="157"/><text x="84.5346%" y="703.50"></text></g><g><title>[unknown] (134 samples, 0.76%)</title><rect x="84.4151%" y="677" width="0.7602%" height="15" fill="rgb(234,101,35)" fg:x="14879" fg:w="134"/><text x="84.6651%" y="687.50"></text></g><g><title>[unknown] (131 samples, 0.74%)</title><rect x="84.4321%" y="661" width="0.7432%" height="15" fill="rgb(228,64,37)" fg:x="14882" fg:w="131"/><text x="84.6821%" y="671.50"></text></g><g><title>[unknown] (119 samples, 0.68%)</title><rect x="84.5002%" y="645" width="0.6751%" height="15" fill="rgb(217,214,36)" fg:x="14894" fg:w="119"/><text x="84.7502%" y="655.50"></text></g><g><title>[unknown] (112 samples, 0.64%)</title><rect x="84.5399%" y="629" width="0.6354%" height="15" fill="rgb(243,70,3)" fg:x="14901" fg:w="112"/><text x="84.7899%" y="639.50"></text></g><g><title>[unknown] (100 samples, 0.57%)</title><rect x="84.6080%" y="613" width="0.5673%" height="15" fill="rgb(253,158,52)" fg:x="14913" fg:w="100"/><text x="84.8580%" y="623.50"></text></g><g><title>[unknown] (90 samples, 0.51%)</title><rect x="84.6647%" y="597" width="0.5106%" height="15" fill="rgb(234,111,54)" fg:x="14923" fg:w="90"/><text x="84.9147%" y="607.50"></text></g><g><title>[unknown] (82 samples, 0.47%)</title><rect x="84.7101%" y="581" width="0.4652%" height="15" fill="rgb(217,70,32)" fg:x="14931" fg:w="82"/><text x="84.9601%" y="591.50"></text></g><g><title>[unknown] (76 samples, 0.43%)</title><rect x="84.7441%" y="565" width="0.4312%" height="15" fill="rgb(234,18,33)" fg:x="14937" fg:w="76"/><text x="84.9941%" y="575.50"></text></g><g><title>[unknown] (65 samples, 0.37%)</title><rect x="84.8065%" y="549" width="0.3688%" height="15" fill="rgb(234,12,49)" fg:x="14948" fg:w="65"/><text x="85.0565%" y="559.50"></text></g><g><title>[unknown] (48 samples, 0.27%)</title><rect x="84.9030%" y="533" width="0.2723%" height="15" fill="rgb(236,10,21)" fg:x="14965" fg:w="48"/><text x="85.1530%" y="543.50"></text></g><g><title>[unknown] (34 samples, 0.19%)</title><rect x="84.9824%" y="517" width="0.1929%" height="15" fill="rgb(248,182,45)" fg:x="14979" fg:w="34"/><text x="85.2324%" y="527.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="85.0278%" y="501" width="0.1475%" height="15" fill="rgb(217,95,36)" fg:x="14987" fg:w="26"/><text x="85.2778%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.1640%" y="485" width="0.0113%" height="15" fill="rgb(212,110,31)" fg:x="15011" fg:w="2"/><text x="85.4140%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.1640%" y="469" width="0.0113%" height="15" fill="rgb(206,32,53)" fg:x="15011" fg:w="2"/><text x="85.4140%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.1640%" y="453" width="0.0113%" height="15" fill="rgb(246,141,37)" fg:x="15011" fg:w="2"/><text x="85.4140%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="85.1640%" y="437" width="0.0113%" height="15" fill="rgb(219,16,7)" fg:x="15011" fg:w="2"/><text x="85.4140%" y="447.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (165 samples, 0.94%)</title><rect x="84.2505%" y="741" width="0.9361%" height="15" fill="rgb(230,205,45)" fg:x="14850" fg:w="165"/><text x="84.5005%" y="751.50"></text></g><g><title>__futex_abstimed_wait_common (164 samples, 0.93%)</title><rect x="84.2562%" y="725" width="0.9304%" height="15" fill="rgb(231,43,49)" fg:x="14851" fg:w="164"/><text x="84.5062%" y="735.50"></text></g><g><title>__futex_abstimed_wait_common64 (164 samples, 0.93%)</title><rect x="84.2562%" y="709" width="0.9304%" height="15" fill="rgb(212,106,34)" fg:x="14851" fg:w="164"/><text x="84.5062%" y="719.50"></text></g><g><title>___pthread_cond_timedwait64 (178 samples, 1.01%)</title><rect x="84.2222%" y="773" width="1.0099%" height="15" fill="rgb(206,83,17)" fg:x="14845" fg:w="178"/><text x="84.4722%" y="783.50"></text></g><g><title>__pthread_cond_wait_common (177 samples, 1.00%)</title><rect x="84.2278%" y="757" width="1.0042%" height="15" fill="rgb(244,154,49)" fg:x="14846" fg:w="177"/><text x="84.4778%" y="767.50"></text></g><g><title>__pthread_mutex_cond_lock (6 samples, 0.03%)</title><rect x="85.1980%" y="741" width="0.0340%" height="15" fill="rgb(244,149,49)" fg:x="15017" fg:w="6"/><text x="85.4480%" y="751.50"></text></g><g><title>___pthread_mutex_unlock (22 samples, 0.12%)</title><rect x="85.2320%" y="773" width="0.1248%" height="15" fill="rgb(227,134,18)" fg:x="15023" fg:w="22"/><text x="85.4820%" y="783.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (22 samples, 0.12%)</title><rect x="85.2320%" y="757" width="0.1248%" height="15" fill="rgb(237,116,36)" fg:x="15023" fg:w="22"/><text x="85.4820%" y="767.50"></text></g><g><title>lll_mutex_unlock_optimized (22 samples, 0.12%)</title><rect x="85.2320%" y="741" width="0.1248%" height="15" fill="rgb(205,129,40)" fg:x="15023" fg:w="22"/><text x="85.4820%" y="751.50"></text></g><g><title>__GI___lll_lock_wake (21 samples, 0.12%)</title><rect x="85.2377%" y="725" width="0.1191%" height="15" fill="rgb(236,178,4)" fg:x="15024" fg:w="21"/><text x="85.4877%" y="735.50"></text></g><g><title>[unknown] (21 samples, 0.12%)</title><rect x="85.2377%" y="709" width="0.1191%" height="15" fill="rgb(251,76,53)" fg:x="15024" fg:w="21"/><text x="85.4877%" y="719.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="85.2661%" y="693" width="0.0908%" height="15" fill="rgb(242,92,40)" fg:x="15029" fg:w="16"/><text x="85.5161%" y="703.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="85.2774%" y="677" width="0.0794%" height="15" fill="rgb(209,45,30)" fg:x="15031" fg:w="14"/><text x="85.5274%" y="687.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="85.3001%" y="661" width="0.0567%" height="15" fill="rgb(218,157,36)" fg:x="15035" fg:w="10"/><text x="85.5501%" y="671.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="85.3058%" y="645" width="0.0511%" height="15" fill="rgb(222,186,16)" fg:x="15036" fg:w="9"/><text x="85.5558%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="85.3398%" y="629" width="0.0170%" height="15" fill="rgb(254,72,35)" fg:x="15042" fg:w="3"/><text x="85.5898%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (280 samples, 1.59%)</title><rect x="83.8080%" y="789" width="1.5886%" height="15" fill="rgb(224,25,35)" fg:x="14772" fg:w="280"/><text x="84.0580%" y="799.50"></text></g><g><title>gettimeofday@plt (5 samples, 0.03%)</title><rect x="85.3682%" y="773" width="0.0284%" height="15" fill="rgb(206,135,52)" fg:x="15047" fg:w="5"/><text x="85.6182%" y="783.50"></text></g><g><title>__GI___close (135 samples, 0.77%)</title><rect x="85.3966%" y="789" width="0.7659%" height="15" fill="rgb(229,174,47)" fg:x="15052" fg:w="135"/><text x="85.6466%" y="799.50"></text></g><g><title>[unknown] (127 samples, 0.72%)</title><rect x="85.4420%" y="773" width="0.7205%" height="15" fill="rgb(242,184,21)" fg:x="15060" fg:w="127"/><text x="85.6920%" y="783.50"></text></g><g><title>[unknown] (120 samples, 0.68%)</title><rect x="85.4817%" y="757" width="0.6808%" height="15" fill="rgb(213,22,45)" fg:x="15067" fg:w="120"/><text x="85.7317%" y="767.50"></text></g><g><title>[unknown] (115 samples, 0.65%)</title><rect x="85.5100%" y="741" width="0.6524%" height="15" fill="rgb(237,81,54)" fg:x="15072" fg:w="115"/><text x="85.7600%" y="751.50"></text></g><g><title>[unknown] (99 samples, 0.56%)</title><rect x="85.6008%" y="725" width="0.5617%" height="15" fill="rgb(248,177,18)" fg:x="15088" fg:w="99"/><text x="85.8508%" y="735.50"></text></g><g><title>[unknown] (86 samples, 0.49%)</title><rect x="85.6746%" y="709" width="0.4879%" height="15" fill="rgb(254,31,16)" fg:x="15101" fg:w="86"/><text x="85.9246%" y="719.50"></text></g><g><title>[unknown] (76 samples, 0.43%)</title><rect x="85.7313%" y="693" width="0.4312%" height="15" fill="rgb(235,20,31)" fg:x="15111" fg:w="76"/><text x="85.9813%" y="703.50"></text></g><g><title>[unknown] (70 samples, 0.40%)</title><rect x="85.7653%" y="677" width="0.3971%" height="15" fill="rgb(240,56,43)" fg:x="15117" fg:w="70"/><text x="86.0153%" y="687.50"></text></g><g><title>[unknown] (70 samples, 0.40%)</title><rect x="85.7653%" y="661" width="0.3971%" height="15" fill="rgb(237,197,51)" fg:x="15117" fg:w="70"/><text x="86.0153%" y="671.50"></text></g><g><title>[unknown] (53 samples, 0.30%)</title><rect x="85.8618%" y="645" width="0.3007%" height="15" fill="rgb(241,162,44)" fg:x="15134" fg:w="53"/><text x="86.1118%" y="655.50"></text></g><g><title>[unknown] (32 samples, 0.18%)</title><rect x="85.9809%" y="629" width="0.1815%" height="15" fill="rgb(224,23,20)" fg:x="15155" fg:w="32"/><text x="86.2309%" y="639.50"></text></g><g><title>[unknown] (23 samples, 0.13%)</title><rect x="86.0320%" y="613" width="0.1305%" height="15" fill="rgb(250,109,34)" fg:x="15164" fg:w="23"/><text x="86.2820%" y="623.50"></text></g><g><title>[unknown] (20 samples, 0.11%)</title><rect x="86.0490%" y="597" width="0.1135%" height="15" fill="rgb(214,175,50)" fg:x="15167" fg:w="20"/><text x="86.2990%" y="607.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="86.0774%" y="581" width="0.0851%" height="15" fill="rgb(213,182,5)" fg:x="15172" fg:w="15"/><text x="86.3274%" y="591.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="86.0887%" y="565" width="0.0738%" height="15" fill="rgb(209,199,19)" fg:x="15174" fg:w="13"/><text x="86.3387%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="86.1001%" y="549" width="0.0624%" height="15" fill="rgb(236,224,42)" fg:x="15176" fg:w="11"/><text x="86.3501%" y="559.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="86.1114%" y="533" width="0.0511%" height="15" fill="rgb(246,226,29)" fg:x="15178" fg:w="9"/><text x="86.3614%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="86.1398%" y="517" width="0.0227%" height="15" fill="rgb(227,223,11)" fg:x="15183" fg:w="4"/><text x="86.3898%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="86.1455%" y="501" width="0.0170%" height="15" fill="rgb(219,7,51)" fg:x="15184" fg:w="3"/><text x="86.3955%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="86.1511%" y="485" width="0.0113%" height="15" fill="rgb(245,167,10)" fg:x="15185" fg:w="2"/><text x="86.4011%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="86.1511%" y="469" width="0.0113%" height="15" fill="rgb(237,224,16)" fg:x="15185" fg:w="2"/><text x="86.4011%" y="479.50"></text></g><g><title>[unknown] (854 samples, 4.85%)</title><rect x="86.1738%" y="757" width="4.8451%" height="15" fill="rgb(226,132,13)" fg:x="15189" fg:w="854"/><text x="86.4238%" y="767.50">[unkno..</text></g><g><title>[unknown] (833 samples, 4.73%)</title><rect x="86.2930%" y="741" width="4.7260%" height="15" fill="rgb(214,140,3)" fg:x="15210" fg:w="833"/><text x="86.5430%" y="751.50">[unkno..</text></g><g><title>[unknown] (828 samples, 4.70%)</title><rect x="86.3213%" y="725" width="4.6976%" height="15" fill="rgb(221,177,4)" fg:x="15215" fg:w="828"/><text x="86.5713%" y="735.50">[unkn..</text></g><g><title>[unknown] (821 samples, 4.66%)</title><rect x="86.3611%" y="709" width="4.6579%" height="15" fill="rgb(238,139,3)" fg:x="15222" fg:w="821"/><text x="86.6111%" y="719.50">[unkn..</text></g><g><title>[unknown] (816 samples, 4.63%)</title><rect x="86.3894%" y="693" width="4.6295%" height="15" fill="rgb(216,17,39)" fg:x="15227" fg:w="816"/><text x="86.6394%" y="703.50">[unkn..</text></g><g><title>[unknown] (801 samples, 4.54%)</title><rect x="86.4745%" y="677" width="4.5444%" height="15" fill="rgb(238,120,9)" fg:x="15242" fg:w="801"/><text x="86.7245%" y="687.50">[unkn..</text></g><g><title>[unknown] (791 samples, 4.49%)</title><rect x="86.5313%" y="661" width="4.4877%" height="15" fill="rgb(244,92,53)" fg:x="15252" fg:w="791"/><text x="86.7813%" y="671.50">[unkn..</text></g><g><title>[unknown] (779 samples, 4.42%)</title><rect x="86.5993%" y="645" width="4.4196%" height="15" fill="rgb(224,148,33)" fg:x="15264" fg:w="779"/><text x="86.8493%" y="655.50">[unkn..</text></g><g><title>[unknown] (769 samples, 4.36%)</title><rect x="86.6561%" y="629" width="4.3629%" height="15" fill="rgb(243,6,36)" fg:x="15274" fg:w="769"/><text x="86.9061%" y="639.50">[unkn..</text></g><g><title>[unknown] (629 samples, 3.57%)</title><rect x="87.4504%" y="613" width="3.5686%" height="15" fill="rgb(230,102,11)" fg:x="15414" fg:w="629"/><text x="87.7004%" y="623.50">[unk..</text></g><g><title>[unknown] (309 samples, 1.75%)</title><rect x="89.2659%" y="597" width="1.7531%" height="15" fill="rgb(234,148,36)" fg:x="15734" fg:w="309"/><text x="89.5159%" y="607.50"></text></g><g><title>[unknown] (219 samples, 1.24%)</title><rect x="89.7765%" y="581" width="1.2425%" height="15" fill="rgb(251,153,25)" fg:x="15824" fg:w="219"/><text x="90.0265%" y="591.50"></text></g><g><title>[unknown] (27 samples, 0.15%)</title><rect x="90.8658%" y="565" width="0.1532%" height="15" fill="rgb(215,129,8)" fg:x="16016" fg:w="27"/><text x="91.1158%" y="575.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="90.9338%" y="549" width="0.0851%" height="15" fill="rgb(224,128,35)" fg:x="16028" fg:w="15"/><text x="91.1838%" y="559.50"></text></g><g><title>__GI___libc_read (857 samples, 4.86%)</title><rect x="86.1625%" y="789" width="4.8621%" height="15" fill="rgb(237,56,52)" fg:x="15187" fg:w="857"/><text x="86.4125%" y="799.50">__GI__..</text></g><g><title>__GI___libc_read (857 samples, 4.86%)</title><rect x="86.1625%" y="773" width="4.8621%" height="15" fill="rgb(234,213,19)" fg:x="15187" fg:w="857"/><text x="86.4125%" y="783.50">__GI__..</text></g><g><title>[unknown] (273 samples, 1.55%)</title><rect x="91.0984%" y="757" width="1.5488%" height="15" fill="rgb(252,82,23)" fg:x="16057" fg:w="273"/><text x="91.3484%" y="767.50"></text></g><g><title>[unknown] (245 samples, 1.39%)</title><rect x="91.2572%" y="741" width="1.3900%" height="15" fill="rgb(254,201,21)" fg:x="16085" fg:w="245"/><text x="91.5072%" y="751.50"></text></g><g><title>[unknown] (237 samples, 1.34%)</title><rect x="91.3026%" y="725" width="1.3446%" height="15" fill="rgb(250,186,11)" fg:x="16093" fg:w="237"/><text x="91.5526%" y="735.50"></text></g><g><title>[unknown] (199 samples, 1.13%)</title><rect x="91.5182%" y="709" width="1.1290%" height="15" fill="rgb(211,174,5)" fg:x="16131" fg:w="199"/><text x="91.7682%" y="719.50"></text></g><g><title>[unknown] (192 samples, 1.09%)</title><rect x="91.5579%" y="693" width="1.0893%" height="15" fill="rgb(214,121,10)" fg:x="16138" fg:w="192"/><text x="91.8079%" y="703.50"></text></g><g><title>[unknown] (171 samples, 0.97%)</title><rect x="91.6771%" y="677" width="0.9702%" height="15" fill="rgb(241,66,2)" fg:x="16159" fg:w="171"/><text x="91.9271%" y="687.50"></text></g><g><title>[unknown] (157 samples, 0.89%)</title><rect x="91.7565%" y="661" width="0.8907%" height="15" fill="rgb(220,167,19)" fg:x="16173" fg:w="157"/><text x="92.0065%" y="671.50"></text></g><g><title>[unknown] (151 samples, 0.86%)</title><rect x="91.7905%" y="645" width="0.8567%" height="15" fill="rgb(231,54,50)" fg:x="16179" fg:w="151"/><text x="92.0405%" y="655.50"></text></g><g><title>[unknown] (131 samples, 0.74%)</title><rect x="91.9040%" y="629" width="0.7432%" height="15" fill="rgb(239,217,53)" fg:x="16199" fg:w="131"/><text x="92.1540%" y="639.50"></text></g><g><title>[unknown] (116 samples, 0.66%)</title><rect x="91.9891%" y="613" width="0.6581%" height="15" fill="rgb(248,8,0)" fg:x="16214" fg:w="116"/><text x="92.2391%" y="623.50"></text></g><g><title>[unknown] (67 samples, 0.38%)</title><rect x="92.2671%" y="597" width="0.3801%" height="15" fill="rgb(229,118,37)" fg:x="16263" fg:w="67"/><text x="92.5171%" y="607.50"></text></g><g><title>[unknown] (46 samples, 0.26%)</title><rect x="92.3862%" y="581" width="0.2610%" height="15" fill="rgb(253,223,43)" fg:x="16284" fg:w="46"/><text x="92.6362%" y="591.50"></text></g><g><title>[unknown] (29 samples, 0.16%)</title><rect x="92.4827%" y="565" width="0.1645%" height="15" fill="rgb(211,77,36)" fg:x="16301" fg:w="29"/><text x="92.7327%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="92.6245%" y="549" width="0.0227%" height="15" fill="rgb(219,3,53)" fg:x="16326" fg:w="4"/><text x="92.8745%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="92.6302%" y="533" width="0.0170%" height="15" fill="rgb(244,45,42)" fg:x="16327" fg:w="3"/><text x="92.8802%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.6359%" y="517" width="0.0113%" height="15" fill="rgb(225,95,27)" fg:x="16328" fg:w="2"/><text x="92.8859%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="92.6359%" y="501" width="0.0113%" height="15" fill="rgb(207,74,8)" fg:x="16328" fg:w="2"/><text x="92.8859%" y="511.50"></text></g><g><title>__GI___nanosleep (289 samples, 1.64%)</title><rect x="91.0246%" y="789" width="1.6396%" height="15" fill="rgb(243,63,36)" fg:x="16044" fg:w="289"/><text x="91.2746%" y="799.50"></text></g><g><title>__GI___clock_nanosleep (285 samples, 1.62%)</title><rect x="91.0473%" y="773" width="1.6169%" height="15" fill="rgb(211,180,12)" fg:x="16048" fg:w="285"/><text x="91.2973%" y="783.50"></text></g><g><title>__GI___pthread_disable_asynccancel (3 samples, 0.02%)</title><rect x="92.6472%" y="757" width="0.0170%" height="15" fill="rgb(254,166,49)" fg:x="16330" fg:w="3"/><text x="92.8972%" y="767.50"></text></g><g><title>___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="92.6642%" y="789" width="0.0113%" height="15" fill="rgb(205,19,0)" fg:x="16333" fg:w="2"/><text x="92.9142%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (2 samples, 0.01%)</title><rect x="92.6642%" y="773" width="0.0113%" height="15" fill="rgb(224,172,32)" fg:x="16333" fg:w="2"/><text x="92.9142%" y="783.50"></text></g><g><title>[unknown] (666 samples, 3.78%)</title><rect x="92.7153%" y="773" width="3.7785%" height="15" fill="rgb(254,136,30)" fg:x="16342" fg:w="666"/><text x="92.9653%" y="783.50">[unk..</text></g><g><title>[unknown] (651 samples, 3.69%)</title><rect x="92.8004%" y="757" width="3.6934%" height="15" fill="rgb(246,19,35)" fg:x="16357" fg:w="651"/><text x="93.0504%" y="767.50">[unk..</text></g><g><title>[unknown] (646 samples, 3.67%)</title><rect x="92.8288%" y="741" width="3.6650%" height="15" fill="rgb(219,24,36)" fg:x="16362" fg:w="646"/><text x="93.0788%" y="751.50">[unk..</text></g><g><title>[unknown] (628 samples, 3.56%)</title><rect x="92.9309%" y="725" width="3.5629%" height="15" fill="rgb(251,55,1)" fg:x="16380" fg:w="628"/><text x="93.1809%" y="735.50">[unk..</text></g><g><title>[unknown] (613 samples, 3.48%)</title><rect x="93.0160%" y="709" width="3.4778%" height="15" fill="rgb(218,117,39)" fg:x="16395" fg:w="613"/><text x="93.2660%" y="719.50">[un..</text></g><g><title>[unknown] (601 samples, 3.41%)</title><rect x="93.0841%" y="693" width="3.4097%" height="15" fill="rgb(248,169,11)" fg:x="16407" fg:w="601"/><text x="93.3341%" y="703.50">[un..</text></g><g><title>[unknown] (577 samples, 3.27%)</title><rect x="93.2202%" y="677" width="3.2736%" height="15" fill="rgb(244,40,44)" fg:x="16431" fg:w="577"/><text x="93.4702%" y="687.50">[un..</text></g><g><title>[unknown] (478 samples, 2.71%)</title><rect x="93.7819%" y="661" width="2.7119%" height="15" fill="rgb(234,62,37)" fg:x="16530" fg:w="478"/><text x="94.0319%" y="671.50">[u..</text></g><g><title>[unknown] (401 samples, 2.28%)</title><rect x="94.2188%" y="645" width="2.2750%" height="15" fill="rgb(207,117,42)" fg:x="16607" fg:w="401"/><text x="94.4688%" y="655.50">[..</text></g><g><title>[unknown] (293 samples, 1.66%)</title><rect x="94.8315%" y="629" width="1.6623%" height="15" fill="rgb(213,43,2)" fg:x="16715" fg:w="293"/><text x="95.0815%" y="639.50"></text></g><g><title>[unknown] (168 samples, 0.95%)</title><rect x="95.5407%" y="613" width="0.9531%" height="15" fill="rgb(244,202,51)" fg:x="16840" fg:w="168"/><text x="95.7907%" y="623.50"></text></g><g><title>[unknown] (132 samples, 0.75%)</title><rect x="95.7449%" y="597" width="0.7489%" height="15" fill="rgb(253,174,46)" fg:x="16876" fg:w="132"/><text x="95.9949%" y="607.50"></text></g><g><title>[unknown] (123 samples, 0.70%)</title><rect x="95.7960%" y="581" width="0.6978%" height="15" fill="rgb(251,23,1)" fg:x="16885" fg:w="123"/><text x="96.0460%" y="591.50"></text></g><g><title>[unknown] (121 samples, 0.69%)</title><rect x="95.8073%" y="565" width="0.6865%" height="15" fill="rgb(253,26,1)" fg:x="16887" fg:w="121"/><text x="96.0573%" y="575.50"></text></g><g><title>[unknown] (77 samples, 0.44%)</title><rect x="96.0570%" y="549" width="0.4369%" height="15" fill="rgb(216,89,31)" fg:x="16931" fg:w="77"/><text x="96.3070%" y="559.50"></text></g><g><title>[unknown] (41 samples, 0.23%)</title><rect x="96.2612%" y="533" width="0.2326%" height="15" fill="rgb(209,109,5)" fg:x="16967" fg:w="41"/><text x="96.5112%" y="543.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="96.3917%" y="517" width="0.1021%" height="15" fill="rgb(229,63,13)" fg:x="16990" fg:w="18"/><text x="96.6417%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="96.4030%" y="501" width="0.0908%" height="15" fill="rgb(238,137,54)" fg:x="16992" fg:w="16"/><text x="96.6530%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="96.4825%" y="485" width="0.0113%" height="15" fill="rgb(228,1,9)" fg:x="17006" fg:w="2"/><text x="96.7325%" y="495.50"></text></g><g><title>__libc_open64 (681 samples, 3.86%)</title><rect x="92.6756%" y="789" width="3.8636%" height="15" fill="rgb(249,120,48)" fg:x="16335" fg:w="681"/><text x="92.9256%" y="799.50">__li..</text></g><g><title>__GI___pthread_enable_asynccancel (8 samples, 0.05%)</title><rect x="96.4938%" y="773" width="0.0454%" height="15" fill="rgb(209,72,36)" fg:x="17008" fg:w="8"/><text x="96.7438%" y="783.50"></text></g><g><title>_IO_no_init (9 samples, 0.05%)</title><rect x="96.5506%" y="757" width="0.0511%" height="15" fill="rgb(247,98,49)" fg:x="17018" fg:w="9"/><text x="96.8006%" y="767.50"></text></g><g><title>_IO_old_init (8 samples, 0.05%)</title><rect x="96.5562%" y="741" width="0.0454%" height="15" fill="rgb(233,75,36)" fg:x="17019" fg:w="8"/><text x="96.8062%" y="751.50"></text></g><g><title>[libc.so.6] (5 samples, 0.03%)</title><rect x="96.6073%" y="741" width="0.0284%" height="15" fill="rgb(225,14,24)" fg:x="17028" fg:w="5"/><text x="96.8573%" y="751.50"></text></g><g><title>__GI__IO_setb (5 samples, 0.03%)</title><rect x="96.6357%" y="741" width="0.0284%" height="15" fill="rgb(237,193,20)" fg:x="17033" fg:w="5"/><text x="96.8857%" y="751.50"></text></g><g><title>_IO_strfile_read (29 samples, 0.16%)</title><rect x="96.5506%" y="773" width="0.1645%" height="15" fill="rgb(239,122,19)" fg:x="17018" fg:w="29"/><text x="96.8006%" y="783.50"></text></g><g><title>_IO_str_init_static_internal (20 samples, 0.11%)</title><rect x="96.6016%" y="757" width="0.1135%" height="15" fill="rgb(231,220,10)" fg:x="17027" fg:w="20"/><text x="96.8516%" y="767.50"></text></g><g><title>__rawmemchr_avx2 (9 samples, 0.05%)</title><rect x="96.6640%" y="741" width="0.0511%" height="15" fill="rgb(220,66,15)" fg:x="17038" fg:w="9"/><text x="96.9140%" y="751.50"></text></g><g><title>__GI_____strtol_l_internal (17 samples, 0.10%)</title><rect x="97.1803%" y="757" width="0.0964%" height="15" fill="rgb(215,171,52)" fg:x="17129" fg:w="17"/><text x="97.4303%" y="767.50"></text></g><g><title>__GI___libc_cleanup_push_defer (4 samples, 0.02%)</title><rect x="97.2768%" y="757" width="0.0227%" height="15" fill="rgb(241,169,50)" fg:x="17146" fg:w="4"/><text x="97.5268%" y="767.50"></text></g><g><title>__GI___strtol_internal (7 samples, 0.04%)</title><rect x="97.2994%" y="757" width="0.0397%" height="15" fill="rgb(236,189,0)" fg:x="17150" fg:w="7"/><text x="97.5494%" y="767.50"></text></g><g><title>__sscanf (144 samples, 0.82%)</title><rect x="96.5392%" y="789" width="0.8170%" height="15" fill="rgb(217,147,20)" fg:x="17016" fg:w="144"/><text x="96.7892%" y="799.50"></text></g><g><title>__vfscanf_internal (113 samples, 0.64%)</title><rect x="96.7151%" y="773" width="0.6411%" height="15" fill="rgb(206,188,39)" fg:x="17047" fg:w="113"/><text x="96.9651%" y="783.50"></text></g><g><title>char_buffer_rewind (2 samples, 0.01%)</title><rect x="97.3448%" y="757" width="0.0113%" height="15" fill="rgb(227,118,25)" fg:x="17158" fg:w="2"/><text x="97.5948%" y="767.50"></text></g><g><title>close@plt (3 samples, 0.02%)</title><rect x="97.3562%" y="789" width="0.0170%" height="15" fill="rgb(248,171,40)" fg:x="17160" fg:w="3"/><text x="97.6062%" y="799.50"></text></g><g><title>nanosleep@plt (3 samples, 0.02%)</title><rect x="97.3732%" y="789" width="0.0170%" height="15" fill="rgb(251,90,54)" fg:x="17163" fg:w="3"/><text x="97.6232%" y="799.50"></text></g><g><title>open64@plt (6 samples, 0.03%)</title><rect x="97.3902%" y="789" width="0.0340%" height="15" fill="rgb(234,11,46)" fg:x="17166" fg:w="6"/><text x="97.6402%" y="799.50"></text></g><g><title>read@plt (7 samples, 0.04%)</title><rect x="97.4243%" y="789" width="0.0397%" height="15" fill="rgb(229,134,13)" fg:x="17172" fg:w="7"/><text x="97.6743%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,438 samples, 13.83%)</title><rect x="83.6435%" y="837" width="13.8318%" height="15" fill="rgb(223,129,3)" fg:x="14743" fg:w="2438"/><text x="83.8935%" y="847.50">[libnvidia-glcore.so...</text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,438 samples, 13.83%)</title><rect x="83.6435%" y="821" width="13.8318%" height="15" fill="rgb(221,124,13)" fg:x="14743" fg:w="2438"/><text x="83.8935%" y="831.50">[libnvidia-glcore.so...</text></g><g><title>[libnvidia-glcore.so.530.30.02] (2,422 samples, 13.74%)</title><rect x="83.7343%" y="805" width="13.7411%" height="15" fill="rgb(234,3,18)" fg:x="14759" fg:w="2422"/><text x="83.9843%" y="815.50">[libnvidia-glcore.so...</text></g><g><title>sscanf@plt (2 samples, 0.01%)</title><rect x="97.4640%" y="789" width="0.0113%" height="15" fill="rgb(249,199,20)" fg:x="17179" fg:w="2"/><text x="97.7140%" y="799.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (7 samples, 0.04%)</title><rect x="97.4810%" y="661" width="0.0397%" height="15" fill="rgb(224,134,6)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="671.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (7 samples, 0.04%)</title><rect x="97.4810%" y="645" width="0.0397%" height="15" fill="rgb(254,83,26)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="655.50"></text></g><g><title>rayon_core::registry::main_loop (7 samples, 0.04%)</title><rect x="97.4810%" y="629" width="0.0397%" height="15" fill="rgb(217,88,9)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="639.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 0.04%)</title><rect x="97.4810%" y="613" width="0.0397%" height="15" fill="rgb(225,73,2)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7 samples, 0.04%)</title><rect x="97.4810%" y="597" width="0.0397%" height="15" fill="rgb(226,44,39)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="607.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (7 samples, 0.04%)</title><rect x="97.4810%" y="581" width="0.0397%" height="15" fill="rgb(228,53,17)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="591.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (7 samples, 0.04%)</title><rect x="97.4810%" y="565" width="0.0397%" height="15" fill="rgb(212,27,27)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="575.50"></text></g><g><title>std::sync::condvar::Condvar::wait (7 samples, 0.04%)</title><rect x="97.4810%" y="549" width="0.0397%" height="15" fill="rgb(241,50,6)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="559.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (7 samples, 0.04%)</title><rect x="97.4810%" y="533" width="0.0397%" height="15" fill="rgb(225,28,51)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="543.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (7 samples, 0.04%)</title><rect x="97.4810%" y="517" width="0.0397%" height="15" fill="rgb(215,33,16)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (7 samples, 0.04%)</title><rect x="97.4810%" y="501" width="0.0397%" height="15" fill="rgb(243,40,39)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="511.50"></text></g><g><title>syscall (7 samples, 0.04%)</title><rect x="97.4810%" y="485" width="0.0397%" height="15" fill="rgb(225,11,42)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="469" width="0.0397%" height="15" fill="rgb(241,220,38)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="479.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="453" width="0.0397%" height="15" fill="rgb(244,52,35)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="463.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="437" width="0.0397%" height="15" fill="rgb(246,42,46)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="447.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="421" width="0.0397%" height="15" fill="rgb(205,184,13)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="431.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="405" width="0.0397%" height="15" fill="rgb(209,48,36)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="389" width="0.0397%" height="15" fill="rgb(244,34,51)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="373" width="0.0397%" height="15" fill="rgb(221,107,33)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="357" width="0.0397%" height="15" fill="rgb(224,203,12)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="97.4810%" y="341" width="0.0397%" height="15" fill="rgb(230,215,18)" fg:x="17182" fg:w="7"/><text x="97.7310%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="97.4867%" y="325" width="0.0340%" height="15" fill="rgb(206,185,35)" fg:x="17183" fg:w="6"/><text x="97.7367%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="97.4923%" y="309" width="0.0284%" height="15" fill="rgb(228,140,34)" fg:x="17184" fg:w="5"/><text x="97.7423%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="97.4923%" y="293" width="0.0284%" height="15" fill="rgb(208,93,13)" fg:x="17184" fg:w="5"/><text x="97.7423%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="97.4923%" y="277" width="0.0284%" height="15" fill="rgb(221,193,39)" fg:x="17184" fg:w="5"/><text x="97.7423%" y="287.50"></text></g><g><title>[unknown] (27 samples, 0.15%)</title><rect x="97.5547%" y="565" width="0.1532%" height="15" fill="rgb(241,132,34)" fg:x="17195" fg:w="27"/><text x="97.8047%" y="575.50"></text></g><g><title>[unknown] (25 samples, 0.14%)</title><rect x="97.5661%" y="549" width="0.1418%" height="15" fill="rgb(221,141,10)" fg:x="17197" fg:w="25"/><text x="97.8161%" y="559.50"></text></g><g><title>[unknown] (24 samples, 0.14%)</title><rect x="97.5718%" y="533" width="0.1362%" height="15" fill="rgb(226,90,31)" fg:x="17198" fg:w="24"/><text x="97.8218%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="97.6001%" y="517" width="0.1078%" height="15" fill="rgb(243,75,5)" fg:x="17203" fg:w="19"/><text x="97.8501%" y="527.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="97.6001%" y="501" width="0.1078%" height="15" fill="rgb(227,156,21)" fg:x="17203" fg:w="19"/><text x="97.8501%" y="511.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="97.6001%" y="485" width="0.1078%" height="15" fill="rgb(250,195,8)" fg:x="17203" fg:w="19"/><text x="97.8501%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="97.6115%" y="469" width="0.0964%" height="15" fill="rgb(220,134,5)" fg:x="17205" fg:w="17"/><text x="97.8615%" y="479.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="97.6115%" y="453" width="0.0964%" height="15" fill="rgb(246,106,34)" fg:x="17205" fg:w="17"/><text x="97.8615%" y="463.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="97.6228%" y="437" width="0.0851%" height="15" fill="rgb(205,1,4)" fg:x="17207" fg:w="15"/><text x="97.8728%" y="447.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="97.6285%" y="421" width="0.0794%" height="15" fill="rgb(224,151,29)" fg:x="17208" fg:w="14"/><text x="97.8785%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="97.6512%" y="405" width="0.0567%" height="15" fill="rgb(251,196,0)" fg:x="17212" fg:w="10"/><text x="97.9012%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="97.6512%" y="389" width="0.0567%" height="15" fill="rgb(212,127,0)" fg:x="17212" fg:w="10"/><text x="97.9012%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="97.6512%" y="373" width="0.0567%" height="15" fill="rgb(236,71,53)" fg:x="17212" fg:w="10"/><text x="97.9012%" y="383.50"></text></g><g><title>std::thread::sleep (32 samples, 0.18%)</title><rect x="97.5321%" y="629" width="0.1815%" height="15" fill="rgb(227,99,0)" fg:x="17191" fg:w="32"/><text x="97.7821%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (32 samples, 0.18%)</title><rect x="97.5321%" y="613" width="0.1815%" height="15" fill="rgb(239,89,21)" fg:x="17191" fg:w="32"/><text x="97.7821%" y="623.50"></text></g><g><title>__GI___nanosleep (29 samples, 0.16%)</title><rect x="97.5491%" y="597" width="0.1645%" height="15" fill="rgb(243,122,19)" fg:x="17194" fg:w="29"/><text x="97.7991%" y="607.50"></text></g><g><title>__GI___clock_nanosleep (29 samples, 0.16%)</title><rect x="97.5491%" y="581" width="0.1645%" height="15" fill="rgb(229,192,45)" fg:x="17194" fg:w="29"/><text x="97.7991%" y="591.50"></text></g><g><title>__clone3 (2,482 samples, 14.08%)</title><rect x="83.6378%" y="869" width="14.0815%" height="15" fill="rgb(235,165,35)" fg:x="14742" fg:w="2482"/><text x="83.8878%" y="879.50">__clone3</text></g><g><title>start_thread (2,481 samples, 14.08%)</title><rect x="83.6435%" y="853" width="14.0758%" height="15" fill="rgb(253,202,0)" fg:x="14743" fg:w="2481"/><text x="83.8935%" y="863.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42 samples, 0.24%)</title><rect x="97.4810%" y="837" width="0.2383%" height="15" fill="rgb(235,51,20)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.24%)</title><rect x="97.4810%" y="821" width="0.2383%" height="15" fill="rgb(218,95,46)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42 samples, 0.24%)</title><rect x="97.4810%" y="805" width="0.2383%" height="15" fill="rgb(212,81,10)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42 samples, 0.24%)</title><rect x="97.4810%" y="789" width="0.2383%" height="15" fill="rgb(240,59,0)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="799.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (42 samples, 0.24%)</title><rect x="97.4810%" y="773" width="0.2383%" height="15" fill="rgb(212,191,42)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="783.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.24%)</title><rect x="97.4810%" y="757" width="0.2383%" height="15" fill="rgb(233,140,3)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="767.50"></text></g><g><title>std::panicking::try (42 samples, 0.24%)</title><rect x="97.4810%" y="741" width="0.2383%" height="15" fill="rgb(215,69,23)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="751.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.24%)</title><rect x="97.4810%" y="725" width="0.2383%" height="15" fill="rgb(240,202,20)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.24%)</title><rect x="97.4810%" y="709" width="0.2383%" height="15" fill="rgb(209,146,50)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="719.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (42 samples, 0.24%)</title><rect x="97.4810%" y="693" width="0.2383%" height="15" fill="rgb(253,102,54)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42 samples, 0.24%)</title><rect x="97.4810%" y="677" width="0.2383%" height="15" fill="rgb(250,173,47)" fg:x="17182" fg:w="42"/><text x="97.7310%" y="687.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (35 samples, 0.20%)</title><rect x="97.5207%" y="661" width="0.1986%" height="15" fill="rgb(232,142,7)" fg:x="17189" fg:w="35"/><text x="97.7707%" y="671.50"></text></g><g><title>gilrs::ff::server::run (35 samples, 0.20%)</title><rect x="97.5207%" y="645" width="0.1986%" height="15" fill="rgb(230,157,47)" fg:x="17189" fg:w="35"/><text x="97.7707%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="97.7363%" y="453" width="0.0113%" height="15" fill="rgb(214,177,35)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (2 samples, 0.01%)</title><rect x="97.7363%" y="437" width="0.0113%" height="15" fill="rgb(234,119,46)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2 samples, 0.01%)</title><rect x="97.7363%" y="421" width="0.0113%" height="15" fill="rgb(241,180,50)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2 samples, 0.01%)</title><rect x="97.7363%" y="405" width="0.0113%" height="15" fill="rgb(221,54,25)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="97.7363%" y="389" width="0.0113%" height="15" fill="rgb(209,157,44)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="97.7363%" y="373" width="0.0113%" height="15" fill="rgb(246,115,41)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="97.7363%" y="357" width="0.0113%" height="15" fill="rgb(229,86,1)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="367.50"></text></g><g><title>__GI___libc_free (2 samples, 0.01%)</title><rect x="97.7363%" y="341" width="0.0113%" height="15" fill="rgb(240,108,53)" fg:x="17227" fg:w="2"/><text x="97.9863%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::event::run&lt;neuralang::MainState,ggez::error::GameError&gt;::{{closure}}&gt; (3 samples, 0.02%)</title><rect x="97.7363%" y="517" width="0.0170%" height="15" fill="rgb(227,134,2)" fg:x="17227" fg:w="3"/><text x="97.9863%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;neuralang::MainState&gt; (3 samples, 0.02%)</title><rect x="97.7363%" y="501" width="0.0170%" height="15" fill="rgb(213,129,25)" fg:x="17227" fg:w="3"/><text x="97.9863%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;neuralang::World&gt; (3 samples, 0.02%)</title><rect x="97.7363%" y="485" width="0.0170%" height="15" fill="rgb(226,35,21)" fg:x="17227" fg:w="3"/><text x="97.9863%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="97.7363%" y="469" width="0.0170%" height="15" fill="rgb(208,129,26)" fg:x="17227" fg:w="3"/><text x="97.9863%" y="479.50"></text></g><g><title>mio::poll::Poll::poll (2 samples, 0.01%)</title><rect x="97.7533%" y="517" width="0.0113%" height="15" fill="rgb(224,83,6)" fg:x="17230" fg:w="2"/><text x="98.0033%" y="527.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (20 samples, 0.11%)</title><rect x="97.7647%" y="517" width="0.1135%" height="15" fill="rgb(227,52,39)" fg:x="17232" fg:w="20"/><text x="98.0147%" y="527.50"></text></g><g><title>epoll_wait (20 samples, 0.11%)</title><rect x="97.7647%" y="501" width="0.1135%" height="15" fill="rgb(241,30,17)" fg:x="17232" fg:w="20"/><text x="98.0147%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.10%)</title><rect x="97.7760%" y="485" width="0.1021%" height="15" fill="rgb(246,186,42)" fg:x="17234" fg:w="18"/><text x="98.0260%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="97.8101%" y="469" width="0.0681%" height="15" fill="rgb(221,169,15)" fg:x="17240" fg:w="12"/><text x="98.0601%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.07%)</title><rect x="97.8101%" y="453" width="0.0681%" height="15" fill="rgb(235,108,21)" fg:x="17240" fg:w="12"/><text x="98.0601%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="97.8214%" y="437" width="0.0567%" height="15" fill="rgb(219,148,30)" fg:x="17242" fg:w="10"/><text x="98.0714%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="97.8214%" y="421" width="0.0567%" height="15" fill="rgb(220,109,5)" fg:x="17242" fg:w="10"/><text x="98.0714%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="97.8327%" y="405" width="0.0454%" height="15" fill="rgb(213,203,48)" fg:x="17244" fg:w="8"/><text x="98.0827%" y="415.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="97.8611%" y="389" width="0.0170%" height="15" fill="rgb(244,71,33)" fg:x="17249" fg:w="3"/><text x="98.1111%" y="399.50"></text></g><g><title>winit::platform_impl::platform::x11::PeekableReceiver&lt;T&gt;::has_incoming (4 samples, 0.02%)</title><rect x="97.8838%" y="517" width="0.0227%" height="15" fill="rgb(209,23,2)" fg:x="17253" fg:w="4"/><text x="98.1338%" y="527.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (4 samples, 0.02%)</title><rect x="97.8838%" y="501" width="0.0227%" height="15" fill="rgb(219,97,7)" fg:x="17253" fg:w="4"/><text x="98.1338%" y="511.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::try_recv (4 samples, 0.02%)</title><rect x="97.8838%" y="485" width="0.0227%" height="15" fill="rgb(216,161,23)" fg:x="17253" fg:w="4"/><text x="98.1338%" y="495.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (4 samples, 0.02%)</title><rect x="97.8838%" y="469" width="0.0227%" height="15" fill="rgb(207,45,42)" fg:x="17253" fg:w="4"/><text x="98.1338%" y="479.50"></text></g><g><title>std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (4 samples, 0.02%)</title><rect x="97.8838%" y="453" width="0.0227%" height="15" fill="rgb(241,61,4)" fg:x="17253" fg:w="4"/><text x="98.1338%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="97.8952%" y="437" width="0.0113%" height="15" fill="rgb(236,170,1)" fg:x="17255" fg:w="2"/><text x="98.1452%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="97.8952%" y="421" width="0.0113%" height="15" fill="rgb(239,72,5)" fg:x="17255" fg:w="2"/><text x="98.1452%" y="431.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.01%)</title><rect x="97.9689%" y="469" width="0.0113%" height="15" fill="rgb(214,13,50)" fg:x="17268" fg:w="2"/><text x="98.2189%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (10 samples, 0.06%)</title><rect x="97.9349%" y="485" width="0.0567%" height="15" fill="rgb(224,88,9)" fg:x="17262" fg:w="10"/><text x="98.1849%" y="495.50"></text></g><g><title>___pthread_mutex_lock (2 samples, 0.01%)</title><rect x="97.9803%" y="469" width="0.0113%" height="15" fill="rgb(238,192,34)" fg:x="17270" fg:w="2"/><text x="98.2303%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.01%)</title><rect x="98.0086%" y="437" width="0.0113%" height="15" fill="rgb(217,203,50)" fg:x="17275" fg:w="2"/><text x="98.2586%" y="447.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 0.02%)</title><rect x="98.0086%" y="469" width="0.0227%" height="15" fill="rgb(241,123,32)" fg:x="17275" fg:w="4"/><text x="98.2586%" y="479.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 0.02%)</title><rect x="98.0086%" y="453" width="0.0227%" height="15" fill="rgb(248,151,39)" fg:x="17275" fg:w="4"/><text x="98.2586%" y="463.50"></text></g><g><title>xcb_poll_for_event (2 samples, 0.01%)</title><rect x="98.0200%" y="437" width="0.0113%" height="15" fill="rgb(208,89,6)" fg:x="17277" fg:w="2"/><text x="98.2700%" y="447.50"></text></g><g><title>XPending (21 samples, 0.12%)</title><rect x="97.9178%" y="501" width="0.1191%" height="15" fill="rgb(254,43,26)" fg:x="17259" fg:w="21"/><text x="98.1678%" y="511.50"></text></g><g><title>_XEventsQueued (8 samples, 0.05%)</title><rect x="97.9916%" y="485" width="0.0454%" height="15" fill="rgb(216,158,13)" fg:x="17272" fg:w="8"/><text x="98.2416%" y="495.50"></text></g><g><title>ggez::event::run (56 samples, 0.32%)</title><rect x="97.7250%" y="597" width="0.3177%" height="15" fill="rgb(212,47,37)" fg:x="17225" fg:w="56"/><text x="97.9750%" y="607.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (56 samples, 0.32%)</title><rect x="97.7250%" y="581" width="0.3177%" height="15" fill="rgb(254,16,10)" fg:x="17225" fg:w="56"/><text x="97.9750%" y="591.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (56 samples, 0.32%)</title><rect x="97.7250%" y="565" width="0.3177%" height="15" fill="rgb(223,228,16)" fg:x="17225" fg:w="56"/><text x="97.9750%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (56 samples, 0.32%)</title><rect x="97.7250%" y="549" width="0.3177%" height="15" fill="rgb(249,108,50)" fg:x="17225" fg:w="56"/><text x="97.9750%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (56 samples, 0.32%)</title><rect x="97.7250%" y="533" width="0.3177%" height="15" fill="rgb(208,220,5)" fg:x="17225" fg:w="56"/><text x="97.9750%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (24 samples, 0.14%)</title><rect x="97.9065%" y="517" width="0.1362%" height="15" fill="rgb(217,89,48)" fg:x="17257" fg:w="24"/><text x="98.1565%" y="527.50"></text></g><g><title>__libc_start_main_impl (57 samples, 0.32%)</title><rect x="97.7250%" y="853" width="0.3234%" height="15" fill="rgb(212,113,41)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="863.50"></text></g><g><title>__libc_start_call_main (57 samples, 0.32%)</title><rect x="97.7250%" y="837" width="0.3234%" height="15" fill="rgb(231,127,5)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="847.50"></text></g><g><title>main (57 samples, 0.32%)</title><rect x="97.7250%" y="821" width="0.3234%" height="15" fill="rgb(217,141,17)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="831.50"></text></g><g><title>std::rt::lang_start_internal (57 samples, 0.32%)</title><rect x="97.7250%" y="805" width="0.3234%" height="15" fill="rgb(245,125,54)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="815.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.32%)</title><rect x="97.7250%" y="789" width="0.3234%" height="15" fill="rgb(248,125,3)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="799.50"></text></g><g><title>std::panicking::try (57 samples, 0.32%)</title><rect x="97.7250%" y="773" width="0.3234%" height="15" fill="rgb(236,119,51)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="783.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.32%)</title><rect x="97.7250%" y="757" width="0.3234%" height="15" fill="rgb(239,99,8)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="767.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (57 samples, 0.32%)</title><rect x="97.7250%" y="741" width="0.3234%" height="15" fill="rgb(224,228,4)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="751.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.32%)</title><rect x="97.7250%" y="725" width="0.3234%" height="15" fill="rgb(220,131,45)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="735.50"></text></g><g><title>std::panicking::try (57 samples, 0.32%)</title><rect x="97.7250%" y="709" width="0.3234%" height="15" fill="rgb(215,62,5)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="719.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.32%)</title><rect x="97.7250%" y="693" width="0.3234%" height="15" fill="rgb(253,12,24)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (57 samples, 0.32%)</title><rect x="97.7250%" y="677" width="0.3234%" height="15" fill="rgb(248,120,50)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="687.50"></text></g><g><title>std::rt::lang_start::{{closure}} (57 samples, 0.32%)</title><rect x="97.7250%" y="661" width="0.3234%" height="15" fill="rgb(245,194,10)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="671.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 0.32%)</title><rect x="97.7250%" y="645" width="0.3234%" height="15" fill="rgb(241,149,38)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (57 samples, 0.32%)</title><rect x="97.7250%" y="629" width="0.3234%" height="15" fill="rgb(219,215,7)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="639.50"></text></g><g><title>neuralang::main (57 samples, 0.32%)</title><rect x="97.7250%" y="613" width="0.3234%" height="15" fill="rgb(208,120,31)" fg:x="17225" fg:w="57"/><text x="97.9750%" y="623.50"></text></g><g><title>_start (58 samples, 0.33%)</title><rect x="97.7250%" y="869" width="0.3291%" height="15" fill="rgb(244,30,8)" fg:x="17225" fg:w="58"/><text x="97.9750%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="98.0540%" y="869" width="0.0170%" height="15" fill="rgb(238,35,44)" fg:x="17283" fg:w="3"/><text x="98.3040%" y="879.50"></text></g><g><title>anon.f89cd8d186f2a027851536f86c12418e.119.llvm.15925219293053373316 (2 samples, 0.01%)</title><rect x="98.0710%" y="869" width="0.0113%" height="15" fill="rgb(243,218,37)" fg:x="17286" fg:w="2"/><text x="98.3210%" y="879.50"></text></g><g><title>ggez::event::process_event (2 samples, 0.01%)</title><rect x="98.0710%" y="853" width="0.0113%" height="15" fill="rgb(218,169,10)" fg:x="17286" fg:w="2"/><text x="98.3210%" y="863.50"></text></g><g><title>ggez::graphics::sampler::SamplerCache::get (3 samples, 0.02%)</title><rect x="98.1107%" y="869" width="0.0170%" height="15" fill="rgb(221,144,10)" fg:x="17293" fg:w="3"/><text x="98.3607%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (6 samples, 0.03%)</title><rect x="98.1448%" y="869" width="0.0340%" height="15" fill="rgb(226,41,38)" fg:x="17299" fg:w="6"/><text x="98.3948%" y="879.50"></text></g><g><title>wgpu_core::device::AttachmentData&lt;T&gt;::map (2 samples, 0.01%)</title><rect x="98.1902%" y="869" width="0.0113%" height="15" fill="rgb(228,3,1)" fg:x="17307" fg:w="2"/><text x="98.4402%" y="879.50"></text></g><g><title>wgpu_core::track::texture::TextureTracker&lt;A&gt;::set_from_tracker (3 samples, 0.02%)</title><rect x="98.2072%" y="869" width="0.0170%" height="15" fill="rgb(209,129,12)" fg:x="17310" fg:w="3"/><text x="98.4572%" y="879.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (3 samples, 0.02%)</title><rect x="98.2242%" y="869" width="0.0170%" height="15" fill="rgb(213,136,33)" fg:x="17313" fg:w="3"/><text x="98.4742%" y="879.50"></text></g><g><title>neuralang (16,721 samples, 94.87%)</title><rect x="3.3870%" y="885" width="94.8655%" height="15" fill="rgb(209,181,29)" fg:x="597" fg:w="16721"/><text x="3.6370%" y="895.50">neuralang</text></g><g><title>perf-exec (5 samples, 0.03%)</title><rect x="98.2526%" y="885" width="0.0284%" height="15" fill="rgb(234,173,18)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="869" width="0.0284%" height="15" fill="rgb(227,73,47)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="853" width="0.0284%" height="15" fill="rgb(234,9,34)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="837" width="0.0284%" height="15" fill="rgb(235,172,15)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="821" width="0.0284%" height="15" fill="rgb(245,61,2)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="805" width="0.0284%" height="15" fill="rgb(238,39,47)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="789" width="0.0284%" height="15" fill="rgb(234,37,24)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="773" width="0.0284%" height="15" fill="rgb(248,223,24)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="757" width="0.0284%" height="15" fill="rgb(223,12,15)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="741" width="0.0284%" height="15" fill="rgb(249,6,3)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="725" width="0.0284%" height="15" fill="rgb(237,105,33)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="709" width="0.0284%" height="15" fill="rgb(252,208,35)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="693" width="0.0284%" height="15" fill="rgb(215,181,35)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="677" width="0.0284%" height="15" fill="rgb(246,212,3)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="661" width="0.0284%" height="15" fill="rgb(247,156,24)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="645" width="0.0284%" height="15" fill="rgb(248,9,31)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.2526%" y="629" width="0.0284%" height="15" fill="rgb(234,26,45)" fg:x="17318" fg:w="5"/><text x="98.5026%" y="639.50"></text></g><g><title>[unknown] (17 samples, 0.10%)</title><rect x="98.2866%" y="869" width="0.0964%" height="15" fill="rgb(249,11,32)" fg:x="17324" fg:w="17"/><text x="98.5366%" y="879.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="98.2980%" y="853" width="0.0851%" height="15" fill="rgb(249,162,33)" fg:x="17326" fg:w="15"/><text x="98.5480%" y="863.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="98.2980%" y="837" width="0.0851%" height="15" fill="rgb(232,4,32)" fg:x="17326" fg:w="15"/><text x="98.5480%" y="847.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="98.2980%" y="821" width="0.0851%" height="15" fill="rgb(212,5,45)" fg:x="17326" fg:w="15"/><text x="98.5480%" y="831.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="98.3036%" y="805" width="0.0794%" height="15" fill="rgb(227,95,13)" fg:x="17327" fg:w="14"/><text x="98.5536%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="98.3263%" y="789" width="0.0567%" height="15" fill="rgb(223,205,10)" fg:x="17331" fg:w="10"/><text x="98.5763%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="98.3377%" y="773" width="0.0454%" height="15" fill="rgb(222,178,8)" fg:x="17333" fg:w="8"/><text x="98.5877%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="98.3434%" y="757" width="0.0397%" height="15" fill="rgb(216,13,22)" fg:x="17334" fg:w="7"/><text x="98.5934%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.3547%" y="741" width="0.0284%" height="15" fill="rgb(240,167,12)" fg:x="17336" fg:w="5"/><text x="98.6047%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.3547%" y="725" width="0.0284%" height="15" fill="rgb(235,68,35)" fg:x="17336" fg:w="5"/><text x="98.6047%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.3661%" y="709" width="0.0170%" height="15" fill="rgb(253,40,27)" fg:x="17338" fg:w="3"/><text x="98.6161%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.3717%" y="693" width="0.0113%" height="15" fill="rgb(214,19,28)" fg:x="17339" fg:w="2"/><text x="98.6217%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.3717%" y="677" width="0.0113%" height="15" fill="rgb(210,167,45)" fg:x="17339" fg:w="2"/><text x="98.6217%" y="687.50"></text></g><g><title>[libpulse.so.0.24.1] (2 samples, 0.01%)</title><rect x="98.4228%" y="709" width="0.0113%" height="15" fill="rgb(232,97,40)" fg:x="17348" fg:w="2"/><text x="98.6728%" y="719.50"></text></g><g><title>[libpulse.so.0.24.1] (3 samples, 0.02%)</title><rect x="98.4228%" y="757" width="0.0170%" height="15" fill="rgb(250,35,23)" fg:x="17348" fg:w="3"/><text x="98.6728%" y="767.50"></text></g><g><title>[libpulse.so.0.24.1] (3 samples, 0.02%)</title><rect x="98.4228%" y="741" width="0.0170%" height="15" fill="rgb(248,47,53)" fg:x="17348" fg:w="3"/><text x="98.6728%" y="751.50"></text></g><g><title>pa_stream_update_timing_info (3 samples, 0.02%)</title><rect x="98.4228%" y="725" width="0.0170%" height="15" fill="rgb(226,58,50)" fg:x="17348" fg:w="3"/><text x="98.6728%" y="735.50"></text></g><g><title>pa_context_ref (4 samples, 0.02%)</title><rect x="98.4909%" y="677" width="0.0227%" height="15" fill="rgb(217,105,26)" fg:x="17360" fg:w="4"/><text x="98.7409%" y="687.50"></text></g><g><title>pa_stream_writable_size (9 samples, 0.05%)</title><rect x="98.5533%" y="613" width="0.0511%" height="15" fill="rgb(208,64,1)" fg:x="17371" fg:w="9"/><text x="98.8033%" y="623.50"></text></g><g><title>pa_detect_fork (8 samples, 0.05%)</title><rect x="98.5589%" y="597" width="0.0454%" height="15" fill="rgb(214,80,1)" fg:x="17372" fg:w="8"/><text x="98.8089%" y="607.50"></text></g><g><title>__GI___getpid (7 samples, 0.04%)</title><rect x="98.5646%" y="581" width="0.0397%" height="15" fill="rgb(206,175,26)" fg:x="17373" fg:w="7"/><text x="98.8146%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.5760%" y="565" width="0.0284%" height="15" fill="rgb(235,156,37)" fg:x="17375" fg:w="5"/><text x="98.8260%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.5930%" y="549" width="0.0113%" height="15" fill="rgb(213,100,9)" fg:x="17378" fg:w="2"/><text x="98.8430%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.5930%" y="533" width="0.0113%" height="15" fill="rgb(241,15,13)" fg:x="17378" fg:w="2"/><text x="98.8430%" y="543.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (15 samples, 0.09%)</title><rect x="98.5363%" y="629" width="0.0851%" height="15" fill="rgb(205,97,43)" fg:x="17368" fg:w="15"/><text x="98.7863%" y="639.50"></text></g><g><title>pulse_check_connection (3 samples, 0.02%)</title><rect x="98.6043%" y="613" width="0.0170%" height="15" fill="rgb(216,106,32)" fg:x="17380" fg:w="3"/><text x="98.8543%" y="623.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (43 samples, 0.24%)</title><rect x="98.5249%" y="645" width="0.2440%" height="15" fill="rgb(226,200,8)" fg:x="17366" fg:w="43"/><text x="98.7749%" y="655.50"></text></g><g><title>__GI___libc_write (26 samples, 0.15%)</title><rect x="98.6214%" y="629" width="0.1475%" height="15" fill="rgb(244,54,29)" fg:x="17383" fg:w="26"/><text x="98.8714%" y="639.50"></text></g><g><title>__GI___libc_write (26 samples, 0.15%)</title><rect x="98.6214%" y="613" width="0.1475%" height="15" fill="rgb(252,169,12)" fg:x="17383" fg:w="26"/><text x="98.8714%" y="623.50"></text></g><g><title>[unknown] (26 samples, 0.15%)</title><rect x="98.6214%" y="597" width="0.1475%" height="15" fill="rgb(231,199,11)" fg:x="17383" fg:w="26"/><text x="98.8714%" y="607.50"></text></g><g><title>[unknown] (22 samples, 0.12%)</title><rect x="98.6440%" y="581" width="0.1248%" height="15" fill="rgb(233,191,18)" fg:x="17387" fg:w="22"/><text x="98.8940%" y="591.50"></text></g><g><title>[unknown] (22 samples, 0.12%)</title><rect x="98.6440%" y="565" width="0.1248%" height="15" fill="rgb(215,83,47)" fg:x="17387" fg:w="22"/><text x="98.8940%" y="575.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="98.6611%" y="549" width="0.1078%" height="15" fill="rgb(251,67,19)" fg:x="17390" fg:w="19"/><text x="98.9111%" y="559.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="98.6611%" y="533" width="0.1078%" height="15" fill="rgb(240,7,20)" fg:x="17390" fg:w="19"/><text x="98.9111%" y="543.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="98.6611%" y="517" width="0.1078%" height="15" fill="rgb(210,150,26)" fg:x="17390" fg:w="19"/><text x="98.9111%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.09%)</title><rect x="98.6781%" y="501" width="0.0908%" height="15" fill="rgb(228,75,42)" fg:x="17393" fg:w="16"/><text x="98.9281%" y="511.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="98.6894%" y="485" width="0.0794%" height="15" fill="rgb(237,134,48)" fg:x="17395" fg:w="14"/><text x="98.9394%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="98.7065%" y="469" width="0.0624%" height="15" fill="rgb(205,80,50)" fg:x="17398" fg:w="11"/><text x="98.9565%" y="479.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="98.7178%" y="453" width="0.0511%" height="15" fill="rgb(217,74,48)" fg:x="17400" fg:w="9"/><text x="98.9678%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="98.7348%" y="437" width="0.0340%" height="15" fill="rgb(205,82,50)" fg:x="17403" fg:w="6"/><text x="98.9848%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="98.7348%" y="421" width="0.0340%" height="15" fill="rgb(228,1,33)" fg:x="17403" fg:w="6"/><text x="98.9848%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="98.7348%" y="405" width="0.0340%" height="15" fill="rgb(214,50,23)" fg:x="17403" fg:w="6"/><text x="98.9848%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="98.7348%" y="389" width="0.0340%" height="15" fill="rgb(210,62,9)" fg:x="17403" fg:w="6"/><text x="98.9848%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.7518%" y="373" width="0.0170%" height="15" fill="rgb(210,104,37)" fg:x="17406" fg:w="3"/><text x="99.0018%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.7518%" y="357" width="0.0170%" height="15" fill="rgb(232,104,43)" fg:x="17406" fg:w="3"/><text x="99.0018%" y="367.50"></text></g><g><title>[libpulse.so.0.24.1] (48 samples, 0.27%)</title><rect x="98.5136%" y="661" width="0.2723%" height="15" fill="rgb(244,52,6)" fg:x="17364" fg:w="48"/><text x="98.7636%" y="671.50"></text></g><g><title>pa_hashmap_get (2 samples, 0.01%)</title><rect x="98.7745%" y="645" width="0.0113%" height="15" fill="rgb(211,174,52)" fg:x="17410" fg:w="2"/><text x="99.0245%" y="655.50"></text></g><g><title>[libpulse.so.0.24.1] (55 samples, 0.31%)</title><rect x="98.4852%" y="693" width="0.3120%" height="15" fill="rgb(229,48,4)" fg:x="17359" fg:w="55"/><text x="98.7352%" y="703.50"></text></g><g><title>pa_pdispatch_run (50 samples, 0.28%)</title><rect x="98.5136%" y="677" width="0.2837%" height="15" fill="rgb(205,155,16)" fg:x="17364" fg:w="50"/><text x="98.7636%" y="687.50"></text></g><g><title>pa_memblock_unref (3 samples, 0.02%)</title><rect x="98.8029%" y="677" width="0.0170%" height="15" fill="rgb(211,141,53)" fg:x="17415" fg:w="3"/><text x="99.0529%" y="687.50"></text></g><g><title>pa_flist_push (2 samples, 0.01%)</title><rect x="98.8086%" y="661" width="0.0113%" height="15" fill="rgb(240,148,11)" fg:x="17416" fg:w="2"/><text x="99.0586%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.01%)</title><rect x="98.8086%" y="645" width="0.0113%" height="15" fill="rgb(214,45,23)" fg:x="17416" fg:w="2"/><text x="99.0586%" y="655.50"></text></g><g><title>pa_memexport_process_release (5 samples, 0.03%)</title><rect x="98.7972%" y="693" width="0.0284%" height="15" fill="rgb(248,74,26)" fg:x="17414" fg:w="5"/><text x="99.0472%" y="703.50"></text></g><g><title>pa_packet_new (4 samples, 0.02%)</title><rect x="98.8256%" y="693" width="0.0227%" height="15" fill="rgb(218,121,16)" fg:x="17419" fg:w="4"/><text x="99.0756%" y="703.50"></text></g><g><title>pa_flist_pop (2 samples, 0.01%)</title><rect x="98.8369%" y="677" width="0.0113%" height="15" fill="rgb(218,10,47)" fg:x="17421" fg:w="2"/><text x="99.0869%" y="687.50"></text></g><g><title>[libpulsecommon-15.99.so] (2 samples, 0.01%)</title><rect x="98.8369%" y="661" width="0.0113%" height="15" fill="rgb(227,99,14)" fg:x="17421" fg:w="2"/><text x="99.0869%" y="671.50"></text></g><g><title>[libpulsecommon-15.99.so] (72 samples, 0.41%)</title><rect x="98.4512%" y="725" width="0.4085%" height="15" fill="rgb(229,83,46)" fg:x="17353" fg:w="72"/><text x="98.7012%" y="735.50"></text></g><g><title>[libpulsecommon-15.99.so] (71 samples, 0.40%)</title><rect x="98.4568%" y="709" width="0.4028%" height="15" fill="rgb(228,25,1)" fg:x="17354" fg:w="71"/><text x="98.7068%" y="719.50"></text></g><g><title>pa_mempool_unref (2 samples, 0.01%)</title><rect x="98.8767%" y="725" width="0.0113%" height="15" fill="rgb(252,190,15)" fg:x="17428" fg:w="2"/><text x="99.1267%" y="735.50"></text></g><g><title>[libpulsecommon-15.99.so] (88 samples, 0.50%)</title><rect x="98.4512%" y="741" width="0.4993%" height="15" fill="rgb(213,103,51)" fg:x="17353" fg:w="88"/><text x="98.7012%" y="751.50"></text></g><g><title>pa_srbchannel_write (10 samples, 0.06%)</title><rect x="98.8937%" y="725" width="0.0567%" height="15" fill="rgb(220,38,44)" fg:x="17431" fg:w="10"/><text x="99.1437%" y="735.50"></text></g><g><title>pa_fdsem_post (10 samples, 0.06%)</title><rect x="98.8937%" y="709" width="0.0567%" height="15" fill="rgb(210,45,26)" fg:x="17431" fg:w="10"/><text x="99.1437%" y="719.50"></text></g><g><title>pa_write (9 samples, 0.05%)</title><rect x="98.8994%" y="693" width="0.0511%" height="15" fill="rgb(205,95,48)" fg:x="17432" fg:w="9"/><text x="99.1494%" y="703.50"></text></g><g><title>__GI___libc_write (9 samples, 0.05%)</title><rect x="98.8994%" y="677" width="0.0511%" height="15" fill="rgb(225,179,37)" fg:x="17432" fg:w="9"/><text x="99.1494%" y="687.50"></text></g><g><title>__GI___libc_write (8 samples, 0.05%)</title><rect x="98.9050%" y="661" width="0.0454%" height="15" fill="rgb(230,209,3)" fg:x="17433" fg:w="8"/><text x="99.1550%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="98.9050%" y="645" width="0.0454%" height="15" fill="rgb(248,12,46)" fg:x="17433" fg:w="8"/><text x="99.1550%" y="655.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="98.9050%" y="629" width="0.0454%" height="15" fill="rgb(234,18,0)" fg:x="17433" fg:w="8"/><text x="99.1550%" y="639.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="98.9050%" y="613" width="0.0454%" height="15" fill="rgb(238,197,14)" fg:x="17433" fg:w="8"/><text x="99.1550%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.9220%" y="597" width="0.0284%" height="15" fill="rgb(251,162,48)" fg:x="17436" fg:w="5"/><text x="99.1720%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.9220%" y="581" width="0.0284%" height="15" fill="rgb(237,73,42)" fg:x="17436" fg:w="5"/><text x="99.1720%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="98.9277%" y="565" width="0.0227%" height="15" fill="rgb(211,108,8)" fg:x="17437" fg:w="4"/><text x="99.1777%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9334%" y="549" width="0.0170%" height="15" fill="rgb(213,45,22)" fg:x="17438" fg:w="3"/><text x="99.1834%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9334%" y="533" width="0.0170%" height="15" fill="rgb(252,154,5)" fg:x="17438" fg:w="3"/><text x="99.1834%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9334%" y="517" width="0.0170%" height="15" fill="rgb(221,79,52)" fg:x="17438" fg:w="3"/><text x="99.1834%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9334%" y="501" width="0.0170%" height="15" fill="rgb(229,220,36)" fg:x="17438" fg:w="3"/><text x="99.1834%" y="511.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9334%" y="485" width="0.0170%" height="15" fill="rgb(211,17,16)" fg:x="17438" fg:w="3"/><text x="99.1834%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9334%" y="469" width="0.0170%" height="15" fill="rgb(222,55,31)" fg:x="17438" fg:w="3"/><text x="99.1834%" y="479.50"></text></g><g><title>pa_fdsem_after_poll (8 samples, 0.05%)</title><rect x="98.9504%" y="741" width="0.0454%" height="15" fill="rgb(221,221,31)" fg:x="17441" fg:w="8"/><text x="99.2004%" y="751.50"></text></g><g><title>[libpulsecommon-15.99.so] (7 samples, 0.04%)</title><rect x="98.9561%" y="725" width="0.0397%" height="15" fill="rgb(227,168,26)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="735.50"></text></g><g><title>pa_read (7 samples, 0.04%)</title><rect x="98.9561%" y="709" width="0.0397%" height="15" fill="rgb(224,139,9)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="719.50"></text></g><g><title>__GI___libc_read (7 samples, 0.04%)</title><rect x="98.9561%" y="693" width="0.0397%" height="15" fill="rgb(254,172,0)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="703.50"></text></g><g><title>__GI___libc_read (7 samples, 0.04%)</title><rect x="98.9561%" y="677" width="0.0397%" height="15" fill="rgb(235,203,1)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="98.9561%" y="661" width="0.0397%" height="15" fill="rgb(216,205,24)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="98.9561%" y="645" width="0.0397%" height="15" fill="rgb(233,24,6)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="98.9561%" y="629" width="0.0397%" height="15" fill="rgb(244,110,9)" fg:x="17442" fg:w="7"/><text x="99.2061%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.03%)</title><rect x="98.9618%" y="613" width="0.0340%" height="15" fill="rgb(239,222,42)" fg:x="17443" fg:w="6"/><text x="99.2118%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.9674%" y="597" width="0.0284%" height="15" fill="rgb(218,145,13)" fg:x="17444" fg:w="5"/><text x="99.2174%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.9674%" y="581" width="0.0284%" height="15" fill="rgb(207,69,11)" fg:x="17444" fg:w="5"/><text x="99.2174%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="98.9674%" y="565" width="0.0284%" height="15" fill="rgb(220,223,22)" fg:x="17444" fg:w="5"/><text x="99.2174%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="98.9788%" y="549" width="0.0170%" height="15" fill="rgb(245,102,5)" fg:x="17446" fg:w="3"/><text x="99.2288%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (99 samples, 0.56%)</title><rect x="98.4398%" y="757" width="0.5617%" height="15" fill="rgb(211,148,2)" fg:x="17351" fg:w="99"/><text x="98.6898%" y="767.50"></text></g><g><title>__GI___poll (2 samples, 0.01%)</title><rect x="99.0015%" y="757" width="0.0113%" height="15" fill="rgb(241,13,44)" fg:x="17450" fg:w="2"/><text x="99.2515%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.0015%" y="741" width="0.0113%" height="15" fill="rgb(219,137,21)" fg:x="17450" fg:w="2"/><text x="99.2515%" y="751.50"></text></g><g><title>pa_mainloop_dispatch (113 samples, 0.64%)</title><rect x="98.3887%" y="773" width="0.6411%" height="15" fill="rgb(242,206,5)" fg:x="17342" fg:w="113"/><text x="98.6387%" y="783.50"></text></g><g><title>pa_rtclock_now (3 samples, 0.02%)</title><rect x="99.0128%" y="757" width="0.0170%" height="15" fill="rgb(217,114,22)" fg:x="17452" fg:w="3"/><text x="99.2628%" y="767.50"></text></g><g><title>pa_rtclock_get (3 samples, 0.02%)</title><rect x="99.0128%" y="741" width="0.0170%" height="15" fill="rgb(253,206,42)" fg:x="17452" fg:w="3"/><text x="99.2628%" y="751.50"></text></g><g><title>__GI___clock_gettime (3 samples, 0.02%)</title><rect x="99.0128%" y="725" width="0.0170%" height="15" fill="rgb(236,102,18)" fg:x="17452" fg:w="3"/><text x="99.2628%" y="735.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.01%)</title><rect x="99.0185%" y="709" width="0.0113%" height="15" fill="rgb(208,59,49)" fg:x="17453" fg:w="2"/><text x="99.2685%" y="719.50"></text></g><g><title>[libpulse.so.0.24.1] (4 samples, 0.02%)</title><rect x="99.0525%" y="741" width="0.0227%" height="15" fill="rgb(215,194,28)" fg:x="17459" fg:w="4"/><text x="99.3025%" y="751.50"></text></g><g><title>[unknown] (121 samples, 0.69%)</title><rect x="99.0979%" y="725" width="0.6865%" height="15" fill="rgb(243,207,11)" fg:x="17467" fg:w="121"/><text x="99.3479%" y="735.50"></text></g><g><title>[unknown] (116 samples, 0.66%)</title><rect x="99.1263%" y="709" width="0.6581%" height="15" fill="rgb(254,179,35)" fg:x="17472" fg:w="116"/><text x="99.3763%" y="719.50"></text></g><g><title>[unknown] (115 samples, 0.65%)</title><rect x="99.1320%" y="693" width="0.6524%" height="15" fill="rgb(235,97,3)" fg:x="17473" fg:w="115"/><text x="99.3820%" y="703.50"></text></g><g><title>[unknown] (109 samples, 0.62%)</title><rect x="99.1660%" y="677" width="0.6184%" height="15" fill="rgb(215,155,33)" fg:x="17479" fg:w="109"/><text x="99.4160%" y="687.50"></text></g><g><title>[unknown] (104 samples, 0.59%)</title><rect x="99.1944%" y="661" width="0.5900%" height="15" fill="rgb(223,128,12)" fg:x="17484" fg:w="104"/><text x="99.4444%" y="671.50"></text></g><g><title>[unknown] (93 samples, 0.53%)</title><rect x="99.2568%" y="645" width="0.5276%" height="15" fill="rgb(208,157,18)" fg:x="17495" fg:w="93"/><text x="99.5068%" y="655.50"></text></g><g><title>[unknown] (84 samples, 0.48%)</title><rect x="99.3078%" y="629" width="0.4766%" height="15" fill="rgb(249,70,54)" fg:x="17504" fg:w="84"/><text x="99.5578%" y="639.50"></text></g><g><title>[unknown] (77 samples, 0.44%)</title><rect x="99.3476%" y="613" width="0.4369%" height="15" fill="rgb(244,118,24)" fg:x="17511" fg:w="77"/><text x="99.5976%" y="623.50"></text></g><g><title>[unknown] (72 samples, 0.41%)</title><rect x="99.3759%" y="597" width="0.4085%" height="15" fill="rgb(211,54,0)" fg:x="17516" fg:w="72"/><text x="99.6259%" y="607.50"></text></g><g><title>[unknown] (68 samples, 0.39%)</title><rect x="99.3986%" y="581" width="0.3858%" height="15" fill="rgb(245,137,45)" fg:x="17520" fg:w="68"/><text x="99.6486%" y="591.50"></text></g><g><title>[unknown] (62 samples, 0.35%)</title><rect x="99.4327%" y="565" width="0.3518%" height="15" fill="rgb(232,154,31)" fg:x="17526" fg:w="62"/><text x="99.6827%" y="575.50"></text></g><g><title>[unknown] (48 samples, 0.27%)</title><rect x="99.5121%" y="549" width="0.2723%" height="15" fill="rgb(253,6,39)" fg:x="17540" fg:w="48"/><text x="99.7621%" y="559.50"></text></g><g><title>[unknown] (40 samples, 0.23%)</title><rect x="99.5575%" y="533" width="0.2269%" height="15" fill="rgb(234,183,24)" fg:x="17548" fg:w="40"/><text x="99.8075%" y="543.50"></text></g><g><title>[unknown] (39 samples, 0.22%)</title><rect x="99.5631%" y="517" width="0.2213%" height="15" fill="rgb(252,84,40)" fg:x="17549" fg:w="39"/><text x="99.8131%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="99.7674%" y="501" width="0.0170%" height="15" fill="rgb(224,65,2)" fg:x="17585" fg:w="3"/><text x="100.0174%" y="511.50"></text></g><g><title>__GI___poll (126 samples, 0.71%)</title><rect x="99.0752%" y="741" width="0.7149%" height="15" fill="rgb(229,38,24)" fg:x="17463" fg:w="126"/><text x="99.3252%" y="751.50"></text></g><g><title>__poll_chk (2 samples, 0.01%)</title><rect x="99.7901%" y="741" width="0.0113%" height="15" fill="rgb(218,131,50)" fg:x="17589" fg:w="2"/><text x="100.0401%" y="751.50"></text></g><g><title>[libpulsecommon-15.99.so] (3 samples, 0.02%)</title><rect x="99.8014%" y="725" width="0.0170%" height="15" fill="rgb(233,106,18)" fg:x="17591" fg:w="3"/><text x="100.0514%" y="735.50"></text></g><g><title>___pthread_mutex_lock (3 samples, 0.02%)</title><rect x="99.8185%" y="725" width="0.0170%" height="15" fill="rgb(220,216,11)" fg:x="17594" fg:w="3"/><text x="100.0685%" y="735.50"></text></g><g><title>pa_mainloop_poll (144 samples, 0.82%)</title><rect x="99.0298%" y="773" width="0.8170%" height="15" fill="rgb(251,100,45)" fg:x="17455" fg:w="144"/><text x="99.2798%" y="783.50"></text></g><g><title>[libpulse.so.0.24.1] (144 samples, 0.82%)</title><rect x="99.0298%" y="757" width="0.8170%" height="15" fill="rgb(235,143,32)" fg:x="17455" fg:w="144"/><text x="99.2798%" y="767.50"></text></g><g><title>pa_mutex_lock (8 samples, 0.05%)</title><rect x="99.8014%" y="741" width="0.0454%" height="15" fill="rgb(248,124,34)" fg:x="17591" fg:w="8"/><text x="100.0514%" y="751.50"></text></g><g><title>__pthread_mutex_lock_full (2 samples, 0.01%)</title><rect x="99.8355%" y="725" width="0.0113%" height="15" fill="rgb(225,221,4)" fg:x="17597" fg:w="2"/><text x="100.0855%" y="735.50"></text></g><g><title>pa_read (23 samples, 0.13%)</title><rect x="99.8582%" y="757" width="0.1305%" height="15" fill="rgb(242,27,43)" fg:x="17601" fg:w="23"/><text x="100.1082%" y="767.50"></text></g><g><title>__GI___libc_read (22 samples, 0.12%)</title><rect x="99.8638%" y="741" width="0.1248%" height="15" fill="rgb(227,54,8)" fg:x="17602" fg:w="22"/><text x="100.1138%" y="751.50"></text></g><g><title>__GI___libc_read (22 samples, 0.12%)</title><rect x="99.8638%" y="725" width="0.1248%" height="15" fill="rgb(253,139,49)" fg:x="17602" fg:w="22"/><text x="100.1138%" y="735.50"></text></g><g><title>[unknown] (19 samples, 0.11%)</title><rect x="99.8809%" y="709" width="0.1078%" height="15" fill="rgb(231,26,43)" fg:x="17605" fg:w="19"/><text x="100.1309%" y="719.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="99.9036%" y="693" width="0.0851%" height="15" fill="rgb(207,121,39)" fg:x="17609" fg:w="15"/><text x="100.1536%" y="703.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="99.9036%" y="677" width="0.0851%" height="15" fill="rgb(223,101,35)" fg:x="17609" fg:w="15"/><text x="100.1536%" y="687.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="99.9092%" y="661" width="0.0794%" height="15" fill="rgb(232,87,23)" fg:x="17610" fg:w="14"/><text x="100.1592%" y="671.50"></text></g><g><title>[unknown] (14 samples, 0.08%)</title><rect x="99.9092%" y="645" width="0.0794%" height="15" fill="rgb(225,180,29)" fg:x="17610" fg:w="14"/><text x="100.1592%" y="655.50"></text></g><g><title>[unknown] (13 samples, 0.07%)</title><rect x="99.9149%" y="629" width="0.0738%" height="15" fill="rgb(225,25,17)" fg:x="17611" fg:w="13"/><text x="100.1649%" y="639.50"></text></g><g><title>[unknown] (11 samples, 0.06%)</title><rect x="99.9262%" y="613" width="0.0624%" height="15" fill="rgb(223,8,52)" fg:x="17613" fg:w="11"/><text x="100.1762%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.05%)</title><rect x="99.9376%" y="597" width="0.0511%" height="15" fill="rgb(246,42,21)" fg:x="17615" fg:w="9"/><text x="100.1876%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.9660%" y="581" width="0.0227%" height="15" fill="rgb(205,64,43)" fg:x="17620" fg:w="4"/><text x="100.2160%" y="591.50"></text></g><g><title>all (17,626 samples, 100%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(221,160,13)" fg:x="0" fg:w="17626"/><text x="0.2500%" y="911.50"></text></g><g><title>threaded-ml (303 samples, 1.72%)</title><rect x="98.2809%" y="885" width="1.7191%" height="15" fill="rgb(239,58,35)" fg:x="17323" fg:w="303"/><text x="98.5309%" y="895.50"></text></g><g><title>__clone3 (285 samples, 1.62%)</title><rect x="98.3831%" y="869" width="1.6169%" height="15" fill="rgb(251,26,40)" fg:x="17341" fg:w="285"/><text x="98.6331%" y="879.50"></text></g><g><title>start_thread (285 samples, 1.62%)</title><rect x="98.3831%" y="853" width="1.6169%" height="15" fill="rgb(247,0,4)" fg:x="17341" fg:w="285"/><text x="98.6331%" y="863.50"></text></g><g><title>[libpulsecommon-15.99.so] (285 samples, 1.62%)</title><rect x="98.3831%" y="837" width="1.6169%" height="15" fill="rgb(218,130,10)" fg:x="17341" fg:w="285"/><text x="98.6331%" y="847.50"></text></g><g><title>[libpulse.so.0.24.1] (285 samples, 1.62%)</title><rect x="98.3831%" y="821" width="1.6169%" height="15" fill="rgb(239,32,7)" fg:x="17341" fg:w="285"/><text x="98.6331%" y="831.50"></text></g><g><title>pa_mainloop_run (285 samples, 1.62%)</title><rect x="98.3831%" y="805" width="1.6169%" height="15" fill="rgb(210,192,24)" fg:x="17341" fg:w="285"/><text x="98.6331%" y="815.50"></text></g><g><title>pa_mainloop_iterate (285 samples, 1.62%)</title><rect x="98.3831%" y="789" width="1.6169%" height="15" fill="rgb(226,212,17)" fg:x="17341" fg:w="285"/><text x="98.6331%" y="799.50"></text></g><g><title>pa_mainloop_prepare (27 samples, 0.15%)</title><rect x="99.8468%" y="773" width="0.1532%" height="15" fill="rgb(219,201,28)" fg:x="17599" fg:w="27"/><text x="100.0968%" y="783.50"></text></g><g><title>pa_rtclock_now (2 samples, 0.01%)</title><rect x="99.9887%" y="757" width="0.0113%" height="15" fill="rgb(235,207,41)" fg:x="17624" fg:w="2"/><text x="100.2387%" y="767.50"></text></g><g><title>pa_rtclock_get (2 samples, 0.01%)</title><rect x="99.9887%" y="741" width="0.0113%" height="15" fill="rgb(241,95,54)" fg:x="17624" fg:w="2"/><text x="100.2387%" y="751.50"></text></g><g><title>__GI___clock_gettime (2 samples, 0.01%)</title><rect x="99.9887%" y="725" width="0.0113%" height="15" fill="rgb(248,12,23)" fg:x="17624" fg:w="2"/><text x="100.2387%" y="735.50"></text></g></svg></svg>