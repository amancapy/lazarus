<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="805.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="88845"><g><title>__GI___futex_abstimed_wait_cancelable64 (21 samples, 0.02%)</title><rect x="0.0101%" y="629" width="0.0236%" height="15" fill="rgb(227,0,7)" fg:x="9" fg:w="21"/><text x="0.2601%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (21 samples, 0.02%)</title><rect x="0.0101%" y="613" width="0.0236%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="21"/><text x="0.2601%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common64 (21 samples, 0.02%)</title><rect x="0.0101%" y="597" width="0.0236%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="21"/><text x="0.2601%" y="607.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="0.0101%" y="581" width="0.0236%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="21"/><text x="0.2601%" y="591.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0135%" y="565" width="0.0203%" height="15" fill="rgb(208,68,35)" fg:x="12" fg:w="18"/><text x="0.2635%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0135%" y="549" width="0.0203%" height="15" fill="rgb(232,128,0)" fg:x="12" fg:w="18"/><text x="0.2635%" y="559.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0135%" y="533" width="0.0203%" height="15" fill="rgb(207,160,47)" fg:x="12" fg:w="18"/><text x="0.2635%" y="543.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0135%" y="517" width="0.0203%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="18"/><text x="0.2635%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0135%" y="501" width="0.0203%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="18"/><text x="0.2635%" y="511.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0146%" y="485" width="0.0191%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="17"/><text x="0.2646%" y="495.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="0.0158%" y="469" width="0.0180%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="16"/><text x="0.2658%" y="479.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="0.0191%" y="453" width="0.0146%" height="15" fill="rgb(240,193,28)" fg:x="17" fg:w="13"/><text x="0.2691%" y="463.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="0.0191%" y="437" width="0.0146%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="13"/><text x="0.2691%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="0.0236%" y="421" width="0.0101%" height="15" fill="rgb(206,188,39)" fg:x="21" fg:w="9"/><text x="0.2736%" y="431.50"></text></g><g><title>___pthread_cond_timedwait64 (22 samples, 0.02%)</title><rect x="0.0101%" y="661" width="0.0248%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="22"/><text x="0.2601%" y="671.50"></text></g><g><title>__pthread_cond_wait_common (22 samples, 0.02%)</title><rect x="0.0101%" y="645" width="0.0248%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="22"/><text x="0.2601%" y="655.50"></text></g><g><title>[vkrt]_Analysis (35 samples, 0.04%)</title><rect x="0.0000%" y="757" width="0.0394%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="35"/><text x="0.2500%" y="767.50"></text></g><g><title>__clone3 (30 samples, 0.03%)</title><rect x="0.0056%" y="741" width="0.0338%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="30"/><text x="0.2556%" y="751.50"></text></g><g><title>start_thread (29 samples, 0.03%)</title><rect x="0.0068%" y="725" width="0.0326%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="29"/><text x="0.2568%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="0.0068%" y="709" width="0.0326%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="29"/><text x="0.2568%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="0.0068%" y="693" width="0.0326%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="29"/><text x="0.2568%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.03%)</title><rect x="0.0101%" y="677" width="0.0293%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="26"/><text x="0.2601%" y="687.50"></text></g><g><title>[[heap]] (13 samples, 0.01%)</title><rect x="0.0394%" y="741" width="0.0146%" height="15" fill="rgb(221,5,38)" fg:x="35" fg:w="13"/><text x="0.2894%" y="751.50"></text></g><g><title>[anon] (10 samples, 0.01%)</title><rect x="0.0540%" y="741" width="0.0113%" height="15" fill="rgb(247,18,42)" fg:x="48" fg:w="10"/><text x="0.3040%" y="751.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="0.0709%" y="741" width="0.0225%" height="15" fill="rgb(241,131,45)" fg:x="63" fg:w="20"/><text x="0.3209%" y="751.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (10 samples, 0.01%)</title><rect x="0.0968%" y="485" width="0.0113%" height="15" fill="rgb(249,31,29)" fg:x="86" fg:w="10"/><text x="0.3468%" y="495.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (10 samples, 0.01%)</title><rect x="0.0968%" y="469" width="0.0113%" height="15" fill="rgb(225,111,53)" fg:x="86" fg:w="10"/><text x="0.3468%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (9 samples, 0.01%)</title><rect x="0.0979%" y="453" width="0.0101%" height="15" fill="rgb(238,160,17)" fg:x="87" fg:w="9"/><text x="0.3479%" y="463.50"></text></g><g><title>alsa::pcm::PCM::status (14 samples, 0.02%)</title><rect x="0.1171%" y="485" width="0.0158%" height="15" fill="rgb(214,148,48)" fg:x="104" fg:w="14"/><text x="0.3671%" y="495.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (14 samples, 0.02%)</title><rect x="0.1171%" y="469" width="0.0158%" height="15" fill="rgb(232,36,49)" fg:x="104" fg:w="14"/><text x="0.3671%" y="479.50"></text></g><g><title>snd_pcm_status (14 samples, 0.02%)</title><rect x="0.1171%" y="453" width="0.0158%" height="15" fill="rgb(209,103,24)" fg:x="104" fg:w="14"/><text x="0.3671%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (13 samples, 0.01%)</title><rect x="0.1182%" y="437" width="0.0146%" height="15" fill="rgb(229,88,8)" fg:x="105" fg:w="13"/><text x="0.3682%" y="447.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="0.1362%" y="453" width="0.0383%" height="15" fill="rgb(213,181,19)" fg:x="121" fg:w="34"/><text x="0.3862%" y="463.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="0.1396%" y="437" width="0.0349%" height="15" fill="rgb(254,191,54)" fg:x="124" fg:w="31"/><text x="0.3896%" y="447.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="0.1396%" y="421" width="0.0349%" height="15" fill="rgb(241,83,37)" fg:x="124" fg:w="31"/><text x="0.3896%" y="431.50"></text></g><g><title>[unknown] (28 samples, 0.03%)</title><rect x="0.1429%" y="405" width="0.0315%" height="15" fill="rgb(233,36,39)" fg:x="127" fg:w="28"/><text x="0.3929%" y="415.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="0.1441%" y="389" width="0.0304%" height="15" fill="rgb(226,3,54)" fg:x="128" fg:w="27"/><text x="0.3941%" y="399.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="0.1452%" y="373" width="0.0293%" height="15" fill="rgb(245,192,40)" fg:x="129" fg:w="26"/><text x="0.3952%" y="383.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="0.1452%" y="357" width="0.0293%" height="15" fill="rgb(238,167,29)" fg:x="129" fg:w="26"/><text x="0.3952%" y="367.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="0.1452%" y="341" width="0.0293%" height="15" fill="rgb(232,182,51)" fg:x="129" fg:w="26"/><text x="0.3952%" y="351.50"></text></g><g><title>[unknown] (24 samples, 0.03%)</title><rect x="0.1474%" y="325" width="0.0270%" height="15" fill="rgb(231,60,39)" fg:x="131" fg:w="24"/><text x="0.3974%" y="335.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="0.1497%" y="309" width="0.0248%" height="15" fill="rgb(208,69,12)" fg:x="133" fg:w="22"/><text x="0.3997%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="0.1508%" y="293" width="0.0236%" height="15" fill="rgb(235,93,37)" fg:x="134" fg:w="21"/><text x="0.4008%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.1531%" y="277" width="0.0214%" height="15" fill="rgb(213,116,39)" fg:x="136" fg:w="19"/><text x="0.4031%" y="287.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1542%" y="261" width="0.0203%" height="15" fill="rgb(222,207,29)" fg:x="137" fg:w="18"/><text x="0.4042%" y="271.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1542%" y="245" width="0.0203%" height="15" fill="rgb(206,96,30)" fg:x="137" fg:w="18"/><text x="0.4042%" y="255.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (70 samples, 0.08%)</title><rect x="0.0968%" y="501" width="0.0788%" height="15" fill="rgb(218,138,4)" fg:x="86" fg:w="70"/><text x="0.3468%" y="511.50"></text></g><g><title>alsa::poll::poll (36 samples, 0.04%)</title><rect x="0.1351%" y="485" width="0.0405%" height="15" fill="rgb(250,191,14)" fg:x="120" fg:w="36"/><text x="0.3851%" y="495.50"></text></g><g><title>__GI___poll (35 samples, 0.04%)</title><rect x="0.1362%" y="469" width="0.0394%" height="15" fill="rgb(239,60,40)" fg:x="121" fg:w="35"/><text x="0.3862%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (25 samples, 0.03%)</title><rect x="0.1756%" y="469" width="0.0281%" height="15" fill="rgb(206,27,48)" fg:x="156" fg:w="25"/><text x="0.4256%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (25 samples, 0.03%)</title><rect x="0.1756%" y="453" width="0.0281%" height="15" fill="rgb(225,35,8)" fg:x="156" fg:w="25"/><text x="0.4256%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (25 samples, 0.03%)</title><rect x="0.1756%" y="437" width="0.0281%" height="15" fill="rgb(250,213,24)" fg:x="156" fg:w="25"/><text x="0.4256%" y="447.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (21 samples, 0.02%)</title><rect x="0.1801%" y="421" width="0.0236%" height="15" fill="rgb(247,123,22)" fg:x="160" fg:w="21"/><text x="0.4301%" y="431.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (27 samples, 0.03%)</title><rect x="0.1756%" y="485" width="0.0304%" height="15" fill="rgb(231,138,38)" fg:x="156" fg:w="27"/><text x="0.4256%" y="495.50"></text></g><g><title>core::ptr::read (13 samples, 0.01%)</title><rect x="0.2364%" y="357" width="0.0146%" height="15" fill="rgb(231,145,46)" fg:x="210" fg:w="13"/><text x="0.4864%" y="367.50"></text></g><g><title>core::mem::swap (18 samples, 0.02%)</title><rect x="0.2364%" y="389" width="0.0203%" height="15" fill="rgb(251,118,11)" fg:x="210" fg:w="18"/><text x="0.4864%" y="399.50"></text></g><g><title>core::mem::swap_simple (18 samples, 0.02%)</title><rect x="0.2364%" y="373" width="0.0203%" height="15" fill="rgb(217,147,25)" fg:x="210" fg:w="18"/><text x="0.4864%" y="383.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.06%)</title><rect x="0.2094%" y="421" width="0.0585%" height="15" fill="rgb(247,81,37)" fg:x="186" fg:w="52"/><text x="0.4594%" y="431.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (37 samples, 0.04%)</title><rect x="0.2262%" y="405" width="0.0416%" height="15" fill="rgb(209,12,38)" fg:x="201" fg:w="37"/><text x="0.4762%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn rodio::source::Source+Item = f32+core::marker::Send&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="0.2566%" y="389" width="0.0113%" height="15" fill="rgb(227,1,9)" fg:x="228" fg:w="10"/><text x="0.5066%" y="399.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="0.2566%" y="373" width="0.0113%" height="15" fill="rgb(248,47,43)" fg:x="228" fg:w="10"/><text x="0.5066%" y="383.50"></text></g><g><title>core::mem::take (10 samples, 0.01%)</title><rect x="0.2566%" y="357" width="0.0113%" height="15" fill="rgb(221,10,30)" fg:x="228" fg:w="10"/><text x="0.5066%" y="367.50"></text></g><g><title>core::mem::replace (10 samples, 0.01%)</title><rect x="0.2566%" y="341" width="0.0113%" height="15" fill="rgb(210,229,1)" fg:x="228" fg:w="10"/><text x="0.5066%" y="351.50"></text></g><g><title>cpal_alsa_out (204 samples, 0.23%)</title><rect x="0.0394%" y="757" width="0.2296%" height="15" fill="rgb(222,148,37)" fg:x="35" fg:w="204"/><text x="0.2894%" y="767.50"></text></g><g><title>__clone3 (156 samples, 0.18%)</title><rect x="0.0934%" y="741" width="0.1756%" height="15" fill="rgb(234,67,33)" fg:x="83" fg:w="156"/><text x="0.3434%" y="751.50"></text></g><g><title>start_thread (156 samples, 0.18%)</title><rect x="0.0934%" y="725" width="0.1756%" height="15" fill="rgb(247,98,35)" fg:x="83" fg:w="156"/><text x="0.3434%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (156 samples, 0.18%)</title><rect x="0.0934%" y="709" width="0.1756%" height="15" fill="rgb(247,138,52)" fg:x="83" fg:w="156"/><text x="0.3434%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (156 samples, 0.18%)</title><rect x="0.0934%" y="693" width="0.1756%" height="15" fill="rgb(213,79,30)" fg:x="83" fg:w="156"/><text x="0.3434%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (156 samples, 0.18%)</title><rect x="0.0934%" y="677" width="0.1756%" height="15" fill="rgb(246,177,23)" fg:x="83" fg:w="156"/><text x="0.3434%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (156 samples, 0.18%)</title><rect x="0.0934%" y="661" width="0.1756%" height="15" fill="rgb(230,62,27)" fg:x="83" fg:w="156"/><text x="0.3434%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (156 samples, 0.18%)</title><rect x="0.0934%" y="645" width="0.1756%" height="15" fill="rgb(216,154,8)" fg:x="83" fg:w="156"/><text x="0.3434%" y="655.50"></text></g><g><title>std::panic::catch_unwind (156 samples, 0.18%)</title><rect x="0.0934%" y="629" width="0.1756%" height="15" fill="rgb(244,35,45)" fg:x="83" fg:w="156"/><text x="0.3434%" y="639.50"></text></g><g><title>std::panicking::try (156 samples, 0.18%)</title><rect x="0.0934%" y="613" width="0.1756%" height="15" fill="rgb(251,115,12)" fg:x="83" fg:w="156"/><text x="0.3434%" y="623.50"></text></g><g><title>std::panicking::try::do_call (156 samples, 0.18%)</title><rect x="0.0934%" y="597" width="0.1756%" height="15" fill="rgb(240,54,50)" fg:x="83" fg:w="156"/><text x="0.3434%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (156 samples, 0.18%)</title><rect x="0.0934%" y="581" width="0.1756%" height="15" fill="rgb(233,84,52)" fg:x="83" fg:w="156"/><text x="0.3434%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (156 samples, 0.18%)</title><rect x="0.0934%" y="565" width="0.1756%" height="15" fill="rgb(207,117,47)" fg:x="83" fg:w="156"/><text x="0.3434%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (156 samples, 0.18%)</title><rect x="0.0934%" y="549" width="0.1756%" height="15" fill="rgb(249,43,39)" fg:x="83" fg:w="156"/><text x="0.3434%" y="559.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (156 samples, 0.18%)</title><rect x="0.0934%" y="533" width="0.1756%" height="15" fill="rgb(209,38,44)" fg:x="83" fg:w="156"/><text x="0.3434%" y="543.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (156 samples, 0.18%)</title><rect x="0.0934%" y="517" width="0.1756%" height="15" fill="rgb(236,212,23)" fg:x="83" fg:w="156"/><text x="0.3434%" y="527.50"></text></g><g><title>cpal::host::alsa::process_output (83 samples, 0.09%)</title><rect x="0.1756%" y="501" width="0.0934%" height="15" fill="rgb(242,79,21)" fg:x="156" fg:w="83"/><text x="0.4256%" y="511.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (55 samples, 0.06%)</title><rect x="0.2071%" y="485" width="0.0619%" height="15" fill="rgb(211,96,35)" fg:x="184" fg:w="55"/><text x="0.4571%" y="495.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (55 samples, 0.06%)</title><rect x="0.2071%" y="469" width="0.0619%" height="15" fill="rgb(253,215,40)" fg:x="184" fg:w="55"/><text x="0.4571%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (55 samples, 0.06%)</title><rect x="0.2071%" y="453" width="0.0619%" height="15" fill="rgb(211,81,21)" fg:x="184" fg:w="55"/><text x="0.4571%" y="463.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (55 samples, 0.06%)</title><rect x="0.2071%" y="437" width="0.0619%" height="15" fill="rgb(208,190,38)" fg:x="184" fg:w="55"/><text x="0.4571%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.03%)</title><rect x="0.2870%" y="725" width="0.0281%" height="15" fill="rgb(235,213,38)" fg:x="255" fg:w="25"/><text x="0.5370%" y="735.50"></text></g><g><title>[[heap]] (75 samples, 0.08%)</title><rect x="0.2780%" y="741" width="0.0844%" height="15" fill="rgb(237,122,38)" fg:x="247" fg:w="75"/><text x="0.5280%" y="751.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.05%)</title><rect x="0.3726%" y="677" width="0.0495%" height="15" fill="rgb(244,218,35)" fg:x="331" fg:w="44"/><text x="0.6226%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.02%)</title><rect x="0.3973%" y="661" width="0.0248%" height="15" fill="rgb(240,68,47)" fg:x="353" fg:w="22"/><text x="0.6473%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (64 samples, 0.07%)</title><rect x="0.3714%" y="725" width="0.0720%" height="15" fill="rgb(210,16,53)" fg:x="330" fg:w="64"/><text x="0.6214%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (63 samples, 0.07%)</title><rect x="0.3726%" y="709" width="0.0709%" height="15" fill="rgb(235,124,12)" fg:x="331" fg:w="63"/><text x="0.6226%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.07%)</title><rect x="0.3726%" y="693" width="0.0709%" height="15" fill="rgb(224,169,11)" fg:x="331" fg:w="63"/><text x="0.6226%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.02%)</title><rect x="0.4221%" y="677" width="0.0214%" height="15" fill="rgb(250,166,2)" fg:x="375" fg:w="19"/><text x="0.6721%" y="687.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (505 samples, 0.57%)</title><rect x="0.4525%" y="677" width="0.5684%" height="15" fill="rgb(242,216,29)" fg:x="402" fg:w="505"/><text x="0.7025%" y="687.50"></text></g><g><title>neuralang::World::check_collisions (587 samples, 0.66%)</title><rect x="0.4525%" y="693" width="0.6607%" height="15" fill="rgb(230,116,27)" fg:x="402" fg:w="587"/><text x="0.7025%" y="703.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (82 samples, 0.09%)</title><rect x="1.0209%" y="677" width="0.0923%" height="15" fill="rgb(228,99,48)" fg:x="907" fg:w="82"/><text x="1.2709%" y="687.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.06%)</title><rect x="1.1132%" y="645" width="0.0552%" height="15" fill="rgb(253,11,6)" fg:x="989" fg:w="49"/><text x="1.3632%" y="655.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.02%)</title><rect x="1.1492%" y="629" width="0.0191%" height="15" fill="rgb(247,143,39)" fg:x="1021" fg:w="17"/><text x="1.3992%" y="639.50"></text></g><g><title>neuralang::World::move_beings (89 samples, 0.10%)</title><rect x="1.1132%" y="693" width="0.1002%" height="15" fill="rgb(236,97,10)" fg:x="989" fg:w="89"/><text x="1.3632%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (89 samples, 0.10%)</title><rect x="1.1132%" y="677" width="0.1002%" height="15" fill="rgb(233,208,19)" fg:x="989" fg:w="89"/><text x="1.3632%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (89 samples, 0.10%)</title><rect x="1.1132%" y="661" width="0.1002%" height="15" fill="rgb(216,164,2)" fg:x="989" fg:w="89"/><text x="1.3632%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (40 samples, 0.05%)</title><rect x="1.1683%" y="645" width="0.0450%" height="15" fill="rgb(220,129,5)" fg:x="1038" fg:w="40"/><text x="1.4183%" y="655.50"></text></g><g><title>neuralang::World::move_beings::{{closure}} (40 samples, 0.05%)</title><rect x="1.1683%" y="629" width="0.0450%" height="15" fill="rgb(242,17,10)" fg:x="1038" fg:w="40"/><text x="1.4183%" y="639.50"></text></g><g><title>neuralang::dir_from_theta (40 samples, 0.05%)</title><rect x="1.1683%" y="613" width="0.0450%" height="15" fill="rgb(242,107,0)" fg:x="1038" fg:w="40"/><text x="1.4183%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (40 samples, 0.05%)</title><rect x="1.1683%" y="597" width="0.0450%" height="15" fill="rgb(251,28,31)" fg:x="1038" fg:w="40"/><text x="1.4183%" y="607.50"></text></g><g><title>neuralang::World::tire_beings (171 samples, 0.19%)</title><rect x="1.2133%" y="693" width="0.1925%" height="15" fill="rgb(233,223,10)" fg:x="1078" fg:w="171"/><text x="1.4633%" y="703.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (171 samples, 0.19%)</title><rect x="1.2133%" y="677" width="0.1925%" height="15" fill="rgb(215,21,27)" fg:x="1078" fg:w="171"/><text x="1.4633%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (57 samples, 0.06%)</title><rect x="1.3417%" y="661" width="0.0642%" height="15" fill="rgb(232,23,21)" fg:x="1192" fg:w="57"/><text x="1.5917%" y="671.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.13%)</title><rect x="1.4058%" y="677" width="0.1283%" height="15" fill="rgb(244,5,23)" fg:x="1249" fg:w="114"/><text x="1.6558%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (78 samples, 0.09%)</title><rect x="1.4463%" y="661" width="0.0878%" height="15" fill="rgb(226,81,46)" fg:x="1285" fg:w="78"/><text x="1.6963%" y="671.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (1,016 samples, 1.14%)</title><rect x="0.4525%" y="725" width="1.1436%" height="15" fill="rgb(247,70,30)" fg:x="402" fg:w="1016"/><text x="0.7025%" y="735.50"></text></g><g><title>neuralang::World::step (1,016 samples, 1.14%)</title><rect x="0.4525%" y="709" width="1.1436%" height="15" fill="rgb(212,68,19)" fg:x="402" fg:w="1016"/><text x="0.7025%" y="719.50"></text></g><g><title>neuralang::World::update_cells (169 samples, 0.19%)</title><rect x="1.4058%" y="693" width="0.1902%" height="15" fill="rgb(240,187,13)" fg:x="1249" fg:w="169"/><text x="1.6558%" y="703.50"></text></g><g><title>neuralang::pos_to_cell (55 samples, 0.06%)</title><rect x="1.5341%" y="677" width="0.0619%" height="15" fill="rgb(223,113,26)" fg:x="1363" fg:w="55"/><text x="1.7841%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="1.6107%" y="725" width="0.0191%" height="15" fill="rgb(206,192,2)" fg:x="1431" fg:w="17"/><text x="1.8607%" y="735.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (79 samples, 0.09%)</title><rect x="1.6636%" y="725" width="0.0889%" height="15" fill="rgb(241,108,4)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (79 samples, 0.09%)</title><rect x="1.6636%" y="709" width="0.0889%" height="15" fill="rgb(247,173,49)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (79 samples, 0.09%)</title><rect x="1.6636%" y="693" width="0.0889%" height="15" fill="rgb(224,114,35)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (79 samples, 0.09%)</title><rect x="1.6636%" y="677" width="0.0889%" height="15" fill="rgb(245,159,27)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (79 samples, 0.09%)</title><rect x="1.6636%" y="661" width="0.0889%" height="15" fill="rgb(245,172,44)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (79 samples, 0.09%)</title><rect x="1.6636%" y="645" width="0.0889%" height="15" fill="rgb(236,23,11)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (79 samples, 0.09%)</title><rect x="1.6636%" y="629" width="0.0889%" height="15" fill="rgb(205,117,38)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (79 samples, 0.09%)</title><rect x="1.6636%" y="613" width="0.0889%" height="15" fill="rgb(237,72,25)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="623.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (79 samples, 0.09%)</title><rect x="1.6636%" y="597" width="0.0889%" height="15" fill="rgb(244,70,9)" fg:x="1478" fg:w="79"/><text x="1.9136%" y="607.50"></text></g><g><title>[[stack]] (1,257 samples, 1.41%)</title><rect x="0.3624%" y="741" width="1.4148%" height="15" fill="rgb(217,125,39)" fg:x="322" fg:w="1257"/><text x="0.6124%" y="751.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (110 samples, 0.12%)</title><rect x="1.8639%" y="709" width="0.1238%" height="15" fill="rgb(235,36,10)" fg:x="1656" fg:w="110"/><text x="2.1139%" y="719.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (110 samples, 0.12%)</title><rect x="1.8639%" y="693" width="0.1238%" height="15" fill="rgb(251,123,47)" fg:x="1656" fg:w="110"/><text x="2.1139%" y="703.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (110 samples, 0.12%)</title><rect x="1.8639%" y="677" width="0.1238%" height="15" fill="rgb(221,13,13)" fg:x="1656" fg:w="110"/><text x="2.1139%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (51 samples, 0.06%)</title><rect x="1.9877%" y="693" width="0.0574%" height="15" fill="rgb(238,131,9)" fg:x="1766" fg:w="51"/><text x="2.2377%" y="703.50"></text></g><g><title>[anon] (252 samples, 0.28%)</title><rect x="1.7773%" y="741" width="0.2836%" height="15" fill="rgb(211,50,8)" fg:x="1579" fg:w="252"/><text x="2.0273%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (241 samples, 0.27%)</title><rect x="1.7896%" y="725" width="0.2713%" height="15" fill="rgb(245,182,24)" fg:x="1590" fg:w="241"/><text x="2.0396%" y="735.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (65 samples, 0.07%)</title><rect x="1.9877%" y="709" width="0.0732%" height="15" fill="rgb(242,14,37)" fg:x="1766" fg:w="65"/><text x="2.2377%" y="719.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (14 samples, 0.02%)</title><rect x="2.0451%" y="693" width="0.0158%" height="15" fill="rgb(246,228,12)" fg:x="1817" fg:w="14"/><text x="2.2951%" y="703.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (14 samples, 0.02%)</title><rect x="2.0451%" y="677" width="0.0158%" height="15" fill="rgb(213,55,15)" fg:x="1817" fg:w="14"/><text x="2.2951%" y="687.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (143 samples, 0.16%)</title><rect x="2.1160%" y="725" width="0.1610%" height="15" fill="rgb(209,9,3)" fg:x="1880" fg:w="143"/><text x="2.3660%" y="735.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (257 samples, 0.29%)</title><rect x="2.2770%" y="725" width="0.2893%" height="15" fill="rgb(230,59,30)" fg:x="2023" fg:w="257"/><text x="2.5270%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="2.5820%" y="725" width="0.0326%" height="15" fill="rgb(209,121,21)" fg:x="2294" fg:w="29"/><text x="2.8320%" y="735.50"></text></g><g><title>[unknown] (43 samples, 0.05%)</title><rect x="2.6158%" y="725" width="0.0484%" height="15" fill="rgb(220,109,13)" fg:x="2324" fg:w="43"/><text x="2.8658%" y="735.50"></text></g><g><title>[unknown] (42 samples, 0.05%)</title><rect x="2.6169%" y="709" width="0.0473%" height="15" fill="rgb(232,18,1)" fg:x="2325" fg:w="42"/><text x="2.8669%" y="719.50"></text></g><g><title>[unknown] (42 samples, 0.05%)</title><rect x="2.6169%" y="693" width="0.0473%" height="15" fill="rgb(215,41,42)" fg:x="2325" fg:w="42"/><text x="2.8669%" y="703.50"></text></g><g><title>[unknown] (42 samples, 0.05%)</title><rect x="2.6169%" y="677" width="0.0473%" height="15" fill="rgb(224,123,36)" fg:x="2325" fg:w="42"/><text x="2.8669%" y="687.50"></text></g><g><title>[unknown] (41 samples, 0.05%)</title><rect x="2.6180%" y="661" width="0.0461%" height="15" fill="rgb(240,125,3)" fg:x="2326" fg:w="41"/><text x="2.8680%" y="671.50"></text></g><g><title>[unknown] (41 samples, 0.05%)</title><rect x="2.6180%" y="645" width="0.0461%" height="15" fill="rgb(205,98,50)" fg:x="2326" fg:w="41"/><text x="2.8680%" y="655.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="2.6406%" y="629" width="0.0236%" height="15" fill="rgb(205,185,37)" fg:x="2346" fg:w="21"/><text x="2.8906%" y="639.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="2.6406%" y="613" width="0.0236%" height="15" fill="rgb(238,207,15)" fg:x="2346" fg:w="21"/><text x="2.8906%" y="623.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="2.6462%" y="597" width="0.0180%" height="15" fill="rgb(213,199,42)" fg:x="2351" fg:w="16"/><text x="2.8962%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="2.6518%" y="581" width="0.0124%" height="15" fill="rgb(235,201,11)" fg:x="2356" fg:w="11"/><text x="2.9018%" y="591.50"></text></g><g><title>__ieee754_fmodf (157 samples, 0.18%)</title><rect x="2.6642%" y="725" width="0.1767%" height="15" fill="rgb(207,46,11)" fg:x="2367" fg:w="157"/><text x="2.9142%" y="735.50"></text></g><g><title>__libc_start_call_main (11 samples, 0.01%)</title><rect x="2.8420%" y="725" width="0.0124%" height="15" fill="rgb(241,35,35)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="735.50"></text></g><g><title>main (11 samples, 0.01%)</title><rect x="2.8420%" y="709" width="0.0124%" height="15" fill="rgb(243,32,47)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="719.50"></text></g><g><title>std::rt::lang_start_internal (11 samples, 0.01%)</title><rect x="2.8420%" y="693" width="0.0124%" height="15" fill="rgb(247,202,23)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="703.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="2.8420%" y="677" width="0.0124%" height="15" fill="rgb(219,102,11)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="687.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="2.8420%" y="661" width="0.0124%" height="15" fill="rgb(243,110,44)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="671.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="2.8420%" y="645" width="0.0124%" height="15" fill="rgb(222,74,54)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="655.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (11 samples, 0.01%)</title><rect x="2.8420%" y="629" width="0.0124%" height="15" fill="rgb(216,99,12)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="639.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.01%)</title><rect x="2.8420%" y="613" width="0.0124%" height="15" fill="rgb(226,22,26)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="623.50"></text></g><g><title>std::panicking::try (11 samples, 0.01%)</title><rect x="2.8420%" y="597" width="0.0124%" height="15" fill="rgb(217,163,10)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="607.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.01%)</title><rect x="2.8420%" y="581" width="0.0124%" height="15" fill="rgb(213,25,53)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (11 samples, 0.01%)</title><rect x="2.8420%" y="565" width="0.0124%" height="15" fill="rgb(252,105,26)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}} (11 samples, 0.01%)</title><rect x="2.8420%" y="549" width="0.0124%" height="15" fill="rgb(220,39,43)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.01%)</title><rect x="2.8420%" y="533" width="0.0124%" height="15" fill="rgb(229,68,48)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.01%)</title><rect x="2.8420%" y="517" width="0.0124%" height="15" fill="rgb(252,8,32)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="527.50"></text></g><g><title>neuralang::main (11 samples, 0.01%)</title><rect x="2.8420%" y="501" width="0.0124%" height="15" fill="rgb(223,20,43)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="511.50"></text></g><g><title>neuralang::run (11 samples, 0.01%)</title><rect x="2.8420%" y="485" width="0.0124%" height="15" fill="rgb(229,81,49)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="495.50"></text></g><g><title>ggez::event::run (11 samples, 0.01%)</title><rect x="2.8420%" y="469" width="0.0124%" height="15" fill="rgb(236,28,36)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="479.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (11 samples, 0.01%)</title><rect x="2.8420%" y="453" width="0.0124%" height="15" fill="rgb(249,185,26)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="463.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (11 samples, 0.01%)</title><rect x="2.8420%" y="437" width="0.0124%" height="15" fill="rgb(249,174,33)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (11 samples, 0.01%)</title><rect x="2.8420%" y="421" width="0.0124%" height="15" fill="rgb(233,201,37)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (11 samples, 0.01%)</title><rect x="2.8420%" y="405" width="0.0124%" height="15" fill="rgb(221,78,26)" fg:x="2525" fg:w="11"/><text x="3.0920%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (40 samples, 0.05%)</title><rect x="3.0615%" y="693" width="0.0450%" height="15" fill="rgb(250,127,30)" fg:x="2720" fg:w="40"/><text x="3.3115%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (34 samples, 0.04%)</title><rect x="3.0683%" y="677" width="0.0383%" height="15" fill="rgb(230,49,44)" fg:x="2726" fg:w="34"/><text x="3.3183%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (253 samples, 0.28%)</title><rect x="2.8679%" y="725" width="0.2848%" height="15" fill="rgb(229,67,23)" fg:x="2548" fg:w="253"/><text x="3.1179%" y="735.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (109 samples, 0.12%)</title><rect x="3.0300%" y="709" width="0.1227%" height="15" fill="rgb(249,83,47)" fg:x="2692" fg:w="109"/><text x="3.2800%" y="719.50"></text></g><g><title>ggez::graphics::draw::DrawParam::scale (41 samples, 0.05%)</title><rect x="3.1065%" y="693" width="0.0461%" height="15" fill="rgb(215,43,3)" fg:x="2760" fg:w="41"/><text x="3.3565%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 0.05%)</title><rect x="3.1065%" y="677" width="0.0461%" height="15" fill="rgb(238,154,13)" fg:x="2760" fg:w="41"/><text x="3.3565%" y="687.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (18 samples, 0.02%)</title><rect x="3.1617%" y="693" width="0.0203%" height="15" fill="rgb(219,56,2)" fg:x="2809" fg:w="18"/><text x="3.4117%" y="703.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (18 samples, 0.02%)</title><rect x="3.1617%" y="677" width="0.0203%" height="15" fill="rgb(233,0,4)" fg:x="2809" fg:w="18"/><text x="3.4117%" y="687.50"></text></g><g><title>wgpu::Surface::configure (15 samples, 0.02%)</title><rect x="3.1651%" y="661" width="0.0169%" height="15" fill="rgb(235,30,7)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (15 samples, 0.02%)</title><rect x="3.1651%" y="645" width="0.0169%" height="15" fill="rgb(250,79,13)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (15 samples, 0.02%)</title><rect x="3.1651%" y="629" width="0.0169%" height="15" fill="rgb(211,146,34)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="639.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (15 samples, 0.02%)</title><rect x="3.1651%" y="613" width="0.0169%" height="15" fill="rgb(228,22,38)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (15 samples, 0.02%)</title><rect x="3.1651%" y="597" width="0.0169%" height="15" fill="rgb(235,168,5)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (15 samples, 0.02%)</title><rect x="3.1651%" y="581" width="0.0169%" height="15" fill="rgb(221,155,16)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="591.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (15 samples, 0.02%)</title><rect x="3.1651%" y="565" width="0.0169%" height="15" fill="rgb(215,215,53)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (15 samples, 0.02%)</title><rect x="3.1651%" y="549" width="0.0169%" height="15" fill="rgb(223,4,10)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="533" width="0.0169%" height="15" fill="rgb(234,103,6)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="517" width="0.0169%" height="15" fill="rgb(227,97,0)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="501" width="0.0169%" height="15" fill="rgb(234,150,53)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="485" width="0.0169%" height="15" fill="rgb(228,201,54)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="469" width="0.0169%" height="15" fill="rgb(222,22,37)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="453" width="0.0169%" height="15" fill="rgb(237,53,32)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="437" width="0.0169%" height="15" fill="rgb(233,25,53)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="421" width="0.0169%" height="15" fill="rgb(210,40,34)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.1651%" y="405" width="0.0169%" height="15" fill="rgb(241,220,44)" fg:x="2812" fg:w="15"/><text x="3.4151%" y="415.50"></text></g><g><title>ggez::context::ContextBuilder::build (24 samples, 0.03%)</title><rect x="3.1617%" y="725" width="0.0270%" height="15" fill="rgb(235,28,35)" fg:x="2809" fg:w="24"/><text x="3.4117%" y="735.50"></text></g><g><title>ggez::context::Context::from_conf (24 samples, 0.03%)</title><rect x="3.1617%" y="709" width="0.0270%" height="15" fill="rgb(210,56,17)" fg:x="2809" fg:w="24"/><text x="3.4117%" y="719.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (10 samples, 0.01%)</title><rect x="3.1966%" y="549" width="0.0113%" height="15" fill="rgb(224,130,29)" fg:x="2840" fg:w="10"/><text x="3.4466%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="3.1966%" y="533" width="0.0113%" height="15" fill="rgb(235,212,8)" fg:x="2840" fg:w="10"/><text x="3.4466%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.1977%" y="517" width="0.0101%" height="15" fill="rgb(223,33,50)" fg:x="2841" fg:w="9"/><text x="3.4477%" y="527.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (25 samples, 0.03%)</title><rect x="3.1932%" y="725" width="0.0281%" height="15" fill="rgb(219,149,13)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="735.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (25 samples, 0.03%)</title><rect x="3.1932%" y="709" width="0.0281%" height="15" fill="rgb(250,156,29)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (25 samples, 0.03%)</title><rect x="3.1932%" y="693" width="0.0281%" height="15" fill="rgb(216,193,19)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (25 samples, 0.03%)</title><rect x="3.1932%" y="677" width="0.0281%" height="15" fill="rgb(216,135,14)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="687.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="3.1932%" y="661" width="0.0281%" height="15" fill="rgb(241,47,5)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (25 samples, 0.03%)</title><rect x="3.1932%" y="645" width="0.0281%" height="15" fill="rgb(233,42,35)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (25 samples, 0.03%)</title><rect x="3.1932%" y="629" width="0.0281%" height="15" fill="rgb(231,13,6)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="639.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (25 samples, 0.03%)</title><rect x="3.1932%" y="613" width="0.0281%" height="15" fill="rgb(207,181,40)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (25 samples, 0.03%)</title><rect x="3.1932%" y="597" width="0.0281%" height="15" fill="rgb(254,173,49)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="607.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (25 samples, 0.03%)</title><rect x="3.1932%" y="581" width="0.0281%" height="15" fill="rgb(221,1,38)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (25 samples, 0.03%)</title><rect x="3.1932%" y="565" width="0.0281%" height="15" fill="rgb(206,124,46)" fg:x="2837" fg:w="25"/><text x="3.4432%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="3.2247%" y="501" width="0.0191%" height="15" fill="rgb(249,21,11)" fg:x="2865" fg:w="17"/><text x="3.4747%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="3.2247%" y="485" width="0.0191%" height="15" fill="rgb(222,201,40)" fg:x="2865" fg:w="17"/><text x="3.4747%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="3.2258%" y="469" width="0.0180%" height="15" fill="rgb(235,61,29)" fg:x="2866" fg:w="16"/><text x="3.4758%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (16 samples, 0.02%)</title><rect x="3.2258%" y="453" width="0.0180%" height="15" fill="rgb(219,207,3)" fg:x="2866" fg:w="16"/><text x="3.4758%" y="463.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (16 samples, 0.02%)</title><rect x="3.2258%" y="437" width="0.0180%" height="15" fill="rgb(222,56,46)" fg:x="2866" fg:w="16"/><text x="3.4758%" y="447.50"></text></g><g><title>wgpu::Instance::request_adapter (18 samples, 0.02%)</title><rect x="3.2247%" y="693" width="0.0203%" height="15" fill="rgb(239,76,54)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (18 samples, 0.02%)</title><rect x="3.2247%" y="677" width="0.0203%" height="15" fill="rgb(231,124,27)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (18 samples, 0.02%)</title><rect x="3.2247%" y="661" width="0.0203%" height="15" fill="rgb(249,195,6)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="671.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (18 samples, 0.02%)</title><rect x="3.2247%" y="645" width="0.0203%" height="15" fill="rgb(237,174,47)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="655.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (18 samples, 0.02%)</title><rect x="3.2247%" y="629" width="0.0203%" height="15" fill="rgb(206,201,31)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (18 samples, 0.02%)</title><rect x="3.2247%" y="613" width="0.0203%" height="15" fill="rgb(231,57,52)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (18 samples, 0.02%)</title><rect x="3.2247%" y="597" width="0.0203%" height="15" fill="rgb(248,177,22)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (18 samples, 0.02%)</title><rect x="3.2247%" y="581" width="0.0203%" height="15" fill="rgb(215,211,37)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (18 samples, 0.02%)</title><rect x="3.2247%" y="565" width="0.0203%" height="15" fill="rgb(241,128,51)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="575.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (18 samples, 0.02%)</title><rect x="3.2247%" y="549" width="0.0203%" height="15" fill="rgb(227,165,31)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="559.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (18 samples, 0.02%)</title><rect x="3.2247%" y="533" width="0.0203%" height="15" fill="rgb(228,167,24)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="543.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (18 samples, 0.02%)</title><rect x="3.2247%" y="517" width="0.0203%" height="15" fill="rgb(228,143,12)" fg:x="2865" fg:w="18"/><text x="3.4747%" y="527.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (30 samples, 0.03%)</title><rect x="3.2213%" y="725" width="0.0338%" height="15" fill="rgb(249,149,8)" fg:x="2862" fg:w="30"/><text x="3.4713%" y="735.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (27 samples, 0.03%)</title><rect x="3.2247%" y="709" width="0.0304%" height="15" fill="rgb(243,35,44)" fg:x="2865" fg:w="27"/><text x="3.4747%" y="719.50"></text></g><g><title>wgpu::Surface::configure (9 samples, 0.01%)</title><rect x="3.2450%" y="693" width="0.0101%" height="15" fill="rgb(246,89,9)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="703.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (9 samples, 0.01%)</title><rect x="3.2450%" y="677" width="0.0101%" height="15" fill="rgb(233,213,13)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (9 samples, 0.01%)</title><rect x="3.2450%" y="661" width="0.0101%" height="15" fill="rgb(233,141,41)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (9 samples, 0.01%)</title><rect x="3.2450%" y="645" width="0.0101%" height="15" fill="rgb(239,167,4)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (9 samples, 0.01%)</title><rect x="3.2450%" y="629" width="0.0101%" height="15" fill="rgb(209,217,16)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (9 samples, 0.01%)</title><rect x="3.2450%" y="613" width="0.0101%" height="15" fill="rgb(219,88,35)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="623.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (9 samples, 0.01%)</title><rect x="3.2450%" y="597" width="0.0101%" height="15" fill="rgb(220,193,23)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="607.50"></text></g><g><title>[libvulkan.so.1.3.204] (9 samples, 0.01%)</title><rect x="3.2450%" y="581" width="0.0101%" height="15" fill="rgb(230,90,52)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="591.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="565" width="0.0101%" height="15" fill="rgb(252,106,19)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="549" width="0.0101%" height="15" fill="rgb(206,74,20)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="533" width="0.0101%" height="15" fill="rgb(230,138,44)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="517" width="0.0101%" height="15" fill="rgb(235,182,43)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="501" width="0.0101%" height="15" fill="rgb(242,16,51)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="485" width="0.0101%" height="15" fill="rgb(248,9,4)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="469" width="0.0101%" height="15" fill="rgb(210,31,22)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="453" width="0.0101%" height="15" fill="rgb(239,54,39)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="437" width="0.0101%" height="15" fill="rgb(230,99,41)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="421" width="0.0101%" height="15" fill="rgb(253,106,12)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.2450%" y="405" width="0.0101%" height="15" fill="rgb(213,46,41)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="415.50"></text></g><g><title>__GI___ioctl (9 samples, 0.01%)</title><rect x="3.2450%" y="389" width="0.0101%" height="15" fill="rgb(215,133,35)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="399.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.2450%" y="373" width="0.0101%" height="15" fill="rgb(213,28,5)" fg:x="2883" fg:w="9"/><text x="3.4950%" y="383.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (13 samples, 0.01%)</title><rect x="3.2562%" y="517" width="0.0146%" height="15" fill="rgb(215,77,49)" fg:x="2893" fg:w="13"/><text x="3.5062%" y="527.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (19 samples, 0.02%)</title><rect x="3.2551%" y="725" width="0.0214%" height="15" fill="rgb(248,100,22)" fg:x="2892" fg:w="19"/><text x="3.5051%" y="735.50"></text></g><g><title>wgpu::Instance::request_adapter (18 samples, 0.02%)</title><rect x="3.2562%" y="709" width="0.0203%" height="15" fill="rgb(208,67,9)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="719.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (18 samples, 0.02%)</title><rect x="3.2562%" y="693" width="0.0203%" height="15" fill="rgb(219,133,21)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="703.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (18 samples, 0.02%)</title><rect x="3.2562%" y="677" width="0.0203%" height="15" fill="rgb(246,46,29)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="687.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (18 samples, 0.02%)</title><rect x="3.2562%" y="661" width="0.0203%" height="15" fill="rgb(246,185,52)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="671.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (18 samples, 0.02%)</title><rect x="3.2562%" y="645" width="0.0203%" height="15" fill="rgb(252,136,11)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::enumerate_adapters (18 samples, 0.02%)</title><rect x="3.2562%" y="629" width="0.0203%" height="15" fill="rgb(219,138,53)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="639.50"></text></g><g><title>ash::instance::Instance::enumerate_physical_devices (18 samples, 0.02%)</title><rect x="3.2562%" y="613" width="0.0203%" height="15" fill="rgb(211,51,23)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="623.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (18 samples, 0.02%)</title><rect x="3.2562%" y="597" width="0.0203%" height="15" fill="rgb(247,221,28)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="607.50"></text></g><g><title>ash::instance::Instance::enumerate_physical_devices::{{closure}} (18 samples, 0.02%)</title><rect x="3.2562%" y="581" width="0.0203%" height="15" fill="rgb(251,222,45)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="591.50"></text></g><g><title>vkEnumeratePhysicalDevices (18 samples, 0.02%)</title><rect x="3.2562%" y="565" width="0.0203%" height="15" fill="rgb(217,162,53)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (18 samples, 0.02%)</title><rect x="3.2562%" y="549" width="0.0203%" height="15" fill="rgb(229,93,14)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="559.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (18 samples, 0.02%)</title><rect x="3.2562%" y="533" width="0.0203%" height="15" fill="rgb(209,67,49)" fg:x="2893" fg:w="18"/><text x="3.5062%" y="543.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (68 samples, 0.08%)</title><rect x="3.2765%" y="725" width="0.0765%" height="15" fill="rgb(213,87,29)" fg:x="2911" fg:w="68"/><text x="3.5265%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (119 samples, 0.13%)</title><rect x="3.3598%" y="725" width="0.1339%" height="15" fill="rgb(205,151,52)" fg:x="2985" fg:w="119"/><text x="3.6098%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (66 samples, 0.07%)</title><rect x="3.4937%" y="725" width="0.0743%" height="15" fill="rgb(253,215,39)" fg:x="3104" fg:w="66"/><text x="3.7437%" y="735.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (21 samples, 0.02%)</title><rect x="3.5703%" y="725" width="0.0236%" height="15" fill="rgb(221,220,41)" fg:x="3172" fg:w="21"/><text x="3.8203%" y="735.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (163 samples, 0.18%)</title><rect x="3.5939%" y="725" width="0.1835%" height="15" fill="rgb(218,133,21)" fg:x="3193" fg:w="163"/><text x="3.8439%" y="735.50"></text></g><g><title>[libudev.so.1.7.2] (9 samples, 0.01%)</title><rect x="3.7875%" y="437" width="0.0101%" height="15" fill="rgb(221,193,43)" fg:x="3365" fg:w="9"/><text x="4.0375%" y="447.50"></text></g><g><title>[libudev.so.1.7.2] (16 samples, 0.02%)</title><rect x="3.7864%" y="453" width="0.0180%" height="15" fill="rgb(240,128,52)" fg:x="3364" fg:w="16"/><text x="4.0364%" y="463.50"></text></g><g><title>__GI___close (11 samples, 0.01%)</title><rect x="3.8044%" y="453" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="3380" fg:w="11"/><text x="4.0544%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="3.8044%" y="437" width="0.0124%" height="15" fill="rgb(215,223,47)" fg:x="3380" fg:w="11"/><text x="4.0544%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.8066%" y="421" width="0.0101%" height="15" fill="rgb(248,225,23)" fg:x="3382" fg:w="9"/><text x="4.0566%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="3.8066%" y="405" width="0.0101%" height="15" fill="rgb(250,108,0)" fg:x="3382" fg:w="9"/><text x="4.0566%" y="415.50"></text></g><g><title>[libudev.so.1.7.2] (33 samples, 0.04%)</title><rect x="3.7864%" y="469" width="0.0371%" height="15" fill="rgb(228,208,7)" fg:x="3364" fg:w="33"/><text x="4.0364%" y="479.50"></text></g><g><title>__GI___fstatat64 (10 samples, 0.01%)</title><rect x="3.8246%" y="469" width="0.0113%" height="15" fill="rgb(244,45,10)" fg:x="3398" fg:w="10"/><text x="4.0746%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="3.8246%" y="453" width="0.0113%" height="15" fill="rgb(207,125,25)" fg:x="3398" fg:w="10"/><text x="4.0746%" y="463.50"></text></g><g><title>[libudev.so.1.7.2] (70 samples, 0.08%)</title><rect x="3.7864%" y="485" width="0.0788%" height="15" fill="rgb(210,195,18)" fg:x="3364" fg:w="70"/><text x="4.0364%" y="495.50"></text></g><g><title>__libc_openat64 (25 samples, 0.03%)</title><rect x="3.8370%" y="469" width="0.0281%" height="15" fill="rgb(249,80,12)" fg:x="3409" fg:w="25"/><text x="4.0870%" y="479.50"></text></g><g><title>[unknown] (24 samples, 0.03%)</title><rect x="3.8381%" y="453" width="0.0270%" height="15" fill="rgb(221,65,9)" fg:x="3410" fg:w="24"/><text x="4.0881%" y="463.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="3.8426%" y="437" width="0.0225%" height="15" fill="rgb(235,49,36)" fg:x="3414" fg:w="20"/><text x="4.0926%" y="447.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="3.8449%" y="421" width="0.0203%" height="15" fill="rgb(225,32,20)" fg:x="3416" fg:w="18"/><text x="4.0949%" y="431.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="3.8471%" y="405" width="0.0180%" height="15" fill="rgb(215,141,46)" fg:x="3418" fg:w="16"/><text x="4.0971%" y="415.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="3.8494%" y="389" width="0.0158%" height="15" fill="rgb(250,160,47)" fg:x="3420" fg:w="14"/><text x="4.0994%" y="399.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="3.8505%" y="373" width="0.0146%" height="15" fill="rgb(216,222,40)" fg:x="3421" fg:w="13"/><text x="4.1005%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="3.8517%" y="357" width="0.0135%" height="15" fill="rgb(234,217,39)" fg:x="3422" fg:w="12"/><text x="4.1017%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="3.8539%" y="341" width="0.0113%" height="15" fill="rgb(207,178,40)" fg:x="3424" fg:w="10"/><text x="4.1039%" y="351.50"></text></g><g><title>[libudev.so.1.7.2] (85 samples, 0.10%)</title><rect x="3.7864%" y="501" width="0.0957%" height="15" fill="rgb(221,136,13)" fg:x="3364" fg:w="85"/><text x="4.0364%" y="511.50"></text></g><g><title>[libudev.so.1.7.2] (86 samples, 0.10%)</title><rect x="3.7864%" y="517" width="0.0968%" height="15" fill="rgb(249,199,10)" fg:x="3364" fg:w="86"/><text x="4.0364%" y="527.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (88 samples, 0.10%)</title><rect x="3.7864%" y="661" width="0.0990%" height="15" fill="rgb(249,222,13)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="671.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (88 samples, 0.10%)</title><rect x="3.7864%" y="645" width="0.0990%" height="15" fill="rgb(244,185,38)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="655.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (88 samples, 0.10%)</title><rect x="3.7864%" y="629" width="0.0990%" height="15" fill="rgb(236,202,9)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="639.50"></text></g><g><title>gilrs_core::Gilrs::new (88 samples, 0.10%)</title><rect x="3.7864%" y="613" width="0.0990%" height="15" fill="rgb(250,229,37)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="623.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (88 samples, 0.10%)</title><rect x="3.7864%" y="597" width="0.0990%" height="15" fill="rgb(206,174,23)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="607.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (88 samples, 0.10%)</title><rect x="3.7864%" y="581" width="0.0990%" height="15" fill="rgb(211,33,43)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="591.50"></text></g><g><title>udev_enumerate_scan_devices (88 samples, 0.10%)</title><rect x="3.7864%" y="565" width="0.0990%" height="15" fill="rgb(245,58,50)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="575.50"></text></g><g><title>[libudev.so.1.7.2] (88 samples, 0.10%)</title><rect x="3.7864%" y="549" width="0.0990%" height="15" fill="rgb(244,68,36)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="559.50"></text></g><g><title>[libudev.so.1.7.2] (88 samples, 0.10%)</title><rect x="3.7864%" y="533" width="0.0990%" height="15" fill="rgb(232,229,15)" fg:x="3364" fg:w="88"/><text x="4.0364%" y="543.50"></text></g><g><title>ggez::context::ContextBuilder::build (91 samples, 0.10%)</title><rect x="3.7841%" y="693" width="0.1024%" height="15" fill="rgb(254,30,23)" fg:x="3362" fg:w="91"/><text x="4.0341%" y="703.50"></text></g><g><title>ggez::context::Context::from_conf (91 samples, 0.10%)</title><rect x="3.7841%" y="677" width="0.1024%" height="15" fill="rgb(235,160,14)" fg:x="3362" fg:w="91"/><text x="4.0341%" y="687.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (9 samples, 0.01%)</title><rect x="3.8865%" y="581" width="0.0101%" height="15" fill="rgb(212,155,44)" fg:x="3453" fg:w="9"/><text x="4.1365%" y="591.50"></text></g><g><title>XCheckIfEvent (9 samples, 0.01%)</title><rect x="3.8865%" y="565" width="0.0101%" height="15" fill="rgb(226,2,50)" fg:x="3453" fg:w="9"/><text x="4.1365%" y="575.50"></text></g><g><title>_XEventsQueued (9 samples, 0.01%)</title><rect x="3.8865%" y="549" width="0.0101%" height="15" fill="rgb(234,177,6)" fg:x="3453" fg:w="9"/><text x="4.1365%" y="559.50"></text></g><g><title>[libX11.so.6.4.0] (9 samples, 0.01%)</title><rect x="3.8865%" y="533" width="0.0101%" height="15" fill="rgb(217,24,9)" fg:x="3453" fg:w="9"/><text x="4.1365%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (12 samples, 0.01%)</title><rect x="3.8865%" y="597" width="0.0135%" height="15" fill="rgb(220,13,46)" fg:x="3453" fg:w="12"/><text x="4.1365%" y="607.50"></text></g><g><title>wgpu::Device::create_bind_group (24 samples, 0.03%)</title><rect x="3.9349%" y="485" width="0.0270%" height="15" fill="rgb(239,221,27)" fg:x="3496" fg:w="24"/><text x="4.1849%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (24 samples, 0.03%)</title><rect x="3.9349%" y="469" width="0.0270%" height="15" fill="rgb(222,198,25)" fg:x="3496" fg:w="24"/><text x="4.1849%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (24 samples, 0.03%)</title><rect x="3.9349%" y="453" width="0.0270%" height="15" fill="rgb(211,99,13)" fg:x="3496" fg:w="24"/><text x="4.1849%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (21 samples, 0.02%)</title><rect x="3.9383%" y="437" width="0.0236%" height="15" fill="rgb(232,111,31)" fg:x="3499" fg:w="21"/><text x="4.1883%" y="447.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (21 samples, 0.02%)</title><rect x="3.9383%" y="421" width="0.0236%" height="15" fill="rgb(245,82,37)" fg:x="3499" fg:w="21"/><text x="4.1883%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (13 samples, 0.01%)</title><rect x="3.9473%" y="405" width="0.0146%" height="15" fill="rgb(227,149,46)" fg:x="3507" fg:w="13"/><text x="4.1973%" y="415.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::allocate (10 samples, 0.01%)</title><rect x="3.9507%" y="389" width="0.0113%" height="15" fill="rgb(218,36,50)" fg:x="3510" fg:w="10"/><text x="4.2007%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (10 samples, 0.01%)</title><rect x="3.9833%" y="357" width="0.0113%" height="15" fill="rgb(226,80,48)" fg:x="3539" fg:w="10"/><text x="4.2333%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="3.9845%" y="341" width="0.0101%" height="15" fill="rgb(238,224,15)" fg:x="3540" fg:w="9"/><text x="4.2345%" y="351.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (10 samples, 0.01%)</title><rect x="3.9968%" y="341" width="0.0113%" height="15" fill="rgb(241,136,10)" fg:x="3551" fg:w="10"/><text x="4.2468%" y="351.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (25 samples, 0.03%)</title><rect x="3.9833%" y="389" width="0.0281%" height="15" fill="rgb(208,32,45)" fg:x="3539" fg:w="25"/><text x="4.2333%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (25 samples, 0.03%)</title><rect x="3.9833%" y="373" width="0.0281%" height="15" fill="rgb(207,135,9)" fg:x="3539" fg:w="25"/><text x="4.2333%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="3.9946%" y="357" width="0.0169%" height="15" fill="rgb(206,86,44)" fg:x="3549" fg:w="15"/><text x="4.2446%" y="367.50"></text></g><g><title>ash::device::Device::create_buffer (9 samples, 0.01%)</title><rect x="4.0115%" y="389" width="0.0101%" height="15" fill="rgb(245,177,15)" fg:x="3564" fg:w="9"/><text x="4.2615%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="4.0115%" y="373" width="0.0101%" height="15" fill="rgb(206,64,50)" fg:x="3564" fg:w="9"/><text x="4.2615%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (48 samples, 0.05%)</title><rect x="3.9800%" y="405" width="0.0540%" height="15" fill="rgb(234,36,40)" fg:x="3536" fg:w="48"/><text x="4.2300%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (57 samples, 0.06%)</title><rect x="3.9710%" y="421" width="0.0642%" height="15" fill="rgb(213,64,8)" fg:x="3528" fg:w="57"/><text x="4.2210%" y="431.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (102 samples, 0.11%)</title><rect x="3.9248%" y="501" width="0.1148%" height="15" fill="rgb(210,75,36)" fg:x="3487" fg:w="102"/><text x="4.1748%" y="511.50"></text></g><g><title>wgpu::Device::create_buffer (69 samples, 0.08%)</title><rect x="3.9620%" y="485" width="0.0777%" height="15" fill="rgb(229,88,21)" fg:x="3520" fg:w="69"/><text x="4.2120%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (69 samples, 0.08%)</title><rect x="3.9620%" y="469" width="0.0777%" height="15" fill="rgb(252,204,47)" fg:x="3520" fg:w="69"/><text x="4.2120%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (69 samples, 0.08%)</title><rect x="3.9620%" y="453" width="0.0777%" height="15" fill="rgb(208,77,27)" fg:x="3520" fg:w="69"/><text x="4.2120%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (65 samples, 0.07%)</title><rect x="3.9665%" y="437" width="0.0732%" height="15" fill="rgb(221,76,26)" fg:x="3524" fg:w="65"/><text x="4.2165%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,392 samples, 2.69%)</title><rect x="4.0430%" y="437" width="2.6923%" height="15" fill="rgb(225,139,18)" fg:x="3592" fg:w="2392"/><text x="4.2930%" y="447.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (2,392 samples, 2.69%)</title><rect x="4.0430%" y="421" width="2.6923%" height="15" fill="rgb(230,137,11)" fg:x="3592" fg:w="2392"/><text x="4.2930%" y="431.50">__..</text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (20 samples, 0.02%)</title><rect x="6.7365%" y="421" width="0.0225%" height="15" fill="rgb(212,28,1)" fg:x="5985" fg:w="20"/><text x="6.9865%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (20 samples, 0.02%)</title><rect x="6.7365%" y="405" width="0.0225%" height="15" fill="rgb(248,164,17)" fg:x="5985" fg:w="20"/><text x="6.9865%" y="415.50"></text></g><g><title>ash::device::Device::begin_command_buffer (19 samples, 0.02%)</title><rect x="6.7376%" y="389" width="0.0214%" height="15" fill="rgb(222,171,42)" fg:x="5986" fg:w="19"/><text x="6.9876%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="6.7376%" y="373" width="0.0214%" height="15" fill="rgb(243,84,45)" fg:x="5986" fg:w="19"/><text x="6.9876%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.02%)</title><rect x="6.7387%" y="357" width="0.0203%" height="15" fill="rgb(252,49,23)" fg:x="5987" fg:w="18"/><text x="6.9887%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="6.7410%" y="341" width="0.0180%" height="15" fill="rgb(215,19,7)" fg:x="5989" fg:w="16"/><text x="6.9910%" y="351.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::copy_buffer_to_buffer (10 samples, 0.01%)</title><rect x="6.7601%" y="421" width="0.0113%" height="15" fill="rgb(238,81,41)" fg:x="6006" fg:w="10"/><text x="7.0101%" y="431.50"></text></g><g><title>ash::device::Device::cmd_copy_buffer (10 samples, 0.01%)</title><rect x="6.7601%" y="405" width="0.0113%" height="15" fill="rgb(210,199,37)" fg:x="6006" fg:w="10"/><text x="7.0101%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="6.7601%" y="389" width="0.0113%" height="15" fill="rgb(244,192,49)" fg:x="6006" fg:w="10"/><text x="7.0101%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="6.7601%" y="373" width="0.0113%" height="15" fill="rgb(226,211,11)" fg:x="6006" fg:w="10"/><text x="7.0101%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="6.7612%" y="357" width="0.0101%" height="15" fill="rgb(236,162,54)" fg:x="6007" fg:w="9"/><text x="7.0112%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="6.7612%" y="341" width="0.0101%" height="15" fill="rgb(220,229,9)" fg:x="6007" fg:w="9"/><text x="7.0112%" y="351.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (40 samples, 0.05%)</title><rect x="6.7353%" y="437" width="0.0450%" height="15" fill="rgb(250,87,22)" fg:x="5984" fg:w="40"/><text x="6.9853%" y="447.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (2,566 samples, 2.89%)</title><rect x="3.9068%" y="517" width="2.8882%" height="15" fill="rgb(239,43,17)" fg:x="3471" fg:w="2566"/><text x="4.1568%" y="527.50">gg..</text></g><g><title>wgpu::Queue::write_buffer (2,448 samples, 2.76%)</title><rect x="4.0396%" y="501" width="2.7554%" height="15" fill="rgb(231,177,25)" fg:x="3589" fg:w="2448"/><text x="4.2896%" y="511.50">wg..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2,448 samples, 2.76%)</title><rect x="4.0396%" y="485" width="2.7554%" height="15" fill="rgb(219,179,1)" fg:x="3589" fg:w="2448"/><text x="4.2896%" y="495.50">&lt;T..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2,448 samples, 2.76%)</title><rect x="4.0396%" y="469" width="2.7554%" height="15" fill="rgb(238,219,53)" fg:x="3589" fg:w="2448"/><text x="4.2896%" y="479.50">&lt;w..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (2,447 samples, 2.75%)</title><rect x="4.0407%" y="453" width="2.7542%" height="15" fill="rgb(232,167,36)" fg:x="3590" fg:w="2447"/><text x="4.2907%" y="463.50">wg..</text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (11 samples, 0.01%)</title><rect x="6.7826%" y="437" width="0.0124%" height="15" fill="rgb(244,19,51)" fg:x="6026" fg:w="11"/><text x="7.0326%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.01%)</title><rect x="6.7826%" y="421" width="0.0124%" height="15" fill="rgb(224,6,22)" fg:x="6026" fg:w="11"/><text x="7.0326%" y="431.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (9 samples, 0.01%)</title><rect x="6.7849%" y="405" width="0.0101%" height="15" fill="rgb(224,145,5)" fg:x="6028" fg:w="9"/><text x="7.0349%" y="415.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (9 samples, 0.01%)</title><rect x="6.7849%" y="389" width="0.0101%" height="15" fill="rgb(234,130,49)" fg:x="6028" fg:w="9"/><text x="7.0349%" y="399.50"></text></g><g><title>gpu_alloc::freelist::FreeListAllocator&lt;M&gt;::alloc (9 samples, 0.01%)</title><rect x="6.7849%" y="373" width="0.0101%" height="15" fill="rgb(254,6,2)" fg:x="6028" fg:w="9"/><text x="7.0349%" y="383.50"></text></g><g><title>ggez::graphics::canvas::Canvas::draw (2,572 samples, 2.89%)</title><rect x="3.9012%" y="549" width="2.8949%" height="15" fill="rgb(208,96,46)" fg:x="3466" fg:w="2572"/><text x="4.1512%" y="559.50">gg..</text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (2,572 samples, 2.89%)</title><rect x="3.9012%" y="533" width="2.8949%" height="15" fill="rgb(239,3,39)" fg:x="3466" fg:w="2572"/><text x="4.1512%" y="543.50">&lt;g..</text></g><g><title>ggez::graphics::gpu::bind_group::BindGroupLayoutBuilder::create (14 samples, 0.02%)</title><rect x="6.8085%" y="485" width="0.0158%" height="15" fill="rgb(233,210,1)" fg:x="6049" fg:w="14"/><text x="7.0585%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12 samples, 0.01%)</title><rect x="6.8107%" y="469" width="0.0135%" height="15" fill="rgb(244,137,37)" fg:x="6051" fg:w="12"/><text x="7.0607%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 0.01%)</title><rect x="6.8107%" y="453" width="0.0135%" height="15" fill="rgb(240,136,2)" fg:x="6051" fg:w="12"/><text x="7.0607%" y="463.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (24 samples, 0.03%)</title><rect x="6.8051%" y="501" width="0.0270%" height="15" fill="rgb(239,18,37)" fg:x="6046" fg:w="24"/><text x="7.0551%" y="511.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (34 samples, 0.04%)</title><rect x="6.8006%" y="517" width="0.0383%" height="15" fill="rgb(218,185,22)" fg:x="6042" fg:w="34"/><text x="7.0506%" y="527.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (10 samples, 0.01%)</title><rect x="6.8648%" y="389" width="0.0113%" height="15" fill="rgb(225,218,4)" fg:x="6099" fg:w="10"/><text x="7.1148%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (10 samples, 0.01%)</title><rect x="6.8648%" y="373" width="0.0113%" height="15" fill="rgb(230,182,32)" fg:x="6099" fg:w="10"/><text x="7.1148%" y="383.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (64 samples, 0.07%)</title><rect x="6.8389%" y="469" width="0.0720%" height="15" fill="rgb(242,56,43)" fg:x="6076" fg:w="64"/><text x="7.0889%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (64 samples, 0.07%)</title><rect x="6.8389%" y="453" width="0.0720%" height="15" fill="rgb(233,99,24)" fg:x="6076" fg:w="64"/><text x="7.0889%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (64 samples, 0.07%)</title><rect x="6.8389%" y="437" width="0.0720%" height="15" fill="rgb(234,209,42)" fg:x="6076" fg:w="64"/><text x="7.0889%" y="447.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (64 samples, 0.07%)</title><rect x="6.8389%" y="421" width="0.0720%" height="15" fill="rgb(227,7,12)" fg:x="6076" fg:w="64"/><text x="7.0889%" y="431.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (64 samples, 0.07%)</title><rect x="6.8389%" y="405" width="0.0720%" height="15" fill="rgb(245,203,43)" fg:x="6076" fg:w="64"/><text x="7.0889%" y="415.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (65 samples, 0.07%)</title><rect x="6.8389%" y="517" width="0.0732%" height="15" fill="rgb(238,205,33)" fg:x="6076" fg:w="65"/><text x="7.0889%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (65 samples, 0.07%)</title><rect x="6.8389%" y="501" width="0.0732%" height="15" fill="rgb(231,56,7)" fg:x="6076" fg:w="65"/><text x="7.0889%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (65 samples, 0.07%)</title><rect x="6.8389%" y="485" width="0.0732%" height="15" fill="rgb(244,186,29)" fg:x="6076" fg:w="65"/><text x="7.0889%" y="495.50"></text></g><g><title>[libX11.so.6.4.0] (10 samples, 0.01%)</title><rect x="6.9210%" y="357" width="0.0113%" height="15" fill="rgb(234,111,31)" fg:x="6149" fg:w="10"/><text x="7.1710%" y="367.50"></text></g><g><title>[libX11.so.6.4.0] (10 samples, 0.01%)</title><rect x="6.9210%" y="341" width="0.0113%" height="15" fill="rgb(241,149,10)" fg:x="6149" fg:w="10"/><text x="7.1710%" y="351.50"></text></g><g><title>_XSend (29 samples, 0.03%)</title><rect x="6.9323%" y="357" width="0.0326%" height="15" fill="rgb(249,206,44)" fg:x="6159" fg:w="29"/><text x="7.1823%" y="367.50"></text></g><g><title>xcb_writev (29 samples, 0.03%)</title><rect x="6.9323%" y="341" width="0.0326%" height="15" fill="rgb(251,153,30)" fg:x="6159" fg:w="29"/><text x="7.1823%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (29 samples, 0.03%)</title><rect x="6.9323%" y="325" width="0.0326%" height="15" fill="rgb(239,152,38)" fg:x="6159" fg:w="29"/><text x="7.1823%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (28 samples, 0.03%)</title><rect x="6.9334%" y="309" width="0.0315%" height="15" fill="rgb(249,139,47)" fg:x="6160" fg:w="28"/><text x="7.1834%" y="319.50"></text></g><g><title>__GI___writev (23 samples, 0.03%)</title><rect x="6.9391%" y="293" width="0.0259%" height="15" fill="rgb(244,64,35)" fg:x="6165" fg:w="23"/><text x="7.1891%" y="303.50"></text></g><g><title>__GI___writev (23 samples, 0.03%)</title><rect x="6.9391%" y="277" width="0.0259%" height="15" fill="rgb(216,46,15)" fg:x="6165" fg:w="23"/><text x="7.1891%" y="287.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="6.9391%" y="261" width="0.0259%" height="15" fill="rgb(250,74,19)" fg:x="6165" fg:w="23"/><text x="7.1891%" y="271.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="6.9391%" y="245" width="0.0259%" height="15" fill="rgb(249,42,33)" fg:x="6165" fg:w="23"/><text x="7.1891%" y="255.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="6.9402%" y="229" width="0.0248%" height="15" fill="rgb(242,149,17)" fg:x="6166" fg:w="22"/><text x="7.1902%" y="239.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="6.9413%" y="213" width="0.0236%" height="15" fill="rgb(244,29,21)" fg:x="6167" fg:w="21"/><text x="7.1913%" y="223.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="6.9413%" y="197" width="0.0236%" height="15" fill="rgb(220,130,37)" fg:x="6167" fg:w="21"/><text x="7.1913%" y="207.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="6.9424%" y="181" width="0.0225%" height="15" fill="rgb(211,67,2)" fg:x="6168" fg:w="20"/><text x="7.1924%" y="191.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="6.9447%" y="165" width="0.0203%" height="15" fill="rgb(235,68,52)" fg:x="6170" fg:w="18"/><text x="7.1947%" y="175.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="6.9458%" y="149" width="0.0191%" height="15" fill="rgb(246,142,3)" fg:x="6171" fg:w="17"/><text x="7.1958%" y="159.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="6.9458%" y="133" width="0.0191%" height="15" fill="rgb(241,25,7)" fg:x="6171" fg:w="17"/><text x="7.1958%" y="143.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="6.9469%" y="117" width="0.0180%" height="15" fill="rgb(242,119,39)" fg:x="6172" fg:w="16"/><text x="7.1969%" y="127.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="6.9481%" y="101" width="0.0169%" height="15" fill="rgb(241,98,45)" fg:x="6173" fg:w="15"/><text x="7.1981%" y="111.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.9514%" y="85" width="0.0135%" height="15" fill="rgb(254,28,30)" fg:x="6176" fg:w="12"/><text x="7.2014%" y="95.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="6.9514%" y="69" width="0.0135%" height="15" fill="rgb(241,142,54)" fg:x="6176" fg:w="12"/><text x="7.2014%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="6.9526%" y="53" width="0.0124%" height="15" fill="rgb(222,85,15)" fg:x="6177" fg:w="11"/><text x="7.2026%" y="63.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="6.9526%" y="37" width="0.0124%" height="15" fill="rgb(210,85,47)" fg:x="6177" fg:w="11"/><text x="7.2026%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (9 samples, 0.01%)</title><rect x="6.9649%" y="309" width="0.0101%" height="15" fill="rgb(224,206,25)" fg:x="6188" fg:w="9"/><text x="7.2149%" y="319.50"></text></g><g><title>__libc_recvmsg (9 samples, 0.01%)</title><rect x="6.9649%" y="293" width="0.0101%" height="15" fill="rgb(243,201,19)" fg:x="6188" fg:w="9"/><text x="7.2149%" y="303.50"></text></g><g><title>__recvmsg_syscall (9 samples, 0.01%)</title><rect x="6.9649%" y="277" width="0.0101%" height="15" fill="rgb(236,59,4)" fg:x="6188" fg:w="9"/><text x="7.2149%" y="287.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="6.9649%" y="261" width="0.0101%" height="15" fill="rgb(254,179,45)" fg:x="6188" fg:w="9"/><text x="7.2149%" y="271.50"></text></g><g><title>__GI___poll (26 samples, 0.03%)</title><rect x="6.9751%" y="309" width="0.0293%" height="15" fill="rgb(226,14,10)" fg:x="6197" fg:w="26"/><text x="7.2251%" y="319.50"></text></g><g><title>[unknown] (25 samples, 0.03%)</title><rect x="6.9762%" y="293" width="0.0281%" height="15" fill="rgb(244,27,41)" fg:x="6198" fg:w="25"/><text x="7.2262%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="6.9784%" y="277" width="0.0259%" height="15" fill="rgb(235,35,32)" fg:x="6200" fg:w="23"/><text x="7.2284%" y="287.50"></text></g><g><title>[unknown] (23 samples, 0.03%)</title><rect x="6.9784%" y="261" width="0.0259%" height="15" fill="rgb(218,68,31)" fg:x="6200" fg:w="23"/><text x="7.2284%" y="271.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="6.9796%" y="245" width="0.0248%" height="15" fill="rgb(207,120,37)" fg:x="6201" fg:w="22"/><text x="7.2296%" y="255.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="6.9807%" y="229" width="0.0236%" height="15" fill="rgb(227,98,0)" fg:x="6202" fg:w="21"/><text x="7.2307%" y="239.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="6.9818%" y="213" width="0.0225%" height="15" fill="rgb(207,7,3)" fg:x="6203" fg:w="20"/><text x="7.2318%" y="223.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="6.9829%" y="197" width="0.0214%" height="15" fill="rgb(206,98,19)" fg:x="6204" fg:w="19"/><text x="7.2329%" y="207.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="6.9829%" y="181" width="0.0214%" height="15" fill="rgb(217,5,26)" fg:x="6204" fg:w="19"/><text x="7.2329%" y="191.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="6.9852%" y="165" width="0.0191%" height="15" fill="rgb(235,190,38)" fg:x="6206" fg:w="17"/><text x="7.2352%" y="175.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="6.9852%" y="149" width="0.0191%" height="15" fill="rgb(247,86,24)" fg:x="6206" fg:w="17"/><text x="7.2352%" y="159.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="6.9886%" y="133" width="0.0158%" height="15" fill="rgb(205,101,16)" fg:x="6209" fg:w="14"/><text x="7.2386%" y="143.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="6.9942%" y="117" width="0.0101%" height="15" fill="rgb(246,168,33)" fg:x="6214" fg:w="9"/><text x="7.2442%" y="127.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (80 samples, 0.09%)</title><rect x="6.9154%" y="485" width="0.0900%" height="15" fill="rgb(231,114,1)" fg:x="6144" fg:w="80"/><text x="7.1654%" y="495.50"></text></g><g><title>winit::window::Window::inner_size (80 samples, 0.09%)</title><rect x="6.9154%" y="469" width="0.0900%" height="15" fill="rgb(207,184,53)" fg:x="6144" fg:w="80"/><text x="7.1654%" y="479.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (80 samples, 0.09%)</title><rect x="6.9154%" y="453" width="0.0900%" height="15" fill="rgb(224,95,51)" fg:x="6144" fg:w="80"/><text x="7.1654%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (80 samples, 0.09%)</title><rect x="6.9154%" y="437" width="0.0900%" height="15" fill="rgb(212,188,45)" fg:x="6144" fg:w="80"/><text x="7.1654%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (79 samples, 0.09%)</title><rect x="6.9165%" y="421" width="0.0889%" height="15" fill="rgb(223,154,38)" fg:x="6145" fg:w="79"/><text x="7.1665%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (79 samples, 0.09%)</title><rect x="6.9165%" y="405" width="0.0889%" height="15" fill="rgb(251,22,52)" fg:x="6145" fg:w="79"/><text x="7.1665%" y="415.50"></text></g><g><title>XGetGeometry (79 samples, 0.09%)</title><rect x="6.9165%" y="389" width="0.0889%" height="15" fill="rgb(229,209,22)" fg:x="6145" fg:w="79"/><text x="7.1665%" y="399.50"></text></g><g><title>_XReply (76 samples, 0.09%)</title><rect x="6.9199%" y="373" width="0.0855%" height="15" fill="rgb(234,138,34)" fg:x="6148" fg:w="76"/><text x="7.1699%" y="383.50"></text></g><g><title>xcb_wait_for_reply64 (36 samples, 0.04%)</title><rect x="6.9649%" y="357" width="0.0405%" height="15" fill="rgb(212,95,11)" fg:x="6188" fg:w="36"/><text x="7.2149%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (36 samples, 0.04%)</title><rect x="6.9649%" y="341" width="0.0405%" height="15" fill="rgb(240,179,47)" fg:x="6188" fg:w="36"/><text x="7.2149%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (36 samples, 0.04%)</title><rect x="6.9649%" y="325" width="0.0405%" height="15" fill="rgb(240,163,11)" fg:x="6188" fg:w="36"/><text x="7.2149%" y="335.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (9 samples, 0.01%)</title><rect x="7.0268%" y="389" width="0.0101%" height="15" fill="rgb(236,37,12)" fg:x="6243" fg:w="9"/><text x="7.2768%" y="399.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.01%)</title><rect x="7.0268%" y="373" width="0.0101%" height="15" fill="rgb(232,164,16)" fg:x="6243" fg:w="9"/><text x="7.2768%" y="383.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (113 samples, 0.13%)</title><rect x="6.9120%" y="517" width="0.1272%" height="15" fill="rgb(244,205,15)" fg:x="6141" fg:w="113"/><text x="7.1620%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (113 samples, 0.13%)</title><rect x="6.9120%" y="501" width="0.1272%" height="15" fill="rgb(223,117,47)" fg:x="6141" fg:w="113"/><text x="7.1620%" y="511.50"></text></g><g><title>wgpu::Queue::write_buffer (22 samples, 0.02%)</title><rect x="7.0145%" y="485" width="0.0248%" height="15" fill="rgb(244,107,35)" fg:x="6232" fg:w="22"/><text x="7.2645%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (22 samples, 0.02%)</title><rect x="7.0145%" y="469" width="0.0248%" height="15" fill="rgb(205,140,8)" fg:x="6232" fg:w="22"/><text x="7.2645%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (22 samples, 0.02%)</title><rect x="7.0145%" y="453" width="0.0248%" height="15" fill="rgb(228,84,46)" fg:x="6232" fg:w="22"/><text x="7.2645%" y="463.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (20 samples, 0.02%)</title><rect x="7.0167%" y="437" width="0.0225%" height="15" fill="rgb(254,188,9)" fg:x="6234" fg:w="20"/><text x="7.2667%" y="447.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (11 samples, 0.01%)</title><rect x="7.0268%" y="421" width="0.0124%" height="15" fill="rgb(206,112,54)" fg:x="6243" fg:w="11"/><text x="7.2768%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.01%)</title><rect x="7.0268%" y="405" width="0.0124%" height="15" fill="rgb(216,84,49)" fg:x="6243" fg:w="11"/><text x="7.2768%" y="415.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (225 samples, 0.25%)</title><rect x="6.7961%" y="549" width="0.2533%" height="15" fill="rgb(214,194,35)" fg:x="6038" fg:w="225"/><text x="7.0461%" y="559.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (223 samples, 0.25%)</title><rect x="6.7984%" y="533" width="0.2510%" height="15" fill="rgb(249,28,3)" fg:x="6040" fg:w="223"/><text x="7.0484%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="7.0527%" y="501" width="0.0146%" height="15" fill="rgb(222,56,52)" fg:x="6266" fg:w="13"/><text x="7.3027%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="7.0899%" y="485" width="0.0135%" height="15" fill="rgb(245,217,50)" fg:x="6299" fg:w="12"/><text x="7.3399%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (85 samples, 0.10%)</title><rect x="7.2103%" y="453" width="0.0957%" height="15" fill="rgb(213,201,24)" fg:x="6406" fg:w="85"/><text x="7.4603%" y="463.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (58 samples, 0.07%)</title><rect x="7.2407%" y="437" width="0.0653%" height="15" fill="rgb(248,116,28)" fg:x="6433" fg:w="58"/><text x="7.4907%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.07%)</title><rect x="7.3060%" y="453" width="0.0698%" height="15" fill="rgb(219,72,43)" fg:x="6491" fg:w="62"/><text x="7.5560%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="7.3352%" y="437" width="0.0405%" height="15" fill="rgb(209,138,14)" fg:x="6517" fg:w="36"/><text x="7.5852%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (15 samples, 0.02%)</title><rect x="7.3589%" y="421" width="0.0169%" height="15" fill="rgb(222,18,33)" fg:x="6538" fg:w="15"/><text x="7.6089%" y="431.50"></text></g><g><title>slotmap::KeyData::new (32 samples, 0.04%)</title><rect x="7.3758%" y="453" width="0.0360%" height="15" fill="rgb(213,199,7)" fg:x="6553" fg:w="32"/><text x="7.6258%" y="463.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (687 samples, 0.77%)</title><rect x="7.1034%" y="469" width="0.7733%" height="15" fill="rgb(250,110,10)" fg:x="6311" fg:w="687"/><text x="7.3534%" y="479.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::get (413 samples, 0.46%)</title><rect x="7.4118%" y="453" width="0.4649%" height="15" fill="rgb(248,123,6)" fg:x="6585" fg:w="413"/><text x="7.6618%" y="463.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::occupied (413 samples, 0.46%)</title><rect x="7.4118%" y="437" width="0.4649%" height="15" fill="rgb(206,91,31)" fg:x="6585" fg:w="413"/><text x="7.6618%" y="447.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (26 samples, 0.03%)</title><rect x="10.5678%" y="405" width="0.0293%" height="15" fill="rgb(211,154,13)" fg:x="9389" fg:w="26"/><text x="10.8178%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (1,527 samples, 1.72%)</title><rect x="8.9437%" y="421" width="1.7187%" height="15" fill="rgb(225,148,7)" fg:x="7946" fg:w="1527"/><text x="9.1937%" y="431.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (52 samples, 0.06%)</title><rect x="10.6039%" y="405" width="0.0585%" height="15" fill="rgb(220,160,43)" fg:x="9421" fg:w="52"/><text x="10.8539%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (200 samples, 0.23%)</title><rect x="10.6624%" y="421" width="0.2251%" height="15" fill="rgb(213,52,39)" fg:x="9473" fg:w="200"/><text x="10.9124%" y="431.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (166 samples, 0.19%)</title><rect x="10.7007%" y="405" width="0.1868%" height="15" fill="rgb(243,137,7)" fg:x="9507" fg:w="166"/><text x="10.9507%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (1,026 samples, 1.15%)</title><rect x="10.8875%" y="421" width="1.1548%" height="15" fill="rgb(230,79,13)" fg:x="9673" fg:w="1026"/><text x="11.1375%" y="431.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (3,077 samples, 3.46%)</title><rect x="8.8289%" y="437" width="3.4633%" height="15" fill="rgb(247,105,23)" fg:x="7844" fg:w="3077"/><text x="9.0789%" y="447.50">&lt;ne..</text></g><g><title>ggez::graphics::draw::DrawParam::scale (222 samples, 0.25%)</title><rect x="12.0423%" y="421" width="0.2499%" height="15" fill="rgb(223,179,41)" fg:x="10699" fg:w="222"/><text x="12.2923%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,658 samples, 5.24%)</title><rect x="7.1034%" y="485" width="5.2428%" height="15" fill="rgb(218,9,34)" fg:x="6311" fg:w="4658"/><text x="7.3534%" y="495.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (3,971 samples, 4.47%)</title><rect x="7.8766%" y="469" width="4.4696%" height="15" fill="rgb(222,106,8)" fg:x="6998" fg:w="3971"/><text x="8.1266%" y="479.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,155 samples, 3.55%)</title><rect x="8.7951%" y="453" width="3.5511%" height="15" fill="rgb(211,220,0)" fg:x="7814" fg:w="3155"/><text x="9.0451%" y="463.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (48 samples, 0.05%)</title><rect x="12.2922%" y="437" width="0.0540%" height="15" fill="rgb(229,52,16)" fg:x="10921" fg:w="48"/><text x="12.5422%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (12 samples, 0.01%)</title><rect x="12.3552%" y="485" width="0.0135%" height="15" fill="rgb(212,155,18)" fg:x="10977" fg:w="12"/><text x="12.6052%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.02%)</title><rect x="12.3766%" y="485" width="0.0191%" height="15" fill="rgb(242,21,14)" fg:x="10996" fg:w="17"/><text x="12.6266%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,912 samples, 5.53%)</title><rect x="7.0674%" y="501" width="5.5287%" height="15" fill="rgb(222,19,48)" fg:x="6279" fg:w="4912"/><text x="7.3174%" y="511.50">alloc::..</text></g><g><title>core::ptr::write (178 samples, 0.20%)</title><rect x="12.3957%" y="485" width="0.2003%" height="15" fill="rgb(232,45,27)" fg:x="11013" fg:w="178"/><text x="12.6457%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.05%)</title><rect x="12.5961%" y="437" width="0.0450%" height="15" fill="rgb(249,103,42)" fg:x="11191" fg:w="40"/><text x="12.8461%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (315 samples, 0.35%)</title><rect x="12.6411%" y="421" width="0.3546%" height="15" fill="rgb(246,81,33)" fg:x="11231" fg:w="315"/><text x="12.8911%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (315 samples, 0.35%)</title><rect x="12.6411%" y="405" width="0.3546%" height="15" fill="rgb(252,33,42)" fg:x="11231" fg:w="315"/><text x="12.8911%" y="415.50"></text></g><g><title>core::ptr::write (315 samples, 0.35%)</title><rect x="12.6411%" y="389" width="0.3546%" height="15" fill="rgb(209,212,41)" fg:x="11231" fg:w="315"/><text x="12.8911%" y="399.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (128 samples, 0.14%)</title><rect x="13.3648%" y="389" width="0.1441%" height="15" fill="rgb(207,154,6)" fg:x="11874" fg:w="128"/><text x="13.6148%" y="399.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (128 samples, 0.14%)</title><rect x="13.3648%" y="373" width="0.1441%" height="15" fill="rgb(223,64,47)" fg:x="11874" fg:w="128"/><text x="13.6148%" y="383.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (128 samples, 0.14%)</title><rect x="13.3648%" y="357" width="0.1441%" height="15" fill="rgb(211,161,38)" fg:x="11874" fg:w="128"/><text x="13.6148%" y="367.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (980 samples, 1.10%)</title><rect x="13.0441%" y="405" width="1.1030%" height="15" fill="rgb(219,138,40)" fg:x="11589" fg:w="980"/><text x="13.2941%" y="415.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (567 samples, 0.64%)</title><rect x="13.5089%" y="389" width="0.6382%" height="15" fill="rgb(241,228,46)" fg:x="12002" fg:w="567"/><text x="13.7589%" y="399.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (567 samples, 0.64%)</title><rect x="13.5089%" y="373" width="0.6382%" height="15" fill="rgb(223,209,38)" fg:x="12002" fg:w="567"/><text x="13.7589%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (102 samples, 0.11%)</title><rect x="15.9390%" y="357" width="0.1148%" height="15" fill="rgb(236,164,45)" fg:x="14161" fg:w="102"/><text x="16.1890%" y="367.50"></text></g><g><title>asuint (79 samples, 0.09%)</title><rect x="17.2694%" y="325" width="0.0889%" height="15" fill="rgb(231,15,5)" fg:x="15343" fg:w="79"/><text x="17.5194%" y="335.50"></text></g><g><title>exp2_inline (1,790 samples, 2.01%)</title><rect x="17.3583%" y="325" width="2.0147%" height="15" fill="rgb(252,35,15)" fg:x="15422" fg:w="1790"/><text x="17.6083%" y="335.50">e..</text></g><g><title>asuint64 (75 samples, 0.08%)</title><rect x="19.2886%" y="309" width="0.0844%" height="15" fill="rgb(248,181,18)" fg:x="17137" fg:w="75"/><text x="19.5386%" y="319.50"></text></g><g><title>log2_inline (1,018 samples, 1.15%)</title><rect x="19.3731%" y="325" width="1.1458%" height="15" fill="rgb(233,39,42)" fg:x="17212" fg:w="1018"/><text x="19.6231%" y="335.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (4,421 samples, 4.98%)</title><rect x="15.6250%" y="373" width="4.9761%" height="15" fill="rgb(238,110,33)" fg:x="13882" fg:w="4421"/><text x="15.8750%" y="383.50">&lt;ggez:..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (4,040 samples, 4.55%)</title><rect x="16.0538%" y="357" width="4.5472%" height="15" fill="rgb(233,195,10)" fg:x="14263" fg:w="4040"/><text x="16.3038%" y="367.50">std::..</text></g><g><title>__powf_fma (4,017 samples, 4.52%)</title><rect x="16.0797%" y="341" width="4.5214%" height="15" fill="rgb(254,105,3)" fg:x="14286" fg:w="4017"/><text x="16.3297%" y="351.50">__pow..</text></g><g><title>zeroinfnan (73 samples, 0.08%)</title><rect x="20.5189%" y="325" width="0.0822%" height="15" fill="rgb(221,225,9)" fg:x="18230" fg:w="73"/><text x="20.7689%" y="335.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (4,449 samples, 5.01%)</title><rect x="15.6250%" y="389" width="5.0076%" height="15" fill="rgb(224,227,45)" fg:x="13882" fg:w="4449"/><text x="15.8750%" y="399.50">&lt;ggez:..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (28 samples, 0.03%)</title><rect x="20.6010%" y="373" width="0.0315%" height="15" fill="rgb(229,198,43)" fg:x="18303" fg:w="28"/><text x="20.8510%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (66 samples, 0.07%)</title><rect x="20.6348%" y="389" width="0.0743%" height="15" fill="rgb(206,209,35)" fg:x="18333" fg:w="66"/><text x="20.8848%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (106 samples, 0.12%)</title><rect x="21.7480%" y="373" width="0.1193%" height="15" fill="rgb(245,195,53)" fg:x="19322" fg:w="106"/><text x="21.9980%" y="383.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (78 samples, 0.09%)</title><rect x="21.7795%" y="357" width="0.0878%" height="15" fill="rgb(240,92,26)" fg:x="19350" fg:w="78"/><text x="22.0295%" y="367.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::transpose (135 samples, 0.15%)</title><rect x="21.8695%" y="373" width="0.1520%" height="15" fill="rgb(207,40,23)" fg:x="19430" fg:w="135"/><text x="22.1195%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (79 samples, 0.09%)</title><rect x="21.9326%" y="357" width="0.0889%" height="15" fill="rgb(223,111,35)" fg:x="19486" fg:w="79"/><text x="22.1826%" y="367.50"></text></g><g><title>abstop12 (26 samples, 0.03%)</title><rect x="22.2196%" y="325" width="0.0293%" height="15" fill="rgb(229,147,28)" fg:x="19741" fg:w="26"/><text x="22.4696%" y="335.50"></text></g><g><title>reduce_fast (85 samples, 0.10%)</title><rect x="22.2489%" y="325" width="0.0957%" height="15" fill="rgb(211,29,28)" fg:x="19767" fg:w="85"/><text x="22.4989%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8,977 samples, 10.10%)</title><rect x="12.6411%" y="437" width="10.1041%" height="15" fill="rgb(228,72,33)" fg:x="11231" fg:w="8977"/><text x="12.8911%" y="447.50">core::iter::ada..</text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (8,662 samples, 9.75%)</title><rect x="12.9957%" y="421" width="9.7496%" height="15" fill="rgb(205,214,31)" fg:x="11546" fg:w="8662"/><text x="13.2457%" y="431.50">ggez::graphics..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (7,639 samples, 8.60%)</title><rect x="14.1471%" y="405" width="8.5981%" height="15" fill="rgb(224,111,15)" fg:x="12569" fg:w="7639"/><text x="14.3971%" y="415.50">ggez::graphi..</text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (1,809 samples, 2.04%)</title><rect x="20.7091%" y="389" width="2.0361%" height="15" fill="rgb(253,21,26)" fg:x="18399" fg:w="1809"/><text x="20.9591%" y="399.50">g..</text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (643 samples, 0.72%)</title><rect x="22.0215%" y="373" width="0.7237%" height="15" fill="rgb(245,139,43)" fg:x="19565" fg:w="643"/><text x="22.2715%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (643 samples, 0.72%)</title><rect x="22.0215%" y="357" width="0.7237%" height="15" fill="rgb(252,170,7)" fg:x="19565" fg:w="643"/><text x="22.2715%" y="367.50"></text></g><g><title>__sincosf_fma (643 samples, 0.72%)</title><rect x="22.0215%" y="341" width="0.7237%" height="15" fill="rgb(231,118,14)" fg:x="19565" fg:w="643"/><text x="22.2715%" y="351.50"></text></g><g><title>sincosf_poly (356 samples, 0.40%)</title><rect x="22.3445%" y="325" width="0.4007%" height="15" fill="rgb(238,83,0)" fg:x="19852" fg:w="356"/><text x="22.5945%" y="335.50"></text></g><g><title>v2df_to_sf (124 samples, 0.14%)</title><rect x="22.6057%" y="309" width="0.1396%" height="15" fill="rgb(221,39,39)" fg:x="20084" fg:w="124"/><text x="22.8557%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9,019 samples, 10.15%)</title><rect x="12.5961%" y="453" width="10.1514%" height="15" fill="rgb(222,119,46)" fg:x="11191" fg:w="9019"/><text x="12.8461%" y="463.50">core::iter::tra..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (16,748 samples, 18.85%)</title><rect x="3.9001%" y="565" width="18.8508%" height="15" fill="rgb(222,165,49)" fg:x="3465" fg:w="16748"/><text x="4.1501%" y="575.50">&lt;neuralang::MainState as ggez..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (13,947 samples, 15.70%)</title><rect x="7.0527%" y="549" width="15.6981%" height="15" fill="rgb(219,113,52)" fg:x="6266" fg:w="13947"/><text x="7.3027%" y="559.50">ggez::graphics::instance..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (13,947 samples, 15.70%)</title><rect x="7.0527%" y="533" width="15.6981%" height="15" fill="rgb(214,7,15)" fg:x="6266" fg:w="13947"/><text x="7.3027%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (13,947 samples, 15.70%)</title><rect x="7.0527%" y="517" width="15.6981%" height="15" fill="rgb(235,32,4)" fg:x="6266" fg:w="13947"/><text x="7.3027%" y="527.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (9,022 samples, 10.15%)</title><rect x="12.5961%" y="501" width="10.1548%" height="15" fill="rgb(238,90,54)" fg:x="11191" fg:w="9022"/><text x="12.8461%" y="511.50">alloc::vec::Vec..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9,022 samples, 10.15%)</title><rect x="12.5961%" y="485" width="10.1548%" height="15" fill="rgb(213,208,19)" fg:x="11191" fg:w="9022"/><text x="12.8461%" y="495.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9,022 samples, 10.15%)</title><rect x="12.5961%" y="469" width="10.1548%" height="15" fill="rgb(233,156,4)" fg:x="11191" fg:w="9022"/><text x="12.8461%" y="479.50">&lt;core::iter::ad..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (3,702 samples, 4.17%)</title><rect x="22.7509%" y="533" width="4.1668%" height="15" fill="rgb(207,194,5)" fg:x="20213" fg:w="3702"/><text x="23.0009%" y="543.50">&lt;neur..</text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="26.9042%" y="517" width="0.0135%" height="15" fill="rgb(206,111,30)" fg:x="23903" fg:w="12"/><text x="27.1542%" y="527.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="26.9064%" y="501" width="0.0113%" height="15" fill="rgb(243,70,54)" fg:x="23905" fg:w="10"/><text x="27.1564%" y="511.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="26.9064%" y="485" width="0.0113%" height="15" fill="rgb(242,28,8)" fg:x="23905" fg:w="10"/><text x="27.1564%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="26.9064%" y="469" width="0.0113%" height="15" fill="rgb(219,106,18)" fg:x="23905" fg:w="10"/><text x="27.1564%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,404 samples, 1.58%)</title><rect x="32.1841%" y="501" width="1.5803%" height="15" fill="rgb(244,222,10)" fg:x="28594" fg:w="1404"/><text x="32.4341%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,602 samples, 1.80%)</title><rect x="32.1841%" y="517" width="1.8031%" height="15" fill="rgb(236,179,52)" fg:x="28594" fg:w="1602"/><text x="32.4341%" y="527.50">&lt;..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (198 samples, 0.22%)</title><rect x="33.7644%" y="501" width="0.2229%" height="15" fill="rgb(213,23,39)" fg:x="29998" fg:w="198"/><text x="34.0144%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (280 samples, 0.32%)</title><rect x="33.9873%" y="485" width="0.3152%" height="15" fill="rgb(238,48,10)" fg:x="30196" fg:w="280"/><text x="34.2373%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (715 samples, 0.80%)</title><rect x="33.9873%" y="517" width="0.8048%" height="15" fill="rgb(251,196,23)" fg:x="30196" fg:w="715"/><text x="34.2373%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (715 samples, 0.80%)</title><rect x="33.9873%" y="501" width="0.8048%" height="15" fill="rgb(250,152,24)" fg:x="30196" fg:w="715"/><text x="34.2373%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (435 samples, 0.49%)</title><rect x="34.3024%" y="485" width="0.4896%" height="15" fill="rgb(209,150,17)" fg:x="30476" fg:w="435"/><text x="34.5524%" y="495.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (439 samples, 0.49%)</title><rect x="34.7921%" y="501" width="0.4941%" height="15" fill="rgb(234,202,34)" fg:x="30911" fg:w="439"/><text x="35.0421%" y="511.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (202 samples, 0.23%)</title><rect x="35.0588%" y="485" width="0.2274%" height="15" fill="rgb(253,148,53)" fg:x="31148" fg:w="202"/><text x="35.3088%" y="495.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (40 samples, 0.05%)</title><rect x="35.2862%" y="437" width="0.0450%" height="15" fill="rgb(218,129,16)" fg:x="31350" fg:w="40"/><text x="35.5362%" y="447.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (681 samples, 0.77%)</title><rect x="34.7921%" y="517" width="0.7665%" height="15" fill="rgb(216,85,19)" fg:x="30911" fg:w="681"/><text x="35.0421%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (242 samples, 0.27%)</title><rect x="35.2862%" y="501" width="0.2724%" height="15" fill="rgb(235,228,7)" fg:x="31350" fg:w="242"/><text x="35.5362%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (242 samples, 0.27%)</title><rect x="35.2862%" y="485" width="0.2724%" height="15" fill="rgb(245,175,0)" fg:x="31350" fg:w="242"/><text x="35.5362%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (242 samples, 0.27%)</title><rect x="35.2862%" y="469" width="0.2724%" height="15" fill="rgb(208,168,36)" fg:x="31350" fg:w="242"/><text x="35.5362%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (242 samples, 0.27%)</title><rect x="35.2862%" y="453" width="0.2724%" height="15" fill="rgb(246,171,24)" fg:x="31350" fg:w="242"/><text x="35.5362%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (202 samples, 0.23%)</title><rect x="35.3312%" y="437" width="0.2274%" height="15" fill="rgb(215,142,24)" fg:x="31390" fg:w="202"/><text x="35.5812%" y="447.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (42 samples, 0.05%)</title><rect x="36.8755%" y="469" width="0.0473%" height="15" fill="rgb(250,187,7)" fg:x="32762" fg:w="42"/><text x="37.1255%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,258 samples, 1.42%)</title><rect x="35.5586%" y="517" width="1.4159%" height="15" fill="rgb(228,66,33)" fg:x="31592" fg:w="1258"/><text x="35.8086%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (88 samples, 0.10%)</title><rect x="36.8755%" y="501" width="0.0990%" height="15" fill="rgb(234,215,21)" fg:x="32762" fg:w="88"/><text x="37.1255%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (88 samples, 0.10%)</title><rect x="36.8755%" y="485" width="0.0990%" height="15" fill="rgb(222,191,20)" fg:x="32762" fg:w="88"/><text x="37.1255%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (46 samples, 0.05%)</title><rect x="36.9227%" y="469" width="0.0518%" height="15" fill="rgb(245,79,54)" fg:x="32804" fg:w="46"/><text x="37.1727%" y="479.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (1,531 samples, 1.72%)</title><rect x="36.9745%" y="517" width="1.7232%" height="15" fill="rgb(240,10,37)" fg:x="32850" fg:w="1531"/><text x="37.2245%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (1,531 samples, 1.72%)</title><rect x="36.9745%" y="501" width="1.7232%" height="15" fill="rgb(214,192,32)" fg:x="32850" fg:w="1531"/><text x="37.2245%" y="511.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::SubAssign&gt;::sub_assign (116 samples, 0.13%)</title><rect x="38.6977%" y="517" width="0.1306%" height="15" fill="rgb(209,36,54)" fg:x="34381" fg:w="116"/><text x="38.9477%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::SubAssign&gt;::sub_assign (116 samples, 0.13%)</title><rect x="38.6977%" y="501" width="0.1306%" height="15" fill="rgb(220,10,11)" fg:x="34381" fg:w="116"/><text x="38.9477%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (804 samples, 0.90%)</title><rect x="38.8283%" y="517" width="0.9049%" height="15" fill="rgb(221,106,17)" fg:x="34497" fg:w="804"/><text x="39.0783%" y="527.50"></text></g><g><title>[unknown] (38 samples, 0.04%)</title><rect x="39.7332%" y="517" width="0.0428%" height="15" fill="rgb(251,142,44)" fg:x="35301" fg:w="38"/><text x="39.9832%" y="527.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="39.7355%" y="501" width="0.0405%" height="15" fill="rgb(238,13,15)" fg:x="35303" fg:w="36"/><text x="39.9855%" y="511.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="39.7355%" y="485" width="0.0405%" height="15" fill="rgb(208,107,27)" fg:x="35303" fg:w="36"/><text x="39.9855%" y="495.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="39.7366%" y="469" width="0.0394%" height="15" fill="rgb(205,136,37)" fg:x="35304" fg:w="35"/><text x="39.9866%" y="479.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="39.7377%" y="453" width="0.0383%" height="15" fill="rgb(250,205,27)" fg:x="35305" fg:w="34"/><text x="39.9877%" y="463.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="39.7422%" y="437" width="0.0338%" height="15" fill="rgb(210,80,43)" fg:x="35309" fg:w="30"/><text x="39.9922%" y="447.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="39.7467%" y="421" width="0.0293%" height="15" fill="rgb(247,160,36)" fg:x="35313" fg:w="26"/><text x="39.9967%" y="431.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="39.7513%" y="405" width="0.0248%" height="15" fill="rgb(234,13,49)" fg:x="35317" fg:w="22"/><text x="40.0013%" y="415.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="39.7546%" y="389" width="0.0214%" height="15" fill="rgb(234,122,0)" fg:x="35320" fg:w="19"/><text x="40.0046%" y="399.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="39.7569%" y="373" width="0.0191%" height="15" fill="rgb(207,146,38)" fg:x="35322" fg:w="17"/><text x="40.0069%" y="383.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="39.7625%" y="357" width="0.0135%" height="15" fill="rgb(207,177,25)" fg:x="35327" fg:w="12"/><text x="40.0125%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9,176 samples, 10.33%)</title><rect x="39.7760%" y="517" width="10.3281%" height="15" fill="rgb(211,178,42)" fg:x="35339" fg:w="9176"/><text x="40.0260%" y="527.50">core::cmp::impl..</text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (9,176 samples, 10.33%)</title><rect x="39.7760%" y="501" width="10.3281%" height="15" fill="rgb(230,69,54)" fg:x="35339" fg:w="9176"/><text x="40.0260%" y="511.50">&lt;slotmap::Defau..</text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (9,176 samples, 10.33%)</title><rect x="39.7760%" y="485" width="10.3281%" height="15" fill="rgb(214,135,41)" fg:x="35339" fg:w="9176"/><text x="40.0260%" y="495.50">&lt;slotmap::KeyDa..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (62 samples, 0.07%)</title><rect x="50.1041%" y="517" width="0.0698%" height="15" fill="rgb(237,67,25)" fg:x="44515" fg:w="62"/><text x="50.3541%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (62 samples, 0.07%)</title><rect x="50.1041%" y="501" width="0.0698%" height="15" fill="rgb(222,189,50)" fg:x="44515" fg:w="62"/><text x="50.3541%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (41 samples, 0.05%)</title><rect x="50.1278%" y="485" width="0.0461%" height="15" fill="rgb(245,148,34)" fg:x="44536" fg:w="41"/><text x="50.3778%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (901 samples, 1.01%)</title><rect x="50.1739%" y="501" width="1.0141%" height="15" fill="rgb(222,29,6)" fg:x="44577" fg:w="901"/><text x="50.4239%" y="511.50"></text></g><g><title>glam::f32::vec2::&lt;impl core::ops::arith::Mul&lt;glam::f32::vec2::Vec2&gt; for f32&gt;::mul (908 samples, 1.02%)</title><rect x="50.1739%" y="517" width="1.0220%" height="15" fill="rgb(221,189,43)" fg:x="44577" fg:w="908"/><text x="50.4239%" y="527.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (773 samples, 0.87%)</title><rect x="54.8641%" y="501" width="0.8701%" height="15" fill="rgb(207,36,27)" fg:x="48744" fg:w="773"/><text x="55.1141%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (773 samples, 0.87%)</title><rect x="54.8641%" y="485" width="0.8701%" height="15" fill="rgb(217,90,24)" fg:x="48744" fg:w="773"/><text x="55.1141%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="55.7341%" y="501" width="0.0191%" height="15" fill="rgb(224,66,35)" fg:x="49517" fg:w="17"/><text x="55.9841%" y="511.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="55.7353%" y="485" width="0.0180%" height="15" fill="rgb(221,13,50)" fg:x="49518" fg:w="16"/><text x="55.9853%" y="495.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="55.7353%" y="469" width="0.0180%" height="15" fill="rgb(236,68,49)" fg:x="49518" fg:w="16"/><text x="55.9853%" y="479.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="55.7364%" y="453" width="0.0169%" height="15" fill="rgb(229,146,28)" fg:x="49519" fg:w="15"/><text x="55.9864%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="55.7398%" y="437" width="0.0135%" height="15" fill="rgb(225,31,38)" fg:x="49522" fg:w="12"/><text x="55.9898%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="55.7398%" y="421" width="0.0135%" height="15" fill="rgb(250,208,3)" fg:x="49522" fg:w="12"/><text x="55.9898%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="55.7420%" y="405" width="0.0113%" height="15" fill="rgb(246,54,23)" fg:x="49524" fg:w="10"/><text x="55.9920%" y="415.50"></text></g><g><title>glam::f32::math::std_math::sqrt (2,710 samples, 3.05%)</title><rect x="55.7533%" y="485" width="3.0503%" height="15" fill="rgb(243,76,11)" fg:x="49534" fg:w="2710"/><text x="56.0033%" y="495.50">gla..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (2,710 samples, 3.05%)</title><rect x="55.7533%" y="469" width="3.0503%" height="15" fill="rgb(245,21,50)" fg:x="49534" fg:w="2710"/><text x="56.0033%" y="479.50">std..</text></g><g><title>neuralang::beings_collide (8,667 samples, 9.76%)</title><rect x="51.1959%" y="517" width="9.7552%" height="15" fill="rgb(228,9,43)" fg:x="45485" fg:w="8667"/><text x="51.4459%" y="527.50">neuralang::bei..</text></g><g><title>glam::f32::vec2::Vec2::length (4,618 samples, 5.20%)</title><rect x="55.7533%" y="501" width="5.1978%" height="15" fill="rgb(208,100,47)" fg:x="49534" fg:w="4618"/><text x="56.0033%" y="511.50">glam::..</text></g><g><title>glam::f32::vec2::Vec2::dot (1,908 samples, 2.15%)</title><rect x="58.8035%" y="485" width="2.1476%" height="15" fill="rgb(232,26,8)" fg:x="52244" fg:w="1908"/><text x="59.0535%" y="495.50">g..</text></g><g><title>neuralang::oob (261 samples, 0.29%)</title><rect x="60.9511%" y="517" width="0.2938%" height="15" fill="rgb(216,166,38)" fg:x="54152" fg:w="261"/><text x="61.2011%" y="527.50"></text></g><g><title>neuralang::two_to_one (44 samples, 0.05%)</title><rect x="61.2449%" y="517" width="0.0495%" height="15" fill="rgb(251,202,51)" fg:x="54413" fg:w="44"/><text x="61.4949%" y="527.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (988 samples, 1.11%)</title><rect x="61.4002%" y="501" width="1.1120%" height="15" fill="rgb(254,216,34)" fg:x="54551" fg:w="988"/><text x="61.6502%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (10,844 samples, 12.21%)</title><rect x="62.5134%" y="501" width="12.2055%" height="15" fill="rgb(251,32,27)" fg:x="55540" fg:w="10844"/><text x="62.7634%" y="511.50">core::option::Opti..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get::{{closure}} (10,757 samples, 12.11%)</title><rect x="62.6113%" y="485" width="12.1076%" height="15" fill="rgb(208,127,28)" fg:x="55627" fg:w="10757"/><text x="62.8613%" y="495.50">slotmap::basic::Sl..</text></g><g><title>core::option::Option&lt;T&gt;::map (532 samples, 0.60%)</title><rect x="74.7189%" y="501" width="0.5988%" height="15" fill="rgb(224,137,22)" fg:x="66384" fg:w="532"/><text x="74.9689%" y="511.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="75.2873%" y="485" width="0.0304%" height="15" fill="rgb(254,70,32)" fg:x="66889" fg:w="27"/><text x="75.5373%" y="495.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="75.2884%" y="469" width="0.0293%" height="15" fill="rgb(229,75,37)" fg:x="66890" fg:w="26"/><text x="75.5384%" y="479.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="75.2884%" y="453" width="0.0293%" height="15" fill="rgb(252,64,23)" fg:x="66890" fg:w="26"/><text x="75.5384%" y="463.50"></text></g><g><title>[unknown] (24 samples, 0.03%)</title><rect x="75.2907%" y="437" width="0.0270%" height="15" fill="rgb(232,162,48)" fg:x="66892" fg:w="24"/><text x="75.5407%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="75.2941%" y="421" width="0.0236%" height="15" fill="rgb(246,160,12)" fg:x="66895" fg:w="21"/><text x="75.5441%" y="431.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="75.2952%" y="405" width="0.0225%" height="15" fill="rgb(247,166,0)" fg:x="66896" fg:w="20"/><text x="75.5452%" y="415.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="75.2952%" y="389" width="0.0225%" height="15" fill="rgb(249,219,21)" fg:x="66896" fg:w="20"/><text x="75.5452%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="75.2974%" y="373" width="0.0203%" height="15" fill="rgb(205,209,3)" fg:x="66898" fg:w="18"/><text x="75.5474%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="75.3019%" y="357" width="0.0158%" height="15" fill="rgb(243,44,1)" fg:x="66902" fg:w="14"/><text x="75.5519%" y="367.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="75.3042%" y="341" width="0.0135%" height="15" fill="rgb(206,159,16)" fg:x="66904" fg:w="12"/><text x="75.5542%" y="351.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get (13,049 samples, 14.69%)</title><rect x="61.2944%" y="517" width="14.6874%" height="15" fill="rgb(244,77,30)" fg:x="54457" fg:w="13049"/><text x="61.5444%" y="527.50">slotmap::basic::SlotMa..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (590 samples, 0.66%)</title><rect x="75.3177%" y="501" width="0.6641%" height="15" fill="rgb(218,69,12)" fg:x="66916" fg:w="590"/><text x="75.5677%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (590 samples, 0.66%)</title><rect x="75.3177%" y="485" width="0.6641%" height="15" fill="rgb(212,87,7)" fg:x="66916" fg:w="590"/><text x="75.5677%" y="495.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (261 samples, 0.29%)</title><rect x="76.1292%" y="501" width="0.2938%" height="15" fill="rgb(245,114,25)" fg:x="67637" fg:w="261"/><text x="76.3792%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::filter (479 samples, 0.54%)</title><rect x="76.4241%" y="501" width="0.5391%" height="15" fill="rgb(210,61,42)" fg:x="67899" fg:w="479"/><text x="76.6741%" y="511.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut::{{closure}} (445 samples, 0.50%)</title><rect x="76.4624%" y="485" width="0.5009%" height="15" fill="rgb(211,52,33)" fg:x="67933" fg:w="445"/><text x="76.7124%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (68 samples, 0.08%)</title><rect x="76.9633%" y="501" width="0.0765%" height="15" fill="rgb(234,58,33)" fg:x="68378" fg:w="68"/><text x="77.2133%" y="511.50"></text></g><g><title>neuralang::World::check_collisions (44,641 samples, 50.25%)</title><rect x="26.9177%" y="533" width="50.2459%" height="15" fill="rgb(220,115,36)" fg:x="23915" fg:w="44641"/><text x="27.1677%" y="543.50">neuralang::World::check_collisions</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_mut (1,050 samples, 1.18%)</title><rect x="75.9818%" y="517" width="1.1818%" height="15" fill="rgb(243,153,54)" fg:x="67506" fg:w="1050"/><text x="76.2318%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (110 samples, 0.12%)</title><rect x="77.0398%" y="501" width="0.1238%" height="15" fill="rgb(251,47,18)" fg:x="68446" fg:w="110"/><text x="77.2898%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (110 samples, 0.12%)</title><rect x="77.0398%" y="485" width="0.1238%" height="15" fill="rgb(242,102,42)" fg:x="68446" fg:w="110"/><text x="77.2898%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (92 samples, 0.10%)</title><rect x="77.9616%" y="469" width="0.1036%" height="15" fill="rgb(234,31,38)" fg:x="69265" fg:w="92"/><text x="78.2116%" y="479.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (55 samples, 0.06%)</title><rect x="78.0033%" y="453" width="0.0619%" height="15" fill="rgb(221,117,51)" fg:x="69302" fg:w="55"/><text x="78.2533%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="78.0652%" y="469" width="0.0416%" height="15" fill="rgb(212,20,18)" fg:x="69357" fg:w="37"/><text x="78.3152%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="78.0652%" y="453" width="0.0416%" height="15" fill="rgb(245,133,36)" fg:x="69357" fg:w="37"/><text x="78.3152%" y="463.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (865 samples, 0.97%)</title><rect x="77.1704%" y="485" width="0.9736%" height="15" fill="rgb(212,6,19)" fg:x="68562" fg:w="865"/><text x="77.4204%" y="495.50"></text></g><g><title>slotmap::KeyData::new (28 samples, 0.03%)</title><rect x="78.1124%" y="469" width="0.0315%" height="15" fill="rgb(218,1,36)" fg:x="69399" fg:w="28"/><text x="78.3624%" y="479.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (489 samples, 0.55%)</title><rect x="78.2531%" y="453" width="0.5504%" height="15" fill="rgb(246,84,54)" fg:x="69524" fg:w="489"/><text x="78.5031%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (489 samples, 0.55%)</title><rect x="78.2531%" y="437" width="0.5504%" height="15" fill="rgb(242,110,6)" fg:x="69524" fg:w="489"/><text x="78.5031%" y="447.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (252 samples, 0.28%)</title><rect x="78.8035%" y="453" width="0.2836%" height="15" fill="rgb(214,47,5)" fg:x="70013" fg:w="252"/><text x="79.0535%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (252 samples, 0.28%)</title><rect x="78.8035%" y="437" width="0.2836%" height="15" fill="rgb(218,159,25)" fg:x="70013" fg:w="252"/><text x="79.0535%" y="447.50"></text></g><g><title>abstop12 (81 samples, 0.09%)</title><rect x="79.3280%" y="405" width="0.0912%" height="15" fill="rgb(215,211,28)" fg:x="70479" fg:w="81"/><text x="79.5780%" y="415.50"></text></g><g><title>reduce_fast (116 samples, 0.13%)</title><rect x="79.4192%" y="405" width="0.1306%" height="15" fill="rgb(238,59,32)" fg:x="70560" fg:w="116"/><text x="79.6692%" y="415.50"></text></g><g><title>neuralang::dir_from_theta (929 samples, 1.05%)</title><rect x="79.0872%" y="453" width="1.0456%" height="15" fill="rgb(226,82,3)" fg:x="70265" fg:w="929"/><text x="79.3372%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (929 samples, 1.05%)</title><rect x="79.0872%" y="437" width="1.0456%" height="15" fill="rgb(240,164,32)" fg:x="70265" fg:w="929"/><text x="79.3372%" y="447.50"></text></g><g><title>__sincosf_fma (927 samples, 1.04%)</title><rect x="79.0894%" y="421" width="1.0434%" height="15" fill="rgb(232,46,7)" fg:x="70267" fg:w="927"/><text x="79.3394%" y="431.50"></text></g><g><title>sincosf_poly (518 samples, 0.58%)</title><rect x="79.5498%" y="405" width="0.5830%" height="15" fill="rgb(229,129,53)" fg:x="70676" fg:w="518"/><text x="79.7998%" y="415.50"></text></g><g><title>v2df_to_sf (182 samples, 0.20%)</title><rect x="79.9280%" y="389" width="0.2049%" height="15" fill="rgb(234,188,29)" fg:x="71012" fg:w="182"/><text x="80.1780%" y="399.50"></text></g><g><title>neuralang::oob (93 samples, 0.10%)</title><rect x="80.1328%" y="453" width="0.1047%" height="15" fill="rgb(246,141,4)" fg:x="71194" fg:w="93"/><text x="80.3828%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,732 samples, 3.08%)</title><rect x="77.1636%" y="517" width="3.0750%" height="15" fill="rgb(229,23,39)" fg:x="68556" fg:w="2732"/><text x="77.4136%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,732 samples, 3.08%)</title><rect x="77.1636%" y="501" width="3.0750%" height="15" fill="rgb(206,12,3)" fg:x="68556" fg:w="2732"/><text x="77.4136%" y="511.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,860 samples, 2.09%)</title><rect x="78.1451%" y="485" width="2.0935%" height="15" fill="rgb(252,226,20)" fg:x="69428" fg:w="1860"/><text x="78.3951%" y="495.50">c..</text></g><g><title>neuralang::World::move_beings::{{closure}} (1,860 samples, 2.09%)</title><rect x="78.1451%" y="469" width="2.0935%" height="15" fill="rgb(216,123,35)" fg:x="69428" fg:w="1860"/><text x="78.3951%" y="479.50">n..</text></g><g><title>neuralang::World::move_beings (2,733 samples, 3.08%)</title><rect x="77.1636%" y="533" width="3.0761%" height="15" fill="rgb(212,68,40)" fg:x="68556" fg:w="2733"/><text x="77.4136%" y="543.50">neu..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (10 samples, 0.01%)</title><rect x="80.3275%" y="517" width="0.0113%" height="15" fill="rgb(254,125,32)" fg:x="71367" fg:w="10"/><text x="80.5775%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (52 samples, 0.06%)</title><rect x="80.9680%" y="501" width="0.0585%" height="15" fill="rgb(253,97,22)" fg:x="71936" fg:w="52"/><text x="81.2180%" y="511.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (51 samples, 0.06%)</title><rect x="80.9691%" y="485" width="0.0574%" height="15" fill="rgb(241,101,14)" fg:x="71937" fg:w="51"/><text x="81.2191%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="81.0265%" y="501" width="0.0101%" height="15" fill="rgb(238,103,29)" fg:x="71988" fg:w="9"/><text x="81.2765%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.01%)</title><rect x="81.0265%" y="485" width="0.0101%" height="15" fill="rgb(233,195,47)" fg:x="71988" fg:w="9"/><text x="81.2765%" y="495.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (697 samples, 0.78%)</title><rect x="80.3388%" y="517" width="0.7845%" height="15" fill="rgb(246,218,30)" fg:x="71377" fg:w="697"/><text x="80.5888%" y="527.50"></text></g><g><title>slotmap::KeyData::new (75 samples, 0.08%)</title><rect x="81.0389%" y="501" width="0.0844%" height="15" fill="rgb(219,145,47)" fg:x="71999" fg:w="75"/><text x="81.2889%" y="511.50"></text></g><g><title>neuralang::World::tire_beings (786 samples, 0.88%)</title><rect x="80.2397%" y="533" width="0.8847%" height="15" fill="rgb(243,12,26)" fg:x="71289" fg:w="786"/><text x="80.4897%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (23 samples, 0.03%)</title><rect x="81.4002%" y="517" width="0.0259%" height="15" fill="rgb(214,87,16)" fg:x="72320" fg:w="23"/><text x="81.6502%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (23 samples, 0.03%)</title><rect x="81.4002%" y="501" width="0.0259%" height="15" fill="rgb(208,99,42)" fg:x="72320" fg:w="23"/><text x="81.6502%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (23 samples, 0.03%)</title><rect x="81.4002%" y="485" width="0.0259%" height="15" fill="rgb(253,99,2)" fg:x="72320" fg:w="23"/><text x="81.6502%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (57 samples, 0.06%)</title><rect x="81.4261%" y="501" width="0.0642%" height="15" fill="rgb(220,168,23)" fg:x="72343" fg:w="57"/><text x="81.6761%" y="511.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (226 samples, 0.25%)</title><rect x="81.4261%" y="517" width="0.2544%" height="15" fill="rgb(242,38,24)" fg:x="72343" fg:w="226"/><text x="81.6761%" y="527.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (169 samples, 0.19%)</title><rect x="81.4902%" y="501" width="0.1902%" height="15" fill="rgb(225,182,9)" fg:x="72400" fg:w="169"/><text x="81.7402%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (594 samples, 0.67%)</title><rect x="81.6805%" y="517" width="0.6686%" height="15" fill="rgb(243,178,37)" fg:x="72569" fg:w="594"/><text x="81.9305%" y="527.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (99 samples, 0.11%)</title><rect x="82.7205%" y="501" width="0.1114%" height="15" fill="rgb(232,139,19)" fg:x="73493" fg:w="99"/><text x="82.9705%" y="511.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (99 samples, 0.11%)</title><rect x="82.7205%" y="485" width="0.1114%" height="15" fill="rgb(225,201,24)" fg:x="73493" fg:w="99"/><text x="82.9705%" y="495.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (496 samples, 0.56%)</title><rect x="82.3490%" y="517" width="0.5583%" height="15" fill="rgb(221,47,46)" fg:x="73163" fg:w="496"/><text x="82.5990%" y="527.50"></text></g><g><title>slotmap::KeyData::new (61 samples, 0.07%)</title><rect x="82.8387%" y="501" width="0.0687%" height="15" fill="rgb(249,23,13)" fg:x="73598" fg:w="61"/><text x="83.0887%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (90 samples, 0.10%)</title><rect x="82.9073%" y="517" width="0.1013%" height="15" fill="rgb(219,9,5)" fg:x="73659" fg:w="90"/><text x="83.1573%" y="527.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="82.9884%" y="501" width="0.0203%" height="15" fill="rgb(254,171,16)" fg:x="73731" fg:w="18"/><text x="83.2384%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (912 samples, 1.03%)</title><rect x="83.0097%" y="485" width="1.0265%" height="15" fill="rgb(230,171,20)" fg:x="73750" fg:w="912"/><text x="83.2597%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (48 samples, 0.05%)</title><rect x="84.0362%" y="485" width="0.0540%" height="15" fill="rgb(210,71,41)" fg:x="74662" fg:w="48"/><text x="84.2862%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (843 samples, 0.95%)</title><rect x="84.1477%" y="469" width="0.9488%" height="15" fill="rgb(206,173,20)" fg:x="74761" fg:w="843"/><text x="84.3977%" y="479.50"></text></g><g><title>neuralang::World::update_cells::{{closure}} (843 samples, 0.95%)</title><rect x="84.1477%" y="453" width="0.9488%" height="15" fill="rgb(233,88,34)" fg:x="74761" fg:w="843"/><text x="84.3977%" y="463.50"></text></g><g><title>core::cmp::PartialEq::ne (843 samples, 0.95%)</title><rect x="84.1477%" y="437" width="0.9488%" height="15" fill="rgb(223,209,46)" fg:x="74761" fg:w="843"/><text x="84.3977%" y="447.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (843 samples, 0.95%)</title><rect x="84.1477%" y="421" width="0.9488%" height="15" fill="rgb(250,43,18)" fg:x="74761" fg:w="843"/><text x="84.3977%" y="431.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (843 samples, 0.95%)</title><rect x="84.1477%" y="405" width="0.9488%" height="15" fill="rgb(208,13,10)" fg:x="74761" fg:w="843"/><text x="84.3977%" y="415.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="85.0751%" y="389" width="0.0214%" height="15" fill="rgb(212,200,36)" fg:x="75585" fg:w="19"/><text x="85.3251%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (899 samples, 1.01%)</title><rect x="84.0903%" y="485" width="1.0119%" height="15" fill="rgb(225,90,30)" fg:x="74710" fg:w="899"/><text x="84.3403%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (1,864 samples, 2.10%)</title><rect x="83.0086%" y="517" width="2.0980%" height="15" fill="rgb(236,182,39)" fg:x="73749" fg:w="1864"/><text x="83.2586%" y="527.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (1,863 samples, 2.10%)</title><rect x="83.0097%" y="501" width="2.0969%" height="15" fill="rgb(212,144,35)" fg:x="73750" fg:w="1863"/><text x="83.2597%" y="511.50">a..</text></g><g><title>neuralang::oob (30 samples, 0.03%)</title><rect x="85.1066%" y="517" width="0.0338%" height="15" fill="rgb(228,63,44)" fg:x="75613" fg:w="30"/><text x="85.3566%" y="527.50"></text></g><g><title>__fmodf (687 samples, 0.77%)</title><rect x="86.4044%" y="501" width="0.7733%" height="15" fill="rgb(228,109,6)" fg:x="76766" fg:w="687"/><text x="86.6544%" y="511.50"></text></g><g><title>neuralang::pos_to_cell (10,446 samples, 11.76%)</title><rect x="85.1404%" y="517" width="11.7576%" height="15" fill="rgb(238,117,24)" fg:x="75643" fg:w="10446"/><text x="85.3904%" y="527.50">neuralang::pos_to..</text></g><g><title>__ieee754_fmodf (8,636 samples, 9.72%)</title><rect x="87.1777%" y="501" width="9.7203%" height="15" fill="rgb(242,26,26)" fg:x="77453" fg:w="8636"/><text x="87.4277%" y="511.50">__ieee754_fmodf</text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="96.8867%" y="485" width="0.0113%" height="15" fill="rgb(221,92,48)" fg:x="86079" fg:w="10"/><text x="97.1367%" y="495.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="96.8867%" y="469" width="0.0113%" height="15" fill="rgb(209,209,32)" fg:x="86079" fg:w="10"/><text x="97.1367%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="96.8867%" y="453" width="0.0113%" height="15" fill="rgb(221,70,22)" fg:x="86079" fg:w="10"/><text x="97.1367%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="96.8867%" y="437" width="0.0113%" height="15" fill="rgb(248,145,5)" fg:x="86079" fg:w="10"/><text x="97.1367%" y="447.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="96.8878%" y="421" width="0.0101%" height="15" fill="rgb(226,116,26)" fg:x="86080" fg:w="9"/><text x="97.1378%" y="431.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="96.8878%" y="405" width="0.0101%" height="15" fill="rgb(244,5,17)" fg:x="86080" fg:w="9"/><text x="97.1378%" y="415.50"></text></g><g><title>neuralang::World::step (65,927 samples, 74.20%)</title><rect x="22.7509%" y="549" width="74.2045%" height="15" fill="rgb(252,159,33)" fg:x="20213" fg:w="65927"/><text x="23.0009%" y="559.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (14,065 samples, 15.83%)</title><rect x="81.1244%" y="533" width="15.8309%" height="15" fill="rgb(206,71,0)" fg:x="72075" fg:w="14065"/><text x="81.3744%" y="543.50">neuralang::World::update..</text></g><g><title>neuralang::same_index (51 samples, 0.06%)</title><rect x="96.8980%" y="517" width="0.0574%" height="15" fill="rgb(233,118,54)" fg:x="86089" fg:w="51"/><text x="97.1480%" y="527.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (65,928 samples, 74.21%)</title><rect x="22.7509%" y="565" width="74.2056%" height="15" fill="rgb(234,83,48)" fg:x="20213" fg:w="65928"/><text x="23.0009%" y="575.50">&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update</text></g><g><title>ash::device::Device::create_image_view (9 samples, 0.01%)</title><rect x="96.9824%" y="469" width="0.0101%" height="15" fill="rgb(228,3,54)" fg:x="86164" fg:w="9"/><text x="97.2324%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="96.9824%" y="453" width="0.0101%" height="15" fill="rgb(226,155,13)" fg:x="86164" fg:w="9"/><text x="97.2324%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="96.9824%" y="437" width="0.0101%" height="15" fill="rgb(241,28,37)" fg:x="86164" fg:w="9"/><text x="97.2324%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (10 samples, 0.01%)</title><rect x="96.9824%" y="485" width="0.0113%" height="15" fill="rgb(233,93,10)" fg:x="86164" fg:w="10"/><text x="97.2324%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (39 samples, 0.04%)</title><rect x="96.9678%" y="533" width="0.0439%" height="15" fill="rgb(225,113,19)" fg:x="86151" fg:w="39"/><text x="97.2178%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (39 samples, 0.04%)</title><rect x="96.9678%" y="517" width="0.0439%" height="15" fill="rgb(241,2,18)" fg:x="86151" fg:w="39"/><text x="97.2178%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (38 samples, 0.04%)</title><rect x="96.9689%" y="501" width="0.0428%" height="15" fill="rgb(228,207,21)" fg:x="86152" fg:w="38"/><text x="97.2189%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (16 samples, 0.02%)</title><rect x="96.9936%" y="485" width="0.0180%" height="15" fill="rgb(213,211,35)" fg:x="86174" fg:w="16"/><text x="97.2436%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (9 samples, 0.01%)</title><rect x="97.0015%" y="469" width="0.0101%" height="15" fill="rgb(209,83,10)" fg:x="86181" fg:w="9"/><text x="97.2515%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (9 samples, 0.01%)</title><rect x="97.0015%" y="453" width="0.0101%" height="15" fill="rgb(209,164,1)" fg:x="86181" fg:w="9"/><text x="97.2515%" y="463.50"></text></g><g><title>wgpu::Surface::get_current_texture (41 samples, 0.05%)</title><rect x="96.9678%" y="549" width="0.0461%" height="15" fill="rgb(213,184,43)" fg:x="86151" fg:w="41"/><text x="97.2178%" y="559.50"></text></g><g><title>__GI___poll (9 samples, 0.01%)</title><rect x="97.0465%" y="373" width="0.0101%" height="15" fill="rgb(231,61,34)" fg:x="86221" fg:w="9"/><text x="97.2965%" y="383.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="97.0578%" y="341" width="0.0203%" height="15" fill="rgb(235,75,3)" fg:x="86231" fg:w="18"/><text x="97.3078%" y="351.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="97.0589%" y="325" width="0.0191%" height="15" fill="rgb(220,106,47)" fg:x="86232" fg:w="17"/><text x="97.3089%" y="335.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="97.0589%" y="309" width="0.0191%" height="15" fill="rgb(210,196,33)" fg:x="86232" fg:w="17"/><text x="97.3089%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="97.0612%" y="293" width="0.0169%" height="15" fill="rgb(229,154,42)" fg:x="86234" fg:w="15"/><text x="97.3112%" y="303.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0623%" y="277" width="0.0158%" height="15" fill="rgb(228,114,26)" fg:x="86235" fg:w="14"/><text x="97.3123%" y="287.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0623%" y="261" width="0.0158%" height="15" fill="rgb(208,144,1)" fg:x="86235" fg:w="14"/><text x="97.3123%" y="271.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0634%" y="245" width="0.0146%" height="15" fill="rgb(239,112,37)" fg:x="86236" fg:w="13"/><text x="97.3134%" y="255.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="97.0646%" y="229" width="0.0135%" height="15" fill="rgb(210,96,50)" fg:x="86237" fg:w="12"/><text x="97.3146%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="97.0668%" y="213" width="0.0113%" height="15" fill="rgb(222,178,2)" fg:x="86239" fg:w="10"/><text x="97.3168%" y="223.50"></text></g><g><title>__GI___writev (22 samples, 0.02%)</title><rect x="97.0567%" y="373" width="0.0248%" height="15" fill="rgb(226,74,18)" fg:x="86230" fg:w="22"/><text x="97.3067%" y="383.50"></text></g><g><title>__GI___writev (22 samples, 0.02%)</title><rect x="97.0567%" y="357" width="0.0248%" height="15" fill="rgb(225,67,54)" fg:x="86230" fg:w="22"/><text x="97.3067%" y="367.50"></text></g><g><title>_XSend (36 samples, 0.04%)</title><rect x="97.0420%" y="437" width="0.0405%" height="15" fill="rgb(251,92,32)" fg:x="86217" fg:w="36"/><text x="97.2920%" y="447.50"></text></g><g><title>xcb_writev (36 samples, 0.04%)</title><rect x="97.0420%" y="421" width="0.0405%" height="15" fill="rgb(228,149,22)" fg:x="86217" fg:w="36"/><text x="97.2920%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (36 samples, 0.04%)</title><rect x="97.0420%" y="405" width="0.0405%" height="15" fill="rgb(243,54,13)" fg:x="86217" fg:w="36"/><text x="97.2920%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.04%)</title><rect x="97.0432%" y="389" width="0.0394%" height="15" fill="rgb(243,180,28)" fg:x="86218" fg:w="35"/><text x="97.2932%" y="399.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.01%)</title><rect x="97.0826%" y="389" width="0.0124%" height="15" fill="rgb(208,167,24)" fg:x="86253" fg:w="11"/><text x="97.3326%" y="399.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (138 samples, 0.16%)</title><rect x="96.9565%" y="565" width="0.1553%" height="15" fill="rgb(245,73,45)" fg:x="86141" fg:w="138"/><text x="97.2065%" y="575.50"></text></g><g><title>winit::window::Window::inner_size (79 samples, 0.09%)</title><rect x="97.0229%" y="549" width="0.0889%" height="15" fill="rgb(237,203,48)" fg:x="86200" fg:w="79"/><text x="97.2729%" y="559.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (79 samples, 0.09%)</title><rect x="97.0229%" y="533" width="0.0889%" height="15" fill="rgb(211,197,16)" fg:x="86200" fg:w="79"/><text x="97.2729%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (79 samples, 0.09%)</title><rect x="97.0229%" y="517" width="0.0889%" height="15" fill="rgb(243,99,51)" fg:x="86200" fg:w="79"/><text x="97.2729%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (77 samples, 0.09%)</title><rect x="97.0252%" y="501" width="0.0867%" height="15" fill="rgb(215,123,29)" fg:x="86202" fg:w="77"/><text x="97.2752%" y="511.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (76 samples, 0.09%)</title><rect x="97.0263%" y="485" width="0.0855%" height="15" fill="rgb(239,186,37)" fg:x="86203" fg:w="76"/><text x="97.2763%" y="495.50"></text></g><g><title>XGetGeometry (75 samples, 0.08%)</title><rect x="97.0274%" y="469" width="0.0844%" height="15" fill="rgb(252,136,39)" fg:x="86204" fg:w="75"/><text x="97.2774%" y="479.50"></text></g><g><title>_XReply (70 samples, 0.08%)</title><rect x="97.0330%" y="453" width="0.0788%" height="15" fill="rgb(223,213,32)" fg:x="86209" fg:w="70"/><text x="97.2830%" y="463.50"></text></g><g><title>xcb_wait_for_reply64 (26 samples, 0.03%)</title><rect x="97.0826%" y="437" width="0.0293%" height="15" fill="rgb(233,115,5)" fg:x="86253" fg:w="26"/><text x="97.3326%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (26 samples, 0.03%)</title><rect x="97.0826%" y="421" width="0.0293%" height="15" fill="rgb(207,226,44)" fg:x="86253" fg:w="26"/><text x="97.3326%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (26 samples, 0.03%)</title><rect x="97.0826%" y="405" width="0.0293%" height="15" fill="rgb(208,126,0)" fg:x="86253" fg:w="26"/><text x="97.3326%" y="415.50"></text></g><g><title>__GI___poll (14 samples, 0.02%)</title><rect x="97.0961%" y="389" width="0.0158%" height="15" fill="rgb(244,66,21)" fg:x="86265" fg:w="14"/><text x="97.3461%" y="399.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="97.0961%" y="373" width="0.0158%" height="15" fill="rgb(222,97,12)" fg:x="86265" fg:w="14"/><text x="97.3461%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0972%" y="357" width="0.0146%" height="15" fill="rgb(219,213,19)" fg:x="86266" fg:w="13"/><text x="97.3472%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0972%" y="341" width="0.0146%" height="15" fill="rgb(252,169,30)" fg:x="86266" fg:w="13"/><text x="97.3472%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0972%" y="325" width="0.0146%" height="15" fill="rgb(206,32,51)" fg:x="86266" fg:w="13"/><text x="97.3472%" y="335.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.0972%" y="309" width="0.0146%" height="15" fill="rgb(250,172,42)" fg:x="86266" fg:w="13"/><text x="97.3472%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="97.0983%" y="293" width="0.0135%" height="15" fill="rgb(209,34,43)" fg:x="86267" fg:w="12"/><text x="97.3483%" y="303.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.0994%" y="277" width="0.0124%" height="15" fill="rgb(223,11,35)" fg:x="86268" fg:w="11"/><text x="97.3494%" y="287.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.0994%" y="261" width="0.0124%" height="15" fill="rgb(251,219,26)" fg:x="86268" fg:w="11"/><text x="97.3494%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.0994%" y="245" width="0.0124%" height="15" fill="rgb(231,119,3)" fg:x="86268" fg:w="11"/><text x="97.3494%" y="255.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="97.1006%" y="229" width="0.0113%" height="15" fill="rgb(216,97,11)" fg:x="86269" fg:w="10"/><text x="97.3506%" y="239.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="97.1017%" y="213" width="0.0101%" height="15" fill="rgb(223,59,9)" fg:x="86270" fg:w="9"/><text x="97.3517%" y="223.50"></text></g><g><title>core::mem::drop (27 samples, 0.03%)</title><rect x="97.1141%" y="549" width="0.0304%" height="15" fill="rgb(233,93,31)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (27 samples, 0.03%)</title><rect x="97.1141%" y="533" width="0.0304%" height="15" fill="rgb(239,81,33)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="543.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (27 samples, 0.03%)</title><rect x="97.1141%" y="517" width="0.0304%" height="15" fill="rgb(213,120,34)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="527.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (27 samples, 0.03%)</title><rect x="97.1141%" y="501" width="0.0304%" height="15" fill="rgb(243,49,53)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="511.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (27 samples, 0.03%)</title><rect x="97.1141%" y="485" width="0.0304%" height="15" fill="rgb(247,216,33)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="495.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (27 samples, 0.03%)</title><rect x="97.1141%" y="469" width="0.0304%" height="15" fill="rgb(226,26,14)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="479.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (27 samples, 0.03%)</title><rect x="97.1141%" y="453" width="0.0304%" height="15" fill="rgb(215,49,53)" fg:x="86281" fg:w="27"/><text x="97.3641%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="97.2041%" y="293" width="0.0326%" height="15" fill="rgb(245,162,40)" fg:x="86361" fg:w="29"/><text x="97.4541%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.03%)</title><rect x="97.2097%" y="277" width="0.0270%" height="15" fill="rgb(229,68,17)" fg:x="86366" fg:w="24"/><text x="97.4597%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (33 samples, 0.04%)</title><rect x="97.2007%" y="309" width="0.0371%" height="15" fill="rgb(213,182,10)" fg:x="86358" fg:w="33"/><text x="97.4507%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (54 samples, 0.06%)</title><rect x="97.1782%" y="357" width="0.0608%" height="15" fill="rgb(245,125,30)" fg:x="86338" fg:w="54"/><text x="97.4282%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (53 samples, 0.06%)</title><rect x="97.1794%" y="341" width="0.0597%" height="15" fill="rgb(232,202,2)" fg:x="86339" fg:w="53"/><text x="97.4294%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (52 samples, 0.06%)</title><rect x="97.1805%" y="325" width="0.0585%" height="15" fill="rgb(237,140,51)" fg:x="86340" fg:w="52"/><text x="97.4305%" y="335.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (64 samples, 0.07%)</title><rect x="97.1681%" y="485" width="0.0720%" height="15" fill="rgb(236,157,25)" fg:x="86329" fg:w="64"/><text x="97.4181%" y="495.50"></text></g><g><title>ash::device::Device::queue_submit (64 samples, 0.07%)</title><rect x="97.1681%" y="469" width="0.0720%" height="15" fill="rgb(219,209,0)" fg:x="86329" fg:w="64"/><text x="97.4181%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (64 samples, 0.07%)</title><rect x="97.1681%" y="453" width="0.0720%" height="15" fill="rgb(240,116,54)" fg:x="86329" fg:w="64"/><text x="97.4181%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (64 samples, 0.07%)</title><rect x="97.1681%" y="437" width="0.0720%" height="15" fill="rgb(216,10,36)" fg:x="86329" fg:w="64"/><text x="97.4181%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (64 samples, 0.07%)</title><rect x="97.1681%" y="421" width="0.0720%" height="15" fill="rgb(222,72,44)" fg:x="86329" fg:w="64"/><text x="97.4181%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (62 samples, 0.07%)</title><rect x="97.1704%" y="405" width="0.0698%" height="15" fill="rgb(232,159,9)" fg:x="86331" fg:w="62"/><text x="97.4204%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (57 samples, 0.06%)</title><rect x="97.1760%" y="389" width="0.0642%" height="15" fill="rgb(210,39,32)" fg:x="86336" fg:w="57"/><text x="97.4260%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (56 samples, 0.06%)</title><rect x="97.1771%" y="373" width="0.0630%" height="15" fill="rgb(216,194,45)" fg:x="86337" fg:w="56"/><text x="97.4271%" y="383.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::destroy_buffer (9 samples, 0.01%)</title><rect x="97.2593%" y="437" width="0.0101%" height="15" fill="rgb(218,18,35)" fg:x="86410" fg:w="9"/><text x="97.5093%" y="447.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (14 samples, 0.02%)</title><rect x="97.2559%" y="469" width="0.0158%" height="15" fill="rgb(207,83,51)" fg:x="86407" fg:w="14"/><text x="97.5059%" y="479.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (14 samples, 0.02%)</title><rect x="97.2559%" y="453" width="0.0158%" height="15" fill="rgb(225,63,43)" fg:x="86407" fg:w="14"/><text x="97.5059%" y="463.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (28 samples, 0.03%)</title><rect x="97.2717%" y="469" width="0.0315%" height="15" fill="rgb(207,57,36)" fg:x="86421" fg:w="28"/><text x="97.5217%" y="479.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (25 samples, 0.03%)</title><rect x="97.2750%" y="453" width="0.0281%" height="15" fill="rgb(216,99,33)" fg:x="86424" fg:w="25"/><text x="97.5250%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (25 samples, 0.03%)</title><rect x="97.2750%" y="437" width="0.0281%" height="15" fill="rgb(225,42,16)" fg:x="86424" fg:w="25"/><text x="97.5250%" y="447.50"></text></g><g><title>ash::device::Device::reset_command_pool (25 samples, 0.03%)</title><rect x="97.2750%" y="421" width="0.0281%" height="15" fill="rgb(220,201,45)" fg:x="86424" fg:w="25"/><text x="97.5250%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.03%)</title><rect x="97.2750%" y="405" width="0.0281%" height="15" fill="rgb(225,33,4)" fg:x="86424" fg:w="25"/><text x="97.5250%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.03%)</title><rect x="97.2773%" y="389" width="0.0259%" height="15" fill="rgb(224,33,50)" fg:x="86426" fg:w="23"/><text x="97.5273%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="97.2908%" y="373" width="0.0124%" height="15" fill="rgb(246,198,51)" fg:x="86438" fg:w="11"/><text x="97.5408%" y="383.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (21 samples, 0.02%)</title><rect x="97.3032%" y="469" width="0.0236%" height="15" fill="rgb(205,22,4)" fg:x="86449" fg:w="21"/><text x="97.5532%" y="479.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (65 samples, 0.07%)</title><rect x="97.2559%" y="485" width="0.0732%" height="15" fill="rgb(206,3,8)" fg:x="86407" fg:w="65"/><text x="97.5059%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (165 samples, 0.19%)</title><rect x="97.1636%" y="517" width="0.1857%" height="15" fill="rgb(251,23,15)" fg:x="86325" fg:w="165"/><text x="97.4136%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (164 samples, 0.18%)</title><rect x="97.1647%" y="501" width="0.1846%" height="15" fill="rgb(252,88,28)" fg:x="86326" fg:w="164"/><text x="97.4147%" y="511.50"></text></g><g><title>wgpu::Queue::submit (167 samples, 0.19%)</title><rect x="97.1625%" y="549" width="0.1880%" height="15" fill="rgb(212,127,14)" fg:x="86324" fg:w="167"/><text x="97.4125%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (166 samples, 0.19%)</title><rect x="97.1636%" y="533" width="0.1868%" height="15" fill="rgb(247,145,37)" fg:x="86325" fg:w="166"/><text x="97.4136%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="97.5159%" y="213" width="0.0191%" height="15" fill="rgb(209,117,53)" fg:x="86638" fg:w="17"/><text x="97.7659%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="97.5238%" y="197" width="0.0113%" height="15" fill="rgb(212,90,42)" fg:x="86645" fg:w="10"/><text x="97.7738%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (38 samples, 0.04%)</title><rect x="97.4934%" y="229" width="0.0428%" height="15" fill="rgb(218,164,37)" fg:x="86618" fg:w="38"/><text x="97.7434%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (45 samples, 0.05%)</title><rect x="97.4866%" y="245" width="0.0507%" height="15" fill="rgb(246,65,34)" fg:x="86612" fg:w="45"/><text x="97.7366%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (98 samples, 0.11%)</title><rect x="97.4292%" y="261" width="0.1103%" height="15" fill="rgb(231,100,33)" fg:x="86561" fg:w="98"/><text x="97.6792%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (112 samples, 0.13%)</title><rect x="97.4168%" y="277" width="0.1261%" height="15" fill="rgb(228,126,14)" fg:x="86550" fg:w="112"/><text x="97.6668%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (116 samples, 0.13%)</title><rect x="97.4135%" y="293" width="0.1306%" height="15" fill="rgb(215,173,21)" fg:x="86547" fg:w="116"/><text x="97.6635%" y="303.50"></text></g><g><title>__GI___ioctl (616 samples, 0.69%)</title><rect x="97.5452%" y="293" width="0.6933%" height="15" fill="rgb(210,6,40)" fg:x="86664" fg:w="616"/><text x="97.7952%" y="303.50"></text></g><g><title>[unknown] (616 samples, 0.69%)</title><rect x="97.5452%" y="277" width="0.6933%" height="15" fill="rgb(212,48,18)" fg:x="86664" fg:w="616"/><text x="97.7952%" y="287.50"></text></g><g><title>[unknown] (69 samples, 0.08%)</title><rect x="98.1608%" y="261" width="0.0777%" height="15" fill="rgb(230,214,11)" fg:x="87211" fg:w="69"/><text x="98.4108%" y="271.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="98.2092%" y="245" width="0.0293%" height="15" fill="rgb(254,105,39)" fg:x="87254" fg:w="26"/><text x="98.4592%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="98.2182%" y="229" width="0.0203%" height="15" fill="rgb(245,158,5)" fg:x="87262" fg:w="18"/><text x="98.4682%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (740 samples, 0.83%)</title><rect x="97.4067%" y="309" width="0.8329%" height="15" fill="rgb(249,208,11)" fg:x="86541" fg:w="740"/><text x="97.6567%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (746 samples, 0.84%)</title><rect x="97.4011%" y="325" width="0.8397%" height="15" fill="rgb(210,39,28)" fg:x="86536" fg:w="746"/><text x="97.6511%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (759 samples, 0.85%)</title><rect x="97.3876%" y="341" width="0.8543%" height="15" fill="rgb(211,56,53)" fg:x="86524" fg:w="759"/><text x="97.6376%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (781 samples, 0.88%)</title><rect x="97.3639%" y="373" width="0.8791%" height="15" fill="rgb(226,201,30)" fg:x="86503" fg:w="781"/><text x="97.6139%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (771 samples, 0.87%)</title><rect x="97.3752%" y="357" width="0.8678%" height="15" fill="rgb(239,101,34)" fg:x="86513" fg:w="771"/><text x="97.6252%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (797 samples, 0.90%)</title><rect x="97.3561%" y="389" width="0.8971%" height="15" fill="rgb(226,209,5)" fg:x="86496" fg:w="797"/><text x="97.6061%" y="399.50"></text></g><g><title>___pthread_cond_broadcast (9 samples, 0.01%)</title><rect x="98.2430%" y="373" width="0.0101%" height="15" fill="rgb(250,105,47)" fg:x="87284" fg:w="9"/><text x="98.4930%" y="383.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (801 samples, 0.90%)</title><rect x="97.3527%" y="485" width="0.9016%" height="15" fill="rgb(230,72,3)" fg:x="86493" fg:w="801"/><text x="97.6027%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (801 samples, 0.90%)</title><rect x="97.3527%" y="469" width="0.9016%" height="15" fill="rgb(232,218,39)" fg:x="86493" fg:w="801"/><text x="97.6027%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (801 samples, 0.90%)</title><rect x="97.3527%" y="453" width="0.9016%" height="15" fill="rgb(248,166,6)" fg:x="86493" fg:w="801"/><text x="97.6027%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (801 samples, 0.90%)</title><rect x="97.3527%" y="437" width="0.9016%" height="15" fill="rgb(247,89,20)" fg:x="86493" fg:w="801"/><text x="97.6027%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (800 samples, 0.90%)</title><rect x="97.3538%" y="421" width="0.9004%" height="15" fill="rgb(248,130,54)" fg:x="86494" fg:w="800"/><text x="97.6038%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (799 samples, 0.90%)</title><rect x="97.3549%" y="405" width="0.8993%" height="15" fill="rgb(234,196,4)" fg:x="86495" fg:w="799"/><text x="97.6049%" y="415.50"></text></g><g><title>wgpu::SurfaceTexture::present (806 samples, 0.91%)</title><rect x="97.3516%" y="549" width="0.9072%" height="15" fill="rgb(250,143,31)" fg:x="86492" fg:w="806"/><text x="97.6016%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (806 samples, 0.91%)</title><rect x="97.3516%" y="533" width="0.9072%" height="15" fill="rgb(211,110,34)" fg:x="86492" fg:w="806"/><text x="97.6016%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (806 samples, 0.91%)</title><rect x="97.3516%" y="517" width="0.9072%" height="15" fill="rgb(215,124,48)" fg:x="86492" fg:w="806"/><text x="97.6016%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (806 samples, 0.91%)</title><rect x="97.3516%" y="501" width="0.9072%" height="15" fill="rgb(216,46,13)" fg:x="86492" fg:w="806"/><text x="97.6016%" y="511.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (1,020 samples, 1.15%)</title><rect x="97.1118%" y="565" width="1.1481%" height="15" fill="rgb(205,184,25)" fg:x="86279" fg:w="1020"/><text x="97.3618%" y="575.50"></text></g><g><title>ggez::event::run (83,854 samples, 94.38%)</title><rect x="3.8865%" y="693" width="94.3824%" height="15" fill="rgb(228,1,10)" fg:x="3453" fg:w="83854"/><text x="4.1365%" y="703.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (83,854 samples, 94.38%)</title><rect x="3.8865%" y="677" width="94.3824%" height="15" fill="rgb(213,116,27)" fg:x="3453" fg:w="83854"/><text x="4.1365%" y="687.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (83,854 samples, 94.38%)</title><rect x="3.8865%" y="661" width="94.3824%" height="15" fill="rgb(241,95,50)" fg:x="3453" fg:w="83854"/><text x="4.1365%" y="671.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (83,854 samples, 94.38%)</title><rect x="3.8865%" y="645" width="94.3824%" height="15" fill="rgb(238,48,32)" fg:x="3453" fg:w="83854"/><text x="4.1365%" y="655.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (83,854 samples, 94.38%)</title><rect x="3.8865%" y="629" width="94.3824%" height="15" fill="rgb(235,113,49)" fg:x="3453" fg:w="83854"/><text x="4.1365%" y="639.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (83,854 samples, 94.38%)</title><rect x="3.8865%" y="613" width="94.3824%" height="15" fill="rgb(205,127,43)" fg:x="3453" fg:w="83854"/><text x="4.1365%" y="623.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (83,842 samples, 94.37%)</title><rect x="3.9001%" y="597" width="94.3688%" height="15" fill="rgb(250,162,2)" fg:x="3465" fg:w="83842"/><text x="4.1501%" y="607.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (83,842 samples, 94.37%)</title><rect x="3.9001%" y="581" width="94.3688%" height="15" fill="rgb(220,13,41)" fg:x="3465" fg:w="83842"/><text x="4.1501%" y="591.50">ggez::event::run::{{closure}}</text></g><g><title>neuralang::main (83,947 samples, 94.49%)</title><rect x="3.7841%" y="725" width="94.4870%" height="15" fill="rgb(249,221,25)" fg:x="3362" fg:w="83947"/><text x="4.0341%" y="735.50">neuralang::main</text></g><g><title>neuralang::run (83,947 samples, 94.49%)</title><rect x="3.7841%" y="709" width="94.4870%" height="15" fill="rgb(215,208,19)" fg:x="3362" fg:w="83947"/><text x="4.0341%" y="719.50">neuralang::run</text></g><g><title>slotmap::KeyData::new (82 samples, 0.09%)</title><rect x="98.2711%" y="725" width="0.0923%" height="15" fill="rgb(236,175,2)" fg:x="87309" fg:w="82"/><text x="98.5211%" y="735.50"></text></g><g><title>__GI__dl_catch_exception (16 samples, 0.02%)</title><rect x="98.3758%" y="373" width="0.0180%" height="15" fill="rgb(241,52,2)" fg:x="87402" fg:w="16"/><text x="98.6258%" y="383.50"></text></g><g><title>dl_open_worker_begin (16 samples, 0.02%)</title><rect x="98.3758%" y="357" width="0.0180%" height="15" fill="rgb(248,140,14)" fg:x="87402" fg:w="16"/><text x="98.6258%" y="367.50"></text></g><g><title>_dl_relocate_object (14 samples, 0.02%)</title><rect x="98.3781%" y="341" width="0.0158%" height="15" fill="rgb(253,22,42)" fg:x="87404" fg:w="14"/><text x="98.6281%" y="351.50"></text></g><g><title>elf_dynamic_do_Rela (14 samples, 0.02%)</title><rect x="98.3781%" y="325" width="0.0158%" height="15" fill="rgb(234,61,47)" fg:x="87404" fg:w="14"/><text x="98.6281%" y="335.50"></text></g><g><title>wgpu::Instance::new (22 samples, 0.02%)</title><rect x="98.3713%" y="725" width="0.0248%" height="15" fill="rgb(208,226,15)" fg:x="87398" fg:w="22"/><text x="98.6213%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (22 samples, 0.02%)</title><rect x="98.3713%" y="709" width="0.0248%" height="15" fill="rgb(217,221,4)" fg:x="87398" fg:w="22"/><text x="98.6213%" y="719.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (22 samples, 0.02%)</title><rect x="98.3713%" y="693" width="0.0248%" height="15" fill="rgb(212,174,34)" fg:x="87398" fg:w="22"/><text x="98.6213%" y="703.50"></text></g><g><title>wgpu_core::instance::Instance::new (22 samples, 0.02%)</title><rect x="98.3713%" y="677" width="0.0248%" height="15" fill="rgb(253,83,4)" fg:x="87398" fg:w="22"/><text x="98.6213%" y="687.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (22 samples, 0.02%)</title><rect x="98.3713%" y="661" width="0.0248%" height="15" fill="rgb(250,195,49)" fg:x="87398" fg:w="22"/><text x="98.6213%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (22 samples, 0.02%)</title><rect x="98.3713%" y="645" width="0.0248%" height="15" fill="rgb(241,192,25)" fg:x="87398" fg:w="22"/><text x="98.6213%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (18 samples, 0.02%)</title><rect x="98.3758%" y="629" width="0.0203%" height="15" fill="rgb(208,124,10)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="639.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (18 samples, 0.02%)</title><rect x="98.3758%" y="613" width="0.0203%" height="15" fill="rgb(222,33,0)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="623.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (18 samples, 0.02%)</title><rect x="98.3758%" y="597" width="0.0203%" height="15" fill="rgb(234,209,28)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="607.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (18 samples, 0.02%)</title><rect x="98.3758%" y="581" width="0.0203%" height="15" fill="rgb(224,11,23)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="591.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (18 samples, 0.02%)</title><rect x="98.3758%" y="565" width="0.0203%" height="15" fill="rgb(232,99,1)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (18 samples, 0.02%)</title><rect x="98.3758%" y="549" width="0.0203%" height="15" fill="rgb(237,95,45)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="559.50"></text></g><g><title>[libvulkan.so.1.3.204] (18 samples, 0.02%)</title><rect x="98.3758%" y="533" width="0.0203%" height="15" fill="rgb(208,109,11)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="543.50"></text></g><g><title>___dlopen (18 samples, 0.02%)</title><rect x="98.3758%" y="517" width="0.0203%" height="15" fill="rgb(216,190,48)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="527.50"></text></g><g><title>dlopen_implementation (18 samples, 0.02%)</title><rect x="98.3758%" y="501" width="0.0203%" height="15" fill="rgb(251,171,36)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="511.50"></text></g><g><title>_dlerror_run (18 samples, 0.02%)</title><rect x="98.3758%" y="485" width="0.0203%" height="15" fill="rgb(230,62,22)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="495.50"></text></g><g><title>__GI__dl_catch_error (18 samples, 0.02%)</title><rect x="98.3758%" y="469" width="0.0203%" height="15" fill="rgb(225,114,35)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="479.50"></text></g><g><title>__GI__dl_catch_exception (18 samples, 0.02%)</title><rect x="98.3758%" y="453" width="0.0203%" height="15" fill="rgb(215,118,42)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="463.50"></text></g><g><title>dlopen_doit (18 samples, 0.02%)</title><rect x="98.3758%" y="437" width="0.0203%" height="15" fill="rgb(243,119,21)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="447.50"></text></g><g><title>_dl_open (18 samples, 0.02%)</title><rect x="98.3758%" y="421" width="0.0203%" height="15" fill="rgb(252,177,53)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="431.50"></text></g><g><title>__GI__dl_catch_exception (18 samples, 0.02%)</title><rect x="98.3758%" y="405" width="0.0203%" height="15" fill="rgb(237,209,29)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="415.50"></text></g><g><title>dl_open_worker (18 samples, 0.02%)</title><rect x="98.3758%" y="389" width="0.0203%" height="15" fill="rgb(212,65,23)" fg:x="87402" fg:w="18"/><text x="98.6258%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (9 samples, 0.01%)</title><rect x="98.4208%" y="389" width="0.0101%" height="15" fill="rgb(230,222,46)" fg:x="87442" fg:w="9"/><text x="98.6708%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.4208%" y="405" width="0.0113%" height="15" fill="rgb(215,135,32)" fg:x="87442" fg:w="10"/><text x="98.6708%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.4208%" y="421" width="0.0124%" height="15" fill="rgb(246,101,22)" fg:x="87442" fg:w="11"/><text x="98.6708%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="98.4197%" y="469" width="0.0180%" height="15" fill="rgb(206,107,13)" fg:x="87441" fg:w="16"/><text x="98.6697%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="98.4197%" y="453" width="0.0180%" height="15" fill="rgb(250,100,44)" fg:x="87441" fg:w="16"/><text x="98.6697%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="98.4197%" y="437" width="0.0180%" height="15" fill="rgb(231,147,38)" fg:x="87441" fg:w="16"/><text x="98.6697%" y="447.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (19 samples, 0.02%)</title><rect x="98.4186%" y="725" width="0.0214%" height="15" fill="rgb(229,8,40)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (19 samples, 0.02%)</title><rect x="98.4186%" y="709" width="0.0214%" height="15" fill="rgb(221,135,30)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="719.50"></text></g><g><title>ash::instance::Instance::create_device (19 samples, 0.02%)</title><rect x="98.4186%" y="693" width="0.0214%" height="15" fill="rgb(249,193,18)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="703.50"></text></g><g><title>vkCreateDevice (19 samples, 0.02%)</title><rect x="98.4186%" y="677" width="0.0214%" height="15" fill="rgb(209,133,39)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (19 samples, 0.02%)</title><rect x="98.4186%" y="661" width="0.0214%" height="15" fill="rgb(232,100,14)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="671.50"></text></g><g><title>[libvulkan.so.1.3.204] (19 samples, 0.02%)</title><rect x="98.4186%" y="645" width="0.0214%" height="15" fill="rgb(224,185,1)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="655.50"></text></g><g><title>[libvulkan.so.1.3.204] (19 samples, 0.02%)</title><rect x="98.4186%" y="629" width="0.0214%" height="15" fill="rgb(223,139,8)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="613" width="0.0214%" height="15" fill="rgb(232,213,38)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="597" width="0.0214%" height="15" fill="rgb(207,94,22)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="581" width="0.0214%" height="15" fill="rgb(219,183,54)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="565" width="0.0214%" height="15" fill="rgb(216,185,54)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="549" width="0.0214%" height="15" fill="rgb(254,217,39)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="533" width="0.0214%" height="15" fill="rgb(240,178,23)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="517" width="0.0214%" height="15" fill="rgb(218,11,47)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="501" width="0.0214%" height="15" fill="rgb(218,51,51)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (19 samples, 0.02%)</title><rect x="98.4186%" y="485" width="0.0214%" height="15" fill="rgb(238,126,27)" fg:x="87440" fg:w="19"/><text x="98.6686%" y="495.50"></text></g><g><title>[unknown] (85,634 samples, 96.39%)</title><rect x="2.0789%" y="741" width="96.3858%" height="15" fill="rgb(249,202,22)" fg:x="1847" fg:w="85634"/><text x="2.3289%" y="751.50">[unknown]</text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.5188%" y="645" width="0.0124%" height="15" fill="rgb(254,195,49)" fg:x="87529" fg:w="11"/><text x="98.7688%" y="655.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (79 samples, 0.09%)</title><rect x="98.5390%" y="613" width="0.0889%" height="15" fill="rgb(208,123,14)" fg:x="87547" fg:w="79"/><text x="98.7890%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common (78 samples, 0.09%)</title><rect x="98.5402%" y="597" width="0.0878%" height="15" fill="rgb(224,200,8)" fg:x="87548" fg:w="78"/><text x="98.7902%" y="607.50"></text></g><g><title>__futex_abstimed_wait_common64 (78 samples, 0.09%)</title><rect x="98.5402%" y="581" width="0.0878%" height="15" fill="rgb(217,61,36)" fg:x="87548" fg:w="78"/><text x="98.7902%" y="591.50"></text></g><g><title>[unknown] (74 samples, 0.08%)</title><rect x="98.5447%" y="565" width="0.0833%" height="15" fill="rgb(206,35,45)" fg:x="87552" fg:w="74"/><text x="98.7947%" y="575.50"></text></g><g><title>[unknown] (69 samples, 0.08%)</title><rect x="98.5503%" y="549" width="0.0777%" height="15" fill="rgb(217,65,33)" fg:x="87557" fg:w="69"/><text x="98.8003%" y="559.50"></text></g><g><title>[unknown] (68 samples, 0.08%)</title><rect x="98.5514%" y="533" width="0.0765%" height="15" fill="rgb(222,158,48)" fg:x="87558" fg:w="68"/><text x="98.8014%" y="543.50"></text></g><g><title>[unknown] (63 samples, 0.07%)</title><rect x="98.5570%" y="517" width="0.0709%" height="15" fill="rgb(254,2,54)" fg:x="87563" fg:w="63"/><text x="98.8070%" y="527.50"></text></g><g><title>[unknown] (62 samples, 0.07%)</title><rect x="98.5582%" y="501" width="0.0698%" height="15" fill="rgb(250,143,38)" fg:x="87564" fg:w="62"/><text x="98.8082%" y="511.50"></text></g><g><title>[unknown] (55 samples, 0.06%)</title><rect x="98.5660%" y="485" width="0.0619%" height="15" fill="rgb(248,25,0)" fg:x="87571" fg:w="55"/><text x="98.8160%" y="495.50"></text></g><g><title>[unknown] (49 samples, 0.06%)</title><rect x="98.5728%" y="469" width="0.0552%" height="15" fill="rgb(206,152,27)" fg:x="87577" fg:w="49"/><text x="98.8228%" y="479.50"></text></g><g><title>[unknown] (48 samples, 0.05%)</title><rect x="98.5739%" y="453" width="0.0540%" height="15" fill="rgb(240,77,30)" fg:x="87578" fg:w="48"/><text x="98.8239%" y="463.50"></text></g><g><title>[unknown] (41 samples, 0.05%)</title><rect x="98.5818%" y="437" width="0.0461%" height="15" fill="rgb(231,5,3)" fg:x="87585" fg:w="41"/><text x="98.8318%" y="447.50"></text></g><g><title>[unknown] (39 samples, 0.04%)</title><rect x="98.5841%" y="421" width="0.0439%" height="15" fill="rgb(207,226,32)" fg:x="87587" fg:w="39"/><text x="98.8341%" y="431.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="98.5931%" y="405" width="0.0349%" height="15" fill="rgb(222,207,47)" fg:x="87595" fg:w="31"/><text x="98.8431%" y="415.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="98.5953%" y="389" width="0.0326%" height="15" fill="rgb(229,115,45)" fg:x="87597" fg:w="29"/><text x="98.8453%" y="399.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="98.5953%" y="373" width="0.0326%" height="15" fill="rgb(224,191,6)" fg:x="87597" fg:w="29"/><text x="98.8453%" y="383.50"></text></g><g><title>___pthread_cond_timedwait64 (86 samples, 0.10%)</title><rect x="98.5379%" y="645" width="0.0968%" height="15" fill="rgb(230,227,24)" fg:x="87546" fg:w="86"/><text x="98.7879%" y="655.50"></text></g><g><title>__pthread_cond_wait_common (85 samples, 0.10%)</title><rect x="98.5390%" y="629" width="0.0957%" height="15" fill="rgb(228,80,19)" fg:x="87547" fg:w="85"/><text x="98.7890%" y="639.50"></text></g><g><title>___pthread_mutex_unlock (10 samples, 0.01%)</title><rect x="98.6347%" y="645" width="0.0113%" height="15" fill="rgb(247,229,0)" fg:x="87632" fg:w="10"/><text x="98.8847%" y="655.50"></text></g><g><title>__GI___pthread_mutex_unlock_usercnt (9 samples, 0.01%)</title><rect x="98.6358%" y="629" width="0.0101%" height="15" fill="rgb(237,194,15)" fg:x="87633" fg:w="9"/><text x="98.8858%" y="639.50"></text></g><g><title>lll_mutex_unlock_optimized (9 samples, 0.01%)</title><rect x="98.6358%" y="613" width="0.0101%" height="15" fill="rgb(219,203,20)" fg:x="87633" fg:w="9"/><text x="98.8858%" y="623.50"></text></g><g><title>__GI___lll_lock_wake (9 samples, 0.01%)</title><rect x="98.6358%" y="597" width="0.0101%" height="15" fill="rgb(234,128,8)" fg:x="87633" fg:w="9"/><text x="98.8858%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="98.6358%" y="581" width="0.0101%" height="15" fill="rgb(248,202,8)" fg:x="87633" fg:w="9"/><text x="98.8858%" y="591.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="98.6358%" y="565" width="0.0101%" height="15" fill="rgb(206,104,37)" fg:x="87633" fg:w="9"/><text x="98.8858%" y="575.50"></text></g><g><title>[unknown] (9 samples, 0.01%)</title><rect x="98.6358%" y="549" width="0.0101%" height="15" fill="rgb(223,8,27)" fg:x="87633" fg:w="9"/><text x="98.8858%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (139 samples, 0.16%)</title><rect x="98.4929%" y="661" width="0.1565%" height="15" fill="rgb(216,217,28)" fg:x="87506" fg:w="139"/><text x="98.7429%" y="671.50"></text></g><g><title>__GI___close (61 samples, 0.07%)</title><rect x="98.6493%" y="661" width="0.0687%" height="15" fill="rgb(249,199,1)" fg:x="87645" fg:w="61"/><text x="98.8993%" y="671.50"></text></g><g><title>[unknown] (61 samples, 0.07%)</title><rect x="98.6493%" y="645" width="0.0687%" height="15" fill="rgb(240,85,17)" fg:x="87645" fg:w="61"/><text x="98.8993%" y="655.50"></text></g><g><title>[unknown] (58 samples, 0.07%)</title><rect x="98.6527%" y="629" width="0.0653%" height="15" fill="rgb(206,108,45)" fg:x="87648" fg:w="58"/><text x="98.9027%" y="639.50"></text></g><g><title>[unknown] (56 samples, 0.06%)</title><rect x="98.6550%" y="613" width="0.0630%" height="15" fill="rgb(245,210,41)" fg:x="87650" fg:w="56"/><text x="98.9050%" y="623.50"></text></g><g><title>[unknown] (50 samples, 0.06%)</title><rect x="98.6617%" y="597" width="0.0563%" height="15" fill="rgb(206,13,37)" fg:x="87656" fg:w="50"/><text x="98.9117%" y="607.50"></text></g><g><title>[unknown] (47 samples, 0.05%)</title><rect x="98.6651%" y="581" width="0.0529%" height="15" fill="rgb(250,61,18)" fg:x="87659" fg:w="47"/><text x="98.9151%" y="591.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="98.6662%" y="565" width="0.0518%" height="15" fill="rgb(235,172,48)" fg:x="87660" fg:w="46"/><text x="98.9162%" y="575.50"></text></g><g><title>[unknown] (42 samples, 0.05%)</title><rect x="98.6707%" y="549" width="0.0473%" height="15" fill="rgb(249,201,17)" fg:x="87664" fg:w="42"/><text x="98.9207%" y="559.50"></text></g><g><title>[unknown] (41 samples, 0.05%)</title><rect x="98.6718%" y="533" width="0.0461%" height="15" fill="rgb(219,208,6)" fg:x="87665" fg:w="41"/><text x="98.9218%" y="543.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="98.6786%" y="517" width="0.0394%" height="15" fill="rgb(248,31,23)" fg:x="87671" fg:w="35"/><text x="98.9286%" y="527.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="98.6966%" y="501" width="0.0214%" height="15" fill="rgb(245,15,42)" fg:x="87687" fg:w="19"/><text x="98.9466%" y="511.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="98.7022%" y="485" width="0.0158%" height="15" fill="rgb(222,217,39)" fg:x="87692" fg:w="14"/><text x="98.9522%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="98.7045%" y="469" width="0.0135%" height="15" fill="rgb(210,219,27)" fg:x="87694" fg:w="12"/><text x="98.9545%" y="479.50"></text></g><g><title>[unknown] (382 samples, 0.43%)</title><rect x="98.7191%" y="629" width="0.4300%" height="15" fill="rgb(252,166,36)" fg:x="87707" fg:w="382"/><text x="98.9691%" y="639.50"></text></g><g><title>[unknown] (379 samples, 0.43%)</title><rect x="98.7225%" y="613" width="0.4266%" height="15" fill="rgb(245,132,34)" fg:x="87710" fg:w="379"/><text x="98.9725%" y="623.50"></text></g><g><title>[unknown] (378 samples, 0.43%)</title><rect x="98.7236%" y="597" width="0.4255%" height="15" fill="rgb(236,54,3)" fg:x="87711" fg:w="378"/><text x="98.9736%" y="607.50"></text></g><g><title>[unknown] (372 samples, 0.42%)</title><rect x="98.7304%" y="581" width="0.4187%" height="15" fill="rgb(241,173,43)" fg:x="87717" fg:w="372"/><text x="98.9804%" y="591.50"></text></g><g><title>[unknown] (370 samples, 0.42%)</title><rect x="98.7326%" y="565" width="0.4165%" height="15" fill="rgb(215,190,9)" fg:x="87719" fg:w="370"/><text x="98.9826%" y="575.50"></text></g><g><title>[unknown] (366 samples, 0.41%)</title><rect x="98.7371%" y="549" width="0.4120%" height="15" fill="rgb(242,101,16)" fg:x="87723" fg:w="366"/><text x="98.9871%" y="559.50"></text></g><g><title>[unknown] (363 samples, 0.41%)</title><rect x="98.7405%" y="533" width="0.4086%" height="15" fill="rgb(223,190,21)" fg:x="87726" fg:w="363"/><text x="98.9905%" y="543.50"></text></g><g><title>[unknown] (359 samples, 0.40%)</title><rect x="98.7450%" y="517" width="0.4041%" height="15" fill="rgb(215,228,25)" fg:x="87730" fg:w="359"/><text x="98.9950%" y="527.50"></text></g><g><title>[unknown] (358 samples, 0.40%)</title><rect x="98.7461%" y="501" width="0.4029%" height="15" fill="rgb(225,36,22)" fg:x="87731" fg:w="358"/><text x="98.9961%" y="511.50"></text></g><g><title>[unknown] (298 samples, 0.34%)</title><rect x="98.8137%" y="485" width="0.3354%" height="15" fill="rgb(251,106,46)" fg:x="87791" fg:w="298"/><text x="99.0637%" y="495.50"></text></g><g><title>[unknown] (128 samples, 0.14%)</title><rect x="99.0050%" y="469" width="0.1441%" height="15" fill="rgb(208,90,1)" fg:x="87961" fg:w="128"/><text x="99.2550%" y="479.50"></text></g><g><title>[unknown] (85 samples, 0.10%)</title><rect x="99.0534%" y="453" width="0.0957%" height="15" fill="rgb(243,10,4)" fg:x="88004" fg:w="85"/><text x="99.3034%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="99.1243%" y="437" width="0.0248%" height="15" fill="rgb(212,137,27)" fg:x="88067" fg:w="22"/><text x="99.3743%" y="447.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.1311%" y="421" width="0.0180%" height="15" fill="rgb(231,220,49)" fg:x="88073" fg:w="16"/><text x="99.3811%" y="431.50"></text></g><g><title>__GI___libc_read (384 samples, 0.43%)</title><rect x="98.7180%" y="661" width="0.4322%" height="15" fill="rgb(237,96,20)" fg:x="87706" fg:w="384"/><text x="98.9680%" y="671.50"></text></g><g><title>__GI___libc_read (384 samples, 0.43%)</title><rect x="98.7180%" y="645" width="0.4322%" height="15" fill="rgb(239,229,30)" fg:x="87706" fg:w="384"/><text x="98.9680%" y="655.50"></text></g><g><title>[unknown] (107 samples, 0.12%)</title><rect x="99.1547%" y="629" width="0.1204%" height="15" fill="rgb(219,65,33)" fg:x="88094" fg:w="107"/><text x="99.4047%" y="639.50"></text></g><g><title>[unknown] (93 samples, 0.10%)</title><rect x="99.1705%" y="613" width="0.1047%" height="15" fill="rgb(243,134,7)" fg:x="88108" fg:w="93"/><text x="99.4205%" y="623.50"></text></g><g><title>[unknown] (93 samples, 0.10%)</title><rect x="99.1705%" y="597" width="0.1047%" height="15" fill="rgb(216,177,54)" fg:x="88108" fg:w="93"/><text x="99.4205%" y="607.50"></text></g><g><title>[unknown] (81 samples, 0.09%)</title><rect x="99.1840%" y="581" width="0.0912%" height="15" fill="rgb(211,160,20)" fg:x="88120" fg:w="81"/><text x="99.4340%" y="591.50"></text></g><g><title>[unknown] (80 samples, 0.09%)</title><rect x="99.1851%" y="565" width="0.0900%" height="15" fill="rgb(239,85,39)" fg:x="88121" fg:w="80"/><text x="99.4351%" y="575.50"></text></g><g><title>[unknown] (74 samples, 0.08%)</title><rect x="99.1919%" y="549" width="0.0833%" height="15" fill="rgb(232,125,22)" fg:x="88127" fg:w="74"/><text x="99.4419%" y="559.50"></text></g><g><title>[unknown] (69 samples, 0.08%)</title><rect x="99.1975%" y="533" width="0.0777%" height="15" fill="rgb(244,57,34)" fg:x="88132" fg:w="69"/><text x="99.4475%" y="543.50"></text></g><g><title>[unknown] (67 samples, 0.08%)</title><rect x="99.1997%" y="517" width="0.0754%" height="15" fill="rgb(214,203,32)" fg:x="88134" fg:w="67"/><text x="99.4497%" y="527.50"></text></g><g><title>[unknown] (56 samples, 0.06%)</title><rect x="99.2121%" y="501" width="0.0630%" height="15" fill="rgb(207,58,43)" fg:x="88145" fg:w="56"/><text x="99.4621%" y="511.50"></text></g><g><title>[unknown] (47 samples, 0.05%)</title><rect x="99.2222%" y="485" width="0.0529%" height="15" fill="rgb(215,193,15)" fg:x="88154" fg:w="47"/><text x="99.4722%" y="495.50"></text></g><g><title>[unknown] (24 samples, 0.03%)</title><rect x="99.2481%" y="469" width="0.0270%" height="15" fill="rgb(232,15,44)" fg:x="88177" fg:w="24"/><text x="99.4981%" y="479.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.2526%" y="453" width="0.0225%" height="15" fill="rgb(212,3,48)" fg:x="88181" fg:w="20"/><text x="99.5026%" y="463.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.2549%" y="437" width="0.0203%" height="15" fill="rgb(218,128,7)" fg:x="88183" fg:w="18"/><text x="99.5049%" y="447.50"></text></g><g><title>__GI___nanosleep (116 samples, 0.13%)</title><rect x="99.1502%" y="661" width="0.1306%" height="15" fill="rgb(226,216,39)" fg:x="88090" fg:w="116"/><text x="99.4002%" y="671.50"></text></g><g><title>__GI___clock_nanosleep (113 samples, 0.13%)</title><rect x="99.1536%" y="645" width="0.1272%" height="15" fill="rgb(243,47,51)" fg:x="88093" fg:w="113"/><text x="99.4036%" y="655.50"></text></g><g><title>[unknown] (291 samples, 0.33%)</title><rect x="99.2864%" y="645" width="0.3275%" height="15" fill="rgb(241,183,40)" fg:x="88211" fg:w="291"/><text x="99.5364%" y="655.50"></text></g><g><title>[unknown] (288 samples, 0.32%)</title><rect x="99.2898%" y="629" width="0.3242%" height="15" fill="rgb(231,217,32)" fg:x="88214" fg:w="288"/><text x="99.5398%" y="639.50"></text></g><g><title>[unknown] (284 samples, 0.32%)</title><rect x="99.2943%" y="613" width="0.3197%" height="15" fill="rgb(229,61,38)" fg:x="88218" fg:w="284"/><text x="99.5443%" y="623.50"></text></g><g><title>[unknown] (278 samples, 0.31%)</title><rect x="99.3010%" y="597" width="0.3129%" height="15" fill="rgb(225,210,5)" fg:x="88224" fg:w="278"/><text x="99.5510%" y="607.50"></text></g><g><title>[unknown] (269 samples, 0.30%)</title><rect x="99.3112%" y="581" width="0.3028%" height="15" fill="rgb(231,79,45)" fg:x="88233" fg:w="269"/><text x="99.5612%" y="591.50"></text></g><g><title>[unknown] (265 samples, 0.30%)</title><rect x="99.3157%" y="565" width="0.2983%" height="15" fill="rgb(224,100,7)" fg:x="88237" fg:w="265"/><text x="99.5657%" y="575.50"></text></g><g><title>[unknown] (250 samples, 0.28%)</title><rect x="99.3325%" y="549" width="0.2814%" height="15" fill="rgb(241,198,18)" fg:x="88252" fg:w="250"/><text x="99.5825%" y="559.50"></text></g><g><title>[unknown] (221 samples, 0.25%)</title><rect x="99.3652%" y="533" width="0.2487%" height="15" fill="rgb(252,97,53)" fg:x="88281" fg:w="221"/><text x="99.6152%" y="543.50"></text></g><g><title>[unknown] (194 samples, 0.22%)</title><rect x="99.3956%" y="517" width="0.2184%" height="15" fill="rgb(220,88,7)" fg:x="88308" fg:w="194"/><text x="99.6456%" y="527.50"></text></g><g><title>[unknown] (148 samples, 0.17%)</title><rect x="99.4474%" y="501" width="0.1666%" height="15" fill="rgb(213,176,14)" fg:x="88354" fg:w="148"/><text x="99.6974%" y="511.50"></text></g><g><title>[unknown] (89 samples, 0.10%)</title><rect x="99.5138%" y="485" width="0.1002%" height="15" fill="rgb(246,73,7)" fg:x="88413" fg:w="89"/><text x="99.7638%" y="495.50"></text></g><g><title>[unknown] (68 samples, 0.08%)</title><rect x="99.5374%" y="469" width="0.0765%" height="15" fill="rgb(245,64,36)" fg:x="88434" fg:w="68"/><text x="99.7874%" y="479.50"></text></g><g><title>[unknown] (58 samples, 0.07%)</title><rect x="99.5487%" y="453" width="0.0653%" height="15" fill="rgb(245,80,10)" fg:x="88444" fg:w="58"/><text x="99.7987%" y="463.50"></text></g><g><title>[unknown] (55 samples, 0.06%)</title><rect x="99.5520%" y="437" width="0.0619%" height="15" fill="rgb(232,107,50)" fg:x="88447" fg:w="55"/><text x="99.8020%" y="447.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="99.5757%" y="421" width="0.0383%" height="15" fill="rgb(253,3,0)" fg:x="88468" fg:w="34"/><text x="99.8257%" y="431.50"></text></g><g><title>[unknown] (14 samples, 0.02%)</title><rect x="99.5982%" y="405" width="0.0158%" height="15" fill="rgb(212,99,53)" fg:x="88488" fg:w="14"/><text x="99.8482%" y="415.50"></text></g><g><title>__libc_open64 (297 samples, 0.33%)</title><rect x="99.2830%" y="661" width="0.3343%" height="15" fill="rgb(249,111,54)" fg:x="88208" fg:w="297"/><text x="99.5330%" y="671.50"></text></g><g><title>_IO_strfile_read (21 samples, 0.02%)</title><rect x="99.6207%" y="645" width="0.0236%" height="15" fill="rgb(249,55,30)" fg:x="88508" fg:w="21"/><text x="99.8707%" y="655.50"></text></g><g><title>_IO_str_init_static_internal (16 samples, 0.02%)</title><rect x="99.6263%" y="629" width="0.0180%" height="15" fill="rgb(237,47,42)" fg:x="88513" fg:w="16"/><text x="99.8763%" y="639.50"></text></g><g><title>__sscanf (82 samples, 0.09%)</title><rect x="99.6173%" y="661" width="0.0923%" height="15" fill="rgb(211,20,18)" fg:x="88505" fg:w="82"/><text x="99.8673%" y="671.50"></text></g><g><title>__vfscanf_internal (58 samples, 0.07%)</title><rect x="99.6443%" y="645" width="0.0653%" height="15" fill="rgb(231,203,46)" fg:x="88529" fg:w="58"/><text x="99.8943%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,115 samples, 1.25%)</title><rect x="98.4647%" y="709" width="1.2550%" height="15" fill="rgb(237,142,3)" fg:x="87481" fg:w="1115"/><text x="98.7147%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,115 samples, 1.25%)</title><rect x="98.4647%" y="693" width="1.2550%" height="15" fill="rgb(241,107,1)" fg:x="87481" fg:w="1115"/><text x="98.7147%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,101 samples, 1.24%)</title><rect x="98.4805%" y="677" width="1.2392%" height="15" fill="rgb(229,83,13)" fg:x="87495" fg:w="1101"/><text x="98.7305%" y="687.50"></text></g><g><title>__clone3 (1,126 samples, 1.27%)</title><rect x="98.4647%" y="741" width="1.2674%" height="15" fill="rgb(241,91,40)" fg:x="87481" fg:w="1126"/><text x="98.7147%" y="751.50"></text></g><g><title>start_thread (1,126 samples, 1.27%)</title><rect x="98.4647%" y="725" width="1.2674%" height="15" fill="rgb(225,3,45)" fg:x="87481" fg:w="1126"/><text x="98.7147%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10 samples, 0.01%)</title><rect x="99.7209%" y="709" width="0.0113%" height="15" fill="rgb(244,223,14)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.7209%" y="693" width="0.0113%" height="15" fill="rgb(224,124,37)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.7209%" y="677" width="0.0113%" height="15" fill="rgb(251,171,30)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.01%)</title><rect x="99.7209%" y="661" width="0.0113%" height="15" fill="rgb(236,46,54)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.01%)</title><rect x="99.7209%" y="645" width="0.0113%" height="15" fill="rgb(245,213,5)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="655.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.01%)</title><rect x="99.7209%" y="629" width="0.0113%" height="15" fill="rgb(230,144,27)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="639.50"></text></g><g><title>std::panicking::try (10 samples, 0.01%)</title><rect x="99.7209%" y="613" width="0.0113%" height="15" fill="rgb(220,86,6)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="623.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.01%)</title><rect x="99.7209%" y="597" width="0.0113%" height="15" fill="rgb(240,20,13)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.01%)</title><rect x="99.7209%" y="581" width="0.0113%" height="15" fill="rgb(217,89,34)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.01%)</title><rect x="99.7209%" y="565" width="0.0113%" height="15" fill="rgb(229,13,5)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.01%)</title><rect x="99.7209%" y="549" width="0.0113%" height="15" fill="rgb(244,67,35)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="559.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (10 samples, 0.01%)</title><rect x="99.7209%" y="533" width="0.0113%" height="15" fill="rgb(221,40,2)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="543.50"></text></g><g><title>gilrs::ff::server::run (10 samples, 0.01%)</title><rect x="99.7209%" y="517" width="0.0113%" height="15" fill="rgb(237,157,21)" fg:x="88597" fg:w="10"/><text x="99.9709%" y="527.50"></text></g><g><title>ggez::event::run (16 samples, 0.02%)</title><rect x="99.7321%" y="453" width="0.0180%" height="15" fill="rgb(222,94,11)" fg:x="88607" fg:w="16"/><text x="99.9821%" y="463.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="99.7321%" y="437" width="0.0180%" height="15" fill="rgb(249,113,6)" fg:x="88607" fg:w="16"/><text x="99.9821%" y="447.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="99.7321%" y="421" width="0.0180%" height="15" fill="rgb(238,137,36)" fg:x="88607" fg:w="16"/><text x="99.9821%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="99.7321%" y="405" width="0.0180%" height="15" fill="rgb(210,102,26)" fg:x="88607" fg:w="16"/><text x="99.9821%" y="415.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (16 samples, 0.02%)</title><rect x="99.7321%" y="389" width="0.0180%" height="15" fill="rgb(218,30,30)" fg:x="88607" fg:w="16"/><text x="99.9821%" y="399.50"></text></g><g><title>__libc_start_main_impl (20 samples, 0.02%)</title><rect x="99.7321%" y="725" width="0.0225%" height="15" fill="rgb(214,67,26)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="735.50"></text></g><g><title>__libc_start_call_main (20 samples, 0.02%)</title><rect x="99.7321%" y="709" width="0.0225%" height="15" fill="rgb(251,9,53)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="719.50"></text></g><g><title>main (20 samples, 0.02%)</title><rect x="99.7321%" y="693" width="0.0225%" height="15" fill="rgb(228,204,25)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="703.50"></text></g><g><title>std::rt::lang_start_internal (20 samples, 0.02%)</title><rect x="99.7321%" y="677" width="0.0225%" height="15" fill="rgb(207,153,8)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="687.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.02%)</title><rect x="99.7321%" y="661" width="0.0225%" height="15" fill="rgb(242,9,16)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="671.50"></text></g><g><title>std::panicking::try (20 samples, 0.02%)</title><rect x="99.7321%" y="645" width="0.0225%" height="15" fill="rgb(217,211,10)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="655.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.02%)</title><rect x="99.7321%" y="629" width="0.0225%" height="15" fill="rgb(219,228,52)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="639.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (20 samples, 0.02%)</title><rect x="99.7321%" y="613" width="0.0225%" height="15" fill="rgb(231,92,29)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="623.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.02%)</title><rect x="99.7321%" y="597" width="0.0225%" height="15" fill="rgb(232,8,23)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="607.50"></text></g><g><title>std::panicking::try (20 samples, 0.02%)</title><rect x="99.7321%" y="581" width="0.0225%" height="15" fill="rgb(216,211,34)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="591.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.02%)</title><rect x="99.7321%" y="565" width="0.0225%" height="15" fill="rgb(236,151,0)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (20 samples, 0.02%)</title><rect x="99.7321%" y="549" width="0.0225%" height="15" fill="rgb(209,168,3)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="559.50"></text></g><g><title>std::rt::lang_start::{{closure}} (20 samples, 0.02%)</title><rect x="99.7321%" y="533" width="0.0225%" height="15" fill="rgb(208,129,28)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.02%)</title><rect x="99.7321%" y="517" width="0.0225%" height="15" fill="rgb(229,78,22)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.02%)</title><rect x="99.7321%" y="501" width="0.0225%" height="15" fill="rgb(228,187,13)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="511.50"></text></g><g><title>neuralang::main (20 samples, 0.02%)</title><rect x="99.7321%" y="485" width="0.0225%" height="15" fill="rgb(240,119,24)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="495.50"></text></g><g><title>neuralang::run (20 samples, 0.02%)</title><rect x="99.7321%" y="469" width="0.0225%" height="15" fill="rgb(209,194,42)" fg:x="88607" fg:w="20"/><text x="99.9821%" y="479.50"></text></g><g><title>_start (21 samples, 0.02%)</title><rect x="99.7321%" y="741" width="0.0236%" height="15" fill="rgb(247,200,46)" fg:x="88607" fg:w="21"/><text x="99.9821%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (15 samples, 0.02%)</title><rect x="99.7580%" y="741" width="0.0169%" height="15" fill="rgb(218,76,16)" fg:x="88630" fg:w="15"/><text x="100.0080%" y="751.50"></text></g><g><title>neuralang (88,409 samples, 99.51%)</title><rect x="0.2758%" y="757" width="99.5093%" height="15" fill="rgb(225,21,48)" fg:x="245" fg:w="88409"/><text x="0.5258%" y="767.50">neuralang</text></g><g><title>[libpulse.so.0.24.1] (13 samples, 0.01%)</title><rect x="99.8165%" y="533" width="0.0146%" height="15" fill="rgb(239,223,50)" fg:x="88682" fg:w="13"/><text x="100.0665%" y="543.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (13 samples, 0.01%)</title><rect x="99.8165%" y="517" width="0.0146%" height="15" fill="rgb(244,45,21)" fg:x="88682" fg:w="13"/><text x="100.0665%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (18 samples, 0.02%)</title><rect x="99.8132%" y="565" width="0.0203%" height="15" fill="rgb(232,33,43)" fg:x="88679" fg:w="18"/><text x="100.0632%" y="575.50"></text></g><g><title>pa_pdispatch_run (16 samples, 0.02%)</title><rect x="99.8154%" y="549" width="0.0180%" height="15" fill="rgb(209,8,3)" fg:x="88681" fg:w="16"/><text x="100.0654%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (23 samples, 0.03%)</title><rect x="99.8120%" y="581" width="0.0259%" height="15" fill="rgb(214,25,53)" fg:x="88678" fg:w="23"/><text x="100.0620%" y="591.50"></text></g><g><title>[libpulsecommon-15.99.so] (25 samples, 0.03%)</title><rect x="99.8109%" y="597" width="0.0281%" height="15" fill="rgb(254,186,54)" fg:x="88677" fg:w="25"/><text x="100.0609%" y="607.50"></text></g><g><title>[libpulsecommon-15.99.so] (38 samples, 0.04%)</title><rect x="99.8087%" y="613" width="0.0428%" height="15" fill="rgb(208,174,49)" fg:x="88675" fg:w="38"/><text x="100.0587%" y="623.50"></text></g><g><title>[libpulsecommon-15.99.so] (48 samples, 0.05%)</title><rect x="99.8064%" y="629" width="0.0540%" height="15" fill="rgb(233,191,51)" fg:x="88673" fg:w="48"/><text x="100.0564%" y="639.50"></text></g><g><title>pa_mainloop_dispatch (59 samples, 0.07%)</title><rect x="99.8030%" y="645" width="0.0664%" height="15" fill="rgb(222,134,10)" fg:x="88670" fg:w="59"/><text x="100.0530%" y="655.50"></text></g><g><title>__GI___poll (94 samples, 0.11%)</title><rect x="99.8751%" y="613" width="0.1058%" height="15" fill="rgb(230,226,20)" fg:x="88734" fg:w="94"/><text x="100.1251%" y="623.50"></text></g><g><title>[unknown] (92 samples, 0.10%)</title><rect x="99.8773%" y="597" width="0.1036%" height="15" fill="rgb(251,111,25)" fg:x="88736" fg:w="92"/><text x="100.1273%" y="607.50"></text></g><g><title>[unknown] (89 samples, 0.10%)</title><rect x="99.8807%" y="581" width="0.1002%" height="15" fill="rgb(224,40,46)" fg:x="88739" fg:w="89"/><text x="100.1307%" y="591.50"></text></g><g><title>[unknown] (89 samples, 0.10%)</title><rect x="99.8807%" y="565" width="0.1002%" height="15" fill="rgb(236,108,47)" fg:x="88739" fg:w="89"/><text x="100.1307%" y="575.50"></text></g><g><title>[unknown] (89 samples, 0.10%)</title><rect x="99.8807%" y="549" width="0.1002%" height="15" fill="rgb(234,93,0)" fg:x="88739" fg:w="89"/><text x="100.1307%" y="559.50"></text></g><g><title>[unknown] (87 samples, 0.10%)</title><rect x="99.8829%" y="533" width="0.0979%" height="15" fill="rgb(224,213,32)" fg:x="88741" fg:w="87"/><text x="100.1329%" y="543.50"></text></g><g><title>[unknown] (85 samples, 0.10%)</title><rect x="99.8852%" y="517" width="0.0957%" height="15" fill="rgb(251,11,48)" fg:x="88743" fg:w="85"/><text x="100.1352%" y="527.50"></text></g><g><title>[unknown] (73 samples, 0.08%)</title><rect x="99.8987%" y="501" width="0.0822%" height="15" fill="rgb(236,173,5)" fg:x="88755" fg:w="73"/><text x="100.1487%" y="511.50"></text></g><g><title>[unknown] (71 samples, 0.08%)</title><rect x="99.9010%" y="485" width="0.0799%" height="15" fill="rgb(230,95,12)" fg:x="88757" fg:w="71"/><text x="100.1510%" y="495.50"></text></g><g><title>[unknown] (68 samples, 0.08%)</title><rect x="99.9043%" y="469" width="0.0765%" height="15" fill="rgb(232,209,1)" fg:x="88760" fg:w="68"/><text x="100.1543%" y="479.50"></text></g><g><title>[unknown] (64 samples, 0.07%)</title><rect x="99.9088%" y="453" width="0.0720%" height="15" fill="rgb(232,6,1)" fg:x="88764" fg:w="64"/><text x="100.1588%" y="463.50"></text></g><g><title>[unknown] (61 samples, 0.07%)</title><rect x="99.9122%" y="437" width="0.0687%" height="15" fill="rgb(210,224,50)" fg:x="88767" fg:w="61"/><text x="100.1622%" y="447.50"></text></g><g><title>[unknown] (54 samples, 0.06%)</title><rect x="99.9201%" y="421" width="0.0608%" height="15" fill="rgb(228,127,35)" fg:x="88774" fg:w="54"/><text x="100.1701%" y="431.50"></text></g><g><title>[unknown] (51 samples, 0.06%)</title><rect x="99.9235%" y="405" width="0.0574%" height="15" fill="rgb(245,102,45)" fg:x="88777" fg:w="51"/><text x="100.1735%" y="415.50"></text></g><g><title>[unknown] (48 samples, 0.05%)</title><rect x="99.9268%" y="389" width="0.0540%" height="15" fill="rgb(214,1,49)" fg:x="88780" fg:w="48"/><text x="100.1768%" y="399.50"></text></g><g><title>pa_mainloop_poll (102 samples, 0.11%)</title><rect x="99.8694%" y="645" width="0.1148%" height="15" fill="rgb(226,163,40)" fg:x="88729" fg:w="102"/><text x="100.1194%" y="655.50"></text></g><g><title>[libpulse.so.0.24.1] (101 samples, 0.11%)</title><rect x="99.8706%" y="629" width="0.1137%" height="15" fill="rgb(239,212,28)" fg:x="88730" fg:w="101"/><text x="100.1206%" y="639.50"></text></g><g><title>pa_read (12 samples, 0.01%)</title><rect x="99.9842%" y="629" width="0.0135%" height="15" fill="rgb(220,20,13)" fg:x="88831" fg:w="12"/><text x="100.2342%" y="639.50"></text></g><g><title>__GI___libc_read (12 samples, 0.01%)</title><rect x="99.9842%" y="613" width="0.0135%" height="15" fill="rgb(210,164,35)" fg:x="88831" fg:w="12"/><text x="100.2342%" y="623.50"></text></g><g><title>__GI___libc_read (12 samples, 0.01%)</title><rect x="99.9842%" y="597" width="0.0135%" height="15" fill="rgb(248,109,41)" fg:x="88831" fg:w="12"/><text x="100.2342%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.9854%" y="581" width="0.0124%" height="15" fill="rgb(238,23,50)" fg:x="88832" fg:w="11"/><text x="100.2354%" y="591.50"></text></g><g><title>all (88,845 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(211,48,49)" fg:x="0" fg:w="88845"/><text x="0.2500%" y="783.50"></text></g><g><title>threaded-ml (186 samples, 0.21%)</title><rect x="99.7906%" y="757" width="0.2094%" height="15" fill="rgb(223,36,21)" fg:x="88659" fg:w="186"/><text x="100.0406%" y="767.50"></text></g><g><title>__clone3 (175 samples, 0.20%)</title><rect x="99.8030%" y="741" width="0.1970%" height="15" fill="rgb(207,123,46)" fg:x="88670" fg:w="175"/><text x="100.0530%" y="751.50"></text></g><g><title>start_thread (175 samples, 0.20%)</title><rect x="99.8030%" y="725" width="0.1970%" height="15" fill="rgb(240,218,32)" fg:x="88670" fg:w="175"/><text x="100.0530%" y="735.50"></text></g><g><title>[libpulsecommon-15.99.so] (175 samples, 0.20%)</title><rect x="99.8030%" y="709" width="0.1970%" height="15" fill="rgb(252,5,43)" fg:x="88670" fg:w="175"/><text x="100.0530%" y="719.50"></text></g><g><title>[libpulse.so.0.24.1] (175 samples, 0.20%)</title><rect x="99.8030%" y="693" width="0.1970%" height="15" fill="rgb(252,84,19)" fg:x="88670" fg:w="175"/><text x="100.0530%" y="703.50"></text></g><g><title>pa_mainloop_run (175 samples, 0.20%)</title><rect x="99.8030%" y="677" width="0.1970%" height="15" fill="rgb(243,152,39)" fg:x="88670" fg:w="175"/><text x="100.0530%" y="687.50"></text></g><g><title>pa_mainloop_iterate (175 samples, 0.20%)</title><rect x="99.8030%" y="661" width="0.1970%" height="15" fill="rgb(234,160,15)" fg:x="88670" fg:w="175"/><text x="100.0530%" y="671.50"></text></g><g><title>pa_mainloop_prepare (14 samples, 0.02%)</title><rect x="99.9842%" y="645" width="0.0158%" height="15" fill="rgb(237,34,20)" fg:x="88831" fg:w="14"/><text x="100.2342%" y="655.50"></text></g></svg></svg>