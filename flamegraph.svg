<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="805.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="167494"><g><title>__GI___futex_abstimed_wait_cancelable64 (33 samples, 0.02%)</title><rect x="0.0054%" y="629" width="0.0197%" height="15" fill="rgb(227,0,7)" fg:x="9" fg:w="33"/><text x="0.2554%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (33 samples, 0.02%)</title><rect x="0.0054%" y="613" width="0.0197%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="33"/><text x="0.2554%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common64 (33 samples, 0.02%)</title><rect x="0.0054%" y="597" width="0.0197%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="33"/><text x="0.2554%" y="607.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="0.0054%" y="581" width="0.0197%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="33"/><text x="0.2554%" y="591.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="0.0090%" y="565" width="0.0161%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="27"/><text x="0.2590%" y="575.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="0.0090%" y="549" width="0.0161%" height="15" fill="rgb(232,128,0)" fg:x="15" fg:w="27"/><text x="0.2590%" y="559.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="0.0096%" y="533" width="0.0155%" height="15" fill="rgb(207,160,47)" fg:x="16" fg:w="26"/><text x="0.2596%" y="543.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="0.0107%" y="517" width="0.0143%" height="15" fill="rgb(228,23,34)" fg:x="18" fg:w="24"/><text x="0.2607%" y="527.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="0.0119%" y="501" width="0.0131%" height="15" fill="rgb(218,30,26)" fg:x="20" fg:w="22"/><text x="0.2619%" y="511.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="0.0125%" y="485" width="0.0125%" height="15" fill="rgb(220,122,19)" fg:x="21" fg:w="21"/><text x="0.2625%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="0.0149%" y="469" width="0.0101%" height="15" fill="rgb(250,228,42)" fg:x="25" fg:w="17"/><text x="0.2649%" y="479.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="0.0149%" y="453" width="0.0101%" height="15" fill="rgb(240,193,28)" fg:x="25" fg:w="17"/><text x="0.2649%" y="463.50"></text></g><g><title>___pthread_cond_timedwait64 (37 samples, 0.02%)</title><rect x="0.0042%" y="661" width="0.0221%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="37"/><text x="0.2542%" y="671.50"></text></g><g><title>__pthread_cond_wait_common (36 samples, 0.02%)</title><rect x="0.0048%" y="645" width="0.0215%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="36"/><text x="0.2548%" y="655.50"></text></g><g><title>[vkrt]_Analysis (48 samples, 0.03%)</title><rect x="0.0000%" y="757" width="0.0287%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="48"/><text x="0.2500%" y="767.50"></text></g><g><title>__clone3 (43 samples, 0.03%)</title><rect x="0.0030%" y="741" width="0.0257%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="43"/><text x="0.2530%" y="751.50"></text></g><g><title>start_thread (43 samples, 0.03%)</title><rect x="0.0030%" y="725" width="0.0257%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="43"/><text x="0.2530%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (43 samples, 0.03%)</title><rect x="0.0030%" y="709" width="0.0257%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="43"/><text x="0.2530%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (43 samples, 0.03%)</title><rect x="0.0030%" y="693" width="0.0257%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="43"/><text x="0.2530%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (42 samples, 0.03%)</title><rect x="0.0036%" y="677" width="0.0251%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="42"/><text x="0.2536%" y="687.50"></text></g><g><title>[anon] (18 samples, 0.01%)</title><rect x="0.0394%" y="741" width="0.0107%" height="15" fill="rgb(249,33,26)" fg:x="66" fg:w="18"/><text x="0.2894%" y="751.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="0.0549%" y="725" width="0.0131%" height="15" fill="rgb(235,183,28)" fg:x="92" fg:w="22"/><text x="0.3049%" y="735.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="0.0531%" y="741" width="0.0209%" height="15" fill="rgb(221,5,38)" fg:x="89" fg:w="35"/><text x="0.3031%" y="751.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (18 samples, 0.01%)</title><rect x="0.0758%" y="485" width="0.0107%" height="15" fill="rgb(247,18,42)" fg:x="127" fg:w="18"/><text x="0.3258%" y="495.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (19 samples, 0.01%)</title><rect x="0.0955%" y="469" width="0.0113%" height="15" fill="rgb(241,131,45)" fg:x="160" fg:w="19"/><text x="0.3455%" y="479.50"></text></g><g><title>snd_pcm_status (19 samples, 0.01%)</title><rect x="0.0955%" y="453" width="0.0113%" height="15" fill="rgb(249,31,29)" fg:x="160" fg:w="19"/><text x="0.3455%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (19 samples, 0.01%)</title><rect x="0.0955%" y="437" width="0.0113%" height="15" fill="rgb(225,111,53)" fg:x="160" fg:w="19"/><text x="0.3455%" y="447.50"></text></g><g><title>alsa::pcm::PCM::status (20 samples, 0.01%)</title><rect x="0.0955%" y="485" width="0.0119%" height="15" fill="rgb(238,160,17)" fg:x="160" fg:w="20"/><text x="0.3455%" y="495.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="0.1105%" y="453" width="0.0275%" height="15" fill="rgb(214,148,48)" fg:x="185" fg:w="46"/><text x="0.3605%" y="463.50"></text></g><g><title>[unknown] (44 samples, 0.03%)</title><rect x="0.1116%" y="437" width="0.0263%" height="15" fill="rgb(232,36,49)" fg:x="187" fg:w="44"/><text x="0.3616%" y="447.50"></text></g><g><title>[unknown] (42 samples, 0.03%)</title><rect x="0.1128%" y="421" width="0.0251%" height="15" fill="rgb(209,103,24)" fg:x="189" fg:w="42"/><text x="0.3628%" y="431.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="0.1134%" y="405" width="0.0245%" height="15" fill="rgb(229,88,8)" fg:x="190" fg:w="41"/><text x="0.3634%" y="415.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="0.1140%" y="389" width="0.0239%" height="15" fill="rgb(213,181,19)" fg:x="191" fg:w="40"/><text x="0.3640%" y="399.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="0.1146%" y="373" width="0.0233%" height="15" fill="rgb(254,191,54)" fg:x="192" fg:w="39"/><text x="0.3646%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.02%)</title><rect x="0.1170%" y="357" width="0.0209%" height="15" fill="rgb(241,83,37)" fg:x="196" fg:w="35"/><text x="0.3670%" y="367.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="0.1212%" y="341" width="0.0167%" height="15" fill="rgb(233,36,39)" fg:x="203" fg:w="28"/><text x="0.3712%" y="351.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="0.1224%" y="325" width="0.0155%" height="15" fill="rgb(226,3,54)" fg:x="205" fg:w="26"/><text x="0.3724%" y="335.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="0.1230%" y="309" width="0.0149%" height="15" fill="rgb(245,192,40)" fg:x="206" fg:w="25"/><text x="0.3730%" y="319.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="0.1242%" y="293" width="0.0137%" height="15" fill="rgb(238,167,29)" fg:x="208" fg:w="23"/><text x="0.3742%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="0.1260%" y="277" width="0.0119%" height="15" fill="rgb(232,182,51)" fg:x="211" fg:w="20"/><text x="0.3760%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="0.1266%" y="261" width="0.0113%" height="15" fill="rgb(231,60,39)" fg:x="212" fg:w="19"/><text x="0.3766%" y="271.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="0.1272%" y="245" width="0.0107%" height="15" fill="rgb(208,69,12)" fg:x="213" fg:w="18"/><text x="0.3772%" y="255.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (107 samples, 0.06%)</title><rect x="0.0746%" y="501" width="0.0639%" height="15" fill="rgb(235,93,37)" fg:x="125" fg:w="107"/><text x="0.3246%" y="511.50"></text></g><g><title>alsa::poll::poll (51 samples, 0.03%)</title><rect x="0.1081%" y="485" width="0.0304%" height="15" fill="rgb(213,116,39)" fg:x="181" fg:w="51"/><text x="0.3581%" y="495.50"></text></g><g><title>__GI___poll (50 samples, 0.03%)</title><rect x="0.1087%" y="469" width="0.0299%" height="15" fill="rgb(222,207,29)" fg:x="182" fg:w="50"/><text x="0.3587%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (65 samples, 0.04%)</title><rect x="0.1385%" y="453" width="0.0388%" height="15" fill="rgb(206,96,30)" fg:x="232" fg:w="65"/><text x="0.3885%" y="463.50"></text></g><g><title>[libasound.so.2.0.0] (64 samples, 0.04%)</title><rect x="0.1391%" y="437" width="0.0382%" height="15" fill="rgb(218,138,4)" fg:x="233" fg:w="64"/><text x="0.3891%" y="447.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (53 samples, 0.03%)</title><rect x="0.1457%" y="421" width="0.0316%" height="15" fill="rgb(250,191,14)" fg:x="244" fg:w="53"/><text x="0.3957%" y="431.50"></text></g><g><title>pa_stream_write (40 samples, 0.02%)</title><rect x="0.1534%" y="405" width="0.0239%" height="15" fill="rgb(239,60,40)" fg:x="257" fg:w="40"/><text x="0.4034%" y="415.50"></text></g><g><title>pa_stream_write_ext_free (39 samples, 0.02%)</title><rect x="0.1540%" y="389" width="0.0233%" height="15" fill="rgb(206,27,48)" fg:x="258" fg:w="39"/><text x="0.4040%" y="399.50"></text></g><g><title>[libasound.so.2.0.0] (66 samples, 0.04%)</title><rect x="0.1385%" y="469" width="0.0394%" height="15" fill="rgb(225,35,8)" fg:x="232" fg:w="66"/><text x="0.3885%" y="479.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (68 samples, 0.04%)</title><rect x="0.1385%" y="485" width="0.0406%" height="15" fill="rgb(250,213,24)" fg:x="232" fg:w="68"/><text x="0.3885%" y="495.50"></text></g><g><title>core::ptr::read (20 samples, 0.01%)</title><rect x="0.2000%" y="357" width="0.0119%" height="15" fill="rgb(247,123,22)" fg:x="335" fg:w="20"/><text x="0.4500%" y="367.50"></text></g><g><title>core::mem::swap (39 samples, 0.02%)</title><rect x="0.2000%" y="389" width="0.0233%" height="15" fill="rgb(231,138,38)" fg:x="335" fg:w="39"/><text x="0.4500%" y="399.50"></text></g><g><title>core::mem::swap_simple (39 samples, 0.02%)</title><rect x="0.2000%" y="373" width="0.0233%" height="15" fill="rgb(231,145,46)" fg:x="335" fg:w="39"/><text x="0.4500%" y="383.50"></text></g><g><title>core::ptr::write (19 samples, 0.01%)</title><rect x="0.2119%" y="357" width="0.0113%" height="15" fill="rgb(251,118,11)" fg:x="355" fg:w="19"/><text x="0.4619%" y="367.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.05%)</title><rect x="0.1845%" y="421" width="0.0460%" height="15" fill="rgb(217,147,25)" fg:x="309" fg:w="77"/><text x="0.4345%" y="431.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (62 samples, 0.04%)</title><rect x="0.1934%" y="405" width="0.0370%" height="15" fill="rgb(247,81,37)" fg:x="324" fg:w="62"/><text x="0.4434%" y="415.50"></text></g><g><title>__clone3 (263 samples, 0.16%)</title><rect x="0.0740%" y="741" width="0.1570%" height="15" fill="rgb(209,12,38)" fg:x="124" fg:w="263"/><text x="0.3240%" y="751.50"></text></g><g><title>start_thread (263 samples, 0.16%)</title><rect x="0.0740%" y="725" width="0.1570%" height="15" fill="rgb(227,1,9)" fg:x="124" fg:w="263"/><text x="0.3240%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (263 samples, 0.16%)</title><rect x="0.0740%" y="709" width="0.1570%" height="15" fill="rgb(248,47,43)" fg:x="124" fg:w="263"/><text x="0.3240%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (263 samples, 0.16%)</title><rect x="0.0740%" y="693" width="0.1570%" height="15" fill="rgb(221,10,30)" fg:x="124" fg:w="263"/><text x="0.3240%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (263 samples, 0.16%)</title><rect x="0.0740%" y="677" width="0.1570%" height="15" fill="rgb(210,229,1)" fg:x="124" fg:w="263"/><text x="0.3240%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (263 samples, 0.16%)</title><rect x="0.0740%" y="661" width="0.1570%" height="15" fill="rgb(222,148,37)" fg:x="124" fg:w="263"/><text x="0.3240%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (263 samples, 0.16%)</title><rect x="0.0740%" y="645" width="0.1570%" height="15" fill="rgb(234,67,33)" fg:x="124" fg:w="263"/><text x="0.3240%" y="655.50"></text></g><g><title>std::panic::catch_unwind (263 samples, 0.16%)</title><rect x="0.0740%" y="629" width="0.1570%" height="15" fill="rgb(247,98,35)" fg:x="124" fg:w="263"/><text x="0.3240%" y="639.50"></text></g><g><title>std::panicking::try (263 samples, 0.16%)</title><rect x="0.0740%" y="613" width="0.1570%" height="15" fill="rgb(247,138,52)" fg:x="124" fg:w="263"/><text x="0.3240%" y="623.50"></text></g><g><title>std::panicking::try::do_call (263 samples, 0.16%)</title><rect x="0.0740%" y="597" width="0.1570%" height="15" fill="rgb(213,79,30)" fg:x="124" fg:w="263"/><text x="0.3240%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (263 samples, 0.16%)</title><rect x="0.0740%" y="581" width="0.1570%" height="15" fill="rgb(246,177,23)" fg:x="124" fg:w="263"/><text x="0.3240%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (263 samples, 0.16%)</title><rect x="0.0740%" y="565" width="0.1570%" height="15" fill="rgb(230,62,27)" fg:x="124" fg:w="263"/><text x="0.3240%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (263 samples, 0.16%)</title><rect x="0.0740%" y="549" width="0.1570%" height="15" fill="rgb(216,154,8)" fg:x="124" fg:w="263"/><text x="0.3240%" y="559.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (263 samples, 0.16%)</title><rect x="0.0740%" y="533" width="0.1570%" height="15" fill="rgb(244,35,45)" fg:x="124" fg:w="263"/><text x="0.3240%" y="543.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (263 samples, 0.16%)</title><rect x="0.0740%" y="517" width="0.1570%" height="15" fill="rgb(251,115,12)" fg:x="124" fg:w="263"/><text x="0.3240%" y="527.50"></text></g><g><title>cpal::host::alsa::process_output (155 samples, 0.09%)</title><rect x="0.1385%" y="501" width="0.0925%" height="15" fill="rgb(240,54,50)" fg:x="232" fg:w="155"/><text x="0.3885%" y="511.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (82 samples, 0.05%)</title><rect x="0.1821%" y="485" width="0.0490%" height="15" fill="rgb(233,84,52)" fg:x="305" fg:w="82"/><text x="0.4321%" y="495.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (82 samples, 0.05%)</title><rect x="0.1821%" y="469" width="0.0490%" height="15" fill="rgb(207,117,47)" fg:x="305" fg:w="82"/><text x="0.4321%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (82 samples, 0.05%)</title><rect x="0.1821%" y="453" width="0.0490%" height="15" fill="rgb(249,43,39)" fg:x="305" fg:w="82"/><text x="0.4321%" y="463.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (81 samples, 0.05%)</title><rect x="0.1827%" y="437" width="0.0484%" height="15" fill="rgb(209,38,44)" fg:x="306" fg:w="81"/><text x="0.4327%" y="447.50"></text></g><g><title>cpal_alsa_out (340 samples, 0.20%)</title><rect x="0.0287%" y="757" width="0.2030%" height="15" fill="rgb(236,212,23)" fg:x="48" fg:w="340"/><text x="0.2787%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (36 samples, 0.02%)</title><rect x="0.2484%" y="725" width="0.0215%" height="15" fill="rgb(242,79,21)" fg:x="416" fg:w="36"/><text x="0.4984%" y="735.50"></text></g><g><title>[[heap]] (115 samples, 0.07%)</title><rect x="0.2370%" y="741" width="0.0687%" height="15" fill="rgb(211,96,35)" fg:x="397" fg:w="115"/><text x="0.4870%" y="751.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.06%)</title><rect x="0.3105%" y="677" width="0.0627%" height="15" fill="rgb(253,215,40)" fg:x="520" fg:w="105"/><text x="0.5605%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (59 samples, 0.04%)</title><rect x="0.3379%" y="661" width="0.0352%" height="15" fill="rgb(211,81,21)" fg:x="566" fg:w="59"/><text x="0.5879%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (132 samples, 0.08%)</title><rect x="0.3099%" y="725" width="0.0788%" height="15" fill="rgb(208,190,38)" fg:x="519" fg:w="132"/><text x="0.5599%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (131 samples, 0.08%)</title><rect x="0.3105%" y="709" width="0.0782%" height="15" fill="rgb(235,213,38)" fg:x="520" fg:w="131"/><text x="0.5605%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (131 samples, 0.08%)</title><rect x="0.3105%" y="693" width="0.0782%" height="15" fill="rgb(237,122,38)" fg:x="520" fg:w="131"/><text x="0.5605%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (26 samples, 0.02%)</title><rect x="0.3731%" y="677" width="0.0155%" height="15" fill="rgb(244,218,35)" fg:x="625" fg:w="26"/><text x="0.6231%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (778 samples, 0.46%)</title><rect x="1.1021%" y="661" width="0.4645%" height="15" fill="rgb(240,68,47)" fg:x="1846" fg:w="778"/><text x="1.3521%" y="671.50"></text></g><g><title>neuralang::World::check_collisions (2,710 samples, 1.62%)</title><rect x="0.3934%" y="693" width="1.6180%" height="15" fill="rgb(210,16,53)" fg:x="659" fg:w="2710"/><text x="0.6434%" y="703.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_disjoint_mut (2,710 samples, 1.62%)</title><rect x="0.3934%" y="677" width="1.6180%" height="15" fill="rgb(235,124,12)" fg:x="659" fg:w="2710"/><text x="0.6434%" y="687.50"></text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key (745 samples, 0.44%)</title><rect x="1.5666%" y="661" width="0.4448%" height="15" fill="rgb(224,169,11)" fg:x="2624" fg:w="745"/><text x="1.8166%" y="671.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.05%)</title><rect x="2.0114%" y="645" width="0.0543%" height="15" fill="rgb(250,166,2)" fg:x="3369" fg:w="91"/><text x="2.2614%" y="655.50"></text></g><g><title>neuralang::World::move_beings (169 samples, 0.10%)</title><rect x="2.0114%" y="693" width="0.1009%" height="15" fill="rgb(242,216,29)" fg:x="3369" fg:w="169"/><text x="2.2614%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (169 samples, 0.10%)</title><rect x="2.0114%" y="677" width="0.1009%" height="15" fill="rgb(230,116,27)" fg:x="3369" fg:w="169"/><text x="2.2614%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (169 samples, 0.10%)</title><rect x="2.0114%" y="661" width="0.1009%" height="15" fill="rgb(228,99,48)" fg:x="3369" fg:w="169"/><text x="2.2614%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (78 samples, 0.05%)</title><rect x="2.0657%" y="645" width="0.0466%" height="15" fill="rgb(253,11,6)" fg:x="3460" fg:w="78"/><text x="2.3157%" y="655.50"></text></g><g><title>neuralang::World::move_beings::{{closure}} (78 samples, 0.05%)</title><rect x="2.0657%" y="629" width="0.0466%" height="15" fill="rgb(247,143,39)" fg:x="3460" fg:w="78"/><text x="2.3157%" y="639.50"></text></g><g><title>neuralang::dir_from_theta (78 samples, 0.05%)</title><rect x="2.0657%" y="613" width="0.0466%" height="15" fill="rgb(236,97,10)" fg:x="3460" fg:w="78"/><text x="2.3157%" y="623.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (78 samples, 0.05%)</title><rect x="2.0657%" y="597" width="0.0466%" height="15" fill="rgb(233,208,19)" fg:x="3460" fg:w="78"/><text x="2.3157%" y="607.50"></text></g><g><title>neuralang::World::tire_beings (127 samples, 0.08%)</title><rect x="2.1123%" y="693" width="0.0758%" height="15" fill="rgb(216,164,2)" fg:x="3538" fg:w="127"/><text x="2.3623%" y="703.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (127 samples, 0.08%)</title><rect x="2.1123%" y="677" width="0.0758%" height="15" fill="rgb(220,129,5)" fg:x="3538" fg:w="127"/><text x="2.3623%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (60 samples, 0.04%)</title><rect x="2.1523%" y="661" width="0.0358%" height="15" fill="rgb(242,17,10)" fg:x="3605" fg:w="60"/><text x="2.4023%" y="671.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (177 samples, 0.11%)</title><rect x="2.1911%" y="677" width="0.1057%" height="15" fill="rgb(242,107,0)" fg:x="3670" fg:w="177"/><text x="2.4411%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (91 samples, 0.05%)</title><rect x="2.2425%" y="661" width="0.0543%" height="15" fill="rgb(251,28,31)" fg:x="3756" fg:w="91"/><text x="2.4925%" y="671.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (3,322 samples, 1.98%)</title><rect x="0.3934%" y="725" width="1.9834%" height="15" fill="rgb(233,223,10)" fg:x="659" fg:w="3322"/><text x="0.6434%" y="735.50">&lt;..</text></g><g><title>neuralang::World::step (3,322 samples, 1.98%)</title><rect x="0.3934%" y="709" width="1.9834%" height="15" fill="rgb(215,21,27)" fg:x="659" fg:w="3322"/><text x="0.6434%" y="719.50">n..</text></g><g><title>neuralang::World::update_cells (316 samples, 0.19%)</title><rect x="2.1881%" y="693" width="0.1887%" height="15" fill="rgb(232,23,21)" fg:x="3665" fg:w="316"/><text x="2.4381%" y="703.50"></text></g><g><title>neuralang::pos_to_cell (134 samples, 0.08%)</title><rect x="2.2968%" y="677" width="0.0800%" height="15" fill="rgb(244,5,23)" fg:x="3847" fg:w="134"/><text x="2.5468%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.01%)</title><rect x="2.3887%" y="725" width="0.0149%" height="15" fill="rgb(226,81,46)" fg:x="4001" fg:w="25"/><text x="2.6387%" y="735.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (136 samples, 0.08%)</title><rect x="2.4258%" y="725" width="0.0812%" height="15" fill="rgb(247,70,30)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (136 samples, 0.08%)</title><rect x="2.4258%" y="709" width="0.0812%" height="15" fill="rgb(212,68,19)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (136 samples, 0.08%)</title><rect x="2.4258%" y="693" width="0.0812%" height="15" fill="rgb(240,187,13)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (136 samples, 0.08%)</title><rect x="2.4258%" y="677" width="0.0812%" height="15" fill="rgb(223,113,26)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (136 samples, 0.08%)</title><rect x="2.4258%" y="661" width="0.0812%" height="15" fill="rgb(206,192,2)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (136 samples, 0.08%)</title><rect x="2.4258%" y="645" width="0.0812%" height="15" fill="rgb(241,108,4)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (136 samples, 0.08%)</title><rect x="2.4258%" y="629" width="0.0812%" height="15" fill="rgb(247,173,49)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (136 samples, 0.08%)</title><rect x="2.4258%" y="613" width="0.0812%" height="15" fill="rgb(224,114,35)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="623.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (136 samples, 0.08%)</title><rect x="2.4258%" y="597" width="0.0812%" height="15" fill="rgb(245,159,27)" fg:x="4063" fg:w="136"/><text x="2.6758%" y="607.50"></text></g><g><title>[[stack]] (3,723 samples, 2.22%)</title><rect x="0.3057%" y="741" width="2.2228%" height="15" fill="rgb(245,172,44)" fg:x="512" fg:w="3723"/><text x="0.5557%" y="751.50">[..</text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (224 samples, 0.13%)</title><rect x="2.5553%" y="709" width="0.1337%" height="15" fill="rgb(236,23,11)" fg:x="4280" fg:w="224"/><text x="2.8053%" y="719.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (224 samples, 0.13%)</title><rect x="2.5553%" y="693" width="0.1337%" height="15" fill="rgb(205,117,38)" fg:x="4280" fg:w="224"/><text x="2.8053%" y="703.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (224 samples, 0.13%)</title><rect x="2.5553%" y="677" width="0.1337%" height="15" fill="rgb(237,72,25)" fg:x="4280" fg:w="224"/><text x="2.8053%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (90 samples, 0.05%)</title><rect x="2.6891%" y="693" width="0.0537%" height="15" fill="rgb(244,70,9)" fg:x="4504" fg:w="90"/><text x="2.9391%" y="703.50"></text></g><g><title>[anon] (364 samples, 0.22%)</title><rect x="2.5284%" y="741" width="0.2173%" height="15" fill="rgb(217,125,39)" fg:x="4235" fg:w="364"/><text x="2.7784%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (348 samples, 0.21%)</title><rect x="2.5380%" y="725" width="0.2078%" height="15" fill="rgb(235,36,10)" fg:x="4251" fg:w="348"/><text x="2.7880%" y="735.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (95 samples, 0.06%)</title><rect x="2.6891%" y="709" width="0.0567%" height="15" fill="rgb(251,123,47)" fg:x="4504" fg:w="95"/><text x="2.9391%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.01%)</title><rect x="2.7494%" y="741" width="0.0101%" height="15" fill="rgb(221,13,13)" fg:x="4605" fg:w="17"/><text x="2.9994%" y="751.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (832 samples, 0.50%)</title><rect x="2.7798%" y="725" width="0.4967%" height="15" fill="rgb(238,131,9)" fg:x="4656" fg:w="832"/><text x="3.0298%" y="735.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (2,184 samples, 1.30%)</title><rect x="3.2765%" y="725" width="1.3039%" height="15" fill="rgb(211,50,8)" fg:x="5488" fg:w="2184"/><text x="3.5265%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (47 samples, 0.03%)</title><rect x="4.5894%" y="725" width="0.0281%" height="15" fill="rgb(245,182,24)" fg:x="7687" fg:w="47"/><text x="4.8394%" y="735.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="4.6193%" y="725" width="0.0448%" height="15" fill="rgb(242,14,37)" fg:x="7737" fg:w="75"/><text x="4.8693%" y="735.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="4.6199%" y="709" width="0.0442%" height="15" fill="rgb(246,228,12)" fg:x="7738" fg:w="74"/><text x="4.8699%" y="719.50"></text></g><g><title>[unknown] (72 samples, 0.04%)</title><rect x="4.6211%" y="693" width="0.0430%" height="15" fill="rgb(213,55,15)" fg:x="7740" fg:w="72"/><text x="4.8711%" y="703.50"></text></g><g><title>[unknown] (71 samples, 0.04%)</title><rect x="4.6217%" y="677" width="0.0424%" height="15" fill="rgb(209,9,3)" fg:x="7741" fg:w="71"/><text x="4.8717%" y="687.50"></text></g><g><title>[unknown] (71 samples, 0.04%)</title><rect x="4.6217%" y="661" width="0.0424%" height="15" fill="rgb(230,59,30)" fg:x="7741" fg:w="71"/><text x="4.8717%" y="671.50"></text></g><g><title>[unknown] (69 samples, 0.04%)</title><rect x="4.6229%" y="645" width="0.0412%" height="15" fill="rgb(209,121,21)" fg:x="7743" fg:w="69"/><text x="4.8729%" y="655.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="4.6414%" y="629" width="0.0227%" height="15" fill="rgb(220,109,13)" fg:x="7774" fg:w="38"/><text x="4.8914%" y="639.50"></text></g><g><title>[unknown] (37 samples, 0.02%)</title><rect x="4.6420%" y="613" width="0.0221%" height="15" fill="rgb(232,18,1)" fg:x="7775" fg:w="37"/><text x="4.8920%" y="623.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="4.6461%" y="597" width="0.0179%" height="15" fill="rgb(215,41,42)" fg:x="7782" fg:w="30"/><text x="4.8961%" y="607.50"></text></g><g><title>__ieee754_fmodf (276 samples, 0.16%)</title><rect x="4.6664%" y="725" width="0.1648%" height="15" fill="rgb(224,123,36)" fg:x="7816" fg:w="276"/><text x="4.9164%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (53 samples, 0.03%)</title><rect x="5.0772%" y="693" width="0.0316%" height="15" fill="rgb(240,125,3)" fg:x="8504" fg:w="53"/><text x="5.3272%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (41 samples, 0.02%)</title><rect x="5.0844%" y="677" width="0.0245%" height="15" fill="rgb(205,98,50)" fg:x="8516" fg:w="41"/><text x="5.3344%" y="687.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (491 samples, 0.29%)</title><rect x="4.8533%" y="725" width="0.2931%" height="15" fill="rgb(205,185,37)" fg:x="8129" fg:w="491"/><text x="5.1033%" y="735.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (245 samples, 0.15%)</title><rect x="5.0002%" y="709" width="0.1463%" height="15" fill="rgb(238,207,15)" fg:x="8375" fg:w="245"/><text x="5.2502%" y="719.50"></text></g><g><title>ggez::graphics::draw::DrawParam::scale (63 samples, 0.04%)</title><rect x="5.1088%" y="693" width="0.0376%" height="15" fill="rgb(213,199,42)" fg:x="8557" fg:w="63"/><text x="5.3588%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (63 samples, 0.04%)</title><rect x="5.1088%" y="677" width="0.0376%" height="15" fill="rgb(235,201,11)" fg:x="8557" fg:w="63"/><text x="5.3588%" y="687.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (19 samples, 0.01%)</title><rect x="5.1536%" y="693" width="0.0113%" height="15" fill="rgb(207,46,11)" fg:x="8632" fg:w="19"/><text x="5.4036%" y="703.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (18 samples, 0.01%)</title><rect x="5.1542%" y="677" width="0.0107%" height="15" fill="rgb(241,35,35)" fg:x="8633" fg:w="18"/><text x="5.4042%" y="687.50"></text></g><g><title>ggez::context::ContextBuilder::build (21 samples, 0.01%)</title><rect x="5.1530%" y="725" width="0.0125%" height="15" fill="rgb(243,32,47)" fg:x="8631" fg:w="21"/><text x="5.4030%" y="735.50"></text></g><g><title>ggez::context::Context::from_conf (21 samples, 0.01%)</title><rect x="5.1530%" y="709" width="0.0125%" height="15" fill="rgb(247,202,23)" fg:x="8631" fg:w="21"/><text x="5.4030%" y="719.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (27 samples, 0.02%)</title><rect x="5.1679%" y="549" width="0.0161%" height="15" fill="rgb(219,102,11)" fg:x="8656" fg:w="27"/><text x="5.4179%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (27 samples, 0.02%)</title><rect x="5.1679%" y="533" width="0.0161%" height="15" fill="rgb(243,110,44)" fg:x="8656" fg:w="27"/><text x="5.4179%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.02%)</title><rect x="5.1685%" y="517" width="0.0155%" height="15" fill="rgb(222,74,54)" fg:x="8657" fg:w="26"/><text x="5.4185%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (24 samples, 0.01%)</title><rect x="5.1697%" y="501" width="0.0143%" height="15" fill="rgb(216,99,12)" fg:x="8659" fg:w="24"/><text x="5.4197%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (22 samples, 0.01%)</title><rect x="5.1709%" y="485" width="0.0131%" height="15" fill="rgb(226,22,26)" fg:x="8661" fg:w="22"/><text x="5.4209%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.01%)</title><rect x="5.1715%" y="469" width="0.0125%" height="15" fill="rgb(217,163,10)" fg:x="8662" fg:w="21"/><text x="5.4215%" y="479.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (50 samples, 0.03%)</title><rect x="5.1668%" y="725" width="0.0299%" height="15" fill="rgb(213,25,53)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="735.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (50 samples, 0.03%)</title><rect x="5.1668%" y="709" width="0.0299%" height="15" fill="rgb(252,105,26)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (50 samples, 0.03%)</title><rect x="5.1668%" y="693" width="0.0299%" height="15" fill="rgb(220,39,43)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (50 samples, 0.03%)</title><rect x="5.1668%" y="677" width="0.0299%" height="15" fill="rgb(229,68,48)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="687.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (50 samples, 0.03%)</title><rect x="5.1668%" y="661" width="0.0299%" height="15" fill="rgb(252,8,32)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="671.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (50 samples, 0.03%)</title><rect x="5.1668%" y="645" width="0.0299%" height="15" fill="rgb(223,20,43)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (50 samples, 0.03%)</title><rect x="5.1668%" y="629" width="0.0299%" height="15" fill="rgb(229,81,49)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="639.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (50 samples, 0.03%)</title><rect x="5.1668%" y="613" width="0.0299%" height="15" fill="rgb(236,28,36)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="623.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (50 samples, 0.03%)</title><rect x="5.1668%" y="597" width="0.0299%" height="15" fill="rgb(249,185,26)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="607.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (50 samples, 0.03%)</title><rect x="5.1668%" y="581" width="0.0299%" height="15" fill="rgb(249,174,33)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="591.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (50 samples, 0.03%)</title><rect x="5.1668%" y="565" width="0.0299%" height="15" fill="rgb(233,201,37)" fg:x="8654" fg:w="50"/><text x="5.4168%" y="575.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (17 samples, 0.01%)</title><rect x="5.1984%" y="725" width="0.0101%" height="15" fill="rgb(221,78,26)" fg:x="8707" fg:w="17"/><text x="5.4484%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (59 samples, 0.04%)</title><rect x="5.2223%" y="725" width="0.0352%" height="15" fill="rgb(250,127,30)" fg:x="8747" fg:w="59"/><text x="5.4723%" y="735.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (153 samples, 0.09%)</title><rect x="5.2575%" y="725" width="0.0913%" height="15" fill="rgb(230,49,44)" fg:x="8806" fg:w="153"/><text x="5.5075%" y="735.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (58 samples, 0.03%)</title><rect x="5.3524%" y="725" width="0.0346%" height="15" fill="rgb(229,67,23)" fg:x="8965" fg:w="58"/><text x="5.6024%" y="735.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (174 samples, 0.10%)</title><rect x="5.3871%" y="725" width="0.1039%" height="15" fill="rgb(249,83,47)" fg:x="9023" fg:w="174"/><text x="5.6371%" y="735.50"></text></g><g><title>[libudev.so.1.7.2] (32 samples, 0.02%)</title><rect x="5.5053%" y="469" width="0.0191%" height="15" fill="rgb(215,43,3)" fg:x="9221" fg:w="32"/><text x="5.7553%" y="479.50"></text></g><g><title>[libudev.so.1.7.2] (67 samples, 0.04%)</title><rect x="5.5047%" y="485" width="0.0400%" height="15" fill="rgb(238,154,13)" fg:x="9220" fg:w="67"/><text x="5.7547%" y="495.50"></text></g><g><title>__libc_openat64 (22 samples, 0.01%)</title><rect x="5.5315%" y="469" width="0.0131%" height="15" fill="rgb(219,56,2)" fg:x="9265" fg:w="22"/><text x="5.7815%" y="479.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="5.5315%" y="453" width="0.0131%" height="15" fill="rgb(233,0,4)" fg:x="9265" fg:w="22"/><text x="5.7815%" y="463.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="5.5333%" y="437" width="0.0113%" height="15" fill="rgb(235,30,7)" fg:x="9268" fg:w="19"/><text x="5.7833%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="5.5333%" y="421" width="0.0113%" height="15" fill="rgb(250,79,13)" fg:x="9268" fg:w="19"/><text x="5.7833%" y="431.50"></text></g><g><title>[libudev.so.1.7.2] (71 samples, 0.04%)</title><rect x="5.5047%" y="501" width="0.0424%" height="15" fill="rgb(211,146,34)" fg:x="9220" fg:w="71"/><text x="5.7547%" y="511.50"></text></g><g><title>[libudev.so.1.7.2] (73 samples, 0.04%)</title><rect x="5.5041%" y="533" width="0.0436%" height="15" fill="rgb(228,22,38)" fg:x="9219" fg:w="73"/><text x="5.7541%" y="543.50"></text></g><g><title>[libudev.so.1.7.2] (73 samples, 0.04%)</title><rect x="5.5041%" y="517" width="0.0436%" height="15" fill="rgb(235,168,5)" fg:x="9219" fg:w="73"/><text x="5.7541%" y="527.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (74 samples, 0.04%)</title><rect x="5.5041%" y="661" width="0.0442%" height="15" fill="rgb(221,155,16)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="671.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (74 samples, 0.04%)</title><rect x="5.5041%" y="645" width="0.0442%" height="15" fill="rgb(215,215,53)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="655.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (74 samples, 0.04%)</title><rect x="5.5041%" y="629" width="0.0442%" height="15" fill="rgb(223,4,10)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="639.50"></text></g><g><title>gilrs_core::Gilrs::new (74 samples, 0.04%)</title><rect x="5.5041%" y="613" width="0.0442%" height="15" fill="rgb(234,103,6)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="623.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (74 samples, 0.04%)</title><rect x="5.5041%" y="597" width="0.0442%" height="15" fill="rgb(227,97,0)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="607.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (74 samples, 0.04%)</title><rect x="5.5041%" y="581" width="0.0442%" height="15" fill="rgb(234,150,53)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="591.50"></text></g><g><title>udev_enumerate_scan_devices (74 samples, 0.04%)</title><rect x="5.5041%" y="565" width="0.0442%" height="15" fill="rgb(228,201,54)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="575.50"></text></g><g><title>[libudev.so.1.7.2] (74 samples, 0.04%)</title><rect x="5.5041%" y="549" width="0.0442%" height="15" fill="rgb(222,22,37)" fg:x="9219" fg:w="74"/><text x="5.7541%" y="559.50"></text></g><g><title>ggez::context::ContextBuilder::build (87 samples, 0.05%)</title><rect x="5.4969%" y="693" width="0.0519%" height="15" fill="rgb(237,53,32)" fg:x="9207" fg:w="87"/><text x="5.7469%" y="703.50"></text></g><g><title>ggez::context::Context::from_conf (87 samples, 0.05%)</title><rect x="5.4969%" y="677" width="0.0519%" height="15" fill="rgb(233,25,53)" fg:x="9207" fg:w="87"/><text x="5.7469%" y="687.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (28 samples, 0.02%)</title><rect x="5.5847%" y="421" width="0.0167%" height="15" fill="rgb(210,40,34)" fg:x="9354" fg:w="28"/><text x="5.8347%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (17 samples, 0.01%)</title><rect x="5.5912%" y="405" width="0.0101%" height="15" fill="rgb(241,220,44)" fg:x="9365" fg:w="17"/><text x="5.8412%" y="415.50"></text></g><g><title>wgpu::Device::create_bind_group (40 samples, 0.02%)</title><rect x="5.5793%" y="485" width="0.0239%" height="15" fill="rgb(235,28,35)" fg:x="9345" fg:w="40"/><text x="5.8293%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (40 samples, 0.02%)</title><rect x="5.5793%" y="469" width="0.0239%" height="15" fill="rgb(210,56,17)" fg:x="9345" fg:w="40"/><text x="5.8293%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (39 samples, 0.02%)</title><rect x="5.5799%" y="453" width="0.0233%" height="15" fill="rgb(224,130,29)" fg:x="9346" fg:w="39"/><text x="5.8299%" y="463.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (31 samples, 0.02%)</title><rect x="5.5847%" y="437" width="0.0185%" height="15" fill="rgb(235,212,8)" fg:x="9354" fg:w="31"/><text x="5.8347%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (38 samples, 0.02%)</title><rect x="5.6127%" y="405" width="0.0227%" height="15" fill="rgb(223,33,50)" fg:x="9401" fg:w="38"/><text x="5.8627%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (48 samples, 0.03%)</title><rect x="5.6074%" y="421" width="0.0287%" height="15" fill="rgb(219,149,13)" fg:x="9392" fg:w="48"/><text x="5.8574%" y="431.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (60 samples, 0.04%)</title><rect x="5.6050%" y="437" width="0.0358%" height="15" fill="rgb(250,156,29)" fg:x="9388" fg:w="60"/><text x="5.8550%" y="447.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (63 samples, 0.04%)</title><rect x="5.6038%" y="453" width="0.0376%" height="15" fill="rgb(216,193,19)" fg:x="9386" fg:w="63"/><text x="5.8538%" y="463.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (64 samples, 0.04%)</title><rect x="5.6038%" y="469" width="0.0382%" height="15" fill="rgb(216,135,14)" fg:x="9386" fg:w="64"/><text x="5.8538%" y="479.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (112 samples, 0.07%)</title><rect x="5.5757%" y="501" width="0.0669%" height="15" fill="rgb(241,47,5)" fg:x="9339" fg:w="112"/><text x="5.8257%" y="511.50"></text></g><g><title>wgpu::Device::create_buffer (66 samples, 0.04%)</title><rect x="5.6032%" y="485" width="0.0394%" height="15" fill="rgb(233,42,35)" fg:x="9385" fg:w="66"/><text x="5.8532%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4,099 samples, 2.45%)</title><rect x="5.6438%" y="437" width="2.4473%" height="15" fill="rgb(231,13,6)" fg:x="9453" fg:w="4099"/><text x="5.8938%" y="447.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (4,099 samples, 2.45%)</title><rect x="5.6438%" y="421" width="2.4473%" height="15" fill="rgb(207,181,40)" fg:x="9453" fg:w="4099"/><text x="5.8938%" y="431.50">__..</text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (27 samples, 0.02%)</title><rect x="8.0928%" y="421" width="0.0161%" height="15" fill="rgb(254,173,49)" fg:x="13555" fg:w="27"/><text x="8.3428%" y="431.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (27 samples, 0.02%)</title><rect x="8.0928%" y="405" width="0.0161%" height="15" fill="rgb(221,1,38)" fg:x="13555" fg:w="27"/><text x="8.3428%" y="415.50"></text></g><g><title>ash::device::Device::begin_command_buffer (23 samples, 0.01%)</title><rect x="8.0952%" y="389" width="0.0137%" height="15" fill="rgb(206,124,46)" fg:x="13559" fg:w="23"/><text x="8.3452%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.01%)</title><rect x="8.0952%" y="373" width="0.0137%" height="15" fill="rgb(249,21,11)" fg:x="13559" fg:w="23"/><text x="8.3452%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (22 samples, 0.01%)</title><rect x="8.0958%" y="357" width="0.0131%" height="15" fill="rgb(222,201,40)" fg:x="13560" fg:w="22"/><text x="8.3458%" y="367.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (64 samples, 0.04%)</title><rect x="8.0910%" y="437" width="0.0382%" height="15" fill="rgb(235,61,29)" fg:x="13552" fg:w="64"/><text x="8.3410%" y="447.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (4,319 samples, 2.58%)</title><rect x="5.5632%" y="517" width="2.5786%" height="15" fill="rgb(219,207,3)" fg:x="9318" fg:w="4319"/><text x="5.8132%" y="527.50">gg..</text></g><g><title>wgpu::Queue::write_buffer (4,186 samples, 2.50%)</title><rect x="5.6426%" y="501" width="2.4992%" height="15" fill="rgb(222,56,46)" fg:x="9451" fg:w="4186"/><text x="5.8926%" y="511.50">wg..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (4,186 samples, 2.50%)</title><rect x="5.6426%" y="485" width="2.4992%" height="15" fill="rgb(239,76,54)" fg:x="9451" fg:w="4186"/><text x="5.8926%" y="495.50">&lt;T..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (4,186 samples, 2.50%)</title><rect x="5.6426%" y="469" width="2.4992%" height="15" fill="rgb(231,124,27)" fg:x="9451" fg:w="4186"/><text x="5.8926%" y="479.50">&lt;w..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (4,185 samples, 2.50%)</title><rect x="5.6432%" y="453" width="2.4986%" height="15" fill="rgb(249,195,6)" fg:x="9452" fg:w="4185"/><text x="5.8932%" y="463.50">wg..</text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (20 samples, 0.01%)</title><rect x="8.1298%" y="437" width="0.0119%" height="15" fill="rgb(237,174,47)" fg:x="13617" fg:w="20"/><text x="8.3798%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (20 samples, 0.01%)</title><rect x="8.1298%" y="421" width="0.0119%" height="15" fill="rgb(206,201,31)" fg:x="13617" fg:w="20"/><text x="8.3798%" y="431.50"></text></g><g><title>ggez::graphics::canvas::Canvas::draw (4,329 samples, 2.58%)</title><rect x="5.5584%" y="549" width="2.5846%" height="15" fill="rgb(231,57,52)" fg:x="9310" fg:w="4329"/><text x="5.8084%" y="559.50">gg..</text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (4,329 samples, 2.58%)</title><rect x="5.5584%" y="533" width="2.5846%" height="15" fill="rgb(248,177,22)" fg:x="9310" fg:w="4329"/><text x="5.8084%" y="543.50">&lt;g..</text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (33 samples, 0.02%)</title><rect x="8.1555%" y="501" width="0.0197%" height="15" fill="rgb(215,211,37)" fg:x="13660" fg:w="33"/><text x="8.4055%" y="511.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (58 samples, 0.03%)</title><rect x="8.1472%" y="517" width="0.0346%" height="15" fill="rgb(241,128,51)" fg:x="13646" fg:w="58"/><text x="8.3972%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (121 samples, 0.07%)</title><rect x="8.1818%" y="517" width="0.0722%" height="15" fill="rgb(227,165,31)" fg:x="13704" fg:w="121"/><text x="8.4318%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (121 samples, 0.07%)</title><rect x="8.1818%" y="501" width="0.0722%" height="15" fill="rgb(228,167,24)" fg:x="13704" fg:w="121"/><text x="8.4318%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (118 samples, 0.07%)</title><rect x="8.1836%" y="485" width="0.0705%" height="15" fill="rgb(228,143,12)" fg:x="13707" fg:w="118"/><text x="8.4336%" y="495.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (118 samples, 0.07%)</title><rect x="8.1836%" y="469" width="0.0705%" height="15" fill="rgb(249,149,8)" fg:x="13707" fg:w="118"/><text x="8.4336%" y="479.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (118 samples, 0.07%)</title><rect x="8.1836%" y="453" width="0.0705%" height="15" fill="rgb(243,35,44)" fg:x="13707" fg:w="118"/><text x="8.4336%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (118 samples, 0.07%)</title><rect x="8.1836%" y="437" width="0.0705%" height="15" fill="rgb(246,89,9)" fg:x="13707" fg:w="118"/><text x="8.4336%" y="447.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (117 samples, 0.07%)</title><rect x="8.1842%" y="421" width="0.0699%" height="15" fill="rgb(233,213,13)" fg:x="13708" fg:w="117"/><text x="8.4342%" y="431.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (117 samples, 0.07%)</title><rect x="8.1842%" y="405" width="0.0699%" height="15" fill="rgb(233,141,41)" fg:x="13708" fg:w="117"/><text x="8.4342%" y="415.50"></text></g><g><title>[libX11.so.6.4.0] (17 samples, 0.01%)</title><rect x="8.2642%" y="341" width="0.0101%" height="15" fill="rgb(239,167,4)" fg:x="13842" fg:w="17"/><text x="8.5142%" y="351.50"></text></g><g><title>[libX11.so.6.4.0] (22 samples, 0.01%)</title><rect x="8.2618%" y="357" width="0.0131%" height="15" fill="rgb(209,217,16)" fg:x="13838" fg:w="22"/><text x="8.5118%" y="367.50"></text></g><g><title>_XSend (41 samples, 0.02%)</title><rect x="8.2749%" y="357" width="0.0245%" height="15" fill="rgb(219,88,35)" fg:x="13860" fg:w="41"/><text x="8.5249%" y="367.50"></text></g><g><title>xcb_writev (40 samples, 0.02%)</title><rect x="8.2755%" y="341" width="0.0239%" height="15" fill="rgb(220,193,23)" fg:x="13861" fg:w="40"/><text x="8.5255%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (39 samples, 0.02%)</title><rect x="8.2761%" y="325" width="0.0233%" height="15" fill="rgb(230,90,52)" fg:x="13862" fg:w="39"/><text x="8.5261%" y="335.50"></text></g><g><title>[libxcb.so.1.1.0] (39 samples, 0.02%)</title><rect x="8.2761%" y="309" width="0.0233%" height="15" fill="rgb(252,106,19)" fg:x="13862" fg:w="39"/><text x="8.5261%" y="319.50"></text></g><g><title>__GI___writev (31 samples, 0.02%)</title><rect x="8.2809%" y="293" width="0.0185%" height="15" fill="rgb(206,74,20)" fg:x="13870" fg:w="31"/><text x="8.5309%" y="303.50"></text></g><g><title>__GI___writev (30 samples, 0.02%)</title><rect x="8.2815%" y="277" width="0.0179%" height="15" fill="rgb(230,138,44)" fg:x="13871" fg:w="30"/><text x="8.5315%" y="287.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="8.2815%" y="261" width="0.0179%" height="15" fill="rgb(235,182,43)" fg:x="13871" fg:w="30"/><text x="8.5315%" y="271.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="8.2815%" y="245" width="0.0179%" height="15" fill="rgb(242,16,51)" fg:x="13871" fg:w="30"/><text x="8.5315%" y="255.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="8.2815%" y="229" width="0.0179%" height="15" fill="rgb(248,9,4)" fg:x="13871" fg:w="30"/><text x="8.5315%" y="239.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="8.2821%" y="213" width="0.0173%" height="15" fill="rgb(210,31,22)" fg:x="13872" fg:w="29"/><text x="8.5321%" y="223.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="8.2821%" y="197" width="0.0173%" height="15" fill="rgb(239,54,39)" fg:x="13872" fg:w="29"/><text x="8.5321%" y="207.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="8.2821%" y="181" width="0.0173%" height="15" fill="rgb(230,99,41)" fg:x="13872" fg:w="29"/><text x="8.5321%" y="191.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="8.2827%" y="165" width="0.0167%" height="15" fill="rgb(253,106,12)" fg:x="13873" fg:w="28"/><text x="8.5327%" y="175.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="8.2827%" y="149" width="0.0167%" height="15" fill="rgb(213,46,41)" fg:x="13873" fg:w="28"/><text x="8.5327%" y="159.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="8.2833%" y="133" width="0.0161%" height="15" fill="rgb(215,133,35)" fg:x="13874" fg:w="27"/><text x="8.5333%" y="143.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="8.2839%" y="117" width="0.0155%" height="15" fill="rgb(213,28,5)" fg:x="13875" fg:w="26"/><text x="8.5339%" y="127.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="8.2845%" y="101" width="0.0149%" height="15" fill="rgb(215,77,49)" fg:x="13876" fg:w="25"/><text x="8.5345%" y="111.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="8.2851%" y="85" width="0.0143%" height="15" fill="rgb(248,100,22)" fg:x="13877" fg:w="24"/><text x="8.5351%" y="95.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="8.2857%" y="69" width="0.0137%" height="15" fill="rgb(208,67,9)" fg:x="13878" fg:w="23"/><text x="8.5357%" y="79.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="8.2857%" y="53" width="0.0137%" height="15" fill="rgb(219,133,21)" fg:x="13878" fg:w="23"/><text x="8.5357%" y="63.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="8.2881%" y="37" width="0.0113%" height="15" fill="rgb(246,46,29)" fg:x="13882" fg:w="19"/><text x="8.5381%" y="47.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (105 samples, 0.06%)</title><rect x="8.2558%" y="485" width="0.0627%" height="15" fill="rgb(246,185,52)" fg:x="13828" fg:w="105"/><text x="8.5058%" y="495.50"></text></g><g><title>winit::window::Window::inner_size (105 samples, 0.06%)</title><rect x="8.2558%" y="469" width="0.0627%" height="15" fill="rgb(252,136,11)" fg:x="13828" fg:w="105"/><text x="8.5058%" y="479.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (105 samples, 0.06%)</title><rect x="8.2558%" y="453" width="0.0627%" height="15" fill="rgb(219,138,53)" fg:x="13828" fg:w="105"/><text x="8.5058%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (105 samples, 0.06%)</title><rect x="8.2558%" y="437" width="0.0627%" height="15" fill="rgb(211,51,23)" fg:x="13828" fg:w="105"/><text x="8.5058%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (105 samples, 0.06%)</title><rect x="8.2558%" y="421" width="0.0627%" height="15" fill="rgb(247,221,28)" fg:x="13828" fg:w="105"/><text x="8.5058%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (102 samples, 0.06%)</title><rect x="8.2576%" y="405" width="0.0609%" height="15" fill="rgb(251,222,45)" fg:x="13831" fg:w="102"/><text x="8.5076%" y="415.50"></text></g><g><title>XGetGeometry (101 samples, 0.06%)</title><rect x="8.2582%" y="389" width="0.0603%" height="15" fill="rgb(217,162,53)" fg:x="13832" fg:w="101"/><text x="8.5082%" y="399.50"></text></g><g><title>_XReply (97 samples, 0.06%)</title><rect x="8.2606%" y="373" width="0.0579%" height="15" fill="rgb(229,93,14)" fg:x="13836" fg:w="97"/><text x="8.5106%" y="383.50"></text></g><g><title>xcb_wait_for_reply64 (31 samples, 0.02%)</title><rect x="8.3000%" y="357" width="0.0185%" height="15" fill="rgb(209,67,49)" fg:x="13902" fg:w="31"/><text x="8.5500%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (31 samples, 0.02%)</title><rect x="8.3000%" y="341" width="0.0185%" height="15" fill="rgb(213,87,29)" fg:x="13902" fg:w="31"/><text x="8.5500%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (31 samples, 0.02%)</title><rect x="8.3000%" y="325" width="0.0185%" height="15" fill="rgb(205,151,52)" fg:x="13902" fg:w="31"/><text x="8.5500%" y="335.50"></text></g><g><title>__GI___poll (18 samples, 0.01%)</title><rect x="8.3078%" y="309" width="0.0107%" height="15" fill="rgb(253,215,39)" fg:x="13915" fg:w="18"/><text x="8.5578%" y="319.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="8.3078%" y="293" width="0.0107%" height="15" fill="rgb(221,220,41)" fg:x="13915" fg:w="18"/><text x="8.5578%" y="303.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (131 samples, 0.08%)</title><rect x="8.2540%" y="517" width="0.0782%" height="15" fill="rgb(218,133,21)" fg:x="13825" fg:w="131"/><text x="8.5040%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (131 samples, 0.08%)</title><rect x="8.2540%" y="501" width="0.0782%" height="15" fill="rgb(221,193,43)" fg:x="13825" fg:w="131"/><text x="8.5040%" y="511.50"></text></g><g><title>wgpu::Queue::write_buffer (20 samples, 0.01%)</title><rect x="8.3203%" y="485" width="0.0119%" height="15" fill="rgb(240,128,52)" fg:x="13936" fg:w="20"/><text x="8.5703%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (20 samples, 0.01%)</title><rect x="8.3203%" y="469" width="0.0119%" height="15" fill="rgb(253,114,12)" fg:x="13936" fg:w="20"/><text x="8.5703%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (20 samples, 0.01%)</title><rect x="8.3203%" y="453" width="0.0119%" height="15" fill="rgb(215,223,47)" fg:x="13936" fg:w="20"/><text x="8.5703%" y="463.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (18 samples, 0.01%)</title><rect x="8.3215%" y="437" width="0.0107%" height="15" fill="rgb(248,225,23)" fg:x="13938" fg:w="18"/><text x="8.5715%" y="447.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (331 samples, 0.20%)</title><rect x="8.1430%" y="549" width="0.1976%" height="15" fill="rgb(250,108,0)" fg:x="13639" fg:w="331"/><text x="8.3930%" y="559.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (328 samples, 0.20%)</title><rect x="8.1448%" y="533" width="0.1958%" height="15" fill="rgb(228,208,7)" fg:x="13642" fg:w="328"/><text x="8.3948%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (41 samples, 0.02%)</title><rect x="8.3454%" y="501" width="0.0245%" height="15" fill="rgb(244,45,10)" fg:x="13978" fg:w="41"/><text x="8.5954%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24 samples, 0.01%)</title><rect x="8.3955%" y="485" width="0.0143%" height="15" fill="rgb(207,125,25)" fg:x="14062" fg:w="24"/><text x="8.6455%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (103 samples, 0.06%)</title><rect x="8.4833%" y="453" width="0.0615%" height="15" fill="rgb(210,195,18)" fg:x="14209" fg:w="103"/><text x="8.7333%" y="463.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (67 samples, 0.04%)</title><rect x="8.5048%" y="437" width="0.0400%" height="15" fill="rgb(249,80,12)" fg:x="14245" fg:w="67"/><text x="8.7548%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.07%)</title><rect x="8.5448%" y="453" width="0.0734%" height="15" fill="rgb(221,65,9)" fg:x="14312" fg:w="123"/><text x="8.7948%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.05%)</title><rect x="8.5699%" y="437" width="0.0484%" height="15" fill="rgb(235,49,36)" fg:x="14354" fg:w="81"/><text x="8.8199%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (39 samples, 0.02%)</title><rect x="8.5949%" y="421" width="0.0233%" height="15" fill="rgb(225,32,20)" fg:x="14396" fg:w="39"/><text x="8.8449%" y="431.50"></text></g><g><title>slotmap::KeyData::new (63 samples, 0.04%)</title><rect x="8.6182%" y="453" width="0.0376%" height="15" fill="rgb(215,141,46)" fg:x="14435" fg:w="63"/><text x="8.8682%" y="463.50"></text></g><g><title>&lt;slotmap::basic::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (764 samples, 0.46%)</title><rect x="8.4099%" y="469" width="0.4561%" height="15" fill="rgb(250,160,47)" fg:x="14086" fg:w="764"/><text x="8.6599%" y="479.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::get (352 samples, 0.21%)</title><rect x="8.6558%" y="453" width="0.2102%" height="15" fill="rgb(216,222,40)" fg:x="14498" fg:w="352"/><text x="8.9058%" y="463.50"></text></g><g><title>slotmap::basic::Slot&lt;T&gt;::occupied (352 samples, 0.21%)</title><rect x="8.6558%" y="437" width="0.2102%" height="15" fill="rgb(234,217,39)" fg:x="14498" fg:w="352"/><text x="8.9058%" y="447.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (2,995 samples, 1.79%)</title><rect x="9.9789%" y="421" width="1.7881%" height="15" fill="rgb(207,178,40)" fg:x="16714" fg:w="2995"/><text x="10.2289%" y="431.50">g..</text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (74 samples, 0.04%)</title><rect x="11.7228%" y="405" width="0.0442%" height="15" fill="rgb(221,136,13)" fg:x="19635" fg:w="74"/><text x="11.9728%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (232 samples, 0.14%)</title><rect x="11.7670%" y="421" width="0.1385%" height="15" fill="rgb(249,199,10)" fg:x="19709" fg:w="232"/><text x="12.0170%" y="431.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (205 samples, 0.12%)</title><rect x="11.7831%" y="405" width="0.1224%" height="15" fill="rgb(249,222,13)" fg:x="19736" fg:w="205"/><text x="12.0331%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (2,000 samples, 1.19%)</title><rect x="11.9055%" y="421" width="1.1941%" height="15" fill="rgb(244,185,38)" fg:x="19941" fg:w="2000"/><text x="12.1555%" y="431.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (5,763 samples, 3.44%)</title><rect x="9.8768%" y="437" width="3.4407%" height="15" fill="rgb(236,202,9)" fg:x="16543" fg:w="5763"/><text x="10.1268%" y="447.50">&lt;ne..</text></g><g><title>ggez::graphics::draw::DrawParam::scale (365 samples, 0.22%)</title><rect x="13.0996%" y="421" width="0.2179%" height="15" fill="rgb(250,229,37)" fg:x="21941" fg:w="365"/><text x="13.3496%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8,325 samples, 4.97%)</title><rect x="8.4099%" y="485" width="4.9703%" height="15" fill="rgb(206,174,23)" fg:x="14086" fg:w="8325"/><text x="8.6599%" y="495.50">&lt;core:..</text></g><g><title>core::option::Option&lt;T&gt;::map (7,561 samples, 4.51%)</title><rect x="8.8660%" y="469" width="4.5142%" height="15" fill="rgb(211,33,43)" fg:x="14850" fg:w="7561"/><text x="9.1160%" y="479.50">core:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5,911 samples, 3.53%)</title><rect x="9.8511%" y="453" width="3.5291%" height="15" fill="rgb(245,58,50)" fg:x="16500" fg:w="5911"/><text x="10.1011%" y="463.50">cor..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (104 samples, 0.06%)</title><rect x="13.3181%" y="437" width="0.0621%" height="15" fill="rgb(244,68,36)" fg:x="22307" fg:w="104"/><text x="13.5681%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (29 samples, 0.02%)</title><rect x="13.3802%" y="485" width="0.0173%" height="15" fill="rgb(232,229,15)" fg:x="22411" fg:w="29"/><text x="13.6302%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (29 samples, 0.02%)</title><rect x="13.3802%" y="469" width="0.0173%" height="15" fill="rgb(254,30,23)" fg:x="22411" fg:w="29"/><text x="13.6302%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (26 samples, 0.02%)</title><rect x="13.4065%" y="485" width="0.0155%" height="15" fill="rgb(235,160,14)" fg:x="22455" fg:w="26"/><text x="13.6565%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (24 samples, 0.01%)</title><rect x="13.4220%" y="485" width="0.0143%" height="15" fill="rgb(212,155,44)" fg:x="22481" fg:w="24"/><text x="13.6720%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (8,785 samples, 5.24%)</title><rect x="8.3699%" y="501" width="5.2450%" height="15" fill="rgb(226,2,50)" fg:x="14019" fg:w="8785"/><text x="8.6199%" y="511.50">alloc:..</text></g><g><title>core::ptr::write (299 samples, 0.18%)</title><rect x="13.4363%" y="485" width="0.1785%" height="15" fill="rgb(234,177,6)" fg:x="22505" fg:w="299"/><text x="13.6863%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.04%)</title><rect x="13.6148%" y="437" width="0.0358%" height="15" fill="rgb(217,24,9)" fg:x="22804" fg:w="60"/><text x="13.8648%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (583 samples, 0.35%)</title><rect x="13.6506%" y="421" width="0.3481%" height="15" fill="rgb(220,13,46)" fg:x="22864" fg:w="583"/><text x="13.9006%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (583 samples, 0.35%)</title><rect x="13.6506%" y="405" width="0.3481%" height="15" fill="rgb(239,221,27)" fg:x="22864" fg:w="583"/><text x="13.9006%" y="415.50"></text></g><g><title>core::ptr::write (583 samples, 0.35%)</title><rect x="13.6506%" y="389" width="0.3481%" height="15" fill="rgb(222,198,25)" fg:x="22864" fg:w="583"/><text x="13.9006%" y="399.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (260 samples, 0.16%)</title><rect x="14.3342%" y="389" width="0.1552%" height="15" fill="rgb(211,99,13)" fg:x="24009" fg:w="260"/><text x="14.5842%" y="399.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (260 samples, 0.16%)</title><rect x="14.3342%" y="373" width="0.1552%" height="15" fill="rgb(232,111,31)" fg:x="24009" fg:w="260"/><text x="14.5842%" y="383.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (260 samples, 0.16%)</title><rect x="14.3342%" y="357" width="0.1552%" height="15" fill="rgb(245,82,37)" fg:x="24009" fg:w="260"/><text x="14.5842%" y="367.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (1,847 samples, 1.10%)</title><rect x="14.0518%" y="405" width="1.1027%" height="15" fill="rgb(227,149,46)" fg:x="23536" fg:w="1847"/><text x="14.3018%" y="415.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (1,114 samples, 0.67%)</title><rect x="14.4895%" y="389" width="0.6651%" height="15" fill="rgb(218,36,50)" fg:x="24269" fg:w="1114"/><text x="14.7395%" y="399.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (1,114 samples, 0.67%)</title><rect x="14.4895%" y="373" width="0.6651%" height="15" fill="rgb(226,80,48)" fg:x="24269" fg:w="1114"/><text x="14.7395%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (230 samples, 0.14%)</title><rect x="16.4681%" y="357" width="0.1373%" height="15" fill="rgb(238,224,15)" fg:x="27583" fg:w="230"/><text x="16.7181%" y="367.50"></text></g><g><title>asuint (193 samples, 0.12%)</title><rect x="17.7117%" y="325" width="0.1152%" height="15" fill="rgb(241,136,10)" fg:x="29666" fg:w="193"/><text x="17.9617%" y="335.50"></text></g><g><title>exp2_inline (3,397 samples, 2.03%)</title><rect x="17.8269%" y="325" width="2.0281%" height="15" fill="rgb(208,32,45)" fg:x="29859" fg:w="3397"/><text x="18.0769%" y="335.50">e..</text></g><g><title>asuint64 (118 samples, 0.07%)</title><rect x="19.7846%" y="309" width="0.0705%" height="15" fill="rgb(207,135,9)" fg:x="33138" fg:w="118"/><text x="20.0346%" y="319.50"></text></g><g><title>log2_inline (1,592 samples, 0.95%)</title><rect x="19.8550%" y="325" width="0.9505%" height="15" fill="rgb(206,86,44)" fg:x="33256" fg:w="1592"/><text x="20.1050%" y="335.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (7,863 samples, 4.69%)</title><rect x="16.1892%" y="373" width="4.6945%" height="15" fill="rgb(245,177,15)" fg:x="27116" fg:w="7863"/><text x="16.4392%" y="383.50">&lt;ggez..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (7,166 samples, 4.28%)</title><rect x="16.6054%" y="357" width="4.2784%" height="15" fill="rgb(206,64,50)" fg:x="27813" fg:w="7166"/><text x="16.8554%" y="367.50">std::..</text></g><g><title>__powf_fma (7,149 samples, 4.27%)</title><rect x="16.6155%" y="341" width="4.2682%" height="15" fill="rgb(234,36,40)" fg:x="27830" fg:w="7149"/><text x="16.8655%" y="351.50">__pow..</text></g><g><title>zeroinfnan (131 samples, 0.08%)</title><rect x="20.8055%" y="325" width="0.0782%" height="15" fill="rgb(213,64,8)" fg:x="34848" fg:w="131"/><text x="21.0555%" y="335.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (7,896 samples, 4.71%)</title><rect x="16.1892%" y="389" width="4.7142%" height="15" fill="rgb(210,75,36)" fg:x="27116" fg:w="7896"/><text x="16.4392%" y="399.50">&lt;ggez..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (33 samples, 0.02%)</title><rect x="20.8837%" y="373" width="0.0197%" height="15" fill="rgb(229,88,21)" fg:x="34979" fg:w="33"/><text x="21.1337%" y="383.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (141 samples, 0.08%)</title><rect x="20.9052%" y="389" width="0.0842%" height="15" fill="rgb(252,204,47)" fg:x="35015" fg:w="141"/><text x="21.1552%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (242 samples, 0.14%)</title><rect x="22.1339%" y="373" width="0.1445%" height="15" fill="rgb(208,77,27)" fg:x="37073" fg:w="242"/><text x="22.3839%" y="383.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (169 samples, 0.10%)</title><rect x="22.1775%" y="357" width="0.1009%" height="15" fill="rgb(221,76,26)" fg:x="37146" fg:w="169"/><text x="22.4275%" y="367.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::transpose (232 samples, 0.14%)</title><rect x="22.2814%" y="373" width="0.1385%" height="15" fill="rgb(225,139,18)" fg:x="37320" fg:w="232"/><text x="22.5314%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (150 samples, 0.09%)</title><rect x="22.3304%" y="357" width="0.0896%" height="15" fill="rgb(230,137,11)" fg:x="37402" fg:w="150"/><text x="22.5804%" y="367.50"></text></g><g><title>abstop12 (76 samples, 0.05%)</title><rect x="22.6032%" y="325" width="0.0454%" height="15" fill="rgb(212,28,1)" fg:x="37859" fg:w="76"/><text x="22.8532%" y="335.50"></text></g><g><title>reduce_fast (132 samples, 0.08%)</title><rect x="22.6486%" y="325" width="0.0788%" height="15" fill="rgb(248,164,17)" fg:x="37935" fg:w="132"/><text x="22.8986%" y="335.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (29,318 samples, 17.50%)</title><rect x="5.5584%" y="565" width="17.5039%" height="15" fill="rgb(222,171,42)" fg:x="9310" fg:w="29318"/><text x="5.8084%" y="575.50">&lt;neuralang::MainState as gg..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (24,650 samples, 14.72%)</title><rect x="8.3454%" y="549" width="14.7169%" height="15" fill="rgb(243,84,45)" fg:x="13978" fg:w="24650"/><text x="8.5954%" y="559.50">ggez::graphics::instan..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (24,650 samples, 14.72%)</title><rect x="8.3454%" y="533" width="14.7169%" height="15" fill="rgb(252,49,23)" fg:x="13978" fg:w="24650"/><text x="8.5954%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (24,650 samples, 14.72%)</title><rect x="8.3454%" y="517" width="14.7169%" height="15" fill="rgb(215,19,7)" fg:x="13978" fg:w="24650"/><text x="8.5954%" y="527.50">&lt;alloc::vec::Vec&lt;T,A&gt; ..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (15,824 samples, 9.45%)</title><rect x="13.6148%" y="501" width="9.4475%" height="15" fill="rgb(238,81,41)" fg:x="22804" fg:w="15824"/><text x="13.8648%" y="511.50">alloc::vec::Ve..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15,824 samples, 9.45%)</title><rect x="13.6148%" y="485" width="9.4475%" height="15" fill="rgb(210,199,37)" fg:x="22804" fg:w="15824"/><text x="13.8648%" y="495.50">core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15,824 samples, 9.45%)</title><rect x="13.6148%" y="469" width="9.4475%" height="15" fill="rgb(244,192,49)" fg:x="22804" fg:w="15824"/><text x="13.8648%" y="479.50">&lt;core::iter::a..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (15,824 samples, 9.45%)</title><rect x="13.6148%" y="453" width="9.4475%" height="15" fill="rgb(226,211,11)" fg:x="22804" fg:w="15824"/><text x="13.8648%" y="463.50">core::iter::tr..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (15,764 samples, 9.41%)</title><rect x="13.6506%" y="437" width="9.4117%" height="15" fill="rgb(236,162,54)" fg:x="22864" fg:w="15764"/><text x="13.9006%" y="447.50">core::iter::a..</text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (15,181 samples, 9.06%)</title><rect x="13.9987%" y="421" width="9.0636%" height="15" fill="rgb(220,229,9)" fg:x="23447" fg:w="15181"/><text x="14.2487%" y="431.50">ggez::graphic..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (13,244 samples, 7.91%)</title><rect x="15.1552%" y="405" width="7.9071%" height="15" fill="rgb(250,87,22)" fg:x="25384" fg:w="13244"/><text x="15.4052%" y="415.50">ggez::graph..</text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (3,472 samples, 2.07%)</title><rect x="20.9894%" y="389" width="2.0729%" height="15" fill="rgb(239,43,17)" fg:x="35156" fg:w="3472"/><text x="21.2394%" y="399.50">g..</text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (1,076 samples, 0.64%)</title><rect x="22.4199%" y="373" width="0.6424%" height="15" fill="rgb(231,177,25)" fg:x="37552" fg:w="1076"/><text x="22.6699%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (1,076 samples, 0.64%)</title><rect x="22.4199%" y="357" width="0.6424%" height="15" fill="rgb(219,179,1)" fg:x="37552" fg:w="1076"/><text x="22.6699%" y="367.50"></text></g><g><title>__sincosf_fma (1,076 samples, 0.64%)</title><rect x="22.4199%" y="341" width="0.6424%" height="15" fill="rgb(238,219,53)" fg:x="37552" fg:w="1076"/><text x="22.6699%" y="351.50"></text></g><g><title>sincosf_poly (561 samples, 0.33%)</title><rect x="22.7274%" y="325" width="0.3349%" height="15" fill="rgb(232,167,36)" fg:x="38067" fg:w="561"/><text x="22.9774%" y="335.50"></text></g><g><title>v2df_to_sf (177 samples, 0.11%)</title><rect x="22.9566%" y="309" width="0.1057%" height="15" fill="rgb(244,19,51)" fg:x="38451" fg:w="177"/><text x="23.2066%" y="319.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (22,272 samples, 13.30%)</title><rect x="23.0635%" y="533" width="13.2972%" height="15" fill="rgb(224,6,22)" fg:x="38630" fg:w="22272"/><text x="23.3135%" y="543.50">&lt;neuralang::MainStat..</text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="36.3488%" y="517" width="0.0119%" height="15" fill="rgb(224,145,5)" fg:x="60882" fg:w="20"/><text x="36.5988%" y="527.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="36.3500%" y="501" width="0.0107%" height="15" fill="rgb(234,130,49)" fg:x="60884" fg:w="18"/><text x="36.6000%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="36.3500%" y="485" width="0.0107%" height="15" fill="rgb(254,6,2)" fg:x="60884" fg:w="18"/><text x="36.6000%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="36.3500%" y="469" width="0.0107%" height="15" fill="rgb(208,96,46)" fg:x="60884" fg:w="18"/><text x="36.6000%" y="479.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,860 samples, 1.71%)</title><rect x="43.0332%" y="517" width="1.7075%" height="15" fill="rgb(239,3,39)" fg:x="72078" fg:w="2860"/><text x="43.2832%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,860 samples, 1.71%)</title><rect x="43.0332%" y="501" width="1.7075%" height="15" fill="rgb(233,210,1)" fg:x="72078" fg:w="2860"/><text x="43.2832%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (174 samples, 0.10%)</title><rect x="44.7407%" y="485" width="0.1039%" height="15" fill="rgb(244,137,37)" fg:x="74938" fg:w="174"/><text x="44.9907%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (637 samples, 0.38%)</title><rect x="44.7407%" y="517" width="0.3803%" height="15" fill="rgb(240,136,2)" fg:x="74938" fg:w="637"/><text x="44.9907%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (637 samples, 0.38%)</title><rect x="44.7407%" y="501" width="0.3803%" height="15" fill="rgb(239,18,37)" fg:x="74938" fg:w="637"/><text x="44.9907%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (463 samples, 0.28%)</title><rect x="44.8446%" y="485" width="0.2764%" height="15" fill="rgb(218,185,22)" fg:x="75112" fg:w="463"/><text x="45.0946%" y="495.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (86 samples, 0.05%)</title><rect x="45.4028%" y="485" width="0.0513%" height="15" fill="rgb(225,218,4)" fg:x="76047" fg:w="86"/><text x="45.6528%" y="495.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (86 samples, 0.05%)</title><rect x="45.4028%" y="469" width="0.0513%" height="15" fill="rgb(230,182,32)" fg:x="76047" fg:w="86"/><text x="45.6528%" y="479.50"></text></g><g><title>core::ops::index_range::IndexRange::len (86 samples, 0.05%)</title><rect x="45.4028%" y="453" width="0.0513%" height="15" fill="rgb(242,56,43)" fg:x="76047" fg:w="86"/><text x="45.6528%" y="463.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (749 samples, 0.45%)</title><rect x="45.1210%" y="501" width="0.4472%" height="15" fill="rgb(233,99,24)" fg:x="75575" fg:w="749"/><text x="45.3710%" y="511.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (191 samples, 0.11%)</title><rect x="45.4542%" y="485" width="0.1140%" height="15" fill="rgb(234,209,42)" fg:x="76133" fg:w="191"/><text x="45.7042%" y="495.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (483 samples, 0.29%)</title><rect x="45.5682%" y="437" width="0.2884%" height="15" fill="rgb(227,7,12)" fg:x="76324" fg:w="483"/><text x="45.8182%" y="447.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,303 samples, 0.78%)</title><rect x="45.1210%" y="517" width="0.7779%" height="15" fill="rgb(245,203,43)" fg:x="75575" fg:w="1303"/><text x="45.3710%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (554 samples, 0.33%)</title><rect x="45.5682%" y="501" width="0.3308%" height="15" fill="rgb(238,205,33)" fg:x="76324" fg:w="554"/><text x="45.8182%" y="511.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (554 samples, 0.33%)</title><rect x="45.5682%" y="485" width="0.3308%" height="15" fill="rgb(231,56,7)" fg:x="76324" fg:w="554"/><text x="45.8182%" y="495.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (554 samples, 0.33%)</title><rect x="45.5682%" y="469" width="0.3308%" height="15" fill="rgb(244,186,29)" fg:x="76324" fg:w="554"/><text x="45.8182%" y="479.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (554 samples, 0.33%)</title><rect x="45.5682%" y="453" width="0.3308%" height="15" fill="rgb(234,111,31)" fg:x="76324" fg:w="554"/><text x="45.8182%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (71 samples, 0.04%)</title><rect x="45.8566%" y="437" width="0.0424%" height="15" fill="rgb(241,149,10)" fg:x="76807" fg:w="71"/><text x="46.1066%" y="447.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (43 samples, 0.03%)</title><rect x="47.1020%" y="469" width="0.0257%" height="15" fill="rgb(249,206,44)" fg:x="78893" fg:w="43"/><text x="47.3520%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,060 samples, 1.23%)</title><rect x="45.8990%" y="517" width="1.2299%" height="15" fill="rgb(251,153,30)" fg:x="76878" fg:w="2060"/><text x="46.1490%" y="527.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (45 samples, 0.03%)</title><rect x="47.1020%" y="501" width="0.0269%" height="15" fill="rgb(239,152,38)" fg:x="78893" fg:w="45"/><text x="47.3520%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (45 samples, 0.03%)</title><rect x="47.1020%" y="485" width="0.0269%" height="15" fill="rgb(249,139,47)" fg:x="78893" fg:w="45"/><text x="47.3520%" y="495.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (1,020 samples, 0.61%)</title><rect x="47.1289%" y="501" width="0.6090%" height="15" fill="rgb(244,64,35)" fg:x="78938" fg:w="1020"/><text x="47.3789%" y="511.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (3,443 samples, 2.06%)</title><rect x="47.1289%" y="517" width="2.0556%" height="15" fill="rgb(216,46,15)" fg:x="78938" fg:w="3443"/><text x="47.3789%" y="527.50">&lt;..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (2,423 samples, 1.45%)</title><rect x="47.7378%" y="501" width="1.4466%" height="15" fill="rgb(250,74,19)" fg:x="79958" fg:w="2423"/><text x="47.9878%" y="511.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::SubAssign&gt;::sub_assign (183 samples, 0.11%)</title><rect x="49.1844%" y="517" width="0.1093%" height="15" fill="rgb(249,42,33)" fg:x="82381" fg:w="183"/><text x="49.4344%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::SubAssign&gt;::sub_assign (183 samples, 0.11%)</title><rect x="49.1844%" y="501" width="0.1093%" height="15" fill="rgb(242,149,17)" fg:x="82381" fg:w="183"/><text x="49.4344%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (1,608 samples, 0.96%)</title><rect x="49.2937%" y="517" width="0.9600%" height="15" fill="rgb(244,29,21)" fg:x="82564" fg:w="1608"/><text x="49.5437%" y="527.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="50.2537%" y="517" width="0.0131%" height="15" fill="rgb(220,130,37)" fg:x="84172" fg:w="22"/><text x="50.5037%" y="527.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="50.2567%" y="501" width="0.0101%" height="15" fill="rgb(211,67,2)" fg:x="84177" fg:w="17"/><text x="50.5067%" y="511.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="50.2567%" y="485" width="0.0101%" height="15" fill="rgb(235,68,52)" fg:x="84177" fg:w="17"/><text x="50.5067%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,122 samples, 1.27%)</title><rect x="50.2669%" y="517" width="1.2669%" height="15" fill="rgb(246,142,3)" fg:x="84194" fg:w="2122"/><text x="50.5169%" y="527.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (2,122 samples, 1.27%)</title><rect x="50.2669%" y="501" width="1.2669%" height="15" fill="rgb(241,25,7)" fg:x="84194" fg:w="2122"/><text x="50.5169%" y="511.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (2,122 samples, 1.27%)</title><rect x="50.2669%" y="485" width="1.2669%" height="15" fill="rgb(242,119,39)" fg:x="84194" fg:w="2122"/><text x="50.5169%" y="495.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="51.5183%" y="469" width="0.0155%" height="15" fill="rgb(241,98,45)" fg:x="86290" fg:w="26"/><text x="51.7683%" y="479.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="51.5183%" y="453" width="0.0155%" height="15" fill="rgb(254,28,30)" fg:x="86290" fg:w="26"/><text x="51.7683%" y="463.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="51.5183%" y="437" width="0.0155%" height="15" fill="rgb(241,142,54)" fg:x="86290" fg:w="26"/><text x="51.7683%" y="447.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="51.5189%" y="421" width="0.0149%" height="15" fill="rgb(222,85,15)" fg:x="86291" fg:w="25"/><text x="51.7689%" y="431.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="51.5207%" y="405" width="0.0131%" height="15" fill="rgb(210,85,47)" fg:x="86294" fg:w="22"/><text x="51.7707%" y="415.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="51.5212%" y="389" width="0.0125%" height="15" fill="rgb(224,206,25)" fg:x="86295" fg:w="21"/><text x="51.7712%" y="399.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="51.5212%" y="373" width="0.0125%" height="15" fill="rgb(243,201,19)" fg:x="86295" fg:w="21"/><text x="51.7712%" y="383.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="51.5212%" y="357" width="0.0125%" height="15" fill="rgb(236,59,4)" fg:x="86295" fg:w="21"/><text x="51.7712%" y="367.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="51.5218%" y="341" width="0.0119%" height="15" fill="rgb(254,179,45)" fg:x="86296" fg:w="20"/><text x="51.7718%" y="351.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="51.5236%" y="325" width="0.0101%" height="15" fill="rgb(226,14,10)" fg:x="86299" fg:w="17"/><text x="51.7736%" y="335.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (148 samples, 0.09%)</title><rect x="51.5338%" y="517" width="0.0884%" height="15" fill="rgb(244,27,41)" fg:x="86316" fg:w="148"/><text x="51.7838%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (148 samples, 0.09%)</title><rect x="51.5338%" y="501" width="0.0884%" height="15" fill="rgb(235,35,32)" fg:x="86316" fg:w="148"/><text x="51.7838%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (105 samples, 0.06%)</title><rect x="51.5595%" y="485" width="0.0627%" height="15" fill="rgb(218,68,31)" fg:x="86359" fg:w="105"/><text x="51.8095%" y="495.50"></text></g><g><title>glam::f32::vec2::&lt;impl core::ops::arith::Mul&lt;glam::f32::vec2::Vec2&gt; for f32&gt;::mul (1,821 samples, 1.09%)</title><rect x="51.6221%" y="517" width="1.0872%" height="15" fill="rgb(207,120,37)" fg:x="86464" fg:w="1821"/><text x="51.8721%" y="527.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (1,821 samples, 1.09%)</title><rect x="51.6221%" y="501" width="1.0872%" height="15" fill="rgb(227,98,0)" fg:x="86464" fg:w="1821"/><text x="51.8721%" y="511.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Sub&gt;::sub (519 samples, 0.31%)</title><rect x="56.0235%" y="501" width="0.3099%" height="15" fill="rgb(207,7,3)" fg:x="93836" fg:w="519"/><text x="56.2735%" y="511.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (519 samples, 0.31%)</title><rect x="56.0235%" y="485" width="0.3099%" height="15" fill="rgb(206,98,19)" fg:x="93836" fg:w="519"/><text x="56.2735%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="56.3334%" y="501" width="0.0107%" height="15" fill="rgb(217,5,26)" fg:x="94355" fg:w="18"/><text x="56.5834%" y="511.50"></text></g><g><title>glam::f32::math::std_math::sqrt (4,924 samples, 2.94%)</title><rect x="56.3441%" y="485" width="2.9398%" height="15" fill="rgb(235,190,38)" fg:x="94373" fg:w="4924"/><text x="56.5941%" y="495.50">gl..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (4,924 samples, 2.94%)</title><rect x="56.3441%" y="469" width="2.9398%" height="15" fill="rgb(247,86,24)" fg:x="94373" fg:w="4924"/><text x="56.5941%" y="479.50">st..</text></g><g><title>neuralang::beings_collide (13,885 samples, 8.29%)</title><rect x="52.7094%" y="517" width="8.2898%" height="15" fill="rgb(205,101,16)" fg:x="88285" fg:w="13885"/><text x="52.9594%" y="527.50">neuralang::b..</text></g><g><title>glam::f32::vec2::Vec2::length (7,797 samples, 4.66%)</title><rect x="56.3441%" y="501" width="4.6551%" height="15" fill="rgb(246,168,33)" fg:x="94373" fg:w="7797"/><text x="56.5941%" y="511.50">glam:..</text></g><g><title>glam::f32::vec2::Vec2::dot (2,873 samples, 1.72%)</title><rect x="59.2839%" y="485" width="1.7153%" height="15" fill="rgb(231,114,1)" fg:x="99297" fg:w="2873"/><text x="59.5339%" y="495.50"></text></g><g><title>neuralang::oob (502 samples, 0.30%)</title><rect x="60.9992%" y="517" width="0.2997%" height="15" fill="rgb(207,184,53)" fg:x="102170" fg:w="502"/><text x="61.2492%" y="527.50"></text></g><g><title>neuralang::two_to_one (698 samples, 0.42%)</title><rect x="61.2989%" y="517" width="0.4167%" height="15" fill="rgb(224,95,51)" fg:x="102672" fg:w="698"/><text x="61.5489%" y="527.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (1,282 samples, 0.77%)</title><rect x="64.9790%" y="485" width="0.7654%" height="15" fill="rgb(212,188,45)" fg:x="108836" fg:w="1282"/><text x="65.2290%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2,128 samples, 1.27%)</title><rect x="64.4769%" y="501" width="1.2705%" height="15" fill="rgb(223,154,38)" fg:x="107995" fg:w="2128"/><text x="64.7269%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,794 samples, 1.07%)</title><rect x="65.7474%" y="501" width="1.0711%" height="15" fill="rgb(251,22,52)" fg:x="110123" fg:w="1794"/><text x="65.9974%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1,032 samples, 0.62%)</title><rect x="66.2024%" y="485" width="0.6161%" height="15" fill="rgb(229,209,22)" fg:x="110885" fg:w="1032"/><text x="66.4524%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1,032 samples, 0.62%)</title><rect x="66.2024%" y="469" width="0.6161%" height="15" fill="rgb(234,138,34)" fg:x="110885" fg:w="1032"/><text x="66.4524%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1,032 samples, 0.62%)</title><rect x="66.2024%" y="453" width="0.6161%" height="15" fill="rgb(212,95,11)" fg:x="110885" fg:w="1032"/><text x="66.4524%" y="463.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (1,715 samples, 1.02%)</title><rect x="66.8185%" y="501" width="1.0239%" height="15" fill="rgb(240,179,47)" fg:x="111917" fg:w="1715"/><text x="67.0685%" y="511.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="67.8424%" y="501" width="0.0185%" height="15" fill="rgb(240,163,11)" fg:x="113632" fg:w="31"/><text x="68.0924%" y="511.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="67.8472%" y="485" width="0.0137%" height="15" fill="rgb(236,37,12)" fg:x="113640" fg:w="23"/><text x="68.0972%" y="495.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="67.8472%" y="469" width="0.0137%" height="15" fill="rgb(232,164,16)" fg:x="113640" fg:w="23"/><text x="68.0972%" y="479.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="67.8484%" y="453" width="0.0125%" height="15" fill="rgb(244,205,15)" fg:x="113642" fg:w="21"/><text x="68.0984%" y="463.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="67.8490%" y="437" width="0.0119%" height="15" fill="rgb(223,117,47)" fg:x="113643" fg:w="20"/><text x="68.0990%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="67.8496%" y="421" width="0.0113%" height="15" fill="rgb(244,107,35)" fg:x="113644" fg:w="19"/><text x="68.0996%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="67.8508%" y="405" width="0.0101%" height="15" fill="rgb(205,140,8)" fg:x="113646" fg:w="17"/><text x="68.1008%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1,014 samples, 0.61%)</title><rect x="68.2012%" y="485" width="0.6054%" height="15" fill="rgb(228,84,46)" fg:x="114233" fg:w="1014"/><text x="68.4512%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts (1,014 samples, 0.61%)</title><rect x="68.2012%" y="469" width="0.6054%" height="15" fill="rgb(254,188,9)" fg:x="114233" fg:w="1014"/><text x="68.4512%" y="479.50"></text></g><g><title>core::slice::raw::from_raw_parts::runtime (1,014 samples, 0.61%)</title><rect x="68.2012%" y="453" width="0.6054%" height="15" fill="rgb(206,112,54)" fg:x="114233" fg:w="1014"/><text x="68.4512%" y="463.50"></text></g><g><title>core::intrinsics::is_valid_allocation_size (1,014 samples, 0.61%)</title><rect x="68.2012%" y="437" width="0.6054%" height="15" fill="rgb(216,84,49)" fg:x="114233" fg:w="1014"/><text x="68.4512%" y="447.50"></text></g><g><title>&lt;slotmap::DefaultKey as slotmap::Key&gt;::data (1,090 samples, 0.65%)</title><rect x="68.8072%" y="485" width="0.6508%" height="15" fill="rgb(214,194,35)" fg:x="115248" fg:w="1090"/><text x="69.0572%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (14,965 samples, 8.93%)</title><rect x="69.4604%" y="485" width="8.9346%" height="15" fill="rgb(249,28,3)" fg:x="116342" fg:w="14965"/><text x="69.7104%" y="495.50">core::option:..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key::{{closure}} (14,729 samples, 8.79%)</title><rect x="69.6013%" y="469" width="8.7937%" height="15" fill="rgb(222,56,52)" fg:x="116578" fg:w="14729"/><text x="69.8513%" y="479.50">slotmap::bas..</text></g><g><title>neuralang::World::check_collisions (70,852 samples, 42.30%)</title><rect x="36.3607%" y="533" width="42.3012%" height="15" fill="rgb(245,217,50)" fg:x="60902" fg:w="70852"/><text x="36.6107%" y="543.50">neuralang::World::check_collisions</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::get_disjoint_mut (28,384 samples, 16.95%)</title><rect x="61.7156%" y="517" width="16.9463%" height="15" fill="rgb(213,201,24)" fg:x="103370" fg:w="28384"/><text x="61.9656%" y="527.50">slotmap::basic::SlotMap&lt;K,..</text></g><g><title>slotmap::basic::SlotMap&lt;K,V&gt;::contains_key (18,091 samples, 10.80%)</title><rect x="67.8609%" y="501" width="10.8010%" height="15" fill="rgb(248,116,28)" fg:x="113663" fg:w="18091"/><text x="68.1109%" y="511.50">slotmap::basic::..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (447 samples, 0.27%)</title><rect x="78.3950%" y="485" width="0.2669%" height="15" fill="rgb(219,72,43)" fg:x="131307" fg:w="447"/><text x="78.6450%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (447 samples, 0.27%)</title><rect x="78.3950%" y="469" width="0.2669%" height="15" fill="rgb(209,138,14)" fg:x="131307" fg:w="447"/><text x="78.6450%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (151 samples, 0.09%)</title><rect x="78.9539%" y="469" width="0.0902%" height="15" fill="rgb(222,18,33)" fg:x="132243" fg:w="151"/><text x="79.2039%" y="479.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (70 samples, 0.04%)</title><rect x="79.0022%" y="453" width="0.0418%" height="15" fill="rgb(213,199,7)" fg:x="132324" fg:w="70"/><text x="79.2522%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.04%)</title><rect x="79.0440%" y="469" width="0.0406%" height="15" fill="rgb(250,110,10)" fg:x="132394" fg:w="68"/><text x="79.2940%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.04%)</title><rect x="79.0440%" y="453" width="0.0406%" height="15" fill="rgb(248,123,6)" fg:x="132394" fg:w="68"/><text x="79.2940%" y="463.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (775 samples, 0.46%)</title><rect x="78.6661%" y="485" width="0.4627%" height="15" fill="rgb(206,91,31)" fg:x="131761" fg:w="775"/><text x="78.9161%" y="495.50"></text></g><g><title>slotmap::KeyData::new (72 samples, 0.04%)</title><rect x="79.0858%" y="469" width="0.0430%" height="15" fill="rgb(211,154,13)" fg:x="132464" fg:w="72"/><text x="79.3358%" y="479.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (1,017 samples, 0.61%)</title><rect x="79.2405%" y="453" width="0.6072%" height="15" fill="rgb(225,148,7)" fg:x="132723" fg:w="1017"/><text x="79.4905%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1,017 samples, 0.61%)</title><rect x="79.2405%" y="437" width="0.6072%" height="15" fill="rgb(220,160,43)" fg:x="132723" fg:w="1017"/><text x="79.4905%" y="447.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (449 samples, 0.27%)</title><rect x="79.8476%" y="453" width="0.2681%" height="15" fill="rgb(213,52,39)" fg:x="133740" fg:w="449"/><text x="80.0976%" y="463.50"></text></g><g><title>&lt;f32 as core::ops::arith::Mul&gt;::mul (449 samples, 0.27%)</title><rect x="79.8476%" y="437" width="0.2681%" height="15" fill="rgb(243,137,7)" fg:x="133740" fg:w="449"/><text x="80.0976%" y="447.50"></text></g><g><title>abstop12 (121 samples, 0.07%)</title><rect x="80.2799%" y="405" width="0.0722%" height="15" fill="rgb(230,79,13)" fg:x="134464" fg:w="121"/><text x="80.5299%" y="415.50"></text></g><g><title>reduce_fast (131 samples, 0.08%)</title><rect x="80.3521%" y="405" width="0.0782%" height="15" fill="rgb(247,105,23)" fg:x="134585" fg:w="131"/><text x="80.6021%" y="415.50"></text></g><g><title>neuralang::dir_from_theta (1,445 samples, 0.86%)</title><rect x="80.1163%" y="453" width="0.8627%" height="15" fill="rgb(223,179,41)" fg:x="134190" fg:w="1445"/><text x="80.3663%" y="463.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (1,445 samples, 0.86%)</title><rect x="80.1163%" y="437" width="0.8627%" height="15" fill="rgb(218,9,34)" fg:x="134190" fg:w="1445"/><text x="80.3663%" y="447.50"></text></g><g><title>__sincosf_fma (1,442 samples, 0.86%)</title><rect x="80.1181%" y="421" width="0.8609%" height="15" fill="rgb(222,106,8)" fg:x="134193" fg:w="1442"/><text x="80.3681%" y="431.50"></text></g><g><title>sincosf_poly (919 samples, 0.55%)</title><rect x="80.4303%" y="405" width="0.5487%" height="15" fill="rgb(211,220,0)" fg:x="134716" fg:w="919"/><text x="80.6803%" y="415.50"></text></g><g><title>v2df_to_sf (345 samples, 0.21%)</title><rect x="80.7730%" y="389" width="0.2060%" height="15" fill="rgb(229,52,16)" fg:x="135290" fg:w="345"/><text x="81.0230%" y="399.50"></text></g><g><title>neuralang::oob (187 samples, 0.11%)</title><rect x="80.9790%" y="453" width="0.1116%" height="15" fill="rgb(212,155,18)" fg:x="135635" fg:w="187"/><text x="81.2290%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4,071 samples, 2.43%)</title><rect x="78.6619%" y="517" width="2.4305%" height="15" fill="rgb(242,21,14)" fg:x="131754" fg:w="4071"/><text x="78.9119%" y="527.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (4,071 samples, 2.43%)</title><rect x="78.6619%" y="501" width="2.4305%" height="15" fill="rgb(222,19,48)" fg:x="131754" fg:w="4071"/><text x="78.9119%" y="511.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3,289 samples, 1.96%)</title><rect x="79.1288%" y="485" width="1.9637%" height="15" fill="rgb(232,45,27)" fg:x="132536" fg:w="3289"/><text x="79.3788%" y="495.50">c..</text></g><g><title>neuralang::World::move_beings::{{closure}} (3,289 samples, 1.96%)</title><rect x="79.1288%" y="469" width="1.9637%" height="15" fill="rgb(249,103,42)" fg:x="132536" fg:w="3289"/><text x="79.3788%" y="479.50">n..</text></g><g><title>neuralang::World::move_beings (4,073 samples, 2.43%)</title><rect x="78.6619%" y="533" width="2.4317%" height="15" fill="rgb(246,81,33)" fg:x="131754" fg:w="4073"/><text x="78.9119%" y="543.50">ne..</text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (100 samples, 0.06%)</title><rect x="81.6340%" y="485" width="0.0597%" height="15" fill="rgb(252,33,42)" fg:x="136732" fg:w="100"/><text x="81.8840%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (121 samples, 0.07%)</title><rect x="81.6226%" y="501" width="0.0722%" height="15" fill="rgb(209,212,41)" fg:x="136713" fg:w="121"/><text x="81.8726%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.03%)</title><rect x="81.6949%" y="501" width="0.0293%" height="15" fill="rgb(207,154,6)" fg:x="136834" fg:w="49"/><text x="81.9449%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.03%)</title><rect x="81.6949%" y="485" width="0.0293%" height="15" fill="rgb(223,64,47)" fg:x="136834" fg:w="49"/><text x="81.9449%" y="495.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (997 samples, 0.60%)</title><rect x="81.1826%" y="517" width="0.5952%" height="15" fill="rgb(211,161,38)" fg:x="135976" fg:w="997"/><text x="81.4326%" y="527.50"></text></g><g><title>slotmap::KeyData::new (90 samples, 0.05%)</title><rect x="81.7241%" y="501" width="0.0537%" height="15" fill="rgb(219,138,40)" fg:x="136883" fg:w="90"/><text x="81.9741%" y="511.50"></text></g><g><title>neuralang::World::tire_beings (1,147 samples, 0.68%)</title><rect x="81.0937%" y="533" width="0.6848%" height="15" fill="rgb(241,228,46)" fg:x="135827" fg:w="1147"/><text x="81.3437%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (30 samples, 0.02%)</title><rect x="81.9874%" y="517" width="0.0179%" height="15" fill="rgb(223,209,38)" fg:x="137324" fg:w="30"/><text x="82.2374%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (30 samples, 0.02%)</title><rect x="81.9874%" y="501" width="0.0179%" height="15" fill="rgb(236,164,45)" fg:x="137324" fg:w="30"/><text x="82.2374%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (30 samples, 0.02%)</title><rect x="81.9874%" y="485" width="0.0179%" height="15" fill="rgb(231,15,5)" fg:x="137324" fg:w="30"/><text x="82.2374%" y="495.50"></text></g><g><title>&lt;glam::f32::vec2::Vec2 as core::ops::arith::Add&gt;::add (314 samples, 0.19%)</title><rect x="82.0053%" y="517" width="0.1875%" height="15" fill="rgb(252,35,15)" fg:x="137354" fg:w="314"/><text x="82.2553%" y="527.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (304 samples, 0.18%)</title><rect x="82.0113%" y="501" width="0.1815%" height="15" fill="rgb(248,181,18)" fg:x="137364" fg:w="304"/><text x="82.2613%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (1,105 samples, 0.66%)</title><rect x="82.1928%" y="517" width="0.6597%" height="15" fill="rgb(233,39,42)" fg:x="137668" fg:w="1105"/><text x="82.4428%" y="527.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::convert::From&lt;slotmap::KeyData&gt;&gt;::from (18 samples, 0.01%)</title><rect x="83.0513%" y="485" width="0.0107%" height="15" fill="rgb(238,110,33)" fg:x="139106" fg:w="18"/><text x="83.3013%" y="495.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.01%)</title><rect x="83.0495%" y="501" width="0.0131%" height="15" fill="rgb(233,195,10)" fg:x="139103" fg:w="22"/><text x="83.2995%" y="511.50"></text></g><g><title>&lt;slotmap::basic::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (372 samples, 0.22%)</title><rect x="82.8525%" y="517" width="0.2221%" height="15" fill="rgb(254,105,3)" fg:x="138773" fg:w="372"/><text x="83.1025%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (184 samples, 0.11%)</title><rect x="83.0746%" y="517" width="0.1099%" height="15" fill="rgb(221,225,9)" fg:x="139145" fg:w="184"/><text x="83.3246%" y="527.50"></text></g><g><title>core::ptr::write (31 samples, 0.02%)</title><rect x="83.1660%" y="501" width="0.0185%" height="15" fill="rgb(224,227,45)" fg:x="139298" fg:w="31"/><text x="83.4160%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1,375 samples, 0.82%)</title><rect x="83.1845%" y="485" width="0.8209%" height="15" fill="rgb(229,198,43)" fg:x="139329" fg:w="1375"/><text x="83.4345%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (95 samples, 0.06%)</title><rect x="84.0054%" y="485" width="0.0567%" height="15" fill="rgb(206,209,35)" fg:x="140704" fg:w="95"/><text x="84.2554%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (1,335 samples, 0.80%)</title><rect x="84.1170%" y="469" width="0.7970%" height="15" fill="rgb(245,195,53)" fg:x="140891" fg:w="1335"/><text x="84.3670%" y="479.50"></text></g><g><title>neuralang::World::update_cells::{{closure}} (1,335 samples, 0.80%)</title><rect x="84.1170%" y="453" width="0.7970%" height="15" fill="rgb(240,92,26)" fg:x="140891" fg:w="1335"/><text x="84.3670%" y="463.50"></text></g><g><title>core::cmp::PartialEq::ne (1,335 samples, 0.80%)</title><rect x="84.1170%" y="437" width="0.7970%" height="15" fill="rgb(207,40,23)" fg:x="140891" fg:w="1335"/><text x="84.3670%" y="447.50"></text></g><g><title>&lt;slotmap::DefaultKey as core::cmp::PartialEq&gt;::eq (1,335 samples, 0.80%)</title><rect x="84.1170%" y="421" width="0.7970%" height="15" fill="rgb(223,111,35)" fg:x="140891" fg:w="1335"/><text x="84.3670%" y="431.50"></text></g><g><title>&lt;slotmap::KeyData as core::cmp::PartialEq&gt;::eq (1,335 samples, 0.80%)</title><rect x="84.1170%" y="405" width="0.7970%" height="15" fill="rgb(229,147,28)" fg:x="140891" fg:w="1335"/><text x="84.3670%" y="415.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU32 as core::cmp::PartialEq&gt;::eq (61 samples, 0.04%)</title><rect x="84.8777%" y="389" width="0.0364%" height="15" fill="rgb(211,29,28)" fg:x="142165" fg:w="61"/><text x="85.1277%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (1,436 samples, 0.86%)</title><rect x="84.0621%" y="485" width="0.8573%" height="15" fill="rgb(228,72,33)" fg:x="140799" fg:w="1436"/><text x="84.3121%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (2,920 samples, 1.74%)</title><rect x="83.1845%" y="517" width="1.7433%" height="15" fill="rgb(205,214,31)" fg:x="139329" fg:w="2920"/><text x="83.4345%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (2,920 samples, 1.74%)</title><rect x="83.1845%" y="501" width="1.7433%" height="15" fill="rgb(224,111,15)" fg:x="139329" fg:w="2920"/><text x="83.4345%" y="511.50"></text></g><g><title>neuralang::oob (89 samples, 0.05%)</title><rect x="84.9278%" y="517" width="0.0531%" height="15" fill="rgb(253,21,26)" fg:x="142249" fg:w="89"/><text x="85.1778%" y="527.50"></text></g><g><title>__fmodf (1,015 samples, 0.61%)</title><rect x="86.2897%" y="501" width="0.6060%" height="15" fill="rgb(245,139,43)" fg:x="144530" fg:w="1015"/><text x="86.5397%" y="511.50"></text></g><g><title>neuralang::pos_to_cell (19,804 samples, 11.82%)</title><rect x="84.9810%" y="517" width="11.8237%" height="15" fill="rgb(252,170,7)" fg:x="142338" fg:w="19804"/><text x="85.2310%" y="527.50">neuralang::pos_to_..</text></g><g><title>__ieee754_fmodf (16,597 samples, 9.91%)</title><rect x="86.8956%" y="501" width="9.9090%" height="15" fill="rgb(231,118,14)" fg:x="145545" fg:w="16597"/><text x="87.1456%" y="511.50">__ieee754_fmodf</text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="96.7873%" y="485" width="0.0173%" height="15" fill="rgb(238,83,0)" fg:x="162113" fg:w="29"/><text x="97.0373%" y="495.50"></text></g><g><title>[unknown] (27 samples, 0.02%)</title><rect x="96.7885%" y="469" width="0.0161%" height="15" fill="rgb(221,39,39)" fg:x="162115" fg:w="27"/><text x="97.0385%" y="479.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="96.7891%" y="453" width="0.0155%" height="15" fill="rgb(222,119,46)" fg:x="162116" fg:w="26"/><text x="97.0391%" y="463.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="96.7903%" y="437" width="0.0143%" height="15" fill="rgb(222,165,49)" fg:x="162118" fg:w="24"/><text x="97.0403%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="96.7933%" y="421" width="0.0113%" height="15" fill="rgb(219,113,52)" fg:x="162123" fg:w="19"/><text x="97.0433%" y="431.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="96.7945%" y="405" width="0.0101%" height="15" fill="rgb(214,7,15)" fg:x="162125" fg:w="17"/><text x="97.0445%" y="415.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="96.7945%" y="389" width="0.0101%" height="15" fill="rgb(235,32,4)" fg:x="162125" fg:w="17"/><text x="97.0445%" y="399.50"></text></g><g><title>neuralang::same_index (103 samples, 0.06%)</title><rect x="96.8047%" y="517" width="0.0615%" height="15" fill="rgb(238,90,54)" fg:x="162142" fg:w="103"/><text x="97.0547%" y="527.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (123,618 samples, 73.80%)</title><rect x="23.0623%" y="565" width="73.8044%" height="15" fill="rgb(213,208,19)" fg:x="38628" fg:w="123618"/><text x="23.3123%" y="575.50">&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update</text></g><g><title>neuralang::World::step (123,617 samples, 73.80%)</title><rect x="23.0629%" y="549" width="73.8038%" height="15" fill="rgb(233,156,4)" fg:x="38629" fg:w="123617"/><text x="23.3129%" y="559.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (25,272 samples, 15.09%)</title><rect x="81.7785%" y="533" width="15.0883%" height="15" fill="rgb(207,194,5)" fg:x="136974" fg:w="25272"/><text x="82.0285%" y="543.50">neuralang::World::updat..</text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (19 samples, 0.01%)</title><rect x="96.8817%" y="485" width="0.0113%" height="15" fill="rgb(206,111,30)" fg:x="162271" fg:w="19"/><text x="97.1317%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (85 samples, 0.05%)</title><rect x="96.8745%" y="517" width="0.0507%" height="15" fill="rgb(243,70,54)" fg:x="162259" fg:w="85"/><text x="97.1245%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (82 samples, 0.05%)</title><rect x="96.8763%" y="501" width="0.0490%" height="15" fill="rgb(242,28,8)" fg:x="162262" fg:w="82"/><text x="97.1263%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (54 samples, 0.03%)</title><rect x="96.8930%" y="485" width="0.0322%" height="15" fill="rgb(219,106,18)" fg:x="162290" fg:w="54"/><text x="97.1430%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (35 samples, 0.02%)</title><rect x="96.9044%" y="469" width="0.0209%" height="15" fill="rgb(244,222,10)" fg:x="162309" fg:w="35"/><text x="97.1544%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (35 samples, 0.02%)</title><rect x="96.9044%" y="453" width="0.0209%" height="15" fill="rgb(236,179,52)" fg:x="162309" fg:w="35"/><text x="97.1544%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.01%)</title><rect x="96.9127%" y="437" width="0.0125%" height="15" fill="rgb(213,23,39)" fg:x="162323" fg:w="21"/><text x="97.1627%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (87 samples, 0.05%)</title><rect x="96.8745%" y="533" width="0.0519%" height="15" fill="rgb(238,48,10)" fg:x="162259" fg:w="87"/><text x="97.1245%" y="543.50"></text></g><g><title>wgpu::Surface::get_current_texture (91 samples, 0.05%)</title><rect x="96.8745%" y="549" width="0.0543%" height="15" fill="rgb(251,196,23)" fg:x="162259" fg:w="91"/><text x="97.1245%" y="559.50"></text></g><g><title>[libX11.so.6.4.0] (18 samples, 0.01%)</title><rect x="96.9408%" y="437" width="0.0107%" height="15" fill="rgb(250,152,24)" fg:x="162370" fg:w="18"/><text x="97.1908%" y="447.50"></text></g><g><title>_XSend (55 samples, 0.03%)</title><rect x="96.9515%" y="437" width="0.0328%" height="15" fill="rgb(209,150,17)" fg:x="162388" fg:w="55"/><text x="97.2015%" y="447.50"></text></g><g><title>xcb_writev (51 samples, 0.03%)</title><rect x="96.9539%" y="421" width="0.0304%" height="15" fill="rgb(234,202,34)" fg:x="162392" fg:w="51"/><text x="97.2039%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (48 samples, 0.03%)</title><rect x="96.9557%" y="405" width="0.0287%" height="15" fill="rgb(253,148,53)" fg:x="162395" fg:w="48"/><text x="97.2057%" y="415.50"></text></g><g><title>[libxcb.so.1.1.0] (47 samples, 0.03%)</title><rect x="96.9563%" y="389" width="0.0281%" height="15" fill="rgb(218,129,16)" fg:x="162396" fg:w="47"/><text x="97.2063%" y="399.50"></text></g><g><title>__GI___writev (33 samples, 0.02%)</title><rect x="96.9647%" y="373" width="0.0197%" height="15" fill="rgb(216,85,19)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="383.50"></text></g><g><title>__GI___writev (33 samples, 0.02%)</title><rect x="96.9647%" y="357" width="0.0197%" height="15" fill="rgb(235,228,7)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="367.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.9647%" y="341" width="0.0197%" height="15" fill="rgb(245,175,0)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="351.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.9647%" y="325" width="0.0197%" height="15" fill="rgb(208,168,36)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="335.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.9647%" y="309" width="0.0197%" height="15" fill="rgb(246,171,24)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="319.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.9647%" y="293" width="0.0197%" height="15" fill="rgb(215,142,24)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="303.50"></text></g><g><title>[unknown] (33 samples, 0.02%)</title><rect x="96.9647%" y="277" width="0.0197%" height="15" fill="rgb(250,187,7)" fg:x="162410" fg:w="33"/><text x="97.2147%" y="287.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="96.9653%" y="261" width="0.0191%" height="15" fill="rgb(228,66,33)" fg:x="162411" fg:w="32"/><text x="97.2153%" y="271.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="96.9653%" y="245" width="0.0191%" height="15" fill="rgb(234,215,21)" fg:x="162411" fg:w="32"/><text x="97.2153%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="96.9659%" y="229" width="0.0185%" height="15" fill="rgb(222,191,20)" fg:x="162412" fg:w="31"/><text x="97.2159%" y="239.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="96.9659%" y="213" width="0.0185%" height="15" fill="rgb(245,79,54)" fg:x="162412" fg:w="31"/><text x="97.2159%" y="223.50"></text></g><g><title>[unknown] (29 samples, 0.02%)</title><rect x="96.9671%" y="197" width="0.0173%" height="15" fill="rgb(240,10,37)" fg:x="162414" fg:w="29"/><text x="97.2171%" y="207.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="96.9688%" y="181" width="0.0155%" height="15" fill="rgb(214,192,32)" fg:x="162417" fg:w="26"/><text x="97.2188%" y="191.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="96.9718%" y="165" width="0.0125%" height="15" fill="rgb(209,36,54)" fg:x="162422" fg:w="21"/><text x="97.2218%" y="175.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="96.9718%" y="149" width="0.0125%" height="15" fill="rgb(220,10,11)" fg:x="162422" fg:w="21"/><text x="97.2218%" y="159.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="96.9730%" y="133" width="0.0113%" height="15" fill="rgb(221,106,17)" fg:x="162424" fg:w="19"/><text x="97.2230%" y="143.50"></text></g><g><title>[unknown] (17 samples, 0.01%)</title><rect x="96.9742%" y="117" width="0.0101%" height="15" fill="rgb(251,142,44)" fg:x="162426" fg:w="17"/><text x="97.2242%" y="127.50"></text></g><g><title>[libxcb.so.1.1.0] (29 samples, 0.02%)</title><rect x="96.9856%" y="389" width="0.0173%" height="15" fill="rgb(238,13,15)" fg:x="162445" fg:w="29"/><text x="97.2356%" y="399.50"></text></g><g><title>__libc_recvmsg (26 samples, 0.02%)</title><rect x="96.9874%" y="373" width="0.0155%" height="15" fill="rgb(208,107,27)" fg:x="162448" fg:w="26"/><text x="97.2374%" y="383.50"></text></g><g><title>__recvmsg_syscall (26 samples, 0.02%)</title><rect x="96.9874%" y="357" width="0.0155%" height="15" fill="rgb(205,136,37)" fg:x="162448" fg:w="26"/><text x="97.2374%" y="367.50"></text></g><g><title>[unknown] (26 samples, 0.02%)</title><rect x="96.9874%" y="341" width="0.0155%" height="15" fill="rgb(250,205,27)" fg:x="162448" fg:w="26"/><text x="97.2374%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="96.9880%" y="325" width="0.0149%" height="15" fill="rgb(210,80,43)" fg:x="162449" fg:w="25"/><text x="97.2380%" y="335.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="96.9885%" y="309" width="0.0143%" height="15" fill="rgb(247,160,36)" fg:x="162450" fg:w="24"/><text x="97.2385%" y="319.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="96.9903%" y="293" width="0.0125%" height="15" fill="rgb(234,13,49)" fg:x="162453" fg:w="21"/><text x="97.2403%" y="303.50"></text></g><g><title>[unknown] (19 samples, 0.01%)</title><rect x="96.9915%" y="277" width="0.0113%" height="15" fill="rgb(234,122,0)" fg:x="162455" fg:w="19"/><text x="97.2415%" y="287.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (259 samples, 0.15%)</title><rect x="96.8668%" y="565" width="0.1546%" height="15" fill="rgb(207,146,38)" fg:x="162246" fg:w="259"/><text x="97.1168%" y="575.50"></text></g><g><title>winit::window::Window::inner_size (142 samples, 0.08%)</title><rect x="96.9366%" y="549" width="0.0848%" height="15" fill="rgb(207,177,25)" fg:x="162363" fg:w="142"/><text x="97.1866%" y="559.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (142 samples, 0.08%)</title><rect x="96.9366%" y="533" width="0.0848%" height="15" fill="rgb(211,178,42)" fg:x="162363" fg:w="142"/><text x="97.1866%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (142 samples, 0.08%)</title><rect x="96.9366%" y="517" width="0.0848%" height="15" fill="rgb(230,69,54)" fg:x="162363" fg:w="142"/><text x="97.1866%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (141 samples, 0.08%)</title><rect x="96.9372%" y="501" width="0.0842%" height="15" fill="rgb(214,135,41)" fg:x="162364" fg:w="141"/><text x="97.1872%" y="511.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (141 samples, 0.08%)</title><rect x="96.9372%" y="485" width="0.0842%" height="15" fill="rgb(237,67,25)" fg:x="162364" fg:w="141"/><text x="97.1872%" y="495.50"></text></g><g><title>XGetGeometry (140 samples, 0.08%)</title><rect x="96.9378%" y="469" width="0.0836%" height="15" fill="rgb(222,189,50)" fg:x="162365" fg:w="140"/><text x="97.1878%" y="479.50"></text></g><g><title>_XReply (136 samples, 0.08%)</title><rect x="96.9402%" y="453" width="0.0812%" height="15" fill="rgb(245,148,34)" fg:x="162369" fg:w="136"/><text x="97.1902%" y="463.50"></text></g><g><title>xcb_wait_for_reply64 (61 samples, 0.04%)</title><rect x="96.9850%" y="437" width="0.0364%" height="15" fill="rgb(222,29,6)" fg:x="162444" fg:w="61"/><text x="97.2350%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (61 samples, 0.04%)</title><rect x="96.9850%" y="421" width="0.0364%" height="15" fill="rgb(221,189,43)" fg:x="162444" fg:w="61"/><text x="97.2350%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (60 samples, 0.04%)</title><rect x="96.9856%" y="405" width="0.0358%" height="15" fill="rgb(207,36,27)" fg:x="162445" fg:w="60"/><text x="97.2356%" y="415.50"></text></g><g><title>__GI___poll (31 samples, 0.02%)</title><rect x="97.0029%" y="389" width="0.0185%" height="15" fill="rgb(217,90,24)" fg:x="162474" fg:w="31"/><text x="97.2529%" y="399.50"></text></g><g><title>[unknown] (31 samples, 0.02%)</title><rect x="97.0029%" y="373" width="0.0185%" height="15" fill="rgb(224,66,35)" fg:x="162474" fg:w="31"/><text x="97.2529%" y="383.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="97.0047%" y="357" width="0.0167%" height="15" fill="rgb(221,13,50)" fg:x="162477" fg:w="28"/><text x="97.2547%" y="367.50"></text></g><g><title>[unknown] (28 samples, 0.02%)</title><rect x="97.0047%" y="341" width="0.0167%" height="15" fill="rgb(236,68,49)" fg:x="162477" fg:w="28"/><text x="97.2547%" y="351.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="97.0065%" y="325" width="0.0149%" height="15" fill="rgb(229,146,28)" fg:x="162480" fg:w="25"/><text x="97.2565%" y="335.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="97.0065%" y="309" width="0.0149%" height="15" fill="rgb(225,31,38)" fg:x="162480" fg:w="25"/><text x="97.2565%" y="319.50"></text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="97.0071%" y="293" width="0.0143%" height="15" fill="rgb(250,208,3)" fg:x="162481" fg:w="24"/><text x="97.2571%" y="303.50"></text></g><g><title>[unknown] (23 samples, 0.01%)</title><rect x="97.0077%" y="277" width="0.0137%" height="15" fill="rgb(246,54,23)" fg:x="162482" fg:w="23"/><text x="97.2577%" y="287.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="97.0088%" y="261" width="0.0125%" height="15" fill="rgb(243,76,11)" fg:x="162484" fg:w="21"/><text x="97.2588%" y="271.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="97.0088%" y="245" width="0.0125%" height="15" fill="rgb(245,21,50)" fg:x="162484" fg:w="21"/><text x="97.2588%" y="255.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="97.0088%" y="229" width="0.0125%" height="15" fill="rgb(228,9,43)" fg:x="162484" fg:w="21"/><text x="97.2588%" y="239.50"></text></g><g><title>core::mem::drop (38 samples, 0.02%)</title><rect x="97.0226%" y="549" width="0.0227%" height="15" fill="rgb(208,100,47)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (38 samples, 0.02%)</title><rect x="97.0226%" y="533" width="0.0227%" height="15" fill="rgb(232,26,8)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="543.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="97.0226%" y="517" width="0.0227%" height="15" fill="rgb(216,166,38)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="527.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (38 samples, 0.02%)</title><rect x="97.0226%" y="501" width="0.0227%" height="15" fill="rgb(251,202,51)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="511.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (38 samples, 0.02%)</title><rect x="97.0226%" y="485" width="0.0227%" height="15" fill="rgb(254,216,34)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="495.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (38 samples, 0.02%)</title><rect x="97.0226%" y="469" width="0.0227%" height="15" fill="rgb(251,32,27)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="479.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (38 samples, 0.02%)</title><rect x="97.0226%" y="453" width="0.0227%" height="15" fill="rgb(208,127,28)" fg:x="162507" fg:w="38"/><text x="97.2726%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (120 samples, 0.07%)</title><rect x="97.3229%" y="277" width="0.0716%" height="15" fill="rgb(224,137,22)" fg:x="163010" fg:w="120"/><text x="97.5729%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (133 samples, 0.08%)</title><rect x="97.3169%" y="293" width="0.0794%" height="15" fill="rgb(254,70,32)" fg:x="163000" fg:w="133"/><text x="97.5669%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (137 samples, 0.08%)</title><rect x="97.3157%" y="309" width="0.0818%" height="15" fill="rgb(229,75,37)" fg:x="162998" fg:w="137"/><text x="97.5657%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (519 samples, 0.31%)</title><rect x="97.0894%" y="325" width="0.3099%" height="15" fill="rgb(252,64,23)" fg:x="162619" fg:w="519"/><text x="97.3394%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (532 samples, 0.32%)</title><rect x="97.0835%" y="357" width="0.3176%" height="15" fill="rgb(232,162,48)" fg:x="162609" fg:w="532"/><text x="97.3335%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (524 samples, 0.31%)</title><rect x="97.0883%" y="341" width="0.3128%" height="15" fill="rgb(246,160,12)" fg:x="162617" fg:w="524"/><text x="97.3383%" y="351.50"></text></g><g><title>ash::device::Device::queue_submit (560 samples, 0.33%)</title><rect x="97.0674%" y="469" width="0.3343%" height="15" fill="rgb(247,166,0)" fg:x="162582" fg:w="560"/><text x="97.3174%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (560 samples, 0.33%)</title><rect x="97.0674%" y="453" width="0.3343%" height="15" fill="rgb(249,219,21)" fg:x="162582" fg:w="560"/><text x="97.3174%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (556 samples, 0.33%)</title><rect x="97.0697%" y="437" width="0.3320%" height="15" fill="rgb(205,209,3)" fg:x="162586" fg:w="556"/><text x="97.3197%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (554 samples, 0.33%)</title><rect x="97.0709%" y="421" width="0.3308%" height="15" fill="rgb(243,44,1)" fg:x="162588" fg:w="554"/><text x="97.3209%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (553 samples, 0.33%)</title><rect x="97.0715%" y="405" width="0.3302%" height="15" fill="rgb(206,159,16)" fg:x="162589" fg:w="553"/><text x="97.3215%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (545 samples, 0.33%)</title><rect x="97.0763%" y="389" width="0.3254%" height="15" fill="rgb(244,77,30)" fg:x="162597" fg:w="545"/><text x="97.3263%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (539 samples, 0.32%)</title><rect x="97.0799%" y="373" width="0.3218%" height="15" fill="rgb(218,69,12)" fg:x="162603" fg:w="539"/><text x="97.3299%" y="383.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (563 samples, 0.34%)</title><rect x="97.0662%" y="485" width="0.3361%" height="15" fill="rgb(212,87,7)" fg:x="162580" fg:w="563"/><text x="97.3162%" y="495.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (24 samples, 0.01%)</title><rect x="97.4262%" y="469" width="0.0143%" height="15" fill="rgb(245,114,25)" fg:x="163183" fg:w="24"/><text x="97.6762%" y="479.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (24 samples, 0.01%)</title><rect x="97.4262%" y="453" width="0.0143%" height="15" fill="rgb(210,61,42)" fg:x="163183" fg:w="24"/><text x="97.6762%" y="463.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (31 samples, 0.02%)</title><rect x="97.4411%" y="469" width="0.0185%" height="15" fill="rgb(211,52,33)" fg:x="163208" fg:w="31"/><text x="97.6911%" y="479.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (20 samples, 0.01%)</title><rect x="97.4477%" y="453" width="0.0119%" height="15" fill="rgb(234,58,33)" fg:x="163219" fg:w="20"/><text x="97.6977%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (20 samples, 0.01%)</title><rect x="97.4477%" y="437" width="0.0119%" height="15" fill="rgb(220,115,36)" fg:x="163219" fg:w="20"/><text x="97.6977%" y="447.50"></text></g><g><title>ash::device::Device::reset_command_pool (18 samples, 0.01%)</title><rect x="97.4489%" y="421" width="0.0107%" height="15" fill="rgb(243,153,54)" fg:x="163221" fg:w="18"/><text x="97.6989%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.01%)</title><rect x="97.4489%" y="405" width="0.0107%" height="15" fill="rgb(251,47,18)" fg:x="163221" fg:w="18"/><text x="97.6989%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.01%)</title><rect x="97.4489%" y="389" width="0.0107%" height="15" fill="rgb(242,102,42)" fg:x="163221" fg:w="18"/><text x="97.6989%" y="399.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (19 samples, 0.01%)</title><rect x="97.4596%" y="469" width="0.0113%" height="15" fill="rgb(234,31,38)" fg:x="163239" fg:w="19"/><text x="97.7096%" y="479.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (80 samples, 0.05%)</title><rect x="97.4262%" y="485" width="0.0478%" height="15" fill="rgb(221,117,51)" fg:x="163183" fg:w="80"/><text x="97.6762%" y="495.50"></text></g><g><title>wgpu::Queue::submit (715 samples, 0.43%)</title><rect x="97.0578%" y="549" width="0.4269%" height="15" fill="rgb(212,20,18)" fg:x="162566" fg:w="715"/><text x="97.3078%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (715 samples, 0.43%)</title><rect x="97.0578%" y="533" width="0.4269%" height="15" fill="rgb(245,133,36)" fg:x="162566" fg:w="715"/><text x="97.3078%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (714 samples, 0.43%)</title><rect x="97.0584%" y="517" width="0.4263%" height="15" fill="rgb(212,6,19)" fg:x="162567" fg:w="714"/><text x="97.3084%" y="527.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (713 samples, 0.43%)</title><rect x="97.0590%" y="501" width="0.4257%" height="15" fill="rgb(218,1,36)" fg:x="162568" fg:w="713"/><text x="97.3090%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.01%)</title><rect x="97.6578%" y="197" width="0.0107%" height="15" fill="rgb(246,84,54)" fg:x="163571" fg:w="18"/><text x="97.9078%" y="207.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (35 samples, 0.02%)</title><rect x="97.6483%" y="213" width="0.0209%" height="15" fill="rgb(242,110,6)" fg:x="163555" fg:w="35"/><text x="97.8983%" y="223.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (62 samples, 0.04%)</title><rect x="97.6328%" y="229" width="0.0370%" height="15" fill="rgb(214,47,5)" fg:x="163529" fg:w="62"/><text x="97.8828%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (84 samples, 0.05%)</title><rect x="97.6202%" y="245" width="0.0502%" height="15" fill="rgb(218,159,25)" fg:x="163508" fg:w="84"/><text x="97.8702%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (176 samples, 0.11%)</title><rect x="97.5665%" y="261" width="0.1051%" height="15" fill="rgb(215,211,28)" fg:x="163418" fg:w="176"/><text x="97.8165%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (199 samples, 0.12%)</title><rect x="97.5545%" y="293" width="0.1188%" height="15" fill="rgb(238,59,32)" fg:x="163398" fg:w="199"/><text x="97.8045%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (193 samples, 0.12%)</title><rect x="97.5581%" y="277" width="0.1152%" height="15" fill="rgb(226,82,3)" fg:x="163404" fg:w="193"/><text x="97.8081%" y="287.50"></text></g><g><title>__GI___ioctl (1,547 samples, 0.92%)</title><rect x="97.6733%" y="293" width="0.9236%" height="15" fill="rgb(240,164,32)" fg:x="163597" fg:w="1547"/><text x="97.9233%" y="303.50"></text></g><g><title>[unknown] (1,547 samples, 0.92%)</title><rect x="97.6733%" y="277" width="0.9236%" height="15" fill="rgb(232,46,7)" fg:x="163597" fg:w="1547"/><text x="97.9233%" y="287.50"></text></g><g><title>[unknown] (171 samples, 0.10%)</title><rect x="98.4949%" y="261" width="0.1021%" height="15" fill="rgb(229,129,53)" fg:x="164973" fg:w="171"/><text x="98.7449%" y="271.50"></text></g><g><title>[unknown] (59 samples, 0.04%)</title><rect x="98.5617%" y="245" width="0.0352%" height="15" fill="rgb(234,188,29)" fg:x="165085" fg:w="59"/><text x="98.8117%" y="255.50"></text></g><g><title>[unknown] (39 samples, 0.02%)</title><rect x="98.5737%" y="229" width="0.0233%" height="15" fill="rgb(246,141,4)" fg:x="165105" fg:w="39"/><text x="98.8237%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,760 samples, 1.05%)</title><rect x="97.5474%" y="309" width="1.0508%" height="15" fill="rgb(229,23,39)" fg:x="163386" fg:w="1760"/><text x="97.7974%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,815 samples, 1.08%)</title><rect x="97.5175%" y="341" width="1.0836%" height="15" fill="rgb(206,12,3)" fg:x="163336" fg:w="1815"/><text x="97.7675%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,777 samples, 1.06%)</title><rect x="97.5402%" y="325" width="1.0609%" height="15" fill="rgb(252,226,20)" fg:x="163374" fg:w="1777"/><text x="97.7902%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,845 samples, 1.10%)</title><rect x="97.5002%" y="373" width="1.1015%" height="15" fill="rgb(216,123,35)" fg:x="163307" fg:w="1845"/><text x="97.7502%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,833 samples, 1.09%)</title><rect x="97.5074%" y="357" width="1.0944%" height="15" fill="rgb(212,68,40)" fg:x="163319" fg:w="1833"/><text x="97.7574%" y="367.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1,877 samples, 1.12%)</title><rect x="97.4877%" y="485" width="1.1206%" height="15" fill="rgb(254,125,32)" fg:x="163286" fg:w="1877"/><text x="97.7377%" y="495.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1,876 samples, 1.12%)</title><rect x="97.4883%" y="469" width="1.1200%" height="15" fill="rgb(253,97,22)" fg:x="163287" fg:w="1876"/><text x="97.7383%" y="479.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (1,876 samples, 1.12%)</title><rect x="97.4883%" y="453" width="1.1200%" height="15" fill="rgb(241,101,14)" fg:x="163287" fg:w="1876"/><text x="97.7383%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,872 samples, 1.12%)</title><rect x="97.4907%" y="437" width="1.1177%" height="15" fill="rgb(238,103,29)" fg:x="163291" fg:w="1872"/><text x="97.7407%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,870 samples, 1.12%)</title><rect x="97.4919%" y="421" width="1.1165%" height="15" fill="rgb(233,195,47)" fg:x="163293" fg:w="1870"/><text x="97.7419%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,869 samples, 1.12%)</title><rect x="97.4924%" y="405" width="1.1159%" height="15" fill="rgb(246,218,30)" fg:x="163294" fg:w="1869"/><text x="97.7424%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,861 samples, 1.11%)</title><rect x="97.4972%" y="389" width="1.1111%" height="15" fill="rgb(219,145,47)" fg:x="163302" fg:w="1861"/><text x="97.7472%" y="399.50"></text></g><g><title>wgpu::SurfaceTexture::present (1,889 samples, 1.13%)</title><rect x="97.4859%" y="549" width="1.1278%" height="15" fill="rgb(243,12,26)" fg:x="163283" fg:w="1889"/><text x="97.7359%" y="559.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (1,889 samples, 1.13%)</title><rect x="97.4859%" y="533" width="1.1278%" height="15" fill="rgb(214,87,16)" fg:x="163283" fg:w="1889"/><text x="97.7359%" y="543.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (1,889 samples, 1.13%)</title><rect x="97.4859%" y="517" width="1.1278%" height="15" fill="rgb(208,99,42)" fg:x="163283" fg:w="1889"/><text x="97.7359%" y="527.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1,888 samples, 1.13%)</title><rect x="97.4865%" y="501" width="1.1272%" height="15" fill="rgb(253,99,2)" fg:x="163284" fg:w="1888"/><text x="97.7365%" y="511.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (2,668 samples, 1.59%)</title><rect x="97.0214%" y="565" width="1.5929%" height="15" fill="rgb(220,168,23)" fg:x="162505" fg:w="2668"/><text x="97.2714%" y="575.50"></text></g><g><title>ggez::event::run (155,899 samples, 93.08%)</title><rect x="5.5489%" y="693" width="93.0774%" height="15" fill="rgb(242,38,24)" fg:x="9294" fg:w="155899"/><text x="5.7989%" y="703.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (155,899 samples, 93.08%)</title><rect x="5.5489%" y="677" width="93.0774%" height="15" fill="rgb(225,182,9)" fg:x="9294" fg:w="155899"/><text x="5.7989%" y="687.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (155,899 samples, 93.08%)</title><rect x="5.5489%" y="661" width="93.0774%" height="15" fill="rgb(243,178,37)" fg:x="9294" fg:w="155899"/><text x="5.7989%" y="671.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (155,899 samples, 93.08%)</title><rect x="5.5489%" y="645" width="93.0774%" height="15" fill="rgb(232,139,19)" fg:x="9294" fg:w="155899"/><text x="5.7989%" y="655.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (155,899 samples, 93.08%)</title><rect x="5.5489%" y="629" width="93.0774%" height="15" fill="rgb(225,201,24)" fg:x="9294" fg:w="155899"/><text x="5.7989%" y="639.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (155,899 samples, 93.08%)</title><rect x="5.5489%" y="613" width="93.0774%" height="15" fill="rgb(221,47,46)" fg:x="9294" fg:w="155899"/><text x="5.7989%" y="623.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (155,883 samples, 93.07%)</title><rect x="5.5584%" y="597" width="93.0678%" height="15" fill="rgb(249,23,13)" fg:x="9310" fg:w="155883"/><text x="5.8084%" y="607.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (155,883 samples, 93.07%)</title><rect x="5.5584%" y="581" width="93.0678%" height="15" fill="rgb(219,9,5)" fg:x="9310" fg:w="155883"/><text x="5.8084%" y="591.50">ggez::event::run::{{closure}}</text></g><g><title>neuralang::main (155,987 samples, 93.13%)</title><rect x="5.4969%" y="725" width="93.1299%" height="15" fill="rgb(254,171,16)" fg:x="9207" fg:w="155987"/><text x="5.7469%" y="735.50">neuralang::main</text></g><g><title>neuralang::run (155,987 samples, 93.13%)</title><rect x="5.4969%" y="709" width="93.1299%" height="15" fill="rgb(230,171,20)" fg:x="9207" fg:w="155987"/><text x="5.7469%" y="719.50">neuralang::run</text></g><g><title>slotmap::KeyData::new (109 samples, 0.07%)</title><rect x="98.6268%" y="725" width="0.0651%" height="15" fill="rgb(210,71,41)" fg:x="165194" fg:w="109"/><text x="98.8768%" y="735.50"></text></g><g><title>wgpu::Instance::new (26 samples, 0.02%)</title><rect x="98.7014%" y="725" width="0.0155%" height="15" fill="rgb(206,173,20)" fg:x="165319" fg:w="26"/><text x="98.9514%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (26 samples, 0.02%)</title><rect x="98.7014%" y="709" width="0.0155%" height="15" fill="rgb(233,88,34)" fg:x="165319" fg:w="26"/><text x="98.9514%" y="719.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (26 samples, 0.02%)</title><rect x="98.7014%" y="693" width="0.0155%" height="15" fill="rgb(223,209,46)" fg:x="165319" fg:w="26"/><text x="98.9514%" y="703.50"></text></g><g><title>wgpu_core::instance::Instance::new (26 samples, 0.02%)</title><rect x="98.7014%" y="677" width="0.0155%" height="15" fill="rgb(250,43,18)" fg:x="165319" fg:w="26"/><text x="98.9514%" y="687.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (26 samples, 0.02%)</title><rect x="98.7014%" y="661" width="0.0155%" height="15" fill="rgb(208,13,10)" fg:x="165319" fg:w="26"/><text x="98.9514%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (26 samples, 0.02%)</title><rect x="98.7014%" y="645" width="0.0155%" height="15" fill="rgb(212,200,36)" fg:x="165319" fg:w="26"/><text x="98.9514%" y="655.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (17 samples, 0.01%)</title><rect x="98.7068%" y="629" width="0.0101%" height="15" fill="rgb(225,90,30)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="639.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (17 samples, 0.01%)</title><rect x="98.7068%" y="613" width="0.0101%" height="15" fill="rgb(236,182,39)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="623.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (17 samples, 0.01%)</title><rect x="98.7068%" y="597" width="0.0101%" height="15" fill="rgb(212,144,35)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="607.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (17 samples, 0.01%)</title><rect x="98.7068%" y="581" width="0.0101%" height="15" fill="rgb(228,63,44)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="591.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (17 samples, 0.01%)</title><rect x="98.7068%" y="565" width="0.0101%" height="15" fill="rgb(228,109,6)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (17 samples, 0.01%)</title><rect x="98.7068%" y="549" width="0.0101%" height="15" fill="rgb(238,117,24)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="559.50"></text></g><g><title>[libvulkan.so.1.3.204] (17 samples, 0.01%)</title><rect x="98.7068%" y="533" width="0.0101%" height="15" fill="rgb(242,26,26)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="543.50"></text></g><g><title>___dlopen (17 samples, 0.01%)</title><rect x="98.7068%" y="517" width="0.0101%" height="15" fill="rgb(221,92,48)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="527.50"></text></g><g><title>dlopen_implementation (17 samples, 0.01%)</title><rect x="98.7068%" y="501" width="0.0101%" height="15" fill="rgb(209,209,32)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="511.50"></text></g><g><title>_dlerror_run (17 samples, 0.01%)</title><rect x="98.7068%" y="485" width="0.0101%" height="15" fill="rgb(221,70,22)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="495.50"></text></g><g><title>__GI__dl_catch_error (17 samples, 0.01%)</title><rect x="98.7068%" y="469" width="0.0101%" height="15" fill="rgb(248,145,5)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="479.50"></text></g><g><title>__GI__dl_catch_exception (17 samples, 0.01%)</title><rect x="98.7068%" y="453" width="0.0101%" height="15" fill="rgb(226,116,26)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="463.50"></text></g><g><title>dlopen_doit (17 samples, 0.01%)</title><rect x="98.7068%" y="437" width="0.0101%" height="15" fill="rgb(244,5,17)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="447.50"></text></g><g><title>_dl_open (17 samples, 0.01%)</title><rect x="98.7068%" y="421" width="0.0101%" height="15" fill="rgb(252,159,33)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="431.50"></text></g><g><title>__GI__dl_catch_exception (17 samples, 0.01%)</title><rect x="98.7068%" y="405" width="0.0101%" height="15" fill="rgb(206,71,0)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="415.50"></text></g><g><title>dl_open_worker (17 samples, 0.01%)</title><rect x="98.7068%" y="389" width="0.0101%" height="15" fill="rgb(233,118,54)" fg:x="165328" fg:w="17"/><text x="98.9568%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (18 samples, 0.01%)</title><rect x="98.7379%" y="437" width="0.0107%" height="15" fill="rgb(234,83,48)" fg:x="165380" fg:w="18"/><text x="98.9879%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.01%)</title><rect x="98.7379%" y="469" width="0.0149%" height="15" fill="rgb(228,3,54)" fg:x="165380" fg:w="25"/><text x="98.9879%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.01%)</title><rect x="98.7379%" y="453" width="0.0149%" height="15" fill="rgb(226,155,13)" fg:x="165380" fg:w="25"/><text x="98.9879%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (43 samples, 0.03%)</title><rect x="98.7379%" y="485" width="0.0257%" height="15" fill="rgb(241,28,37)" fg:x="165380" fg:w="43"/><text x="98.9879%" y="495.50"></text></g><g><title>__GI___ioctl (18 samples, 0.01%)</title><rect x="98.7528%" y="469" width="0.0107%" height="15" fill="rgb(233,93,10)" fg:x="165405" fg:w="18"/><text x="99.0028%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.01%)</title><rect x="98.7528%" y="453" width="0.0107%" height="15" fill="rgb(225,113,19)" fg:x="165405" fg:w="18"/><text x="99.0028%" y="463.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (44 samples, 0.03%)</title><rect x="98.7379%" y="725" width="0.0263%" height="15" fill="rgb(241,2,18)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="735.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (44 samples, 0.03%)</title><rect x="98.7379%" y="709" width="0.0263%" height="15" fill="rgb(228,207,21)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="719.50"></text></g><g><title>ash::instance::Instance::create_device (44 samples, 0.03%)</title><rect x="98.7379%" y="693" width="0.0263%" height="15" fill="rgb(213,211,35)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="703.50"></text></g><g><title>vkCreateDevice (44 samples, 0.03%)</title><rect x="98.7379%" y="677" width="0.0263%" height="15" fill="rgb(209,83,10)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (44 samples, 0.03%)</title><rect x="98.7379%" y="661" width="0.0263%" height="15" fill="rgb(209,164,1)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="671.50"></text></g><g><title>[libvulkan.so.1.3.204] (44 samples, 0.03%)</title><rect x="98.7379%" y="645" width="0.0263%" height="15" fill="rgb(213,184,43)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="655.50"></text></g><g><title>[libvulkan.so.1.3.204] (44 samples, 0.03%)</title><rect x="98.7379%" y="629" width="0.0263%" height="15" fill="rgb(231,61,34)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="613" width="0.0263%" height="15" fill="rgb(235,75,3)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="597" width="0.0263%" height="15" fill="rgb(220,106,47)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="581" width="0.0263%" height="15" fill="rgb(210,196,33)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="565" width="0.0263%" height="15" fill="rgb(229,154,42)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="549" width="0.0263%" height="15" fill="rgb(228,114,26)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="533" width="0.0263%" height="15" fill="rgb(208,144,1)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="517" width="0.0263%" height="15" fill="rgb(239,112,37)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (44 samples, 0.03%)</title><rect x="98.7379%" y="501" width="0.0263%" height="15" fill="rgb(210,96,50)" fg:x="165380" fg:w="44"/><text x="98.9879%" y="511.50"></text></g><g><title>[unknown] (160,822 samples, 96.02%)</title><rect x="2.7601%" y="741" width="96.0166%" height="15" fill="rgb(222,178,2)" fg:x="4623" fg:w="160822"/><text x="3.0101%" y="751.50">[unknown]</text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="98.8155%" y="565" width="0.0448%" height="15" fill="rgb(226,74,18)" fg:x="165510" fg:w="75"/><text x="99.0655%" y="575.50"></text></g><g><title>[unknown] (70 samples, 0.04%)</title><rect x="98.8185%" y="549" width="0.0418%" height="15" fill="rgb(225,67,54)" fg:x="165515" fg:w="70"/><text x="99.0685%" y="559.50"></text></g><g><title>[unknown] (68 samples, 0.04%)</title><rect x="98.8197%" y="533" width="0.0406%" height="15" fill="rgb(251,92,32)" fg:x="165517" fg:w="68"/><text x="99.0697%" y="543.50"></text></g><g><title>[unknown] (66 samples, 0.04%)</title><rect x="98.8209%" y="517" width="0.0394%" height="15" fill="rgb(228,149,22)" fg:x="165519" fg:w="66"/><text x="99.0709%" y="527.50"></text></g><g><title>[unknown] (65 samples, 0.04%)</title><rect x="98.8215%" y="501" width="0.0388%" height="15" fill="rgb(243,54,13)" fg:x="165520" fg:w="65"/><text x="99.0715%" y="511.50"></text></g><g><title>[unknown] (60 samples, 0.04%)</title><rect x="98.8244%" y="485" width="0.0358%" height="15" fill="rgb(243,180,28)" fg:x="165525" fg:w="60"/><text x="99.0744%" y="495.50"></text></g><g><title>[unknown] (51 samples, 0.03%)</title><rect x="98.8298%" y="469" width="0.0304%" height="15" fill="rgb(208,167,24)" fg:x="165534" fg:w="51"/><text x="99.0798%" y="479.50"></text></g><g><title>[unknown] (49 samples, 0.03%)</title><rect x="98.8310%" y="453" width="0.0293%" height="15" fill="rgb(245,73,45)" fg:x="165536" fg:w="49"/><text x="99.0810%" y="463.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="98.8376%" y="437" width="0.0227%" height="15" fill="rgb(237,203,48)" fg:x="165547" fg:w="38"/><text x="99.0876%" y="447.50"></text></g><g><title>[unknown] (30 samples, 0.02%)</title><rect x="98.8423%" y="421" width="0.0179%" height="15" fill="rgb(211,197,16)" fg:x="165555" fg:w="30"/><text x="99.0923%" y="431.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="98.8471%" y="405" width="0.0131%" height="15" fill="rgb(243,99,51)" fg:x="165563" fg:w="22"/><text x="99.0971%" y="415.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (81 samples, 0.05%)</title><rect x="98.8131%" y="613" width="0.0484%" height="15" fill="rgb(215,123,29)" fg:x="165506" fg:w="81"/><text x="99.0631%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common (81 samples, 0.05%)</title><rect x="98.8131%" y="597" width="0.0484%" height="15" fill="rgb(239,186,37)" fg:x="165506" fg:w="81"/><text x="99.0631%" y="607.50"></text></g><g><title>__futex_abstimed_wait_common64 (80 samples, 0.05%)</title><rect x="98.8137%" y="581" width="0.0478%" height="15" fill="rgb(252,136,39)" fg:x="165507" fg:w="80"/><text x="99.0637%" y="591.50"></text></g><g><title>___pthread_cond_timedwait64 (90 samples, 0.05%)</title><rect x="98.8113%" y="645" width="0.0537%" height="15" fill="rgb(223,213,32)" fg:x="165503" fg:w="90"/><text x="99.0613%" y="655.50"></text></g><g><title>__pthread_cond_wait_common (90 samples, 0.05%)</title><rect x="98.8113%" y="629" width="0.0537%" height="15" fill="rgb(233,115,5)" fg:x="165503" fg:w="90"/><text x="99.0613%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (143 samples, 0.09%)</title><rect x="98.7886%" y="661" width="0.0854%" height="15" fill="rgb(207,226,44)" fg:x="165465" fg:w="143"/><text x="99.0386%" y="671.50"></text></g><g><title>__GI___close (80 samples, 0.05%)</title><rect x="98.8740%" y="661" width="0.0478%" height="15" fill="rgb(208,126,0)" fg:x="165608" fg:w="80"/><text x="99.1240%" y="671.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="98.8770%" y="645" width="0.0448%" height="15" fill="rgb(244,66,21)" fg:x="165613" fg:w="75"/><text x="99.1270%" y="655.50"></text></g><g><title>[unknown] (66 samples, 0.04%)</title><rect x="98.8823%" y="629" width="0.0394%" height="15" fill="rgb(222,97,12)" fg:x="165622" fg:w="66"/><text x="99.1323%" y="639.50"></text></g><g><title>[unknown] (64 samples, 0.04%)</title><rect x="98.8835%" y="613" width="0.0382%" height="15" fill="rgb(219,213,19)" fg:x="165624" fg:w="64"/><text x="99.1335%" y="623.50"></text></g><g><title>[unknown] (55 samples, 0.03%)</title><rect x="98.8889%" y="597" width="0.0328%" height="15" fill="rgb(252,169,30)" fg:x="165633" fg:w="55"/><text x="99.1389%" y="607.50"></text></g><g><title>[unknown] (52 samples, 0.03%)</title><rect x="98.8907%" y="581" width="0.0310%" height="15" fill="rgb(206,32,51)" fg:x="165636" fg:w="52"/><text x="99.1407%" y="591.50"></text></g><g><title>[unknown] (46 samples, 0.03%)</title><rect x="98.8943%" y="565" width="0.0275%" height="15" fill="rgb(250,172,42)" fg:x="165642" fg:w="46"/><text x="99.1443%" y="575.50"></text></g><g><title>[unknown] (40 samples, 0.02%)</title><rect x="98.8979%" y="549" width="0.0239%" height="15" fill="rgb(209,34,43)" fg:x="165648" fg:w="40"/><text x="99.1479%" y="559.50"></text></g><g><title>[unknown] (38 samples, 0.02%)</title><rect x="98.8991%" y="533" width="0.0227%" height="15" fill="rgb(223,11,35)" fg:x="165650" fg:w="38"/><text x="99.1491%" y="543.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="98.9026%" y="517" width="0.0191%" height="15" fill="rgb(251,219,26)" fg:x="165656" fg:w="32"/><text x="99.1526%" y="527.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="98.9092%" y="501" width="0.0125%" height="15" fill="rgb(231,119,3)" fg:x="165667" fg:w="21"/><text x="99.1592%" y="511.50"></text></g><g><title>__GI___libc_read (632 samples, 0.38%)</title><rect x="98.9218%" y="661" width="0.3773%" height="15" fill="rgb(216,97,11)" fg:x="165688" fg:w="632"/><text x="99.1718%" y="671.50"></text></g><g><title>__GI___libc_read (632 samples, 0.38%)</title><rect x="98.9218%" y="645" width="0.3773%" height="15" fill="rgb(223,59,9)" fg:x="165688" fg:w="632"/><text x="99.1718%" y="655.50"></text></g><g><title>[unknown] (631 samples, 0.38%)</title><rect x="98.9223%" y="629" width="0.3767%" height="15" fill="rgb(233,93,31)" fg:x="165689" fg:w="631"/><text x="99.1723%" y="639.50"></text></g><g><title>[unknown] (619 samples, 0.37%)</title><rect x="98.9295%" y="613" width="0.3696%" height="15" fill="rgb(239,81,33)" fg:x="165701" fg:w="619"/><text x="99.1795%" y="623.50"></text></g><g><title>[unknown] (617 samples, 0.37%)</title><rect x="98.9307%" y="597" width="0.3684%" height="15" fill="rgb(213,120,34)" fg:x="165703" fg:w="617"/><text x="99.1807%" y="607.50"></text></g><g><title>[unknown] (609 samples, 0.36%)</title><rect x="98.9355%" y="581" width="0.3636%" height="15" fill="rgb(243,49,53)" fg:x="165711" fg:w="609"/><text x="99.1855%" y="591.50"></text></g><g><title>[unknown] (607 samples, 0.36%)</title><rect x="98.9367%" y="565" width="0.3624%" height="15" fill="rgb(247,216,33)" fg:x="165713" fg:w="607"/><text x="99.1867%" y="575.50"></text></g><g><title>[unknown] (600 samples, 0.36%)</title><rect x="98.9409%" y="549" width="0.3582%" height="15" fill="rgb(226,26,14)" fg:x="165720" fg:w="600"/><text x="99.1909%" y="559.50"></text></g><g><title>[unknown] (594 samples, 0.35%)</title><rect x="98.9444%" y="533" width="0.3546%" height="15" fill="rgb(215,49,53)" fg:x="165726" fg:w="594"/><text x="99.1944%" y="543.50"></text></g><g><title>[unknown] (592 samples, 0.35%)</title><rect x="98.9456%" y="517" width="0.3534%" height="15" fill="rgb(245,162,40)" fg:x="165728" fg:w="592"/><text x="99.1956%" y="527.50"></text></g><g><title>[unknown] (581 samples, 0.35%)</title><rect x="98.9522%" y="501" width="0.3469%" height="15" fill="rgb(229,68,17)" fg:x="165739" fg:w="581"/><text x="99.2022%" y="511.50"></text></g><g><title>[unknown] (474 samples, 0.28%)</title><rect x="99.0161%" y="485" width="0.2830%" height="15" fill="rgb(213,182,10)" fg:x="165846" fg:w="474"/><text x="99.2661%" y="495.50"></text></g><g><title>[unknown] (237 samples, 0.14%)</title><rect x="99.1576%" y="469" width="0.1415%" height="15" fill="rgb(245,125,30)" fg:x="166083" fg:w="237"/><text x="99.4076%" y="479.50"></text></g><g><title>[unknown] (167 samples, 0.10%)</title><rect x="99.1994%" y="453" width="0.0997%" height="15" fill="rgb(232,202,2)" fg:x="166153" fg:w="167"/><text x="99.4494%" y="463.50"></text></g><g><title>[unknown] (25 samples, 0.01%)</title><rect x="99.2842%" y="437" width="0.0149%" height="15" fill="rgb(237,140,51)" fg:x="166295" fg:w="25"/><text x="99.5342%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="99.2865%" y="421" width="0.0125%" height="15" fill="rgb(236,157,25)" fg:x="166299" fg:w="21"/><text x="99.5365%" y="431.50"></text></g><g><title>[unknown] (168 samples, 0.10%)</title><rect x="99.3056%" y="629" width="0.1003%" height="15" fill="rgb(219,209,0)" fg:x="166331" fg:w="168"/><text x="99.5556%" y="639.50"></text></g><g><title>[unknown] (160 samples, 0.10%)</title><rect x="99.3104%" y="613" width="0.0955%" height="15" fill="rgb(240,116,54)" fg:x="166339" fg:w="160"/><text x="99.5604%" y="623.50"></text></g><g><title>[unknown] (158 samples, 0.09%)</title><rect x="99.3116%" y="597" width="0.0943%" height="15" fill="rgb(216,10,36)" fg:x="166341" fg:w="158"/><text x="99.5616%" y="607.50"></text></g><g><title>[unknown] (145 samples, 0.09%)</title><rect x="99.3194%" y="581" width="0.0866%" height="15" fill="rgb(222,72,44)" fg:x="166354" fg:w="145"/><text x="99.5694%" y="591.50"></text></g><g><title>[unknown] (139 samples, 0.08%)</title><rect x="99.3230%" y="565" width="0.0830%" height="15" fill="rgb(232,159,9)" fg:x="166360" fg:w="139"/><text x="99.5730%" y="575.50"></text></g><g><title>[unknown] (125 samples, 0.07%)</title><rect x="99.3313%" y="549" width="0.0746%" height="15" fill="rgb(210,39,32)" fg:x="166374" fg:w="125"/><text x="99.5813%" y="559.50"></text></g><g><title>[unknown] (113 samples, 0.07%)</title><rect x="99.3385%" y="533" width="0.0675%" height="15" fill="rgb(216,194,45)" fg:x="166386" fg:w="113"/><text x="99.5885%" y="543.50"></text></g><g><title>[unknown] (108 samples, 0.06%)</title><rect x="99.3415%" y="517" width="0.0645%" height="15" fill="rgb(218,18,35)" fg:x="166391" fg:w="108"/><text x="99.5915%" y="527.50"></text></g><g><title>[unknown] (90 samples, 0.05%)</title><rect x="99.3522%" y="501" width="0.0537%" height="15" fill="rgb(207,83,51)" fg:x="166409" fg:w="90"/><text x="99.6022%" y="511.50"></text></g><g><title>[unknown] (81 samples, 0.05%)</title><rect x="99.3576%" y="485" width="0.0484%" height="15" fill="rgb(225,63,43)" fg:x="166418" fg:w="81"/><text x="99.6076%" y="495.50"></text></g><g><title>[unknown] (42 samples, 0.03%)</title><rect x="99.3809%" y="469" width="0.0251%" height="15" fill="rgb(207,57,36)" fg:x="166457" fg:w="42"/><text x="99.6309%" y="479.50"></text></g><g><title>[unknown] (32 samples, 0.02%)</title><rect x="99.3868%" y="453" width="0.0191%" height="15" fill="rgb(216,99,33)" fg:x="166467" fg:w="32"/><text x="99.6368%" y="463.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="99.3940%" y="437" width="0.0119%" height="15" fill="rgb(225,42,16)" fg:x="166479" fg:w="20"/><text x="99.6440%" y="447.50"></text></g><g><title>__GI___nanosleep (181 samples, 0.11%)</title><rect x="99.2991%" y="661" width="0.1081%" height="15" fill="rgb(220,201,45)" fg:x="166320" fg:w="181"/><text x="99.5491%" y="671.50"></text></g><g><title>__GI___clock_nanosleep (179 samples, 0.11%)</title><rect x="99.3003%" y="645" width="0.1069%" height="15" fill="rgb(225,33,4)" fg:x="166322" fg:w="179"/><text x="99.5503%" y="655.50"></text></g><g><title>[unknown] (361 samples, 0.22%)</title><rect x="99.4083%" y="645" width="0.2155%" height="15" fill="rgb(224,33,50)" fg:x="166503" fg:w="361"/><text x="99.6583%" y="655.50"></text></g><g><title>[unknown] (348 samples, 0.21%)</title><rect x="99.4161%" y="629" width="0.2078%" height="15" fill="rgb(246,198,51)" fg:x="166516" fg:w="348"/><text x="99.6661%" y="639.50"></text></g><g><title>[unknown] (343 samples, 0.20%)</title><rect x="99.4191%" y="613" width="0.2048%" height="15" fill="rgb(205,22,4)" fg:x="166521" fg:w="343"/><text x="99.6691%" y="623.50"></text></g><g><title>[unknown] (329 samples, 0.20%)</title><rect x="99.4274%" y="597" width="0.1964%" height="15" fill="rgb(206,3,8)" fg:x="166535" fg:w="329"/><text x="99.6774%" y="607.50"></text></g><g><title>[unknown] (318 samples, 0.19%)</title><rect x="99.4340%" y="581" width="0.1899%" height="15" fill="rgb(251,23,15)" fg:x="166546" fg:w="318"/><text x="99.6840%" y="591.50"></text></g><g><title>[unknown] (309 samples, 0.18%)</title><rect x="99.4394%" y="565" width="0.1845%" height="15" fill="rgb(252,88,28)" fg:x="166555" fg:w="309"/><text x="99.6894%" y="575.50"></text></g><g><title>[unknown] (284 samples, 0.17%)</title><rect x="99.4543%" y="549" width="0.1696%" height="15" fill="rgb(212,127,14)" fg:x="166580" fg:w="284"/><text x="99.7043%" y="559.50"></text></g><g><title>[unknown] (238 samples, 0.14%)</title><rect x="99.4818%" y="533" width="0.1421%" height="15" fill="rgb(247,145,37)" fg:x="166626" fg:w="238"/><text x="99.7318%" y="543.50"></text></g><g><title>[unknown] (208 samples, 0.12%)</title><rect x="99.4997%" y="517" width="0.1242%" height="15" fill="rgb(209,117,53)" fg:x="166656" fg:w="208"/><text x="99.7497%" y="527.50"></text></g><g><title>[unknown] (153 samples, 0.09%)</title><rect x="99.5325%" y="501" width="0.0913%" height="15" fill="rgb(212,90,42)" fg:x="166711" fg:w="153"/><text x="99.7825%" y="511.50"></text></g><g><title>[unknown] (105 samples, 0.06%)</title><rect x="99.5612%" y="485" width="0.0627%" height="15" fill="rgb(218,164,37)" fg:x="166759" fg:w="105"/><text x="99.8112%" y="495.50"></text></g><g><title>[unknown] (87 samples, 0.05%)</title><rect x="99.5719%" y="469" width="0.0519%" height="15" fill="rgb(246,65,34)" fg:x="166777" fg:w="87"/><text x="99.8219%" y="479.50"></text></g><g><title>[unknown] (75 samples, 0.04%)</title><rect x="99.5791%" y="453" width="0.0448%" height="15" fill="rgb(231,100,33)" fg:x="166789" fg:w="75"/><text x="99.8291%" y="463.50"></text></g><g><title>[unknown] (70 samples, 0.04%)</title><rect x="99.5821%" y="437" width="0.0418%" height="15" fill="rgb(228,126,14)" fg:x="166794" fg:w="70"/><text x="99.8321%" y="447.50"></text></g><g><title>[unknown] (41 samples, 0.02%)</title><rect x="99.5994%" y="421" width="0.0245%" height="15" fill="rgb(215,173,21)" fg:x="166823" fg:w="41"/><text x="99.8494%" y="431.50"></text></g><g><title>__libc_open64 (365 samples, 0.22%)</title><rect x="99.4077%" y="661" width="0.2179%" height="15" fill="rgb(210,6,40)" fg:x="166502" fg:w="365"/><text x="99.6577%" y="671.50"></text></g><g><title>_IO_strfile_read (19 samples, 0.01%)</title><rect x="99.6298%" y="645" width="0.0113%" height="15" fill="rgb(212,48,18)" fg:x="166874" fg:w="19"/><text x="99.8798%" y="655.50"></text></g><g><title>__sscanf (98 samples, 0.06%)</title><rect x="99.6257%" y="661" width="0.0585%" height="15" fill="rgb(230,214,11)" fg:x="166867" fg:w="98"/><text x="99.8757%" y="671.50"></text></g><g><title>__vfscanf_internal (72 samples, 0.04%)</title><rect x="99.6412%" y="645" width="0.0430%" height="15" fill="rgb(254,105,39)" fg:x="166893" fg:w="72"/><text x="99.8912%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,539 samples, 0.92%)</title><rect x="98.7767%" y="709" width="0.9188%" height="15" fill="rgb(245,158,5)" fg:x="165445" fg:w="1539"/><text x="99.0267%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,539 samples, 0.92%)</title><rect x="98.7767%" y="693" width="0.9188%" height="15" fill="rgb(249,208,11)" fg:x="165445" fg:w="1539"/><text x="99.0267%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,529 samples, 0.91%)</title><rect x="98.7826%" y="677" width="0.9129%" height="15" fill="rgb(210,39,28)" fg:x="165455" fg:w="1529"/><text x="99.0326%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21 samples, 0.01%)</title><rect x="99.6967%" y="693" width="0.0125%" height="15" fill="rgb(211,56,53)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21 samples, 0.01%)</title><rect x="99.6967%" y="677" width="0.0125%" height="15" fill="rgb(226,201,30)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (21 samples, 0.01%)</title><rect x="99.6967%" y="661" width="0.0125%" height="15" fill="rgb(239,101,34)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="671.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (21 samples, 0.01%)</title><rect x="99.6967%" y="645" width="0.0125%" height="15" fill="rgb(226,209,5)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="655.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.01%)</title><rect x="99.6967%" y="629" width="0.0125%" height="15" fill="rgb(250,105,47)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="639.50"></text></g><g><title>std::panicking::try (21 samples, 0.01%)</title><rect x="99.6967%" y="613" width="0.0125%" height="15" fill="rgb(230,72,3)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="623.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.01%)</title><rect x="99.6967%" y="597" width="0.0125%" height="15" fill="rgb(232,218,39)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.01%)</title><rect x="99.6967%" y="581" width="0.0125%" height="15" fill="rgb(248,166,6)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="591.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (21 samples, 0.01%)</title><rect x="99.6967%" y="565" width="0.0125%" height="15" fill="rgb(247,89,20)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 0.01%)</title><rect x="99.6967%" y="549" width="0.0125%" height="15" fill="rgb(248,130,54)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="559.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (21 samples, 0.01%)</title><rect x="99.6967%" y="533" width="0.0125%" height="15" fill="rgb(234,196,4)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="543.50"></text></g><g><title>gilrs::ff::server::run (21 samples, 0.01%)</title><rect x="99.6967%" y="517" width="0.0125%" height="15" fill="rgb(250,143,31)" fg:x="166986" fg:w="21"/><text x="99.9467%" y="527.50"></text></g><g><title>std::thread::sleep (18 samples, 0.01%)</title><rect x="99.6985%" y="501" width="0.0107%" height="15" fill="rgb(211,110,34)" fg:x="166989" fg:w="18"/><text x="99.9485%" y="511.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (18 samples, 0.01%)</title><rect x="99.6985%" y="485" width="0.0107%" height="15" fill="rgb(215,124,48)" fg:x="166989" fg:w="18"/><text x="99.9485%" y="495.50"></text></g><g><title>__GI___nanosleep (17 samples, 0.01%)</title><rect x="99.6991%" y="469" width="0.0101%" height="15" fill="rgb(216,46,13)" fg:x="166990" fg:w="17"/><text x="99.9491%" y="479.50"></text></g><g><title>__GI___clock_nanosleep (17 samples, 0.01%)</title><rect x="99.6991%" y="453" width="0.0101%" height="15" fill="rgb(205,184,25)" fg:x="166990" fg:w="17"/><text x="99.9491%" y="463.50"></text></g><g><title>__clone3 (1,563 samples, 0.93%)</title><rect x="98.7767%" y="741" width="0.9332%" height="15" fill="rgb(228,1,10)" fg:x="165445" fg:w="1563"/><text x="99.0267%" y="751.50"></text></g><g><title>start_thread (1,563 samples, 0.93%)</title><rect x="98.7767%" y="725" width="0.9332%" height="15" fill="rgb(213,116,27)" fg:x="165445" fg:w="1563"/><text x="99.0267%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (22 samples, 0.01%)</title><rect x="99.6967%" y="709" width="0.0131%" height="15" fill="rgb(241,95,50)" fg:x="166986" fg:w="22"/><text x="99.9467%" y="719.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (87 samples, 0.05%)</title><rect x="99.7212%" y="741" width="0.0519%" height="15" fill="rgb(238,48,32)" fg:x="167027" fg:w="87"/><text x="99.9712%" y="751.50"></text></g><g><title>neuralang (166,747 samples, 99.55%)</title><rect x="0.2352%" y="757" width="99.5540%" height="15" fill="rgb(235,113,49)" fg:x="394" fg:w="166747"/><text x="0.4852%" y="767.50">neuralang</text></g><g><title>[unknown] (24 samples, 0.01%)</title><rect x="99.8203%" y="469" width="0.0143%" height="15" fill="rgb(205,127,43)" fg:x="167193" fg:w="24"/><text x="100.0703%" y="479.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="99.8215%" y="453" width="0.0131%" height="15" fill="rgb(250,162,2)" fg:x="167195" fg:w="22"/><text x="100.0715%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.01%)</title><rect x="99.8215%" y="437" width="0.0131%" height="15" fill="rgb(220,13,41)" fg:x="167195" fg:w="22"/><text x="100.0715%" y="447.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="99.8227%" y="421" width="0.0119%" height="15" fill="rgb(249,221,25)" fg:x="167197" fg:w="20"/><text x="100.0727%" y="431.50"></text></g><g><title>[unknown] (20 samples, 0.01%)</title><rect x="99.8227%" y="405" width="0.0119%" height="15" fill="rgb(215,208,19)" fg:x="167197" fg:w="20"/><text x="100.0727%" y="415.50"></text></g><g><title>__GI___libc_write (25 samples, 0.01%)</title><rect x="99.8203%" y="501" width="0.0149%" height="15" fill="rgb(236,175,2)" fg:x="167193" fg:w="25"/><text x="100.0703%" y="511.50"></text></g><g><title>__GI___libc_write (25 samples, 0.01%)</title><rect x="99.8203%" y="485" width="0.0149%" height="15" fill="rgb(241,52,2)" fg:x="167193" fg:w="25"/><text x="100.0703%" y="495.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (36 samples, 0.02%)</title><rect x="99.8143%" y="517" width="0.0215%" height="15" fill="rgb(248,140,14)" fg:x="167183" fg:w="36"/><text x="100.0643%" y="527.50"></text></g><g><title>[libpulse.so.0.24.1] (41 samples, 0.02%)</title><rect x="99.8125%" y="533" width="0.0245%" height="15" fill="rgb(253,22,42)" fg:x="167180" fg:w="41"/><text x="100.0625%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (52 samples, 0.03%)</title><rect x="99.8107%" y="565" width="0.0310%" height="15" fill="rgb(234,61,47)" fg:x="167177" fg:w="52"/><text x="100.0607%" y="575.50"></text></g><g><title>pa_pdispatch_run (51 samples, 0.03%)</title><rect x="99.8113%" y="549" width="0.0304%" height="15" fill="rgb(208,226,15)" fg:x="167178" fg:w="51"/><text x="100.0613%" y="559.50"></text></g><g><title>[libpulsecommon-15.99.so] (64 samples, 0.04%)</title><rect x="99.8095%" y="581" width="0.0382%" height="15" fill="rgb(217,221,4)" fg:x="167175" fg:w="64"/><text x="100.0595%" y="591.50"></text></g><g><title>[libpulsecommon-15.99.so] (67 samples, 0.04%)</title><rect x="99.8084%" y="597" width="0.0400%" height="15" fill="rgb(212,174,34)" fg:x="167173" fg:w="67"/><text x="100.0584%" y="607.50"></text></g><g><title>[libpulsecommon-15.99.so] (90 samples, 0.05%)</title><rect x="99.8078%" y="613" width="0.0537%" height="15" fill="rgb(253,83,4)" fg:x="167172" fg:w="90"/><text x="100.0578%" y="623.50"></text></g><g><title>[libpulsecommon-15.99.so] (110 samples, 0.07%)</title><rect x="99.8054%" y="629" width="0.0657%" height="15" fill="rgb(250,195,49)" fg:x="167168" fg:w="110"/><text x="100.0554%" y="639.50"></text></g><g><title>pa_mainloop_dispatch (126 samples, 0.08%)</title><rect x="99.8012%" y="645" width="0.0752%" height="15" fill="rgb(241,192,25)" fg:x="167161" fg:w="126"/><text x="100.0512%" y="655.50"></text></g><g><title>__GI___poll (153 samples, 0.09%)</title><rect x="99.8818%" y="613" width="0.0913%" height="15" fill="rgb(208,124,10)" fg:x="167296" fg:w="153"/><text x="100.1318%" y="623.50"></text></g><g><title>[unknown] (151 samples, 0.09%)</title><rect x="99.8830%" y="597" width="0.0902%" height="15" fill="rgb(222,33,0)" fg:x="167298" fg:w="151"/><text x="100.1330%" y="607.50"></text></g><g><title>[unknown] (147 samples, 0.09%)</title><rect x="99.8854%" y="581" width="0.0878%" height="15" fill="rgb(234,209,28)" fg:x="167302" fg:w="147"/><text x="100.1354%" y="591.50"></text></g><g><title>[unknown] (145 samples, 0.09%)</title><rect x="99.8866%" y="565" width="0.0866%" height="15" fill="rgb(224,11,23)" fg:x="167304" fg:w="145"/><text x="100.1366%" y="575.50"></text></g><g><title>[unknown] (138 samples, 0.08%)</title><rect x="99.8907%" y="549" width="0.0824%" height="15" fill="rgb(232,99,1)" fg:x="167311" fg:w="138"/><text x="100.1407%" y="559.50"></text></g><g><title>[unknown] (128 samples, 0.08%)</title><rect x="99.8967%" y="533" width="0.0764%" height="15" fill="rgb(237,95,45)" fg:x="167321" fg:w="128"/><text x="100.1467%" y="543.50"></text></g><g><title>[unknown] (117 samples, 0.07%)</title><rect x="99.9033%" y="517" width="0.0699%" height="15" fill="rgb(208,109,11)" fg:x="167332" fg:w="117"/><text x="100.1533%" y="527.50"></text></g><g><title>[unknown] (95 samples, 0.06%)</title><rect x="99.9164%" y="501" width="0.0567%" height="15" fill="rgb(216,190,48)" fg:x="167354" fg:w="95"/><text x="100.1664%" y="511.50"></text></g><g><title>[unknown] (82 samples, 0.05%)</title><rect x="99.9242%" y="485" width="0.0490%" height="15" fill="rgb(251,171,36)" fg:x="167367" fg:w="82"/><text x="100.1742%" y="495.50"></text></g><g><title>[unknown] (79 samples, 0.05%)</title><rect x="99.9260%" y="469" width="0.0472%" height="15" fill="rgb(230,62,22)" fg:x="167370" fg:w="79"/><text x="100.1760%" y="479.50"></text></g><g><title>[unknown] (74 samples, 0.04%)</title><rect x="99.9290%" y="453" width="0.0442%" height="15" fill="rgb(225,114,35)" fg:x="167375" fg:w="74"/><text x="100.1790%" y="463.50"></text></g><g><title>[unknown] (68 samples, 0.04%)</title><rect x="99.9325%" y="437" width="0.0406%" height="15" fill="rgb(215,118,42)" fg:x="167381" fg:w="68"/><text x="100.1825%" y="447.50"></text></g><g><title>[unknown] (54 samples, 0.03%)</title><rect x="99.9409%" y="421" width="0.0322%" height="15" fill="rgb(243,119,21)" fg:x="167395" fg:w="54"/><text x="100.1909%" y="431.50"></text></g><g><title>[unknown] (48 samples, 0.03%)</title><rect x="99.9445%" y="405" width="0.0287%" height="15" fill="rgb(252,177,53)" fg:x="167401" fg:w="48"/><text x="100.1945%" y="415.50"></text></g><g><title>[unknown] (42 samples, 0.03%)</title><rect x="99.9481%" y="389" width="0.0251%" height="15" fill="rgb(237,209,29)" fg:x="167407" fg:w="42"/><text x="100.1981%" y="399.50"></text></g><g><title>pa_mainloop_poll (176 samples, 0.11%)</title><rect x="99.8764%" y="645" width="0.1051%" height="15" fill="rgb(212,65,23)" fg:x="167287" fg:w="176"/><text x="100.1264%" y="655.50"></text></g><g><title>[libpulse.so.0.24.1] (175 samples, 0.10%)</title><rect x="99.8770%" y="629" width="0.1045%" height="15" fill="rgb(230,222,46)" fg:x="167288" fg:w="175"/><text x="100.1270%" y="639.50"></text></g><g><title>pa_read (28 samples, 0.02%)</title><rect x="99.9821%" y="629" width="0.0167%" height="15" fill="rgb(215,135,32)" fg:x="167464" fg:w="28"/><text x="100.2321%" y="639.50"></text></g><g><title>__GI___libc_read (22 samples, 0.01%)</title><rect x="99.9857%" y="613" width="0.0131%" height="15" fill="rgb(246,101,22)" fg:x="167470" fg:w="22"/><text x="100.2357%" y="623.50"></text></g><g><title>__GI___libc_read (22 samples, 0.01%)</title><rect x="99.9857%" y="597" width="0.0131%" height="15" fill="rgb(206,107,13)" fg:x="167470" fg:w="22"/><text x="100.2357%" y="607.50"></text></g><g><title>[unknown] (21 samples, 0.01%)</title><rect x="99.9863%" y="581" width="0.0125%" height="15" fill="rgb(250,100,44)" fg:x="167471" fg:w="21"/><text x="100.2363%" y="591.50"></text></g><g><title>all (167,494 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(231,147,38)" fg:x="0" fg:w="167494"/><text x="0.2500%" y="783.50"></text></g><g><title>threaded-ml (348 samples, 0.21%)</title><rect x="99.7922%" y="757" width="0.2078%" height="15" fill="rgb(229,8,40)" fg:x="167146" fg:w="348"/><text x="100.0422%" y="767.50"></text></g><g><title>__clone3 (333 samples, 0.20%)</title><rect x="99.8012%" y="741" width="0.1988%" height="15" fill="rgb(221,135,30)" fg:x="167161" fg:w="333"/><text x="100.0512%" y="751.50"></text></g><g><title>start_thread (333 samples, 0.20%)</title><rect x="99.8012%" y="725" width="0.1988%" height="15" fill="rgb(249,193,18)" fg:x="167161" fg:w="333"/><text x="100.0512%" y="735.50"></text></g><g><title>[libpulsecommon-15.99.so] (333 samples, 0.20%)</title><rect x="99.8012%" y="709" width="0.1988%" height="15" fill="rgb(209,133,39)" fg:x="167161" fg:w="333"/><text x="100.0512%" y="719.50"></text></g><g><title>[libpulse.so.0.24.1] (333 samples, 0.20%)</title><rect x="99.8012%" y="693" width="0.1988%" height="15" fill="rgb(232,100,14)" fg:x="167161" fg:w="333"/><text x="100.0512%" y="703.50"></text></g><g><title>pa_mainloop_run (333 samples, 0.20%)</title><rect x="99.8012%" y="677" width="0.1988%" height="15" fill="rgb(224,185,1)" fg:x="167161" fg:w="333"/><text x="100.0512%" y="687.50"></text></g><g><title>pa_mainloop_iterate (333 samples, 0.20%)</title><rect x="99.8012%" y="661" width="0.1988%" height="15" fill="rgb(223,139,8)" fg:x="167161" fg:w="333"/><text x="100.0512%" y="671.50"></text></g><g><title>pa_mainloop_prepare (31 samples, 0.02%)</title><rect x="99.9815%" y="645" width="0.0185%" height="15" fill="rgb(232,213,38)" fg:x="167463" fg:w="31"/><text x="100.2315%" y="655.50"></text></g></svg></svg>