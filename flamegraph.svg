<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="96173"><g><title>[vkcf]_Analysis (11 samples, 0.01%)</title><rect x="0.0000%" y="773" width="0.0114%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="11"/><text x="0.2500%" y="783.50"></text></g><g><title>___pthread_cond_timedwait64 (18 samples, 0.02%)</title><rect x="0.0135%" y="677" width="0.0187%" height="15" fill="rgb(217,0,24)" fg:x="13" fg:w="18"/><text x="0.2635%" y="687.50"></text></g><g><title>__pthread_cond_wait_common (18 samples, 0.02%)</title><rect x="0.0135%" y="661" width="0.0187%" height="15" fill="rgb(221,193,54)" fg:x="13" fg:w="18"/><text x="0.2635%" y="671.50"></text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (18 samples, 0.02%)</title><rect x="0.0135%" y="645" width="0.0187%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="18"/><text x="0.2635%" y="655.50"></text></g><g><title>__futex_abstimed_wait_common (18 samples, 0.02%)</title><rect x="0.0135%" y="629" width="0.0187%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="18"/><text x="0.2635%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common64 (18 samples, 0.02%)</title><rect x="0.0135%" y="613" width="0.0187%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="18"/><text x="0.2635%" y="623.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.0135%" y="597" width="0.0187%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="18"/><text x="0.2635%" y="607.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0146%" y="581" width="0.0177%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="17"/><text x="0.2646%" y="591.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0146%" y="565" width="0.0177%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="17"/><text x="0.2646%" y="575.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0146%" y="549" width="0.0177%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="17"/><text x="0.2646%" y="559.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0146%" y="533" width="0.0177%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="17"/><text x="0.2646%" y="543.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.0146%" y="517" width="0.0177%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="17"/><text x="0.2646%" y="527.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="0.0166%" y="501" width="0.0156%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="15"/><text x="0.2666%" y="511.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="0.0166%" y="485" width="0.0156%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="15"/><text x="0.2666%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="0.0198%" y="469" width="0.0125%" height="15" fill="rgb(217,207,13)" fg:x="19" fg:w="12"/><text x="0.2698%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="0.0208%" y="453" width="0.0114%" height="15" fill="rgb(231,73,38)" fg:x="20" fg:w="11"/><text x="0.2708%" y="463.50"></text></g><g><title>[vkrt]_Analysis (25 samples, 0.03%)</title><rect x="0.0114%" y="773" width="0.0260%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="25"/><text x="0.2614%" y="783.50"></text></g><g><title>__clone3 (23 samples, 0.02%)</title><rect x="0.0135%" y="757" width="0.0239%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="23"/><text x="0.2635%" y="767.50"></text></g><g><title>start_thread (23 samples, 0.02%)</title><rect x="0.0135%" y="741" width="0.0239%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="23"/><text x="0.2635%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.02%)</title><rect x="0.0135%" y="725" width="0.0239%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="23"/><text x="0.2635%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.02%)</title><rect x="0.0135%" y="709" width="0.0239%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="23"/><text x="0.2635%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (23 samples, 0.02%)</title><rect x="0.0135%" y="693" width="0.0239%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="23"/><text x="0.2635%" y="703.50"></text></g><g><title>[[heap]] (11 samples, 0.01%)</title><rect x="0.0385%" y="757" width="0.0114%" height="15" fill="rgb(221,5,38)" fg:x="37" fg:w="11"/><text x="0.2885%" y="767.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="0.0634%" y="741" width="0.0104%" height="15" fill="rgb(247,18,42)" fg:x="61" fg:w="10"/><text x="0.3134%" y="751.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="0.0613%" y="757" width="0.0166%" height="15" fill="rgb(241,131,45)" fg:x="59" fg:w="16"/><text x="0.3113%" y="767.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (10 samples, 0.01%)</title><rect x="0.0801%" y="501" width="0.0104%" height="15" fill="rgb(249,31,29)" fg:x="77" fg:w="10"/><text x="0.3301%" y="511.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (46 samples, 0.05%)</title><rect x="0.0780%" y="517" width="0.0478%" height="15" fill="rgb(225,111,53)" fg:x="75" fg:w="46"/><text x="0.3280%" y="527.50"></text></g><g><title>alsa::poll::poll (23 samples, 0.02%)</title><rect x="0.1019%" y="501" width="0.0239%" height="15" fill="rgb(238,160,17)" fg:x="98" fg:w="23"/><text x="0.3519%" y="511.50"></text></g><g><title>__GI___poll (23 samples, 0.02%)</title><rect x="0.1019%" y="485" width="0.0239%" height="15" fill="rgb(214,148,48)" fg:x="98" fg:w="23"/><text x="0.3519%" y="495.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="0.1029%" y="469" width="0.0229%" height="15" fill="rgb(232,36,49)" fg:x="99" fg:w="22"/><text x="0.3529%" y="479.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="0.1029%" y="453" width="0.0229%" height="15" fill="rgb(209,103,24)" fg:x="99" fg:w="22"/><text x="0.3529%" y="463.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="0.1040%" y="437" width="0.0218%" height="15" fill="rgb(229,88,8)" fg:x="100" fg:w="21"/><text x="0.3540%" y="447.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="0.1061%" y="421" width="0.0198%" height="15" fill="rgb(213,181,19)" fg:x="102" fg:w="19"/><text x="0.3561%" y="431.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1071%" y="405" width="0.0187%" height="15" fill="rgb(254,191,54)" fg:x="103" fg:w="18"/><text x="0.3571%" y="415.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1071%" y="389" width="0.0187%" height="15" fill="rgb(241,83,37)" fg:x="103" fg:w="18"/><text x="0.3571%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1071%" y="373" width="0.0187%" height="15" fill="rgb(233,36,39)" fg:x="103" fg:w="18"/><text x="0.3571%" y="383.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1071%" y="357" width="0.0187%" height="15" fill="rgb(226,3,54)" fg:x="103" fg:w="18"/><text x="0.3571%" y="367.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="0.1071%" y="341" width="0.0187%" height="15" fill="rgb(245,192,40)" fg:x="103" fg:w="18"/><text x="0.3571%" y="351.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.1081%" y="325" width="0.0177%" height="15" fill="rgb(238,167,29)" fg:x="104" fg:w="17"/><text x="0.3581%" y="335.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="0.1081%" y="309" width="0.0177%" height="15" fill="rgb(232,182,51)" fg:x="104" fg:w="17"/><text x="0.3581%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="0.1102%" y="293" width="0.0156%" height="15" fill="rgb(231,60,39)" fg:x="106" fg:w="15"/><text x="0.3602%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="0.1123%" y="277" width="0.0135%" height="15" fill="rgb(208,69,12)" fg:x="108" fg:w="13"/><text x="0.3623%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="0.1133%" y="261" width="0.0125%" height="15" fill="rgb(235,93,37)" fg:x="109" fg:w="12"/><text x="0.3633%" y="271.50"></text></g><g><title>[libasound.so.2.0.0] (27 samples, 0.03%)</title><rect x="0.1258%" y="485" width="0.0281%" height="15" fill="rgb(213,116,39)" fg:x="121" fg:w="27"/><text x="0.3758%" y="495.50"></text></g><g><title>[libasound.so.2.0.0] (27 samples, 0.03%)</title><rect x="0.1258%" y="469" width="0.0281%" height="15" fill="rgb(222,207,29)" fg:x="121" fg:w="27"/><text x="0.3758%" y="479.50"></text></g><g><title>[libasound.so.2.0.0] (27 samples, 0.03%)</title><rect x="0.1258%" y="453" width="0.0281%" height="15" fill="rgb(206,96,30)" fg:x="121" fg:w="27"/><text x="0.3758%" y="463.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (23 samples, 0.02%)</title><rect x="0.1300%" y="437" width="0.0239%" height="15" fill="rgb(218,138,4)" fg:x="125" fg:w="23"/><text x="0.3800%" y="447.50"></text></g><g><title>pa_stream_write (15 samples, 0.02%)</title><rect x="0.1383%" y="421" width="0.0156%" height="15" fill="rgb(250,191,14)" fg:x="133" fg:w="15"/><text x="0.3883%" y="431.50"></text></g><g><title>pa_stream_write_ext_free (15 samples, 0.02%)</title><rect x="0.1383%" y="405" width="0.0156%" height="15" fill="rgb(239,60,40)" fg:x="133" fg:w="15"/><text x="0.3883%" y="415.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (28 samples, 0.03%)</title><rect x="0.1258%" y="501" width="0.0291%" height="15" fill="rgb(206,27,48)" fg:x="121" fg:w="28"/><text x="0.3758%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (12 samples, 0.01%)</title><rect x="0.1674%" y="405" width="0.0125%" height="15" fill="rgb(225,35,8)" fg:x="161" fg:w="12"/><text x="0.4174%" y="415.50"></text></g><g><title>core::mem::swap (19 samples, 0.02%)</title><rect x="0.1799%" y="405" width="0.0198%" height="15" fill="rgb(250,213,24)" fg:x="173" fg:w="19"/><text x="0.4299%" y="415.50"></text></g><g><title>core::mem::swap_simple (19 samples, 0.02%)</title><rect x="0.1799%" y="389" width="0.0198%" height="15" fill="rgb(247,123,22)" fg:x="173" fg:w="19"/><text x="0.4299%" y="399.50"></text></g><g><title>core::ptr::write (10 samples, 0.01%)</title><rect x="0.1892%" y="373" width="0.0104%" height="15" fill="rgb(231,138,38)" fg:x="182" fg:w="10"/><text x="0.4392%" y="383.50"></text></g><g><title>__clone3 (121 samples, 0.13%)</title><rect x="0.0780%" y="757" width="0.1258%" height="15" fill="rgb(231,145,46)" fg:x="75" fg:w="121"/><text x="0.3280%" y="767.50"></text></g><g><title>start_thread (121 samples, 0.13%)</title><rect x="0.0780%" y="741" width="0.1258%" height="15" fill="rgb(251,118,11)" fg:x="75" fg:w="121"/><text x="0.3280%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (121 samples, 0.13%)</title><rect x="0.0780%" y="725" width="0.1258%" height="15" fill="rgb(217,147,25)" fg:x="75" fg:w="121"/><text x="0.3280%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (121 samples, 0.13%)</title><rect x="0.0780%" y="709" width="0.1258%" height="15" fill="rgb(247,81,37)" fg:x="75" fg:w="121"/><text x="0.3280%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (121 samples, 0.13%)</title><rect x="0.0780%" y="693" width="0.1258%" height="15" fill="rgb(209,12,38)" fg:x="75" fg:w="121"/><text x="0.3280%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (121 samples, 0.13%)</title><rect x="0.0780%" y="677" width="0.1258%" height="15" fill="rgb(227,1,9)" fg:x="75" fg:w="121"/><text x="0.3280%" y="687.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (121 samples, 0.13%)</title><rect x="0.0780%" y="661" width="0.1258%" height="15" fill="rgb(248,47,43)" fg:x="75" fg:w="121"/><text x="0.3280%" y="671.50"></text></g><g><title>std::panic::catch_unwind (121 samples, 0.13%)</title><rect x="0.0780%" y="645" width="0.1258%" height="15" fill="rgb(221,10,30)" fg:x="75" fg:w="121"/><text x="0.3280%" y="655.50"></text></g><g><title>std::panicking::try (121 samples, 0.13%)</title><rect x="0.0780%" y="629" width="0.1258%" height="15" fill="rgb(210,229,1)" fg:x="75" fg:w="121"/><text x="0.3280%" y="639.50"></text></g><g><title>std::panicking::try::do_call (121 samples, 0.13%)</title><rect x="0.0780%" y="613" width="0.1258%" height="15" fill="rgb(222,148,37)" fg:x="75" fg:w="121"/><text x="0.3280%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (121 samples, 0.13%)</title><rect x="0.0780%" y="597" width="0.1258%" height="15" fill="rgb(234,67,33)" fg:x="75" fg:w="121"/><text x="0.3280%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (121 samples, 0.13%)</title><rect x="0.0780%" y="581" width="0.1258%" height="15" fill="rgb(247,98,35)" fg:x="75" fg:w="121"/><text x="0.3280%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (121 samples, 0.13%)</title><rect x="0.0780%" y="565" width="0.1258%" height="15" fill="rgb(247,138,52)" fg:x="75" fg:w="121"/><text x="0.3280%" y="575.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (121 samples, 0.13%)</title><rect x="0.0780%" y="549" width="0.1258%" height="15" fill="rgb(213,79,30)" fg:x="75" fg:w="121"/><text x="0.3280%" y="559.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (121 samples, 0.13%)</title><rect x="0.0780%" y="533" width="0.1258%" height="15" fill="rgb(246,177,23)" fg:x="75" fg:w="121"/><text x="0.3280%" y="543.50"></text></g><g><title>cpal::host::alsa::process_output (75 samples, 0.08%)</title><rect x="0.1258%" y="517" width="0.0780%" height="15" fill="rgb(230,62,27)" fg:x="121" fg:w="75"/><text x="0.3758%" y="527.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (46 samples, 0.05%)</title><rect x="0.1560%" y="501" width="0.0478%" height="15" fill="rgb(216,154,8)" fg:x="150" fg:w="46"/><text x="0.4060%" y="511.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (46 samples, 0.05%)</title><rect x="0.1560%" y="485" width="0.0478%" height="15" fill="rgb(244,35,45)" fg:x="150" fg:w="46"/><text x="0.4060%" y="495.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (46 samples, 0.05%)</title><rect x="0.1560%" y="469" width="0.0478%" height="15" fill="rgb(251,115,12)" fg:x="150" fg:w="46"/><text x="0.4060%" y="479.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (45 samples, 0.05%)</title><rect x="0.1570%" y="453" width="0.0468%" height="15" fill="rgb(240,54,50)" fg:x="151" fg:w="45"/><text x="0.4070%" y="463.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.05%)</title><rect x="0.1580%" y="437" width="0.0458%" height="15" fill="rgb(233,84,52)" fg:x="152" fg:w="44"/><text x="0.4080%" y="447.50"></text></g><g><title>rodio::dynamic_mixer::DynamicMixer&lt;S&gt;::sum_current_sources (36 samples, 0.04%)</title><rect x="0.1664%" y="421" width="0.0374%" height="15" fill="rgb(207,117,47)" fg:x="160" fg:w="36"/><text x="0.4164%" y="431.50"></text></g><g><title>cpal_alsa_out (161 samples, 0.17%)</title><rect x="0.0374%" y="773" width="0.1674%" height="15" fill="rgb(249,43,39)" fg:x="36" fg:w="161"/><text x="0.2874%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (28 samples, 0.03%)</title><rect x="0.2142%" y="741" width="0.0291%" height="15" fill="rgb(209,38,44)" fg:x="206" fg:w="28"/><text x="0.4642%" y="751.50"></text></g><g><title>[[heap]] (94 samples, 0.10%)</title><rect x="0.2080%" y="757" width="0.0977%" height="15" fill="rgb(236,212,23)" fg:x="200" fg:w="94"/><text x="0.4580%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (111 samples, 0.12%)</title><rect x="0.3119%" y="741" width="0.1154%" height="15" fill="rgb(242,79,21)" fg:x="300" fg:w="111"/><text x="0.5619%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (111 samples, 0.12%)</title><rect x="0.3119%" y="725" width="0.1154%" height="15" fill="rgb(211,96,35)" fg:x="300" fg:w="111"/><text x="0.5619%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (111 samples, 0.12%)</title><rect x="0.3119%" y="709" width="0.1154%" height="15" fill="rgb(253,215,40)" fg:x="300" fg:w="111"/><text x="0.5619%" y="719.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (111 samples, 0.12%)</title><rect x="0.3119%" y="693" width="0.1154%" height="15" fill="rgb(211,81,21)" fg:x="300" fg:w="111"/><text x="0.5619%" y="703.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (50 samples, 0.05%)</title><rect x="0.3754%" y="677" width="0.0520%" height="15" fill="rgb(208,190,38)" fg:x="361" fg:w="50"/><text x="0.6254%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (21 samples, 0.02%)</title><rect x="0.4055%" y="661" width="0.0218%" height="15" fill="rgb(235,213,38)" fg:x="390" fg:w="21"/><text x="0.6555%" y="671.50"></text></g><g><title>neuralang::World::move_balls (50 samples, 0.05%)</title><rect x="0.4305%" y="709" width="0.0520%" height="15" fill="rgb(237,122,38)" fg:x="414" fg:w="50"/><text x="0.6805%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (50 samples, 0.05%)</title><rect x="0.4305%" y="693" width="0.0520%" height="15" fill="rgb(244,218,35)" fg:x="414" fg:w="50"/><text x="0.6805%" y="703.50"></text></g><g><title>neuralang::World::move_balls::{{closure}} (50 samples, 0.05%)</title><rect x="0.4305%" y="677" width="0.0520%" height="15" fill="rgb(240,68,47)" fg:x="414" fg:w="50"/><text x="0.6805%" y="687.50"></text></g><g><title>neuralang::dir_from_theta (50 samples, 0.05%)</title><rect x="0.4305%" y="661" width="0.0520%" height="15" fill="rgb(210,16,53)" fg:x="414" fg:w="50"/><text x="0.6805%" y="671.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (50 samples, 0.05%)</title><rect x="0.4305%" y="645" width="0.0520%" height="15" fill="rgb(235,124,12)" fg:x="414" fg:w="50"/><text x="0.6805%" y="655.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (128 samples, 0.13%)</title><rect x="0.4305%" y="741" width="0.1331%" height="15" fill="rgb(224,169,11)" fg:x="414" fg:w="128"/><text x="0.6805%" y="751.50"></text></g><g><title>neuralang::World::step (128 samples, 0.13%)</title><rect x="0.4305%" y="725" width="0.1331%" height="15" fill="rgb(250,166,2)" fg:x="414" fg:w="128"/><text x="0.6805%" y="735.50"></text></g><g><title>neuralang::World::update_cells (78 samples, 0.08%)</title><rect x="0.4825%" y="709" width="0.0811%" height="15" fill="rgb(242,216,29)" fg:x="464" fg:w="78"/><text x="0.7325%" y="719.50"></text></g><g><title>neuralang::pos_to_cell (67 samples, 0.07%)</title><rect x="0.4939%" y="693" width="0.0697%" height="15" fill="rgb(230,116,27)" fg:x="475" fg:w="67"/><text x="0.7439%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (20 samples, 0.02%)</title><rect x="0.5688%" y="741" width="0.0208%" height="15" fill="rgb(228,99,48)" fg:x="547" fg:w="20"/><text x="0.8188%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (50 samples, 0.05%)</title><rect x="0.6145%" y="741" width="0.0520%" height="15" fill="rgb(253,11,6)" fg:x="591" fg:w="50"/><text x="0.8645%" y="751.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set (86 samples, 0.09%)</title><rect x="0.6665%" y="741" width="0.0894%" height="15" fill="rgb(247,143,39)" fg:x="641" fg:w="86"/><text x="0.9165%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (86 samples, 0.09%)</title><rect x="0.6665%" y="725" width="0.0894%" height="15" fill="rgb(236,97,10)" fg:x="641" fg:w="86"/><text x="0.9165%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (86 samples, 0.09%)</title><rect x="0.6665%" y="709" width="0.0894%" height="15" fill="rgb(233,208,19)" fg:x="641" fg:w="86"/><text x="0.9165%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (86 samples, 0.09%)</title><rect x="0.6665%" y="693" width="0.0894%" height="15" fill="rgb(216,164,2)" fg:x="641" fg:w="86"/><text x="0.9165%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (86 samples, 0.09%)</title><rect x="0.6665%" y="677" width="0.0894%" height="15" fill="rgb(220,129,5)" fg:x="641" fg:w="86"/><text x="0.9165%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 0.09%)</title><rect x="0.6665%" y="661" width="0.0894%" height="15" fill="rgb(242,17,10)" fg:x="641" fg:w="86"/><text x="0.9165%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (86 samples, 0.09%)</title><rect x="0.6665%" y="645" width="0.0894%" height="15" fill="rgb(242,107,0)" fg:x="641" fg:w="86"/><text x="0.9165%" y="655.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (86 samples, 0.09%)</title><rect x="0.6665%" y="629" width="0.0894%" height="15" fill="rgb(251,28,31)" fg:x="641" fg:w="86"/><text x="0.9165%" y="639.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (86 samples, 0.09%)</title><rect x="0.6665%" y="613" width="0.0894%" height="15" fill="rgb(233,223,10)" fg:x="641" fg:w="86"/><text x="0.9165%" y="623.50"></text></g><g><title>[[stack]] (460 samples, 0.48%)</title><rect x="0.3057%" y="757" width="0.4783%" height="15" fill="rgb(215,21,27)" fg:x="294" fg:w="460"/><text x="0.5557%" y="767.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (145 samples, 0.15%)</title><rect x="0.8142%" y="725" width="0.1508%" height="15" fill="rgb(232,23,21)" fg:x="783" fg:w="145"/><text x="1.0642%" y="735.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (145 samples, 0.15%)</title><rect x="0.8142%" y="709" width="0.1508%" height="15" fill="rgb(244,5,23)" fg:x="783" fg:w="145"/><text x="1.0642%" y="719.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (145 samples, 0.15%)</title><rect x="0.8142%" y="693" width="0.1508%" height="15" fill="rgb(226,81,46)" fg:x="783" fg:w="145"/><text x="1.0642%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (53 samples, 0.06%)</title><rect x="0.9649%" y="709" width="0.0551%" height="15" fill="rgb(247,70,30)" fg:x="928" fg:w="53"/><text x="1.2149%" y="719.50"></text></g><g><title>[anon] (234 samples, 0.24%)</title><rect x="0.7840%" y="757" width="0.2433%" height="15" fill="rgb(212,68,19)" fg:x="754" fg:w="234"/><text x="1.0340%" y="767.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (226 samples, 0.23%)</title><rect x="0.7923%" y="741" width="0.2350%" height="15" fill="rgb(240,187,13)" fg:x="762" fg:w="226"/><text x="1.0423%" y="751.50"></text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (60 samples, 0.06%)</title><rect x="0.9649%" y="725" width="0.0624%" height="15" fill="rgb(223,113,26)" fg:x="928" fg:w="60"/><text x="1.2149%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="1.0346%" y="757" width="0.0114%" height="15" fill="rgb(206,192,2)" fg:x="995" fg:w="11"/><text x="1.2846%" y="767.50"></text></g><g><title>__ieee754_fmodf (168 samples, 0.17%)</title><rect x="1.0481%" y="741" width="0.1747%" height="15" fill="rgb(241,108,4)" fg:x="1008" fg:w="168"/><text x="1.2981%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (10 samples, 0.01%)</title><rect x="1.2228%" y="741" width="0.0104%" height="15" fill="rgb(247,173,49)" fg:x="1176" fg:w="10"/><text x="1.4728%" y="751.50"></text></g><g><title>[neuralang] (179 samples, 0.19%)</title><rect x="1.0481%" y="757" width="0.1861%" height="15" fill="rgb(224,114,35)" fg:x="1008" fg:w="179"/><text x="1.2981%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (25 samples, 0.03%)</title><rect x="1.2737%" y="741" width="0.0260%" height="15" fill="rgb(245,159,27)" fg:x="1225" fg:w="25"/><text x="1.5237%" y="751.50"></text></g><g><title>[unknown] (104 samples, 0.11%)</title><rect x="1.3008%" y="741" width="0.1081%" height="15" fill="rgb(245,172,44)" fg:x="1251" fg:w="104"/><text x="1.5508%" y="751.50"></text></g><g><title>[unknown] (104 samples, 0.11%)</title><rect x="1.3008%" y="725" width="0.1081%" height="15" fill="rgb(236,23,11)" fg:x="1251" fg:w="104"/><text x="1.5508%" y="735.50"></text></g><g><title>[unknown] (104 samples, 0.11%)</title><rect x="1.3008%" y="709" width="0.1081%" height="15" fill="rgb(205,117,38)" fg:x="1251" fg:w="104"/><text x="1.5508%" y="719.50"></text></g><g><title>[unknown] (103 samples, 0.11%)</title><rect x="1.3018%" y="693" width="0.1071%" height="15" fill="rgb(237,72,25)" fg:x="1252" fg:w="103"/><text x="1.5518%" y="703.50"></text></g><g><title>[unknown] (103 samples, 0.11%)</title><rect x="1.3018%" y="677" width="0.1071%" height="15" fill="rgb(244,70,9)" fg:x="1252" fg:w="103"/><text x="1.5518%" y="687.50"></text></g><g><title>[unknown] (103 samples, 0.11%)</title><rect x="1.3018%" y="661" width="0.1071%" height="15" fill="rgb(217,125,39)" fg:x="1252" fg:w="103"/><text x="1.5518%" y="671.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="1.3860%" y="645" width="0.0229%" height="15" fill="rgb(235,36,10)" fg:x="1333" fg:w="22"/><text x="1.6360%" y="655.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="1.3892%" y="629" width="0.0198%" height="15" fill="rgb(251,123,47)" fg:x="1336" fg:w="19"/><text x="1.6392%" y="639.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="1.3892%" y="613" width="0.0198%" height="15" fill="rgb(221,13,13)" fg:x="1336" fg:w="19"/><text x="1.6392%" y="623.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="1.3954%" y="597" width="0.0135%" height="15" fill="rgb(238,131,9)" fg:x="1342" fg:w="13"/><text x="1.6454%" y="607.50"></text></g><g><title>__ieee754_fmodf (11 samples, 0.01%)</title><rect x="1.4162%" y="741" width="0.0114%" height="15" fill="rgb(211,50,8)" fg:x="1362" fg:w="11"/><text x="1.6662%" y="751.50"></text></g><g><title>__sincosf_fma (18 samples, 0.02%)</title><rect x="1.4349%" y="741" width="0.0187%" height="15" fill="rgb(245,182,24)" fg:x="1380" fg:w="18"/><text x="1.6849%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="1.4817%" y="421" width="0.0125%" height="15" fill="rgb(242,14,37)" fg:x="1425" fg:w="12"/><text x="1.7317%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="1.4817%" y="437" width="0.0135%" height="15" fill="rgb(246,228,12)" fg:x="1425" fg:w="13"/><text x="1.7317%" y="447.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (23 samples, 0.02%)</title><rect x="1.4723%" y="709" width="0.0239%" height="15" fill="rgb(213,55,15)" fg:x="1416" fg:w="23"/><text x="1.7223%" y="719.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (23 samples, 0.02%)</title><rect x="1.4723%" y="693" width="0.0239%" height="15" fill="rgb(209,9,3)" fg:x="1416" fg:w="23"/><text x="1.7223%" y="703.50"></text></g><g><title>wgpu::Surface::configure (17 samples, 0.02%)</title><rect x="1.4786%" y="677" width="0.0177%" height="15" fill="rgb(230,59,30)" fg:x="1422" fg:w="17"/><text x="1.7286%" y="687.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_configure (17 samples, 0.02%)</title><rect x="1.4786%" y="661" width="0.0177%" height="15" fill="rgb(209,121,21)" fg:x="1422" fg:w="17"/><text x="1.7286%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_configure (17 samples, 0.02%)</title><rect x="1.4786%" y="645" width="0.0177%" height="15" fill="rgb(220,109,13)" fg:x="1422" fg:w="17"/><text x="1.7286%" y="655.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_configure (17 samples, 0.02%)</title><rect x="1.4786%" y="629" width="0.0177%" height="15" fill="rgb(232,18,1)" fg:x="1422" fg:w="17"/><text x="1.7286%" y="639.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::configure (17 samples, 0.02%)</title><rect x="1.4786%" y="613" width="0.0177%" height="15" fill="rgb(215,41,42)" fg:x="1422" fg:w="17"/><text x="1.7286%" y="623.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::Device&gt;::create_swapchain (17 samples, 0.02%)</title><rect x="1.4786%" y="597" width="0.0177%" height="15" fill="rgb(224,123,36)" fg:x="1422" fg:w="17"/><text x="1.7286%" y="607.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (16 samples, 0.02%)</title><rect x="1.4796%" y="581" width="0.0166%" height="15" fill="rgb(240,125,3)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="591.50"></text></g><g><title>[libvulkan.so.1.3.204] (16 samples, 0.02%)</title><rect x="1.4796%" y="565" width="0.0166%" height="15" fill="rgb(205,98,50)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="575.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (16 samples, 0.02%)</title><rect x="1.4796%" y="549" width="0.0166%" height="15" fill="rgb(205,185,37)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="1.4796%" y="533" width="0.0166%" height="15" fill="rgb(238,207,15)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="1.4796%" y="517" width="0.0166%" height="15" fill="rgb(213,199,42)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="1.4796%" y="501" width="0.0166%" height="15" fill="rgb(235,201,11)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="1.4796%" y="485" width="0.0166%" height="15" fill="rgb(207,46,11)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (16 samples, 0.02%)</title><rect x="1.4796%" y="469" width="0.0166%" height="15" fill="rgb(241,35,35)" fg:x="1423" fg:w="16"/><text x="1.7296%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="1.4807%" y="453" width="0.0156%" height="15" fill="rgb(243,32,47)" fg:x="1424" fg:w="15"/><text x="1.7307%" y="463.50"></text></g><g><title>ggez::context::ContextBuilder::build (25 samples, 0.03%)</title><rect x="1.4713%" y="741" width="0.0260%" height="15" fill="rgb(247,202,23)" fg:x="1415" fg:w="25"/><text x="1.7213%" y="751.50"></text></g><g><title>ggez::context::Context::from_conf (25 samples, 0.03%)</title><rect x="1.4713%" y="725" width="0.0260%" height="15" fill="rgb(219,102,11)" fg:x="1415" fg:w="25"/><text x="1.7213%" y="735.50"></text></g><g><title>ash::device::Device::cmd_begin_render_pass (22 samples, 0.02%)</title><rect x="1.5046%" y="565" width="0.0229%" height="15" fill="rgb(243,110,44)" fg:x="1447" fg:w="22"/><text x="1.7546%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (22 samples, 0.02%)</title><rect x="1.5046%" y="549" width="0.0229%" height="15" fill="rgb(222,74,54)" fg:x="1447" fg:w="22"/><text x="1.7546%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.02%)</title><rect x="1.5056%" y="533" width="0.0218%" height="15" fill="rgb(216,99,12)" fg:x="1448" fg:w="21"/><text x="1.7556%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (21 samples, 0.02%)</title><rect x="1.5056%" y="517" width="0.0218%" height="15" fill="rgb(226,22,26)" fg:x="1448" fg:w="21"/><text x="1.7556%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="1.5098%" y="501" width="0.0177%" height="15" fill="rgb(217,163,10)" fg:x="1452" fg:w="17"/><text x="1.7598%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="1.5139%" y="485" width="0.0135%" height="15" fill="rgb(213,25,53)" fg:x="1456" fg:w="13"/><text x="1.7639%" y="495.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (37 samples, 0.04%)</title><rect x="1.5015%" y="741" width="0.0385%" height="15" fill="rgb(252,105,26)" fg:x="1444" fg:w="37"/><text x="1.7515%" y="751.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (36 samples, 0.04%)</title><rect x="1.5025%" y="725" width="0.0374%" height="15" fill="rgb(220,39,43)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (36 samples, 0.04%)</title><rect x="1.5025%" y="709" width="0.0374%" height="15" fill="rgb(229,68,48)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (36 samples, 0.04%)</title><rect x="1.5025%" y="693" width="0.0374%" height="15" fill="rgb(252,8,32)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="703.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="1.5025%" y="677" width="0.0374%" height="15" fill="rgb(223,20,43)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="687.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (36 samples, 0.04%)</title><rect x="1.5025%" y="661" width="0.0374%" height="15" fill="rgb(229,81,49)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (36 samples, 0.04%)</title><rect x="1.5025%" y="645" width="0.0374%" height="15" fill="rgb(236,28,36)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="655.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (36 samples, 0.04%)</title><rect x="1.5025%" y="629" width="0.0374%" height="15" fill="rgb(249,185,26)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="639.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (36 samples, 0.04%)</title><rect x="1.5025%" y="613" width="0.0374%" height="15" fill="rgb(249,174,33)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="623.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (36 samples, 0.04%)</title><rect x="1.5025%" y="597" width="0.0374%" height="15" fill="rgb(233,201,37)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="607.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_render_pass (36 samples, 0.04%)</title><rect x="1.5025%" y="581" width="0.0374%" height="15" fill="rgb(221,78,26)" fg:x="1445" fg:w="36"/><text x="1.7525%" y="591.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new (15 samples, 0.02%)</title><rect x="1.5431%" y="741" width="0.0156%" height="15" fill="rgb(250,127,30)" fg:x="1484" fg:w="15"/><text x="1.7931%" y="751.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::new_from_instance (12 samples, 0.01%)</title><rect x="1.5462%" y="725" width="0.0125%" height="15" fill="rgb(230,49,44)" fg:x="1487" fg:w="12"/><text x="1.7962%" y="735.50"></text></g><g><title>wgpu::Instance::request_adapter (10 samples, 0.01%)</title><rect x="1.5483%" y="709" width="0.0104%" height="15" fill="rgb(229,67,23)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="719.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::instance_request_adapter (10 samples, 0.01%)</title><rect x="1.5483%" y="693" width="0.0104%" height="15" fill="rgb(249,83,47)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="703.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::instance_request_adapter (10 samples, 0.01%)</title><rect x="1.5483%" y="677" width="0.0104%" height="15" fill="rgb(215,43,3)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="687.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (10 samples, 0.01%)</title><rect x="1.5483%" y="661" width="0.0104%" height="15" fill="rgb(238,154,13)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="671.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather (10 samples, 0.01%)</title><rect x="1.5483%" y="645" width="0.0104%" height="15" fill="rgb(219,56,2)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (10 samples, 0.01%)</title><rect x="1.5483%" y="629" width="0.0104%" height="15" fill="rgb(233,0,4)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (10 samples, 0.01%)</title><rect x="1.5483%" y="613" width="0.0104%" height="15" fill="rgb(235,30,7)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (10 samples, 0.01%)</title><rect x="1.5483%" y="597" width="0.0104%" height="15" fill="rgb(250,79,13)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (10 samples, 0.01%)</title><rect x="1.5483%" y="581" width="0.0104%" height="15" fill="rgb(211,146,34)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="591.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter::gather::{{closure}} (10 samples, 0.01%)</title><rect x="1.5483%" y="565" width="0.0104%" height="15" fill="rgb(228,22,38)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="575.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::surface_capabilities (10 samples, 0.01%)</title><rect x="1.5483%" y="549" width="0.0104%" height="15" fill="rgb(235,168,5)" fg:x="1489" fg:w="10"/><text x="1.7983%" y="559.50"></text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (57 samples, 0.06%)</title><rect x="1.5670%" y="741" width="0.0593%" height="15" fill="rgb(221,155,16)" fg:x="1507" fg:w="57"/><text x="1.8170%" y="751.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (45 samples, 0.05%)</title><rect x="1.6387%" y="741" width="0.0468%" height="15" fill="rgb(215,215,53)" fg:x="1576" fg:w="45"/><text x="1.8887%" y="751.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (33 samples, 0.03%)</title><rect x="1.6865%" y="741" width="0.0343%" height="15" fill="rgb(223,4,10)" fg:x="1622" fg:w="33"/><text x="1.9365%" y="751.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::vec2::Vec2&gt; for mint::vector::Point2&lt;f32&gt;&gt;::from (130 samples, 0.14%)</title><rect x="1.7209%" y="741" width="0.1352%" height="15" fill="rgb(234,103,6)" fg:x="1655" fg:w="130"/><text x="1.9709%" y="751.50"></text></g><g><title>[libudev.so.1.7.2] (12 samples, 0.01%)</title><rect x="1.8675%" y="469" width="0.0125%" height="15" fill="rgb(227,97,0)" fg:x="1796" fg:w="12"/><text x="2.1175%" y="479.50"></text></g><g><title>__GI___close (13 samples, 0.01%)</title><rect x="1.8799%" y="469" width="0.0135%" height="15" fill="rgb(234,150,53)" fg:x="1808" fg:w="13"/><text x="2.1299%" y="479.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="1.8799%" y="453" width="0.0135%" height="15" fill="rgb(228,201,54)" fg:x="1808" fg:w="13"/><text x="2.1299%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="1.8820%" y="437" width="0.0114%" height="15" fill="rgb(222,22,37)" fg:x="1810" fg:w="11"/><text x="2.1320%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="1.8820%" y="421" width="0.0114%" height="15" fill="rgb(237,53,32)" fg:x="1810" fg:w="11"/><text x="2.1320%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.8831%" y="405" width="0.0104%" height="15" fill="rgb(233,25,53)" fg:x="1811" fg:w="10"/><text x="2.1331%" y="415.50"></text></g><g><title>[libudev.so.1.7.2] (35 samples, 0.04%)</title><rect x="1.8675%" y="485" width="0.0364%" height="15" fill="rgb(210,40,34)" fg:x="1796" fg:w="35"/><text x="2.1175%" y="495.50"></text></g><g><title>__GI___fstatat64 (14 samples, 0.01%)</title><rect x="1.9049%" y="485" width="0.0146%" height="15" fill="rgb(241,220,44)" fg:x="1832" fg:w="14"/><text x="2.1549%" y="495.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="1.9049%" y="469" width="0.0146%" height="15" fill="rgb(235,28,35)" fg:x="1832" fg:w="14"/><text x="2.1549%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9091%" y="453" width="0.0104%" height="15" fill="rgb(210,56,17)" fg:x="1836" fg:w="10"/><text x="2.1591%" y="463.50"></text></g><g><title>[libudev.so.1.7.2] (72 samples, 0.07%)</title><rect x="1.8675%" y="501" width="0.0749%" height="15" fill="rgb(224,130,29)" fg:x="1796" fg:w="72"/><text x="2.1175%" y="511.50"></text></g><g><title>__libc_openat64 (20 samples, 0.02%)</title><rect x="1.9215%" y="485" width="0.0208%" height="15" fill="rgb(235,212,8)" fg:x="1848" fg:w="20"/><text x="2.1715%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="1.9236%" y="469" width="0.0187%" height="15" fill="rgb(223,33,50)" fg:x="1850" fg:w="18"/><text x="2.1736%" y="479.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="1.9267%" y="453" width="0.0156%" height="15" fill="rgb(219,149,13)" fg:x="1853" fg:w="15"/><text x="2.1767%" y="463.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="1.9267%" y="437" width="0.0156%" height="15" fill="rgb(250,156,29)" fg:x="1853" fg:w="15"/><text x="2.1767%" y="447.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="1.9288%" y="421" width="0.0135%" height="15" fill="rgb(216,193,19)" fg:x="1855" fg:w="13"/><text x="2.1788%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="1.9288%" y="405" width="0.0135%" height="15" fill="rgb(216,135,14)" fg:x="1855" fg:w="13"/><text x="2.1788%" y="415.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="1.9288%" y="389" width="0.0135%" height="15" fill="rgb(241,47,5)" fg:x="1855" fg:w="13"/><text x="2.1788%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="1.9309%" y="373" width="0.0114%" height="15" fill="rgb(233,42,35)" fg:x="1857" fg:w="11"/><text x="2.1809%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9319%" y="357" width="0.0104%" height="15" fill="rgb(231,13,6)" fg:x="1858" fg:w="10"/><text x="2.1819%" y="367.50"></text></g><g><title>[libudev.so.1.7.2] (78 samples, 0.08%)</title><rect x="1.8675%" y="533" width="0.0811%" height="15" fill="rgb(207,181,40)" fg:x="1796" fg:w="78"/><text x="2.1175%" y="543.50"></text></g><g><title>[libudev.so.1.7.2] (78 samples, 0.08%)</title><rect x="1.8675%" y="517" width="0.0811%" height="15" fill="rgb(254,173,49)" fg:x="1796" fg:w="78"/><text x="2.1175%" y="527.50"></text></g><g><title>ggez::context::ContextBuilder::build (85 samples, 0.09%)</title><rect x="1.8612%" y="709" width="0.0884%" height="15" fill="rgb(221,1,38)" fg:x="1790" fg:w="85"/><text x="2.1112%" y="719.50"></text></g><g><title>ggez::context::Context::from_conf (85 samples, 0.09%)</title><rect x="1.8612%" y="693" width="0.0884%" height="15" fill="rgb(206,124,46)" fg:x="1790" fg:w="85"/><text x="2.1112%" y="703.50"></text></g><g><title>ggez::input::gamepad::GamepadContext::new (79 samples, 0.08%)</title><rect x="1.8675%" y="677" width="0.0821%" height="15" fill="rgb(249,21,11)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="687.50"></text></g><g><title>gilrs::gamepad::Gilrs::new (79 samples, 0.08%)</title><rect x="1.8675%" y="661" width="0.0821%" height="15" fill="rgb(222,201,40)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="671.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (79 samples, 0.08%)</title><rect x="1.8675%" y="645" width="0.0821%" height="15" fill="rgb(235,61,29)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="655.50"></text></g><g><title>gilrs_core::Gilrs::new (79 samples, 0.08%)</title><rect x="1.8675%" y="629" width="0.0821%" height="15" fill="rgb(219,207,3)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="639.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (79 samples, 0.08%)</title><rect x="1.8675%" y="613" width="0.0821%" height="15" fill="rgb(222,56,46)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="623.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (79 samples, 0.08%)</title><rect x="1.8675%" y="597" width="0.0821%" height="15" fill="rgb(239,76,54)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="607.50"></text></g><g><title>udev_enumerate_scan_devices (79 samples, 0.08%)</title><rect x="1.8675%" y="581" width="0.0821%" height="15" fill="rgb(231,124,27)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="591.50"></text></g><g><title>[libudev.so.1.7.2] (79 samples, 0.08%)</title><rect x="1.8675%" y="565" width="0.0821%" height="15" fill="rgb(249,195,6)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="575.50"></text></g><g><title>[libudev.so.1.7.2] (79 samples, 0.08%)</title><rect x="1.8675%" y="549" width="0.0821%" height="15" fill="rgb(237,174,47)" fg:x="1796" fg:w="79"/><text x="2.1175%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (13 samples, 0.01%)</title><rect x="1.9579%" y="597" width="0.0135%" height="15" fill="rgb(206,201,31)" fg:x="1883" fg:w="13"/><text x="2.2079%" y="607.50"></text></g><g><title>XCheckIfEvent (13 samples, 0.01%)</title><rect x="1.9579%" y="581" width="0.0135%" height="15" fill="rgb(231,57,52)" fg:x="1883" fg:w="13"/><text x="2.2079%" y="591.50"></text></g><g><title>_XEventsQueued (13 samples, 0.01%)</title><rect x="1.9579%" y="565" width="0.0135%" height="15" fill="rgb(248,177,22)" fg:x="1883" fg:w="13"/><text x="2.2079%" y="575.50"></text></g><g><title>[libX11.so.6.4.0] (13 samples, 0.01%)</title><rect x="1.9579%" y="549" width="0.0135%" height="15" fill="rgb(215,211,37)" fg:x="1883" fg:w="13"/><text x="2.2079%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::handle_pressed_keys (12 samples, 0.01%)</title><rect x="1.9756%" y="581" width="0.0125%" height="15" fill="rgb(241,128,51)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="591.50"></text></g><g><title>winit::platform_impl::platform::x11::util::keys::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::query_keymap (12 samples, 0.01%)</title><rect x="1.9756%" y="565" width="0.0125%" height="15" fill="rgb(227,165,31)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="575.50"></text></g><g><title>XQueryKeymap (12 samples, 0.01%)</title><rect x="1.9756%" y="549" width="0.0125%" height="15" fill="rgb(228,167,24)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="559.50"></text></g><g><title>_XReply (12 samples, 0.01%)</title><rect x="1.9756%" y="533" width="0.0125%" height="15" fill="rgb(228,143,12)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="543.50"></text></g><g><title>xcb_wait_for_reply64 (12 samples, 0.01%)</title><rect x="1.9756%" y="517" width="0.0125%" height="15" fill="rgb(249,149,8)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="527.50"></text></g><g><title>[libxcb.so.1.1.0] (12 samples, 0.01%)</title><rect x="1.9756%" y="501" width="0.0125%" height="15" fill="rgb(243,35,44)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="511.50"></text></g><g><title>[libxcb.so.1.1.0] (12 samples, 0.01%)</title><rect x="1.9756%" y="485" width="0.0125%" height="15" fill="rgb(246,89,9)" fg:x="1900" fg:w="12"/><text x="2.2256%" y="495.50"></text></g><g><title>__GI___poll (10 samples, 0.01%)</title><rect x="1.9777%" y="469" width="0.0104%" height="15" fill="rgb(233,213,13)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="453" width="0.0104%" height="15" fill="rgb(233,141,41)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="437" width="0.0104%" height="15" fill="rgb(239,167,4)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="421" width="0.0104%" height="15" fill="rgb(209,217,16)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="405" width="0.0104%" height="15" fill="rgb(219,88,35)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="389" width="0.0104%" height="15" fill="rgb(220,193,23)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="373" width="0.0104%" height="15" fill="rgb(230,90,52)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="357" width="0.0104%" height="15" fill="rgb(252,106,19)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="341" width="0.0104%" height="15" fill="rgb(206,74,20)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="325" width="0.0104%" height="15" fill="rgb(230,138,44)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="309" width="0.0104%" height="15" fill="rgb(235,182,43)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="319.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="293" width="0.0104%" height="15" fill="rgb(242,16,51)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="303.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="277" width="0.0104%" height="15" fill="rgb(248,9,4)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="287.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="261" width="0.0104%" height="15" fill="rgb(210,31,22)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="271.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="1.9777%" y="245" width="0.0104%" height="15" fill="rgb(239,54,39)" fg:x="1902" fg:w="10"/><text x="2.2277%" y="255.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (35 samples, 0.04%)</title><rect x="1.9579%" y="613" width="0.0364%" height="15" fill="rgb(230,99,41)" fg:x="1883" fg:w="35"/><text x="2.2079%" y="623.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (22 samples, 0.02%)</title><rect x="1.9714%" y="597" width="0.0229%" height="15" fill="rgb(253,106,12)" fg:x="1896" fg:w="22"/><text x="2.2214%" y="607.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_bind_group (18 samples, 0.02%)</title><rect x="2.0245%" y="437" width="0.0187%" height="15" fill="rgb(213,46,41)" fg:x="1947" fg:w="18"/><text x="2.2745%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_bind_group (12 samples, 0.01%)</title><rect x="2.0307%" y="421" width="0.0125%" height="15" fill="rgb(215,133,35)" fg:x="1953" fg:w="12"/><text x="2.2807%" y="431.50"></text></g><g><title>wgpu::Device::create_bind_group (27 samples, 0.03%)</title><rect x="2.0203%" y="501" width="0.0281%" height="15" fill="rgb(213,28,5)" fg:x="1943" fg:w="27"/><text x="2.2703%" y="511.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_bind_group (27 samples, 0.03%)</title><rect x="2.0203%" y="485" width="0.0281%" height="15" fill="rgb(215,77,49)" fg:x="1943" fg:w="27"/><text x="2.2703%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_bind_group (27 samples, 0.03%)</title><rect x="2.0203%" y="469" width="0.0281%" height="15" fill="rgb(248,100,22)" fg:x="1943" fg:w="27"/><text x="2.2703%" y="479.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (23 samples, 0.02%)</title><rect x="2.0245%" y="453" width="0.0239%" height="15" fill="rgb(208,67,9)" fg:x="1947" fg:w="23"/><text x="2.2745%" y="463.50"></text></g><g><title>ash::device::Device::bind_buffer_memory (12 samples, 0.01%)</title><rect x="2.0588%" y="405" width="0.0125%" height="15" fill="rgb(219,133,21)" fg:x="1980" fg:w="12"/><text x="2.3088%" y="415.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (12 samples, 0.01%)</title><rect x="2.0588%" y="389" width="0.0125%" height="15" fill="rgb(246,46,29)" fg:x="1980" fg:w="12"/><text x="2.3088%" y="399.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (29 samples, 0.03%)</title><rect x="2.0557%" y="421" width="0.0302%" height="15" fill="rgb(246,185,52)" fg:x="1977" fg:w="29"/><text x="2.3057%" y="431.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::create_buffer (37 samples, 0.04%)</title><rect x="2.0505%" y="437" width="0.0385%" height="15" fill="rgb(252,136,11)" fg:x="1972" fg:w="37"/><text x="2.3005%" y="447.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_buffer (46 samples, 0.05%)</title><rect x="2.0484%" y="485" width="0.0478%" height="15" fill="rgb(219,138,53)" fg:x="1970" fg:w="46"/><text x="2.2984%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_buffer (46 samples, 0.05%)</title><rect x="2.0484%" y="469" width="0.0478%" height="15" fill="rgb(211,51,23)" fg:x="1970" fg:w="46"/><text x="2.2984%" y="479.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (46 samples, 0.05%)</title><rect x="2.0484%" y="453" width="0.0478%" height="15" fill="rgb(247,221,28)" fg:x="1970" fg:w="46"/><text x="2.2984%" y="463.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::new_wgpu (85 samples, 0.09%)</title><rect x="2.0099%" y="517" width="0.0884%" height="15" fill="rgb(251,222,45)" fg:x="1933" fg:w="85"/><text x="2.2599%" y="527.50"></text></g><g><title>wgpu::Device::create_buffer (48 samples, 0.05%)</title><rect x="2.0484%" y="501" width="0.0499%" height="15" fill="rgb(217,162,53)" fg:x="1970" fg:w="48"/><text x="2.2984%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,425 samples, 2.52%)</title><rect x="2.1004%" y="453" width="2.5215%" height="15" fill="rgb(229,93,14)" fg:x="2020" fg:w="2425"/><text x="2.3504%" y="463.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (2,425 samples, 2.52%)</title><rect x="2.1004%" y="437" width="2.5215%" height="15" fill="rgb(209,67,49)" fg:x="2020" fg:w="2425"/><text x="2.3504%" y="447.50">__..</text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (16 samples, 0.02%)</title><rect x="4.6219%" y="437" width="0.0166%" height="15" fill="rgb(213,87,29)" fg:x="4445" fg:w="16"/><text x="4.8719%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (16 samples, 0.02%)</title><rect x="4.6219%" y="421" width="0.0166%" height="15" fill="rgb(205,151,52)" fg:x="4445" fg:w="16"/><text x="4.8719%" y="431.50"></text></g><g><title>ash::device::Device::begin_command_buffer (14 samples, 0.01%)</title><rect x="4.6240%" y="405" width="0.0146%" height="15" fill="rgb(253,215,39)" fg:x="4447" fg:w="14"/><text x="4.8740%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.01%)</title><rect x="4.6240%" y="389" width="0.0146%" height="15" fill="rgb(221,220,41)" fg:x="4447" fg:w="14"/><text x="4.8740%" y="399.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="4.6250%" y="373" width="0.0135%" height="15" fill="rgb(218,133,21)" fg:x="4448" fg:w="13"/><text x="4.8750%" y="383.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_staging_buffer_impl (29 samples, 0.03%)</title><rect x="4.6219%" y="453" width="0.0302%" height="15" fill="rgb(221,193,43)" fg:x="4445" fg:w="29"/><text x="4.8719%" y="463.50"></text></g><g><title>ggez::graphics::instance::InstanceArray::flush_wgpu (2,560 samples, 2.66%)</title><rect x="2.0006%" y="533" width="2.6619%" height="15" fill="rgb(240,128,52)" fg:x="1924" fg:w="2560"/><text x="2.2506%" y="543.50">gg..</text></g><g><title>wgpu::Queue::write_buffer (2,466 samples, 2.56%)</title><rect x="2.0983%" y="517" width="2.5641%" height="15" fill="rgb(253,114,12)" fg:x="2018" fg:w="2466"/><text x="2.3483%" y="527.50">wg..</text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (2,466 samples, 2.56%)</title><rect x="2.0983%" y="501" width="2.5641%" height="15" fill="rgb(215,223,47)" fg:x="2018" fg:w="2466"/><text x="2.3483%" y="511.50">&lt;T..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (2,466 samples, 2.56%)</title><rect x="2.0983%" y="485" width="2.5641%" height="15" fill="rgb(248,225,23)" fg:x="2018" fg:w="2466"/><text x="2.3483%" y="495.50">&lt;w..</text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (2,464 samples, 2.56%)</title><rect x="2.1004%" y="469" width="2.5620%" height="15" fill="rgb(250,108,0)" fg:x="2020" fg:w="2464"/><text x="2.3504%" y="479.50">wg..</text></g><g><title>ggez::graphics::canvas::Canvas::draw (2,564 samples, 2.67%)</title><rect x="1.9974%" y="565" width="2.6660%" height="15" fill="rgb(228,208,7)" fg:x="1921" fg:w="2564"/><text x="2.2474%" y="575.50">gg..</text></g><g><title>&lt;ggez::graphics::instance::InstanceArray as ggez::graphics::draw::Drawable&gt;::draw (2,564 samples, 2.67%)</title><rect x="1.9974%" y="549" width="2.6660%" height="15" fill="rgb(244,45,10)" fg:x="1921" fg:w="2564"/><text x="2.2474%" y="559.50">&lt;g..</text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::update_pipeline (20 samples, 0.02%)</title><rect x="4.6759%" y="517" width="0.0208%" height="15" fill="rgb(207,125,25)" fg:x="4497" fg:w="20"/><text x="4.9259%" y="527.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::draw_mesh_instances (40 samples, 0.04%)</title><rect x="4.6666%" y="533" width="0.0416%" height="15" fill="rgb(210,195,18)" fg:x="4488" fg:w="40"/><text x="4.9166%" y="543.50"></text></g><g><title>wgpu_core::command::CommandEncoder&lt;A&gt;::open_pass (10 samples, 0.01%)</title><rect x="4.7404%" y="405" width="0.0104%" height="15" fill="rgb(249,80,12)" fg:x="4559" fg:w="10"/><text x="4.9904%" y="415.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (10 samples, 0.01%)</title><rect x="4.7404%" y="389" width="0.0104%" height="15" fill="rgb(221,65,9)" fg:x="4559" fg:w="10"/><text x="4.9904%" y="399.50"></text></g><g><title>ash::device::Device::begin_command_buffer (10 samples, 0.01%)</title><rect x="4.7404%" y="373" width="0.0104%" height="15" fill="rgb(235,49,36)" fg:x="4559" fg:w="10"/><text x="4.9904%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="4.7404%" y="357" width="0.0104%" height="15" fill="rgb(225,32,20)" fg:x="4559" fg:w="10"/><text x="4.9904%" y="367.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (80 samples, 0.08%)</title><rect x="4.7082%" y="485" width="0.0832%" height="15" fill="rgb(215,141,46)" fg:x="4528" fg:w="80"/><text x="4.9582%" y="495.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (80 samples, 0.08%)</title><rect x="4.7082%" y="469" width="0.0832%" height="15" fill="rgb(250,160,47)" fg:x="4528" fg:w="80"/><text x="4.9582%" y="479.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (80 samples, 0.08%)</title><rect x="4.7082%" y="453" width="0.0832%" height="15" fill="rgb(216,222,40)" fg:x="4528" fg:w="80"/><text x="4.9582%" y="463.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (80 samples, 0.08%)</title><rect x="4.7082%" y="437" width="0.0832%" height="15" fill="rgb(234,217,39)" fg:x="4528" fg:w="80"/><text x="4.9582%" y="447.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (80 samples, 0.08%)</title><rect x="4.7082%" y="421" width="0.0832%" height="15" fill="rgb(207,178,40)" fg:x="4528" fg:w="80"/><text x="4.9582%" y="431.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::finish (81 samples, 0.08%)</title><rect x="4.7082%" y="533" width="0.0842%" height="15" fill="rgb(221,136,13)" fg:x="4528" fg:w="81"/><text x="4.9582%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;ggez::graphics::internal_canvas::InternalCanvas&gt; (81 samples, 0.08%)</title><rect x="4.7082%" y="517" width="0.0842%" height="15" fill="rgb(249,199,10)" fg:x="4528" fg:w="81"/><text x="4.9582%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (81 samples, 0.08%)</title><rect x="4.7082%" y="501" width="0.0842%" height="15" fill="rgb(249,222,13)" fg:x="4528" fg:w="81"/><text x="4.9582%" y="511.50"></text></g><g><title>_XSend (25 samples, 0.03%)</title><rect x="4.7997%" y="373" width="0.0260%" height="15" fill="rgb(244,185,38)" fg:x="4616" fg:w="25"/><text x="5.0497%" y="383.50"></text></g><g><title>xcb_writev (25 samples, 0.03%)</title><rect x="4.7997%" y="357" width="0.0260%" height="15" fill="rgb(236,202,9)" fg:x="4616" fg:w="25"/><text x="5.0497%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (24 samples, 0.02%)</title><rect x="4.8007%" y="341" width="0.0250%" height="15" fill="rgb(250,229,37)" fg:x="4617" fg:w="24"/><text x="5.0507%" y="351.50"></text></g><g><title>[libxcb.so.1.1.0] (24 samples, 0.02%)</title><rect x="4.8007%" y="325" width="0.0250%" height="15" fill="rgb(206,174,23)" fg:x="4617" fg:w="24"/><text x="5.0507%" y="335.50"></text></g><g><title>__GI___writev (21 samples, 0.02%)</title><rect x="4.8038%" y="309" width="0.0218%" height="15" fill="rgb(211,33,43)" fg:x="4620" fg:w="21"/><text x="5.0538%" y="319.50"></text></g><g><title>__GI___writev (21 samples, 0.02%)</title><rect x="4.8038%" y="293" width="0.0218%" height="15" fill="rgb(245,58,50)" fg:x="4620" fg:w="21"/><text x="5.0538%" y="303.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="4.8049%" y="277" width="0.0208%" height="15" fill="rgb(244,68,36)" fg:x="4621" fg:w="20"/><text x="5.0549%" y="287.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="4.8059%" y="261" width="0.0198%" height="15" fill="rgb(232,229,15)" fg:x="4622" fg:w="19"/><text x="5.0559%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="4.8059%" y="245" width="0.0198%" height="15" fill="rgb(254,30,23)" fg:x="4622" fg:w="19"/><text x="5.0559%" y="255.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="4.8070%" y="229" width="0.0187%" height="15" fill="rgb(235,160,14)" fg:x="4623" fg:w="18"/><text x="5.0570%" y="239.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="4.8070%" y="213" width="0.0187%" height="15" fill="rgb(212,155,44)" fg:x="4623" fg:w="18"/><text x="5.0570%" y="223.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="4.8080%" y="197" width="0.0177%" height="15" fill="rgb(226,2,50)" fg:x="4624" fg:w="17"/><text x="5.0580%" y="207.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="4.8080%" y="181" width="0.0177%" height="15" fill="rgb(234,177,6)" fg:x="4624" fg:w="17"/><text x="5.0580%" y="191.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="4.8090%" y="165" width="0.0166%" height="15" fill="rgb(217,24,9)" fg:x="4625" fg:w="16"/><text x="5.0590%" y="175.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="4.8101%" y="149" width="0.0156%" height="15" fill="rgb(220,13,46)" fg:x="4626" fg:w="15"/><text x="5.0601%" y="159.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="4.8111%" y="133" width="0.0146%" height="15" fill="rgb(239,221,27)" fg:x="4627" fg:w="14"/><text x="5.0611%" y="143.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="4.8111%" y="117" width="0.0146%" height="15" fill="rgb(222,198,25)" fg:x="4627" fg:w="14"/><text x="5.0611%" y="127.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="4.8122%" y="101" width="0.0135%" height="15" fill="rgb(211,99,13)" fg:x="4628" fg:w="13"/><text x="5.0622%" y="111.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="4.8122%" y="85" width="0.0135%" height="15" fill="rgb(232,111,31)" fg:x="4628" fg:w="13"/><text x="5.0622%" y="95.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="4.8142%" y="69" width="0.0114%" height="15" fill="rgb(245,82,37)" fg:x="4630" fg:w="11"/><text x="5.0642%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="4.8142%" y="53" width="0.0114%" height="15" fill="rgb(227,149,46)" fg:x="4630" fg:w="11"/><text x="5.0642%" y="63.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="4.8153%" y="37" width="0.0104%" height="15" fill="rgb(218,36,50)" fg:x="4631" fg:w="10"/><text x="5.0653%" y="47.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.01%)</title><rect x="4.8267%" y="325" width="0.0114%" height="15" fill="rgb(226,80,48)" fg:x="4642" fg:w="11"/><text x="5.0767%" y="335.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::drawable_size (62 samples, 0.06%)</title><rect x="4.7934%" y="501" width="0.0645%" height="15" fill="rgb(238,224,15)" fg:x="4610" fg:w="62"/><text x="5.0434%" y="511.50"></text></g><g><title>winit::window::Window::inner_size (62 samples, 0.06%)</title><rect x="4.7934%" y="485" width="0.0645%" height="15" fill="rgb(241,136,10)" fg:x="4610" fg:w="62"/><text x="5.0434%" y="495.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (62 samples, 0.06%)</title><rect x="4.7934%" y="469" width="0.0645%" height="15" fill="rgb(208,32,45)" fg:x="4610" fg:w="62"/><text x="5.0434%" y="479.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (62 samples, 0.06%)</title><rect x="4.7934%" y="453" width="0.0645%" height="15" fill="rgb(207,135,9)" fg:x="4610" fg:w="62"/><text x="5.0434%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (60 samples, 0.06%)</title><rect x="4.7955%" y="437" width="0.0624%" height="15" fill="rgb(206,86,44)" fg:x="4612" fg:w="60"/><text x="5.0455%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (60 samples, 0.06%)</title><rect x="4.7955%" y="421" width="0.0624%" height="15" fill="rgb(245,177,15)" fg:x="4612" fg:w="60"/><text x="5.0455%" y="431.50"></text></g><g><title>XGetGeometry (60 samples, 0.06%)</title><rect x="4.7955%" y="405" width="0.0624%" height="15" fill="rgb(206,64,50)" fg:x="4612" fg:w="60"/><text x="5.0455%" y="415.50"></text></g><g><title>_XReply (59 samples, 0.06%)</title><rect x="4.7966%" y="389" width="0.0613%" height="15" fill="rgb(234,36,40)" fg:x="4613" fg:w="59"/><text x="5.0466%" y="399.50"></text></g><g><title>xcb_wait_for_reply64 (31 samples, 0.03%)</title><rect x="4.8257%" y="373" width="0.0322%" height="15" fill="rgb(213,64,8)" fg:x="4641" fg:w="31"/><text x="5.0757%" y="383.50"></text></g><g><title>[libxcb.so.1.1.0] (31 samples, 0.03%)</title><rect x="4.8257%" y="357" width="0.0322%" height="15" fill="rgb(210,75,36)" fg:x="4641" fg:w="31"/><text x="5.0757%" y="367.50"></text></g><g><title>[libxcb.so.1.1.0] (31 samples, 0.03%)</title><rect x="4.8257%" y="341" width="0.0322%" height="15" fill="rgb(229,88,21)" fg:x="4641" fg:w="31"/><text x="5.0757%" y="351.50"></text></g><g><title>__GI___poll (19 samples, 0.02%)</title><rect x="4.8382%" y="325" width="0.0198%" height="15" fill="rgb(252,204,47)" fg:x="4653" fg:w="19"/><text x="5.0882%" y="335.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="4.8382%" y="309" width="0.0198%" height="15" fill="rgb(208,77,27)" fg:x="4653" fg:w="19"/><text x="5.0882%" y="319.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="4.8423%" y="293" width="0.0156%" height="15" fill="rgb(221,76,26)" fg:x="4657" fg:w="15"/><text x="5.0923%" y="303.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="4.8423%" y="277" width="0.0156%" height="15" fill="rgb(225,139,18)" fg:x="4657" fg:w="15"/><text x="5.0923%" y="287.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="4.8444%" y="261" width="0.0135%" height="15" fill="rgb(230,137,11)" fg:x="4659" fg:w="13"/><text x="5.0944%" y="271.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="4.8454%" y="245" width="0.0125%" height="15" fill="rgb(212,28,1)" fg:x="4660" fg:w="12"/><text x="5.0954%" y="255.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="4.8475%" y="229" width="0.0104%" height="15" fill="rgb(248,164,17)" fg:x="4662" fg:w="10"/><text x="5.0975%" y="239.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="4.8475%" y="213" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="4662" fg:w="10"/><text x="5.0975%" y="223.50"></text></g><g><title>wgpu_core::device::queue::prepare_staging_buffer (11 samples, 0.01%)</title><rect x="4.8642%" y="437" width="0.0114%" height="15" fill="rgb(243,84,45)" fg:x="4678" fg:w="11"/><text x="5.1142%" y="447.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_buffer (11 samples, 0.01%)</title><rect x="4.8642%" y="421" width="0.0114%" height="15" fill="rgb(252,49,23)" fg:x="4678" fg:w="11"/><text x="5.1142%" y="431.50"></text></g><g><title>wgpu::Queue::write_buffer (16 samples, 0.02%)</title><rect x="4.8600%" y="501" width="0.0166%" height="15" fill="rgb(215,19,7)" fg:x="4674" fg:w="16"/><text x="5.1100%" y="511.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_write_buffer (16 samples, 0.02%)</title><rect x="4.8600%" y="485" width="0.0166%" height="15" fill="rgb(238,81,41)" fg:x="4674" fg:w="16"/><text x="5.1100%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_write_buffer (16 samples, 0.02%)</title><rect x="4.8600%" y="469" width="0.0166%" height="15" fill="rgb(210,199,37)" fg:x="4674" fg:w="16"/><text x="5.1100%" y="479.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (16 samples, 0.02%)</title><rect x="4.8600%" y="453" width="0.0166%" height="15" fill="rgb(244,192,49)" fg:x="4674" fg:w="16"/><text x="5.1100%" y="463.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::from_image (82 samples, 0.09%)</title><rect x="4.7924%" y="533" width="0.0853%" height="15" fill="rgb(226,211,11)" fg:x="4609" fg:w="82"/><text x="5.0424%" y="543.50"></text></g><g><title>ggez::graphics::internal_canvas::InternalCanvas::new (82 samples, 0.09%)</title><rect x="4.7924%" y="517" width="0.0853%" height="15" fill="rgb(236,162,54)" fg:x="4609" fg:w="82"/><text x="5.0424%" y="527.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finish (208 samples, 0.22%)</title><rect x="4.6635%" y="565" width="0.2163%" height="15" fill="rgb(220,229,9)" fg:x="4485" fg:w="208"/><text x="4.9135%" y="575.50"></text></g><g><title>ggez::graphics::canvas::Canvas::finalize (208 samples, 0.22%)</title><rect x="4.6635%" y="549" width="0.2163%" height="15" fill="rgb(250,87,22)" fg:x="4485" fg:w="208"/><text x="4.9135%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.04%)</title><rect x="4.8818%" y="469" width="0.0437%" height="15" fill="rgb(239,43,17)" fg:x="4695" fg:w="42"/><text x="5.1318%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.06%)</title><rect x="4.9255%" y="453" width="0.0593%" height="15" fill="rgb(231,177,25)" fg:x="4737" fg:w="57"/><text x="5.1755%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 0.05%)</title><rect x="4.9848%" y="437" width="0.0520%" height="15" fill="rgb(219,179,1)" fg:x="4794" fg:w="50"/><text x="5.2348%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (49 samples, 0.05%)</title><rect x="5.3913%" y="421" width="0.0509%" height="15" fill="rgb(238,219,53)" fg:x="5185" fg:w="49"/><text x="5.6413%" y="431.50"></text></g><g><title>ggez::graphics::draw::DrawParam::dest (1,859 samples, 1.93%)</title><rect x="5.4423%" y="421" width="1.9330%" height="15" fill="rgb(232,167,36)" fg:x="5234" fg:w="1859"/><text x="5.6923%" y="431.50">g..</text></g><g><title>ggez::graphics::draw::DrawParam::get_dest_mut (48 samples, 0.05%)</title><rect x="7.3253%" y="405" width="0.0499%" height="15" fill="rgb(244,19,51)" fg:x="7045" fg:w="48"/><text x="7.5753%" y="415.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawParam as core::default::Default&gt;::default (99 samples, 0.10%)</title><rect x="7.4148%" y="405" width="0.1029%" height="15" fill="rgb(224,6,22)" fg:x="7131" fg:w="99"/><text x="7.6648%" y="415.50"></text></g><g><title>ggez::graphics::draw::DrawParam::new (142 samples, 0.15%)</title><rect x="7.3753%" y="421" width="0.1477%" height="15" fill="rgb(224,145,5)" fg:x="7093" fg:w="142"/><text x="7.6253%" y="431.50"></text></g><g><title>ggez::graphics::draw::DrawParam::rotation (1,234 samples, 1.28%)</title><rect x="7.5229%" y="421" width="1.2831%" height="15" fill="rgb(234,130,49)" fg:x="7235" fg:w="1234"/><text x="7.7729%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (48 samples, 0.05%)</title><rect x="8.9921%" y="405" width="0.0499%" height="15" fill="rgb(254,6,2)" fg:x="8648" fg:w="48"/><text x="9.2421%" y="415.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw::{{closure}} (3,853 samples, 4.01%)</title><rect x="5.0368%" y="437" width="4.0063%" height="15" fill="rgb(208,96,46)" fg:x="4844" fg:w="3853"/><text x="5.2868%" y="447.50">&lt;neu..</text></g><g><title>ggez::graphics::draw::DrawParam::scale (228 samples, 0.24%)</title><rect x="8.8060%" y="421" width="0.2371%" height="15" fill="rgb(239,3,39)" fg:x="8469" fg:w="228"/><text x="9.0560%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (722 samples, 0.75%)</title><rect x="9.0431%" y="437" width="0.7507%" height="15" fill="rgb(233,210,1)" fg:x="8697" fg:w="722"/><text x="9.2931%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (722 samples, 0.75%)</title><rect x="9.0431%" y="421" width="0.7507%" height="15" fill="rgb(244,137,37)" fg:x="8697" fg:w="722"/><text x="9.2931%" y="431.50"></text></g><g><title>core::ptr::write (722 samples, 0.75%)</title><rect x="9.0431%" y="405" width="0.7507%" height="15" fill="rgb(240,136,2)" fg:x="8697" fg:w="722"/><text x="9.2931%" y="415.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::as_std140 (185 samples, 0.19%)</title><rect x="10.2399%" y="405" width="0.1924%" height="15" fill="rgb(239,18,37)" fg:x="9848" fg:w="185"/><text x="10.4899%" y="415.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (185 samples, 0.19%)</title><rect x="10.2399%" y="389" width="0.1924%" height="15" fill="rgb(218,185,22)" fg:x="9848" fg:w="185"/><text x="10.4899%" y="399.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (185 samples, 0.19%)</title><rect x="10.2399%" y="373" width="0.1924%" height="15" fill="rgb(225,218,4)" fg:x="9848" fg:w="185"/><text x="10.4899%" y="383.50"></text></g><g><title>&lt;ggez::graphics::draw::DrawUniforms as crevice::std140::traits::AsStd140&gt;::as_std140 (1,218 samples, 1.27%)</title><rect x="9.8739%" y="421" width="1.2665%" height="15" fill="rgb(230,182,32)" fg:x="9496" fg:w="1218"/><text x="10.1239%" y="431.50"></text></g><g><title>crevice::imp::imp_mint::&lt;impl crevice::std140::traits::AsStd140 for mint::vector::Vector4&lt;f32&gt;&gt;::as_std140 (681 samples, 0.71%)</title><rect x="10.4322%" y="405" width="0.7081%" height="15" fill="rgb(242,56,43)" fg:x="10033" fg:w="681"/><text x="10.6822%" y="415.50"></text></g><g><title>&lt;T as crevice::std140::traits::AsStd140&gt;::as_std140 (681 samples, 0.71%)</title><rect x="10.4322%" y="389" width="0.7081%" height="15" fill="rgb(233,99,24)" fg:x="10033" fg:w="681"/><text x="10.6822%" y="399.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (129 samples, 0.13%)</title><rect x="12.5368%" y="373" width="0.1341%" height="15" fill="rgb(234,209,42)" fg:x="12057" fg:w="129"/><text x="12.7868%" y="383.50"></text></g><g><title>asuint (137 samples, 0.14%)</title><rect x="13.9332%" y="341" width="0.1425%" height="15" fill="rgb(227,7,12)" fg:x="13400" fg:w="137"/><text x="14.1832%" y="351.50"></text></g><g><title>exp2_inline (2,163 samples, 2.25%)</title><rect x="14.0757%" y="341" width="2.2491%" height="15" fill="rgb(245,203,43)" fg:x="13537" fg:w="2163"/><text x="14.3257%" y="351.50">e..</text></g><g><title>asuint64 (102 samples, 0.11%)</title><rect x="16.2187%" y="325" width="0.1061%" height="15" fill="rgb(238,205,33)" fg:x="15598" fg:w="102"/><text x="16.4687%" y="335.50"></text></g><g><title>log2_inline (986 samples, 1.03%)</title><rect x="16.3247%" y="341" width="1.0252%" height="15" fill="rgb(231,56,7)" fg:x="15700" fg:w="986"/><text x="16.5747%" y="351.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from::f (4,999 samples, 5.20%)</title><rect x="12.2321%" y="389" width="5.1979%" height="15" fill="rgb(244,186,29)" fg:x="11764" fg:w="4999"/><text x="12.4821%" y="399.50">&lt;ggez:..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (4,577 samples, 4.76%)</title><rect x="12.6709%" y="373" width="4.7591%" height="15" fill="rgb(234,111,31)" fg:x="12186" fg:w="4577"/><text x="12.9209%" y="383.50">std::f..</text></g><g><title>__powf_fma (4,566 samples, 4.75%)</title><rect x="12.6824%" y="357" width="4.7477%" height="15" fill="rgb(241,149,10)" fg:x="12197" fg:w="4566"/><text x="12.9324%" y="367.50">__powf..</text></g><g><title>zeroinfnan (77 samples, 0.08%)</title><rect x="17.3500%" y="341" width="0.0801%" height="15" fill="rgb(249,206,44)" fg:x="16686" fg:w="77"/><text x="17.6000%" y="351.50"></text></g><g><title>&lt;ggez::graphics::types::LinearColor as core::convert::From&lt;ggez::graphics::types::Color&gt;&gt;::from (5,016 samples, 5.22%)</title><rect x="12.2321%" y="405" width="5.2156%" height="15" fill="rgb(251,153,30)" fg:x="11764" fg:w="5016"/><text x="12.4821%" y="415.50">&lt;ggez:..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (17 samples, 0.02%)</title><rect x="17.4300%" y="389" width="0.0177%" height="15" fill="rgb(239,152,38)" fg:x="16763" fg:w="17"/><text x="17.6800%" y="399.50"></text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (79 samples, 0.08%)</title><rect x="17.4508%" y="405" width="0.0821%" height="15" fill="rgb(249,139,47)" fg:x="16783" fg:w="79"/><text x="17.7008%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (139 samples, 0.14%)</title><rect x="18.8982%" y="389" width="0.1445%" height="15" fill="rgb(244,64,35)" fg:x="18175" fg:w="139"/><text x="19.1482%" y="399.50"></text></g><g><title>glam::features::impl_mint::&lt;impl core::convert::From&lt;glam::f32::sse2::mat4::Mat4&gt; for mint::matrix::ColumnMatrix4&lt;f32&gt;&gt;::from (108 samples, 0.11%)</title><rect x="18.9305%" y="373" width="0.1123%" height="15" fill="rgb(216,46,15)" fg:x="18206" fg:w="108"/><text x="19.1805%" y="383.50"></text></g><g><title>glam::f32::sse2::mat4::Mat4::transpose (150 samples, 0.16%)</title><rect x="19.0459%" y="389" width="0.1560%" height="15" fill="rgb(250,74,19)" fg:x="18317" fg:w="150"/><text x="19.2959%" y="399.50"></text></g><g><title>core::core_arch::x86::sse::_mm_shuffle_ps (87 samples, 0.09%)</title><rect x="19.1114%" y="373" width="0.0905%" height="15" fill="rgb(249,42,33)" fg:x="18380" fg:w="87"/><text x="19.3614%" y="383.50"></text></g><g><title>abstop12 (50 samples, 0.05%)</title><rect x="19.4576%" y="341" width="0.0520%" height="15" fill="rgb(242,149,17)" fg:x="18713" fg:w="50"/><text x="19.7076%" y="351.50"></text></g><g><title>reduce_fast (15 samples, 0.02%)</title><rect x="19.5096%" y="341" width="0.0156%" height="15" fill="rgb(244,29,21)" fg:x="18763" fg:w="15"/><text x="19.7596%" y="351.50"></text></g><g><title>reduce_large (369 samples, 0.38%)</title><rect x="19.5252%" y="341" width="0.3837%" height="15" fill="rgb(220,130,37)" fg:x="18778" fg:w="369"/><text x="19.7752%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14,731 samples, 15.32%)</title><rect x="4.9848%" y="453" width="15.3172%" height="15" fill="rgb(211,67,2)" fg:x="4794" fg:w="14731"/><text x="5.2348%" y="463.50">core::iter::adapters::m..</text></g><g><title>ggez::graphics::instance::InstanceArray::set::{{closure}} (10,106 samples, 10.51%)</title><rect x="9.7938%" y="437" width="10.5081%" height="15" fill="rgb(235,68,52)" fg:x="9419" fg:w="10106"/><text x="10.0438%" y="447.50">ggez::graphics:..</text></g><g><title>ggez::graphics::draw::DrawUniforms::from_param (8,811 samples, 9.16%)</title><rect x="11.1403%" y="421" width="9.1616%" height="15" fill="rgb(246,142,3)" fg:x="10714" fg:w="8811"/><text x="11.3903%" y="431.50">ggez::graphic..</text></g><g><title>ggez::graphics::draw::Transform::to_bare_matrix (2,663 samples, 2.77%)</title><rect x="17.5330%" y="405" width="2.7690%" height="15" fill="rgb(241,25,7)" fg:x="16862" fg:w="2663"/><text x="17.7830%" y="415.50">gg..</text></g><g><title>std::f32::&lt;impl f32&gt;::sin_cos (1,058 samples, 1.10%)</title><rect x="19.2019%" y="389" width="1.1001%" height="15" fill="rgb(242,119,39)" fg:x="18467" fg:w="1058"/><text x="19.4519%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sin (1,058 samples, 1.10%)</title><rect x="19.2019%" y="373" width="1.1001%" height="15" fill="rgb(241,98,45)" fg:x="18467" fg:w="1058"/><text x="19.4519%" y="383.50"></text></g><g><title>__sincosf_fma (1,058 samples, 1.10%)</title><rect x="19.2019%" y="357" width="1.1001%" height="15" fill="rgb(254,28,30)" fg:x="18467" fg:w="1058"/><text x="19.4519%" y="367.50"></text></g><g><title>sincosf_poly (378 samples, 0.39%)</title><rect x="19.9089%" y="341" width="0.3930%" height="15" fill="rgb(241,142,54)" fg:x="19147" fg:w="378"/><text x="20.1589%" y="351.50"></text></g><g><title>v2df_to_sf (89 samples, 0.09%)</title><rect x="20.2094%" y="325" width="0.0925%" height="15" fill="rgb(222,85,15)" fg:x="19436" fg:w="89"/><text x="20.4594%" y="335.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::draw (17,607 samples, 18.31%)</title><rect x="1.9954%" y="581" width="18.3076%" height="15" fill="rgb(210,85,47)" fg:x="1919" fg:w="17607"/><text x="2.2454%" y="591.50">&lt;neuralang::MainState as ggez..</text></g><g><title>ggez::graphics::instance::InstanceArray::set (14,831 samples, 15.42%)</title><rect x="4.8818%" y="565" width="15.4212%" height="15" fill="rgb(224,206,25)" fg:x="4695" fg:w="14831"/><text x="5.1318%" y="575.50">ggez::graphics::instance..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14,831 samples, 15.42%)</title><rect x="4.8818%" y="549" width="15.4212%" height="15" fill="rgb(243,201,19)" fg:x="4695" fg:w="14831"/><text x="5.1318%" y="559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14,831 samples, 15.42%)</title><rect x="4.8818%" y="533" width="15.4212%" height="15" fill="rgb(236,59,4)" fg:x="4695" fg:w="14831"/><text x="5.1318%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (14,831 samples, 15.42%)</title><rect x="4.8818%" y="517" width="15.4212%" height="15" fill="rgb(254,179,45)" fg:x="4695" fg:w="14831"/><text x="5.1318%" y="527.50">alloc::vec::Vec&lt;T,A&gt;::ex..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14,831 samples, 15.42%)</title><rect x="4.8818%" y="501" width="15.4212%" height="15" fill="rgb(226,14,10)" fg:x="4695" fg:w="14831"/><text x="5.1318%" y="511.50">core::iter::traits::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14,831 samples, 15.42%)</title><rect x="4.8818%" y="485" width="15.4212%" height="15" fill="rgb(244,27,41)" fg:x="4695" fg:w="14831"/><text x="5.1318%" y="495.50">&lt;core::iter::adapters::m..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (14,789 samples, 15.38%)</title><rect x="4.9255%" y="469" width="15.3775%" height="15" fill="rgb(235,35,32)" fg:x="4737" fg:w="14789"/><text x="5.1755%" y="479.50">core::iter::traits::iter..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (2,773 samples, 2.88%)</title><rect x="20.3040%" y="549" width="2.8833%" height="15" fill="rgb(218,68,31)" fg:x="19527" fg:w="2773"/><text x="20.5540%" y="559.50">&lt;n..</text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,110 samples, 2.19%)</title><rect x="41.2881%" y="533" width="2.1940%" height="15" fill="rgb(207,120,37)" fg:x="39708" fg:w="2110"/><text x="41.5381%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,110 samples, 2.19%)</title><rect x="41.2881%" y="517" width="2.1940%" height="15" fill="rgb(227,98,0)" fg:x="39708" fg:w="2110"/><text x="41.5381%" y="527.50">&lt;..</text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (350 samples, 0.36%)</title><rect x="43.4821%" y="501" width="0.3639%" height="15" fill="rgb(207,7,3)" fg:x="41818" fg:w="350"/><text x="43.7321%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (961 samples, 1.00%)</title><rect x="43.4821%" y="533" width="0.9992%" height="15" fill="rgb(206,98,19)" fg:x="41818" fg:w="961"/><text x="43.7321%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (961 samples, 1.00%)</title><rect x="43.4821%" y="517" width="0.9992%" height="15" fill="rgb(217,5,26)" fg:x="41818" fg:w="961"/><text x="43.7321%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (611 samples, 0.64%)</title><rect x="43.8460%" y="501" width="0.6353%" height="15" fill="rgb(235,190,38)" fg:x="42168" fg:w="611"/><text x="44.0960%" y="511.50"></text></g><g><title>&lt;core::ops::index_range::IndexRange as core::iter::traits::iterator::Iterator&gt;::next (754 samples, 0.78%)</title><rect x="44.4813%" y="517" width="0.7840%" height="15" fill="rgb(247,86,24)" fg:x="42779" fg:w="754"/><text x="44.7313%" y="527.50"></text></g><g><title>core::ops::index_range::IndexRange::next_unchecked (713 samples, 0.74%)</title><rect x="44.5239%" y="501" width="0.7414%" height="15" fill="rgb(205,101,16)" fg:x="42820" fg:w="713"/><text x="44.7739%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (113 samples, 0.12%)</title><rect x="45.2653%" y="453" width="0.1175%" height="15" fill="rgb(246,168,33)" fg:x="43533" fg:w="113"/><text x="45.5153%" y="463.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (878 samples, 0.91%)</title><rect x="44.4813%" y="533" width="0.9129%" height="15" fill="rgb(231,114,1)" fg:x="42779" fg:w="878"/><text x="44.7313%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (124 samples, 0.13%)</title><rect x="45.2653%" y="517" width="0.1289%" height="15" fill="rgb(207,184,53)" fg:x="43533" fg:w="124"/><text x="45.5153%" y="527.50"></text></g><g><title>&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (124 samples, 0.13%)</title><rect x="45.2653%" y="501" width="0.1289%" height="15" fill="rgb(224,95,51)" fg:x="43533" fg:w="124"/><text x="45.5153%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (124 samples, 0.13%)</title><rect x="45.2653%" y="485" width="0.1289%" height="15" fill="rgb(212,188,45)" fg:x="43533" fg:w="124"/><text x="45.5153%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (124 samples, 0.13%)</title><rect x="45.2653%" y="469" width="0.1289%" height="15" fill="rgb(223,154,38)" fg:x="43533" fg:w="124"/><text x="45.5153%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (11 samples, 0.01%)</title><rect x="45.3828%" y="453" width="0.0114%" height="15" fill="rgb(251,22,52)" fg:x="43646" fg:w="11"/><text x="45.6328%" y="463.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (62 samples, 0.06%)</title><rect x="47.2877%" y="485" width="0.0645%" height="15" fill="rgb(229,209,22)" fg:x="45478" fg:w="62"/><text x="47.5377%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,957 samples, 2.03%)</title><rect x="45.3942%" y="533" width="2.0349%" height="15" fill="rgb(234,138,34)" fg:x="43657" fg:w="1957"/><text x="45.6442%" y="543.50">&lt;..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (136 samples, 0.14%)</title><rect x="47.2877%" y="517" width="0.1414%" height="15" fill="rgb(212,95,11)" fg:x="45478" fg:w="136"/><text x="47.5377%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (136 samples, 0.14%)</title><rect x="47.2877%" y="501" width="0.1414%" height="15" fill="rgb(240,179,47)" fg:x="45478" fg:w="136"/><text x="47.5377%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (74 samples, 0.08%)</title><rect x="47.3522%" y="485" width="0.0769%" height="15" fill="rgb(240,163,11)" fg:x="45540" fg:w="74"/><text x="47.6022%" y="495.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (679 samples, 0.71%)</title><rect x="47.4291%" y="533" width="0.7060%" height="15" fill="rgb(236,37,12)" fg:x="45614" fg:w="679"/><text x="47.6791%" y="543.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="48.1351%" y="533" width="0.0478%" height="15" fill="rgb(232,164,16)" fg:x="46293" fg:w="46"/><text x="48.3851%" y="543.50"></text></g><g><title>[unknown] (42 samples, 0.04%)</title><rect x="48.1393%" y="517" width="0.0437%" height="15" fill="rgb(244,205,15)" fg:x="46297" fg:w="42"/><text x="48.3893%" y="527.50"></text></g><g><title>[unknown] (41 samples, 0.04%)</title><rect x="48.1403%" y="501" width="0.0426%" height="15" fill="rgb(223,117,47)" fg:x="46298" fg:w="41"/><text x="48.3903%" y="511.50"></text></g><g><title>[unknown] (40 samples, 0.04%)</title><rect x="48.1414%" y="485" width="0.0416%" height="15" fill="rgb(244,107,35)" fg:x="46299" fg:w="40"/><text x="48.3914%" y="495.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="48.1466%" y="469" width="0.0364%" height="15" fill="rgb(205,140,8)" fg:x="46304" fg:w="35"/><text x="48.3966%" y="479.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="48.1476%" y="453" width="0.0354%" height="15" fill="rgb(228,84,46)" fg:x="46305" fg:w="34"/><text x="48.3976%" y="463.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="48.1486%" y="437" width="0.0343%" height="15" fill="rgb(254,188,9)" fg:x="46306" fg:w="33"/><text x="48.3986%" y="447.50"></text></g><g><title>[unknown] (26 samples, 0.03%)</title><rect x="48.1559%" y="421" width="0.0270%" height="15" fill="rgb(206,112,54)" fg:x="46313" fg:w="26"/><text x="48.4059%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.03%)</title><rect x="48.1570%" y="405" width="0.0260%" height="15" fill="rgb(216,84,49)" fg:x="46314" fg:w="25"/><text x="48.4070%" y="415.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="48.1601%" y="389" width="0.0229%" height="15" fill="rgb(214,194,35)" fg:x="46317" fg:w="22"/><text x="48.4101%" y="399.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="48.1642%" y="373" width="0.0187%" height="15" fill="rgb(249,28,3)" fg:x="46321" fg:w="18"/><text x="48.4142%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="48.1694%" y="357" width="0.0135%" height="15" fill="rgb(222,56,52)" fg:x="46326" fg:w="13"/><text x="48.4194%" y="367.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (22 samples, 0.02%)</title><rect x="48.1830%" y="533" width="0.0229%" height="15" fill="rgb(245,217,50)" fg:x="46339" fg:w="22"/><text x="48.4330%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (22 samples, 0.02%)</title><rect x="48.1830%" y="517" width="0.0229%" height="15" fill="rgb(213,201,24)" fg:x="46339" fg:w="22"/><text x="48.4330%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (22 samples, 0.02%)</title><rect x="48.1830%" y="501" width="0.0229%" height="15" fill="rgb(248,116,28)" fg:x="46339" fg:w="22"/><text x="48.4330%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="48.2058%" y="533" width="0.0229%" height="15" fill="rgb(219,72,43)" fg:x="46361" fg:w="22"/><text x="48.4558%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (19 samples, 0.02%)</title><rect x="48.2287%" y="533" width="0.0198%" height="15" fill="rgb(209,138,14)" fg:x="46383" fg:w="19"/><text x="48.4787%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::as_ref (1,195 samples, 1.24%)</title><rect x="48.2485%" y="533" width="1.2426%" height="15" fill="rgb(222,18,33)" fg:x="46402" fg:w="1195"/><text x="48.4985%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (158 samples, 0.16%)</title><rect x="49.4910%" y="533" width="0.1643%" height="15" fill="rgb(213,199,7)" fg:x="47597" fg:w="158"/><text x="49.7410%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (125 samples, 0.13%)</title><rect x="49.6553%" y="533" width="0.1300%" height="15" fill="rgb(250,110,10)" fg:x="47755" fg:w="125"/><text x="49.9053%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (125 samples, 0.13%)</title><rect x="49.6553%" y="517" width="0.1300%" height="15" fill="rgb(248,123,6)" fg:x="47755" fg:w="125"/><text x="49.9053%" y="527.50"></text></g><g><title>neuralang::add_2d (1,315 samples, 1.37%)</title><rect x="49.7853%" y="533" width="1.3673%" height="15" fill="rgb(206,91,31)" fg:x="47880" fg:w="1315"/><text x="50.0353%" y="543.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="60.6511%" y="517" width="0.0146%" height="15" fill="rgb(211,154,13)" fg:x="58330" fg:w="14"/><text x="60.9011%" y="527.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="60.6522%" y="501" width="0.0135%" height="15" fill="rgb(225,148,7)" fg:x="58331" fg:w="13"/><text x="60.9022%" y="511.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="60.6532%" y="485" width="0.0125%" height="15" fill="rgb(220,160,43)" fg:x="58332" fg:w="12"/><text x="60.9032%" y="495.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="60.6532%" y="469" width="0.0125%" height="15" fill="rgb(213,52,39)" fg:x="58332" fg:w="12"/><text x="60.9032%" y="479.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="60.6553%" y="453" width="0.0104%" height="15" fill="rgb(243,137,7)" fg:x="58334" fg:w="10"/><text x="60.9053%" y="463.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="60.6553%" y="437" width="0.0104%" height="15" fill="rgb(230,79,13)" fg:x="58334" fg:w="10"/><text x="60.9053%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="60.6553%" y="421" width="0.0104%" height="15" fill="rgb(247,105,23)" fg:x="58334" fg:w="10"/><text x="60.9053%" y="431.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="63.5594%" y="501" width="0.0250%" height="15" fill="rgb(223,179,41)" fg:x="61127" fg:w="24"/><text x="63.8094%" y="511.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="63.5657%" y="485" width="0.0187%" height="15" fill="rgb(218,9,34)" fg:x="61133" fg:w="18"/><text x="63.8157%" y="495.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="63.5657%" y="469" width="0.0187%" height="15" fill="rgb(222,106,8)" fg:x="61133" fg:w="18"/><text x="63.8157%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="63.5657%" y="453" width="0.0187%" height="15" fill="rgb(211,220,0)" fg:x="61133" fg:w="18"/><text x="63.8157%" y="463.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="63.5677%" y="437" width="0.0166%" height="15" fill="rgb(229,52,16)" fg:x="61135" fg:w="16"/><text x="63.8177%" y="447.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="63.5688%" y="421" width="0.0156%" height="15" fill="rgb(212,155,18)" fg:x="61136" fg:w="15"/><text x="63.8188%" y="431.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="63.5709%" y="405" width="0.0135%" height="15" fill="rgb(242,21,14)" fg:x="61138" fg:w="13"/><text x="63.8209%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="63.5719%" y="389" width="0.0125%" height="15" fill="rgb(222,19,48)" fg:x="61139" fg:w="12"/><text x="63.8219%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="63.5719%" y="373" width="0.0125%" height="15" fill="rgb(232,45,27)" fg:x="61139" fg:w="12"/><text x="63.8219%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="63.5740%" y="357" width="0.0104%" height="15" fill="rgb(249,103,42)" fg:x="61141" fg:w="10"/><text x="63.8240%" y="367.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (837 samples, 0.87%)</title><rect x="63.5844%" y="501" width="0.8703%" height="15" fill="rgb(246,81,33)" fg:x="61151" fg:w="837"/><text x="63.8344%" y="511.50"></text></g><g><title>neuralang::balls_collide (16,186 samples, 16.83%)</title><rect x="51.1526%" y="533" width="16.8301%" height="15" fill="rgb(252,33,42)" fg:x="49195" fg:w="16186"/><text x="51.4026%" y="543.50">neuralang::balls_collide</text></g><g><title>neuralang::dist_2d (7,037 samples, 7.32%)</title><rect x="60.6657%" y="517" width="7.3170%" height="15" fill="rgb(209,212,41)" fg:x="58344" fg:w="7037"/><text x="60.9157%" y="527.50">neuralang:..</text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (3,393 samples, 3.53%)</title><rect x="64.4547%" y="501" width="3.5280%" height="15" fill="rgb(207,154,6)" fg:x="61988" fg:w="3393"/><text x="64.7047%" y="511.50">std..</text></g><g><title>std::f32::&lt;impl f32&gt;::powi (17 samples, 0.02%)</title><rect x="68.1751%" y="501" width="0.0177%" height="15" fill="rgb(223,64,47)" fg:x="65566" fg:w="17"/><text x="68.4251%" y="511.50"></text></g><g><title>neuralang::food_collide (334 samples, 0.35%)</title><rect x="67.9827%" y="533" width="0.3473%" height="15" fill="rgb(211,161,38)" fg:x="65381" fg:w="334"/><text x="68.2327%" y="543.50"></text></g><g><title>neuralang::dist_2d (295 samples, 0.31%)</title><rect x="68.0232%" y="517" width="0.3067%" height="15" fill="rgb(219,138,40)" fg:x="65420" fg:w="295"/><text x="68.2732%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (132 samples, 0.14%)</title><rect x="68.1927%" y="501" width="0.1373%" height="15" fill="rgb(241,228,46)" fg:x="65583" fg:w="132"/><text x="68.4427%" y="511.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powi (58 samples, 0.06%)</title><rect x="69.4561%" y="501" width="0.0603%" height="15" fill="rgb(223,209,38)" fg:x="66798" fg:w="58"/><text x="69.7061%" y="511.50"></text></g><g><title>neuralang::obstruct_collide (1,481 samples, 1.54%)</title><rect x="68.3300%" y="533" width="1.5399%" height="15" fill="rgb(236,164,45)" fg:x="65715" fg:w="1481"/><text x="68.5800%" y="543.50"></text></g><g><title>neuralang::dist_2d (759 samples, 0.79%)</title><rect x="69.0807%" y="517" width="0.7892%" height="15" fill="rgb(231,15,5)" fg:x="66437" fg:w="759"/><text x="69.3307%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::sqrt (340 samples, 0.35%)</title><rect x="69.5164%" y="501" width="0.3535%" height="15" fill="rgb(252,35,15)" fg:x="66856" fg:w="340"/><text x="69.7664%" y="511.50"></text></g><g><title>neuralang::oob (271 samples, 0.28%)</title><rect x="69.8699%" y="533" width="0.2818%" height="15" fill="rgb(248,181,18)" fg:x="67196" fg:w="271"/><text x="70.1199%" y="543.50"></text></g><g><title>neuralang::scale_2d (94 samples, 0.10%)</title><rect x="70.1517%" y="533" width="0.0977%" height="15" fill="rgb(233,39,42)" fg:x="67467" fg:w="94"/><text x="70.4017%" y="543.50"></text></g><g><title>neuralang::two_to_one (242 samples, 0.25%)</title><rect x="70.2494%" y="533" width="0.2516%" height="15" fill="rgb(238,110,33)" fg:x="67561" fg:w="242"/><text x="70.4994%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;V&gt; as splitmut::SplitMut&lt;usize,V&gt;&gt;::get1_mut (1,441 samples, 1.50%)</title><rect x="72.0712%" y="517" width="1.4983%" height="15" fill="rgb(233,195,10)" fg:x="69313" fg:w="1441"/><text x="72.3212%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (1,441 samples, 1.50%)</title><rect x="72.0712%" y="501" width="1.4983%" height="15" fill="rgb(254,105,3)" fg:x="69313" fg:w="1441"/><text x="72.3212%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (1,441 samples, 1.50%)</title><rect x="72.0712%" y="485" width="1.4983%" height="15" fill="rgb(221,225,9)" fg:x="69313" fg:w="1441"/><text x="72.3212%" y="495.50"></text></g><g><title>splitmut::check_r (172 samples, 0.18%)</title><rect x="73.5778%" y="517" width="0.1788%" height="15" fill="rgb(224,227,45)" fg:x="70762" fg:w="172"/><text x="73.8278%" y="527.50"></text></g><g><title>splitmut::from_r (216 samples, 0.22%)</title><rect x="73.7567%" y="517" width="0.2246%" height="15" fill="rgb(229,198,43)" fg:x="70934" fg:w="216"/><text x="74.0067%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (216 samples, 0.22%)</title><rect x="73.7567%" y="501" width="0.2246%" height="15" fill="rgb(206,209,35)" fg:x="70934" fg:w="216"/><text x="74.0067%" y="511.50"></text></g><g><title>neuralang::World::check_collisions (49,125 samples, 51.08%)</title><rect x="23.1874%" y="549" width="51.0798%" height="15" fill="rgb(245,195,53)" fg:x="22300" fg:w="49125"/><text x="23.4374%" y="559.50">neuralang::World::check_collisions</text></g><g><title>splitmut::SplitMut::get2_mut (3,622 samples, 3.77%)</title><rect x="70.5011%" y="533" width="3.7661%" height="15" fill="rgb(240,92,26)" fg:x="67803" fg:w="3622"/><text x="70.7511%" y="543.50">spli..</text></g><g><title>splitmut::to_r (275 samples, 0.29%)</title><rect x="73.9813%" y="517" width="0.2859%" height="15" fill="rgb(207,40,23)" fg:x="71150" fg:w="275"/><text x="74.2313%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (275 samples, 0.29%)</title><rect x="73.9813%" y="501" width="0.2859%" height="15" fill="rgb(223,111,35)" fg:x="71150" fg:w="275"/><text x="74.2313%" y="511.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (567 samples, 0.59%)</title><rect x="74.5708%" y="501" width="0.5896%" height="15" fill="rgb(229,147,28)" fg:x="71717" fg:w="567"/><text x="74.8208%" y="511.50"></text></g><g><title>neuralang::add_2d (164 samples, 0.17%)</title><rect x="75.1614%" y="501" width="0.1705%" height="15" fill="rgb(211,29,28)" fg:x="72285" fg:w="164"/><text x="75.4114%" y="511.50"></text></g><g><title>abstop12 (100 samples, 0.10%)</title><rect x="75.5711%" y="453" width="0.1040%" height="15" fill="rgb(228,72,33)" fg:x="72679" fg:w="100"/><text x="75.8211%" y="463.50"></text></g><g><title>reduce_fast (33 samples, 0.03%)</title><rect x="75.6751%" y="453" width="0.0343%" height="15" fill="rgb(205,214,31)" fg:x="72779" fg:w="33"/><text x="75.9251%" y="463.50"></text></g><g><title>reduce_large (440 samples, 0.46%)</title><rect x="75.7094%" y="453" width="0.4575%" height="15" fill="rgb(224,111,15)" fg:x="72812" fg:w="440"/><text x="75.9594%" y="463.50"></text></g><g><title>neuralang::dir_from_theta (1,316 samples, 1.37%)</title><rect x="75.3320%" y="501" width="1.3684%" height="15" fill="rgb(253,21,26)" fg:x="72449" fg:w="1316"/><text x="75.5820%" y="511.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::cos (1,316 samples, 1.37%)</title><rect x="75.3320%" y="485" width="1.3684%" height="15" fill="rgb(245,139,43)" fg:x="72449" fg:w="1316"/><text x="75.5820%" y="495.50"></text></g><g><title>__sincosf_fma (1,316 samples, 1.37%)</title><rect x="75.3320%" y="469" width="1.3684%" height="15" fill="rgb(252,170,7)" fg:x="72449" fg:w="1316"/><text x="75.5820%" y="479.50"></text></g><g><title>sincosf_poly (513 samples, 0.53%)</title><rect x="76.1669%" y="453" width="0.5334%" height="15" fill="rgb(231,118,14)" fg:x="73252" fg:w="513"/><text x="76.4169%" y="463.50"></text></g><g><title>v2df_to_sf (188 samples, 0.20%)</title><rect x="76.5048%" y="437" width="0.1955%" height="15" fill="rgb(238,83,0)" fg:x="73577" fg:w="188"/><text x="76.7548%" y="447.50"></text></g><g><title>neuralang::oob (135 samples, 0.14%)</title><rect x="76.7003%" y="501" width="0.1404%" height="15" fill="rgb(221,39,39)" fg:x="73765" fg:w="135"/><text x="76.9503%" y="511.50"></text></g><g><title>neuralang::scale_2d (333 samples, 0.35%)</title><rect x="76.8407%" y="501" width="0.3463%" height="15" fill="rgb(222,119,46)" fg:x="73900" fg:w="333"/><text x="77.0907%" y="511.50"></text></g><g><title>neuralang::World::move_balls (2,816 samples, 2.93%)</title><rect x="74.2672%" y="549" width="2.9281%" height="15" fill="rgb(222,165,49)" fg:x="71425" fg:w="2816"/><text x="74.5172%" y="559.50">ne..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2,816 samples, 2.93%)</title><rect x="74.2672%" y="533" width="2.9281%" height="15" fill="rgb(219,113,52)" fg:x="71425" fg:w="2816"/><text x="74.5172%" y="543.50">&lt;c..</text></g><g><title>neuralang::World::move_balls::{{closure}} (2,816 samples, 2.93%)</title><rect x="74.2672%" y="517" width="2.9281%" height="15" fill="rgb(214,7,15)" fg:x="71425" fg:w="2816"/><text x="74.5172%" y="527.50">ne..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (83 samples, 0.09%)</title><rect x="77.9231%" y="533" width="0.0863%" height="15" fill="rgb(235,32,4)" fg:x="74941" fg:w="83"/><text x="78.1731%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (83 samples, 0.09%)</title><rect x="77.9231%" y="517" width="0.0863%" height="15" fill="rgb(238,90,54)" fg:x="74941" fg:w="83"/><text x="78.1731%" y="527.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (83 samples, 0.09%)</title><rect x="77.9231%" y="501" width="0.0863%" height="15" fill="rgb(213,208,19)" fg:x="74941" fg:w="83"/><text x="78.1731%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.08%)</title><rect x="78.0094%" y="533" width="0.0769%" height="15" fill="rgb(233,156,4)" fg:x="75024" fg:w="74"/><text x="78.2594%" y="543.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (962 samples, 1.00%)</title><rect x="78.0864%" y="533" width="1.0003%" height="15" fill="rgb(207,194,5)" fg:x="75098" fg:w="962"/><text x="78.3364%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.01%)</title><rect x="79.3788%" y="517" width="0.0104%" height="15" fill="rgb(206,111,30)" fg:x="76341" fg:w="10"/><text x="79.6288%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.01%)</title><rect x="79.3788%" y="501" width="0.0104%" height="15" fill="rgb(243,70,54)" fg:x="76341" fg:w="10"/><text x="79.6288%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="79.3788%" y="485" width="0.0104%" height="15" fill="rgb(242,28,8)" fg:x="76341" fg:w="10"/><text x="79.6288%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (33 samples, 0.03%)</title><rect x="79.3892%" y="517" width="0.0343%" height="15" fill="rgb(219,106,18)" fg:x="76351" fg:w="33"/><text x="79.6392%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (33 samples, 0.03%)</title><rect x="79.3892%" y="501" width="0.0343%" height="15" fill="rgb(244,222,10)" fg:x="76351" fg:w="33"/><text x="79.6392%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (434 samples, 0.45%)</title><rect x="79.0866%" y="533" width="0.4513%" height="15" fill="rgb(236,179,52)" fg:x="76060" fg:w="434"/><text x="79.3366%" y="543.50"></text></g><g><title>core::ptr::write (110 samples, 0.11%)</title><rect x="79.4235%" y="517" width="0.1144%" height="15" fill="rgb(213,23,39)" fg:x="76384" fg:w="110"/><text x="79.6735%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (15 samples, 0.02%)</title><rect x="79.5379%" y="517" width="0.0156%" height="15" fill="rgb(238,48,10)" fg:x="76494" fg:w="15"/><text x="79.7879%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1,998 samples, 2.08%)</title><rect x="79.5535%" y="501" width="2.0775%" height="15" fill="rgb(251,196,23)" fg:x="76509" fg:w="1998"/><text x="79.8035%" y="511.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (270 samples, 0.28%)</title><rect x="81.6310%" y="501" width="0.2807%" height="15" fill="rgb(250,152,24)" fg:x="78507" fg:w="270"/><text x="81.8810%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (19 samples, 0.02%)</title><rect x="84.6890%" y="485" width="0.0198%" height="15" fill="rgb(209,150,17)" fg:x="81448" fg:w="19"/><text x="84.9390%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (19 samples, 0.02%)</title><rect x="84.6890%" y="469" width="0.0198%" height="15" fill="rgb(234,202,34)" fg:x="81448" fg:w="19"/><text x="84.9390%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::{{closure}} (688 samples, 0.72%)</title><rect x="84.7088%" y="485" width="0.7154%" height="15" fill="rgb(253,148,53)" fg:x="81467" fg:w="688"/><text x="84.9588%" y="495.50"></text></g><g><title>neuralang::World::update_cells::{{closure}} (688 samples, 0.72%)</title><rect x="84.7088%" y="469" width="0.7154%" height="15" fill="rgb(218,129,16)" fg:x="81467" fg:w="688"/><text x="84.9588%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (688 samples, 0.72%)</title><rect x="84.7088%" y="453" width="0.7154%" height="15" fill="rgb(216,85,19)" fg:x="81467" fg:w="688"/><text x="84.9588%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::ne (688 samples, 0.72%)</title><rect x="84.7088%" y="437" width="0.7154%" height="15" fill="rgb(235,228,7)" fg:x="81467" fg:w="688"/><text x="84.9588%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (3,401 samples, 3.54%)</title><rect x="81.9118%" y="501" width="3.5363%" height="15" fill="rgb(245,175,0)" fg:x="78777" fg:w="3401"/><text x="82.1618%" y="511.50">all..</text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.02%)</title><rect x="85.4242%" y="485" width="0.0239%" height="15" fill="rgb(208,168,36)" fg:x="82155" fg:w="23"/><text x="85.6742%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (5,721 samples, 5.95%)</title><rect x="79.5379%" y="533" width="5.9487%" height="15" fill="rgb(246,171,24)" fg:x="76494" fg:w="5721"/><text x="79.7879%" y="543.50">alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (5,706 samples, 5.93%)</title><rect x="79.5535%" y="517" width="5.9331%" height="15" fill="rgb(215,142,24)" fg:x="76509" fg:w="5706"/><text x="79.8035%" y="527.50">alloc::v..</text></g><g><title>core::mem::drop (37 samples, 0.04%)</title><rect x="85.4481%" y="501" width="0.0385%" height="15" fill="rgb(250,187,7)" fg:x="82178" fg:w="37"/><text x="85.6981%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;usize,alloc::alloc::Global&gt;&gt; (37 samples, 0.04%)</title><rect x="85.4481%" y="485" width="0.0385%" height="15" fill="rgb(228,66,33)" fg:x="82178" fg:w="37"/><text x="85.6981%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt;::retain_mut::BackshiftOnDrop&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="85.4481%" y="469" width="0.0385%" height="15" fill="rgb(234,215,21)" fg:x="82178" fg:w="37"/><text x="85.6981%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (16 samples, 0.02%)</title><rect x="85.4699%" y="453" width="0.0166%" height="15" fill="rgb(222,191,20)" fg:x="82199" fg:w="16"/><text x="85.7199%" y="463.50"></text></g><g><title>neuralang::add_2d (31 samples, 0.03%)</title><rect x="85.4866%" y="533" width="0.0322%" height="15" fill="rgb(245,79,54)" fg:x="82215" fg:w="31"/><text x="85.7366%" y="543.50"></text></g><g><title>neuralang::oob (30 samples, 0.03%)</title><rect x="85.5188%" y="533" width="0.0312%" height="15" fill="rgb(240,10,37)" fg:x="82246" fg:w="30"/><text x="85.7688%" y="543.50"></text></g><g><title>__fmodf (634 samples, 0.66%)</title><rect x="87.0307%" y="517" width="0.6592%" height="15" fill="rgb(214,192,32)" fg:x="83700" fg:w="634"/><text x="87.2807%" y="527.50"></text></g><g><title>__ieee754_fmodf (9,016 samples, 9.37%)</title><rect x="87.6899%" y="517" width="9.3748%" height="15" fill="rgb(209,36,54)" fg:x="84334" fg:w="9016"/><text x="87.9399%" y="527.50">__ieee754_fmo..</text></g><g><title>neuralang::pos_to_cell (11,075 samples, 11.52%)</title><rect x="85.5500%" y="533" width="11.5157%" height="15" fill="rgb(220,10,11)" fg:x="82276" fg:w="11075"/><text x="85.8000%" y="543.50">neuralang::pos_to..</text></g><g><title>neuralang::same_index (56 samples, 0.06%)</title><rect x="97.0657%" y="533" width="0.0582%" height="15" fill="rgb(221,106,17)" fg:x="93351" fg:w="56"/><text x="97.3157%" y="543.50"></text></g><g><title>&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update (73,884 samples, 76.82%)</title><rect x="20.3030%" y="581" width="76.8241%" height="15" fill="rgb(251,142,44)" fg:x="19526" fg:w="73884"/><text x="20.5530%" y="591.50">&lt;neuralang::MainState as ggez::event::EventHandler&gt;::update</text></g><g><title>neuralang::World::step (73,883 samples, 76.82%)</title><rect x="20.3040%" y="565" width="76.8230%" height="15" fill="rgb(238,13,15)" fg:x="19527" fg:w="73883"/><text x="20.5540%" y="575.50">neuralang::World::step</text></g><g><title>neuralang::World::update_cells (19,169 samples, 19.93%)</title><rect x="77.1953%" y="549" width="19.9318%" height="15" fill="rgb(208,107,27)" fg:x="74241" fg:w="19169"/><text x="77.4453%" y="559.50">neuralang::World::update_cells</text></g><g><title>wgpu::Device::create_command_encoder (10 samples, 0.01%)</title><rect x="97.1302%" y="565" width="0.0104%" height="15" fill="rgb(205,136,37)" fg:x="93413" fg:w="10"/><text x="97.3802%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::device_create_command_encoder (10 samples, 0.01%)</title><rect x="97.1302%" y="549" width="0.0104%" height="15" fill="rgb(250,205,27)" fg:x="93413" fg:w="10"/><text x="97.3802%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::device_create_command_encoder (10 samples, 0.01%)</title><rect x="97.1302%" y="533" width="0.0104%" height="15" fill="rgb(210,80,43)" fg:x="93413" fg:w="10"/><text x="97.3802%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="97.1499%" y="437" width="0.0114%" height="15" fill="rgb(247,160,36)" fg:x="93432" fg:w="11"/><text x="97.3999%" y="447.50"></text></g><g><title>ash::device::Device::create_image_view (13 samples, 0.01%)</title><rect x="97.1489%" y="485" width="0.0135%" height="15" fill="rgb(234,13,49)" fg:x="93431" fg:w="13"/><text x="97.3989%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="97.1489%" y="469" width="0.0135%" height="15" fill="rgb(234,122,0)" fg:x="93431" fg:w="13"/><text x="97.3989%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="97.1499%" y="453" width="0.0125%" height="15" fill="rgb(207,146,38)" fg:x="93432" fg:w="12"/><text x="97.3999%" y="463.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::create_texture_view (18 samples, 0.02%)</title><rect x="97.1478%" y="501" width="0.0187%" height="15" fill="rgb(207,177,25)" fg:x="93430" fg:w="18"/><text x="97.3978%" y="511.50"></text></g><g><title>ash::device::Device::wait_for_fences (14 samples, 0.01%)</title><rect x="97.1676%" y="485" width="0.0146%" height="15" fill="rgb(211,178,42)" fg:x="93449" fg:w="14"/><text x="97.4176%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.01%)</title><rect x="97.1676%" y="469" width="0.0146%" height="15" fill="rgb(230,69,54)" fg:x="93449" fg:w="14"/><text x="97.4176%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.01%)</title><rect x="97.1676%" y="453" width="0.0146%" height="15" fill="rgb(214,135,41)" fg:x="93449" fg:w="14"/><text x="97.4176%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (14 samples, 0.01%)</title><rect x="97.1676%" y="437" width="0.0146%" height="15" fill="rgb(237,67,25)" fg:x="93449" fg:w="14"/><text x="97.4176%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="97.1686%" y="421" width="0.0135%" height="15" fill="rgb(222,189,50)" fg:x="93450" fg:w="13"/><text x="97.4186%" y="431.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_get_current_texture (63 samples, 0.07%)</title><rect x="97.1406%" y="549" width="0.0655%" height="15" fill="rgb(245,148,34)" fg:x="93423" fg:w="63"/><text x="97.3906%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_get_current_texture (63 samples, 0.07%)</title><rect x="97.1406%" y="533" width="0.0655%" height="15" fill="rgb(222,29,6)" fg:x="93423" fg:w="63"/><text x="97.3906%" y="543.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (63 samples, 0.07%)</title><rect x="97.1406%" y="517" width="0.0655%" height="15" fill="rgb(221,189,43)" fg:x="93423" fg:w="63"/><text x="97.3906%" y="527.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Surface&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Surface&gt;::acquire_texture (38 samples, 0.04%)</title><rect x="97.1666%" y="501" width="0.0395%" height="15" fill="rgb(207,36,27)" fg:x="93448" fg:w="38"/><text x="97.4166%" y="511.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (23 samples, 0.02%)</title><rect x="97.1822%" y="485" width="0.0239%" height="15" fill="rgb(217,90,24)" fg:x="93463" fg:w="23"/><text x="97.4322%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (23 samples, 0.02%)</title><rect x="97.1822%" y="469" width="0.0239%" height="15" fill="rgb(224,66,35)" fg:x="93463" fg:w="23"/><text x="97.4322%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="97.1884%" y="453" width="0.0177%" height="15" fill="rgb(221,13,50)" fg:x="93469" fg:w="17"/><text x="97.4384%" y="463.50"></text></g><g><title>wgpu::Surface::get_current_texture (66 samples, 0.07%)</title><rect x="97.1406%" y="565" width="0.0686%" height="15" fill="rgb(236,68,49)" fg:x="93423" fg:w="66"/><text x="97.3906%" y="575.50"></text></g><g><title>[libX11.so.6.4.0] (10 samples, 0.01%)</title><rect x="97.2300%" y="453" width="0.0104%" height="15" fill="rgb(229,146,28)" fg:x="93509" fg:w="10"/><text x="97.4800%" y="463.50"></text></g><g><title>_XSend (53 samples, 0.06%)</title><rect x="97.2404%" y="453" width="0.0551%" height="15" fill="rgb(225,31,38)" fg:x="93519" fg:w="53"/><text x="97.4904%" y="463.50"></text></g><g><title>xcb_writev (52 samples, 0.05%)</title><rect x="97.2414%" y="437" width="0.0541%" height="15" fill="rgb(250,208,3)" fg:x="93520" fg:w="52"/><text x="97.4914%" y="447.50"></text></g><g><title>[libxcb.so.1.1.0] (50 samples, 0.05%)</title><rect x="97.2435%" y="421" width="0.0520%" height="15" fill="rgb(246,54,23)" fg:x="93522" fg:w="50"/><text x="97.4935%" y="431.50"></text></g><g><title>[libxcb.so.1.1.0] (50 samples, 0.05%)</title><rect x="97.2435%" y="405" width="0.0520%" height="15" fill="rgb(243,76,11)" fg:x="93522" fg:w="50"/><text x="97.4935%" y="415.50"></text></g><g><title>__GI___writev (35 samples, 0.04%)</title><rect x="97.2591%" y="389" width="0.0364%" height="15" fill="rgb(245,21,50)" fg:x="93537" fg:w="35"/><text x="97.5091%" y="399.50"></text></g><g><title>__GI___writev (35 samples, 0.04%)</title><rect x="97.2591%" y="373" width="0.0364%" height="15" fill="rgb(228,9,43)" fg:x="93537" fg:w="35"/><text x="97.5091%" y="383.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="97.2591%" y="357" width="0.0364%" height="15" fill="rgb(208,100,47)" fg:x="93537" fg:w="35"/><text x="97.5091%" y="367.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="97.2591%" y="341" width="0.0364%" height="15" fill="rgb(232,26,8)" fg:x="93537" fg:w="35"/><text x="97.5091%" y="351.50"></text></g><g><title>[unknown] (35 samples, 0.04%)</title><rect x="97.2591%" y="325" width="0.0364%" height="15" fill="rgb(216,166,38)" fg:x="93537" fg:w="35"/><text x="97.5091%" y="335.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="97.2601%" y="309" width="0.0354%" height="15" fill="rgb(251,202,51)" fg:x="93538" fg:w="34"/><text x="97.5101%" y="319.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="97.2612%" y="293" width="0.0343%" height="15" fill="rgb(254,216,34)" fg:x="93539" fg:w="33"/><text x="97.5112%" y="303.50"></text></g><g><title>[unknown] (32 samples, 0.03%)</title><rect x="97.2622%" y="277" width="0.0333%" height="15" fill="rgb(251,32,27)" fg:x="93540" fg:w="32"/><text x="97.5122%" y="287.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="97.2633%" y="261" width="0.0322%" height="15" fill="rgb(208,127,28)" fg:x="93541" fg:w="31"/><text x="97.5133%" y="271.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="97.2633%" y="245" width="0.0322%" height="15" fill="rgb(224,137,22)" fg:x="93541" fg:w="31"/><text x="97.5133%" y="255.50"></text></g><g><title>[unknown] (31 samples, 0.03%)</title><rect x="97.2633%" y="229" width="0.0322%" height="15" fill="rgb(254,70,32)" fg:x="93541" fg:w="31"/><text x="97.5133%" y="239.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="97.2653%" y="213" width="0.0302%" height="15" fill="rgb(229,75,37)" fg:x="93543" fg:w="29"/><text x="97.5153%" y="223.50"></text></g><g><title>[unknown] (28 samples, 0.03%)</title><rect x="97.2664%" y="197" width="0.0291%" height="15" fill="rgb(252,64,23)" fg:x="93544" fg:w="28"/><text x="97.5164%" y="207.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="97.2705%" y="181" width="0.0250%" height="15" fill="rgb(232,162,48)" fg:x="93548" fg:w="24"/><text x="97.5205%" y="191.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="97.2747%" y="165" width="0.0208%" height="15" fill="rgb(246,160,12)" fg:x="93552" fg:w="20"/><text x="97.5247%" y="175.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="97.2768%" y="149" width="0.0187%" height="15" fill="rgb(247,166,0)" fg:x="93554" fg:w="18"/><text x="97.5268%" y="159.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="97.2799%" y="133" width="0.0156%" height="15" fill="rgb(249,219,21)" fg:x="93557" fg:w="15"/><text x="97.5299%" y="143.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="97.2851%" y="117" width="0.0104%" height="15" fill="rgb(205,209,3)" fg:x="93562" fg:w="10"/><text x="97.5351%" y="127.50"></text></g><g><title>[libxcb.so.1.1.0] (16 samples, 0.02%)</title><rect x="97.2976%" y="405" width="0.0166%" height="15" fill="rgb(243,44,1)" fg:x="93574" fg:w="16"/><text x="97.5476%" y="415.50"></text></g><g><title>__libc_recvmsg (13 samples, 0.01%)</title><rect x="97.3007%" y="389" width="0.0135%" height="15" fill="rgb(206,159,16)" fg:x="93577" fg:w="13"/><text x="97.5507%" y="399.50"></text></g><g><title>__recvmsg_syscall (13 samples, 0.01%)</title><rect x="97.3007%" y="373" width="0.0135%" height="15" fill="rgb(244,77,30)" fg:x="93577" fg:w="13"/><text x="97.5507%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3007%" y="357" width="0.0135%" height="15" fill="rgb(218,69,12)" fg:x="93577" fg:w="13"/><text x="97.5507%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3007%" y="341" width="0.0135%" height="15" fill="rgb(212,87,7)" fg:x="93577" fg:w="13"/><text x="97.5507%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3007%" y="325" width="0.0135%" height="15" fill="rgb(245,114,25)" fg:x="93577" fg:w="13"/><text x="97.5507%" y="335.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.3028%" y="309" width="0.0114%" height="15" fill="rgb(210,61,42)" fg:x="93579" fg:w="11"/><text x="97.5528%" y="319.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.3028%" y="293" width="0.0114%" height="15" fill="rgb(211,52,33)" fg:x="93579" fg:w="11"/><text x="97.5528%" y="303.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.3028%" y="277" width="0.0114%" height="15" fill="rgb(234,58,33)" fg:x="93579" fg:w="11"/><text x="97.5528%" y="287.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.3028%" y="261" width="0.0114%" height="15" fill="rgb(220,115,36)" fg:x="93579" fg:w="11"/><text x="97.5528%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.3028%" y="245" width="0.0114%" height="15" fill="rgb(243,153,54)" fg:x="93579" fg:w="11"/><text x="97.5528%" y="255.50"></text></g><g><title>[libxcb.so.1.1.0] (34 samples, 0.04%)</title><rect x="97.2965%" y="421" width="0.0354%" height="15" fill="rgb(251,47,18)" fg:x="93573" fg:w="34"/><text x="97.5465%" y="431.50"></text></g><g><title>__GI___poll (17 samples, 0.02%)</title><rect x="97.3142%" y="405" width="0.0177%" height="15" fill="rgb(242,102,42)" fg:x="93590" fg:w="17"/><text x="97.5642%" y="415.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="97.3142%" y="389" width="0.0177%" height="15" fill="rgb(234,31,38)" fg:x="93590" fg:w="17"/><text x="97.5642%" y="399.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="97.3142%" y="373" width="0.0177%" height="15" fill="rgb(221,117,51)" fg:x="93590" fg:w="17"/><text x="97.5642%" y="383.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="97.3142%" y="357" width="0.0177%" height="15" fill="rgb(212,20,18)" fg:x="93590" fg:w="17"/><text x="97.5642%" y="367.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3184%" y="341" width="0.0135%" height="15" fill="rgb(245,133,36)" fg:x="93594" fg:w="13"/><text x="97.5684%" y="351.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3184%" y="325" width="0.0135%" height="15" fill="rgb(212,6,19)" fg:x="93594" fg:w="13"/><text x="97.5684%" y="335.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3184%" y="309" width="0.0135%" height="15" fill="rgb(218,1,36)" fg:x="93594" fg:w="13"/><text x="97.5684%" y="319.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3184%" y="293" width="0.0135%" height="15" fill="rgb(246,84,54)" fg:x="93594" fg:w="13"/><text x="97.5684%" y="303.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="97.3184%" y="277" width="0.0135%" height="15" fill="rgb(242,110,6)" fg:x="93594" fg:w="13"/><text x="97.5684%" y="287.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="97.3194%" y="261" width="0.0125%" height="15" fill="rgb(214,47,5)" fg:x="93595" fg:w="12"/><text x="97.5694%" y="271.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="97.3205%" y="245" width="0.0114%" height="15" fill="rgb(218,159,25)" fg:x="93596" fg:w="11"/><text x="97.5705%" y="255.50"></text></g><g><title>XGetGeometry (103 samples, 0.11%)</title><rect x="97.2258%" y="485" width="0.1071%" height="15" fill="rgb(215,211,28)" fg:x="93505" fg:w="103"/><text x="97.4758%" y="495.50"></text></g><g><title>_XReply (99 samples, 0.10%)</title><rect x="97.2300%" y="469" width="0.1029%" height="15" fill="rgb(238,59,32)" fg:x="93509" fg:w="99"/><text x="97.4800%" y="479.50"></text></g><g><title>xcb_wait_for_reply64 (35 samples, 0.04%)</title><rect x="97.2965%" y="453" width="0.0364%" height="15" fill="rgb(226,82,3)" fg:x="93573" fg:w="35"/><text x="97.5465%" y="463.50"></text></g><g><title>[libxcb.so.1.1.0] (35 samples, 0.04%)</title><rect x="97.2965%" y="437" width="0.0364%" height="15" fill="rgb(240,164,32)" fg:x="93573" fg:w="35"/><text x="97.5465%" y="447.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::begin_frame (200 samples, 0.21%)</title><rect x="97.1271%" y="581" width="0.2080%" height="15" fill="rgb(232,46,7)" fg:x="93410" fg:w="200"/><text x="97.3771%" y="591.50"></text></g><g><title>winit::window::Window::inner_size (112 samples, 0.12%)</title><rect x="97.2186%" y="565" width="0.1165%" height="15" fill="rgb(229,129,53)" fg:x="93498" fg:w="112"/><text x="97.4686%" y="575.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (112 samples, 0.12%)</title><rect x="97.2186%" y="549" width="0.1165%" height="15" fill="rgb(234,188,29)" fg:x="93498" fg:w="112"/><text x="97.4686%" y="559.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (112 samples, 0.12%)</title><rect x="97.2186%" y="533" width="0.1165%" height="15" fill="rgb(246,141,4)" fg:x="93498" fg:w="112"/><text x="97.4686%" y="543.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (106 samples, 0.11%)</title><rect x="97.2248%" y="517" width="0.1102%" height="15" fill="rgb(229,23,39)" fg:x="93504" fg:w="106"/><text x="97.4748%" y="527.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (106 samples, 0.11%)</title><rect x="97.2248%" y="501" width="0.1102%" height="15" fill="rgb(206,12,3)" fg:x="93504" fg:w="106"/><text x="97.4748%" y="511.50"></text></g><g><title>core::mem::drop (22 samples, 0.02%)</title><rect x="97.3361%" y="565" width="0.0229%" height="15" fill="rgb(252,226,20)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (22 samples, 0.02%)</title><rect x="97.3361%" y="549" width="0.0229%" height="15" fill="rgb(216,123,35)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="559.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="97.3361%" y="533" width="0.0229%" height="15" fill="rgb(212,68,40)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="543.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::command_encoder_end_render_pass (22 samples, 0.02%)</title><rect x="97.3361%" y="517" width="0.0229%" height="15" fill="rgb(254,125,32)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="527.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::command_encoder_end_render_pass (22 samples, 0.02%)</title><rect x="97.3361%" y="501" width="0.0229%" height="15" fill="rgb(253,97,22)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="511.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (22 samples, 0.02%)</title><rect x="97.3361%" y="485" width="0.0229%" height="15" fill="rgb(241,101,14)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="495.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (22 samples, 0.02%)</title><rect x="97.3361%" y="469" width="0.0229%" height="15" fill="rgb(238,103,29)" fg:x="93611" fg:w="22"/><text x="97.5861%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (234 samples, 0.24%)</title><rect x="97.4005%" y="341" width="0.2433%" height="15" fill="rgb(233,195,47)" fg:x="93673" fg:w="234"/><text x="97.6505%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (77 samples, 0.08%)</title><rect x="97.5638%" y="325" width="0.0801%" height="15" fill="rgb(246,218,30)" fg:x="93830" fg:w="77"/><text x="97.8138%" y="335.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (76 samples, 0.08%)</title><rect x="97.5648%" y="309" width="0.0790%" height="15" fill="rgb(219,145,47)" fg:x="93831" fg:w="76"/><text x="97.8148%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (66 samples, 0.07%)</title><rect x="97.5752%" y="293" width="0.0686%" height="15" fill="rgb(243,12,26)" fg:x="93841" fg:w="66"/><text x="97.8252%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (238 samples, 0.25%)</title><rect x="97.3974%" y="357" width="0.2475%" height="15" fill="rgb(214,87,16)" fg:x="93670" fg:w="238"/><text x="97.6474%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (239 samples, 0.25%)</title><rect x="97.3974%" y="373" width="0.2485%" height="15" fill="rgb(208,99,42)" fg:x="93670" fg:w="239"/><text x="97.6474%" y="383.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::submit (256 samples, 0.27%)</title><rect x="97.3818%" y="501" width="0.2662%" height="15" fill="rgb(253,99,2)" fg:x="93655" fg:w="256"/><text x="97.6318%" y="511.50"></text></g><g><title>ash::device::Device::queue_submit (256 samples, 0.27%)</title><rect x="97.3818%" y="485" width="0.2662%" height="15" fill="rgb(220,168,23)" fg:x="93655" fg:w="256"/><text x="97.6318%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (256 samples, 0.27%)</title><rect x="97.3818%" y="469" width="0.2662%" height="15" fill="rgb(242,38,24)" fg:x="93655" fg:w="256"/><text x="97.6318%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (255 samples, 0.27%)</title><rect x="97.3828%" y="453" width="0.2651%" height="15" fill="rgb(225,182,9)" fg:x="93656" fg:w="255"/><text x="97.6328%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (253 samples, 0.26%)</title><rect x="97.3849%" y="437" width="0.2631%" height="15" fill="rgb(243,178,37)" fg:x="93658" fg:w="253"/><text x="97.6349%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (251 samples, 0.26%)</title><rect x="97.3870%" y="421" width="0.2610%" height="15" fill="rgb(232,139,19)" fg:x="93660" fg:w="251"/><text x="97.6370%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (247 samples, 0.26%)</title><rect x="97.3912%" y="405" width="0.2568%" height="15" fill="rgb(225,201,24)" fg:x="93664" fg:w="247"/><text x="97.6412%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (244 samples, 0.25%)</title><rect x="97.3943%" y="389" width="0.2537%" height="15" fill="rgb(221,47,46)" fg:x="93667" fg:w="244"/><text x="97.6443%" y="399.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers_from_tracker (10 samples, 0.01%)</title><rect x="97.6553%" y="501" width="0.0104%" height="15" fill="rgb(249,23,13)" fg:x="93918" fg:w="10"/><text x="97.9053%" y="511.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::cleanup (11 samples, 0.01%)</title><rect x="97.6729%" y="485" width="0.0114%" height="15" fill="rgb(219,9,5)" fg:x="93935" fg:w="11"/><text x="97.9229%" y="495.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (11 samples, 0.01%)</title><rect x="97.6729%" y="469" width="0.0114%" height="15" fill="rgb(254,171,16)" fg:x="93935" fg:w="11"/><text x="97.9229%" y="479.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (20 samples, 0.02%)</title><rect x="97.6844%" y="485" width="0.0208%" height="15" fill="rgb(230,171,20)" fg:x="93946" fg:w="20"/><text x="97.9344%" y="495.50"></text></g><g><title>wgpu_core::device::queue::EncoderInFlight&lt;A&gt;::land (17 samples, 0.02%)</title><rect x="97.6875%" y="469" width="0.0177%" height="15" fill="rgb(210,71,41)" fg:x="93949" fg:w="17"/><text x="97.9375%" y="479.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::reset_all (17 samples, 0.02%)</title><rect x="97.6875%" y="453" width="0.0177%" height="15" fill="rgb(206,173,20)" fg:x="93949" fg:w="17"/><text x="97.9375%" y="463.50"></text></g><g><title>ash::device::Device::reset_command_pool (17 samples, 0.02%)</title><rect x="97.6875%" y="437" width="0.0177%" height="15" fill="rgb(233,88,34)" fg:x="93949" fg:w="17"/><text x="97.9375%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (17 samples, 0.02%)</title><rect x="97.6875%" y="421" width="0.0177%" height="15" fill="rgb(223,209,46)" fg:x="93949" fg:w="17"/><text x="97.9375%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (12 samples, 0.01%)</title><rect x="97.6927%" y="405" width="0.0125%" height="15" fill="rgb(250,43,18)" fg:x="93954" fg:w="12"/><text x="97.9427%" y="415.50"></text></g><g><title>wgpu_core::device::Device&lt;A&gt;::maintain (44 samples, 0.05%)</title><rect x="97.6729%" y="501" width="0.0458%" height="15" fill="rgb(208,13,10)" fg:x="93935" fg:w="44"/><text x="97.9229%" y="511.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_suspected (13 samples, 0.01%)</title><rect x="97.7052%" y="485" width="0.0135%" height="15" fill="rgb(212,200,36)" fg:x="93966" fg:w="13"/><text x="97.9552%" y="495.50"></text></g><g><title>wgpu_hal::vulkan::command::&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::CommandEncoder&gt;::begin_encoding (11 samples, 0.01%)</title><rect x="97.7312%" y="501" width="0.0114%" height="15" fill="rgb(225,90,30)" fg:x="93991" fg:w="11"/><text x="97.9812%" y="511.50"></text></g><g><title>ash::device::Device::begin_command_buffer (11 samples, 0.01%)</title><rect x="97.7312%" y="485" width="0.0114%" height="15" fill="rgb(236,182,39)" fg:x="93991" fg:w="11"/><text x="97.9812%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="97.7312%" y="469" width="0.0114%" height="15" fill="rgb(212,144,35)" fg:x="93991" fg:w="11"/><text x="97.9812%" y="479.50"></text></g><g><title>wgpu::Queue::submit (357 samples, 0.37%)</title><rect x="97.3745%" y="565" width="0.3712%" height="15" fill="rgb(228,63,44)" fg:x="93648" fg:w="357"/><text x="97.6245%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::queue_submit (357 samples, 0.37%)</title><rect x="97.3745%" y="549" width="0.3712%" height="15" fill="rgb(228,109,6)" fg:x="93648" fg:w="357"/><text x="97.6245%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::queue_submit (357 samples, 0.37%)</title><rect x="97.3745%" y="533" width="0.3712%" height="15" fill="rgb(238,117,24)" fg:x="93648" fg:w="357"/><text x="97.6245%" y="543.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (356 samples, 0.37%)</title><rect x="97.3756%" y="517" width="0.3702%" height="15" fill="rgb(242,26,26)" fg:x="93649" fg:w="356"/><text x="97.6256%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.03%)</title><rect x="97.9152%" y="229" width="0.0270%" height="15" fill="rgb(221,92,48)" fg:x="94168" fg:w="26"/><text x="98.1652%" y="239.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (103 samples, 0.11%)</title><rect x="97.8362%" y="277" width="0.1071%" height="15" fill="rgb(209,209,32)" fg:x="94092" fg:w="103"/><text x="98.0862%" y="287.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (53 samples, 0.06%)</title><rect x="97.8882%" y="261" width="0.0551%" height="15" fill="rgb(221,70,22)" fg:x="94142" fg:w="53"/><text x="98.1382%" y="271.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (47 samples, 0.05%)</title><rect x="97.8944%" y="245" width="0.0489%" height="15" fill="rgb(248,145,5)" fg:x="94148" fg:w="47"/><text x="98.1444%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (121 samples, 0.13%)</title><rect x="97.8206%" y="309" width="0.1258%" height="15" fill="rgb(226,116,26)" fg:x="94077" fg:w="121"/><text x="98.0706%" y="319.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (116 samples, 0.12%)</title><rect x="97.8258%" y="293" width="0.1206%" height="15" fill="rgb(244,5,17)" fg:x="94082" fg:w="116"/><text x="98.0758%" y="303.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (943 samples, 0.98%)</title><rect x="97.8206%" y="325" width="0.9805%" height="15" fill="rgb(252,159,33)" fg:x="94077" fg:w="943"/><text x="98.0706%" y="335.50"></text></g><g><title>__GI___ioctl (822 samples, 0.85%)</title><rect x="97.9464%" y="309" width="0.8547%" height="15" fill="rgb(206,71,0)" fg:x="94198" fg:w="822"/><text x="98.1964%" y="319.50"></text></g><g><title>[unknown] (822 samples, 0.85%)</title><rect x="97.9464%" y="293" width="0.8547%" height="15" fill="rgb(233,118,54)" fg:x="94198" fg:w="822"/><text x="98.1964%" y="303.50"></text></g><g><title>[unknown] (95 samples, 0.10%)</title><rect x="98.7023%" y="277" width="0.0988%" height="15" fill="rgb(234,83,48)" fg:x="94925" fg:w="95"/><text x="98.9523%" y="287.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="98.7762%" y="261" width="0.0250%" height="15" fill="rgb(228,3,54)" fg:x="94996" fg:w="24"/><text x="99.0262%" y="271.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="98.7814%" y="245" width="0.0198%" height="15" fill="rgb(226,155,13)" fg:x="95001" fg:w="19"/><text x="99.0314%" y="255.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (950 samples, 0.99%)</title><rect x="97.8144%" y="341" width="0.9878%" height="15" fill="rgb(241,28,37)" fg:x="94071" fg:w="950"/><text x="98.0644%" y="351.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (972 samples, 1.01%)</title><rect x="97.7925%" y="357" width="1.0107%" height="15" fill="rgb(233,93,10)" fg:x="94050" fg:w="972"/><text x="98.0425%" y="367.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (989 samples, 1.03%)</title><rect x="97.7759%" y="373" width="1.0284%" height="15" fill="rgb(225,113,19)" fg:x="94034" fg:w="989"/><text x="98.0259%" y="383.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,006 samples, 1.05%)</title><rect x="97.7592%" y="389" width="1.0460%" height="15" fill="rgb(241,2,18)" fg:x="94018" fg:w="1006"/><text x="98.0092%" y="399.50"></text></g><g><title>&lt;wgpu_hal::vulkan::Queue as wgpu_hal::Queue&lt;wgpu_hal::vulkan::Api&gt;&gt;::present (1,024 samples, 1.06%)</title><rect x="97.7468%" y="501" width="1.0647%" height="15" fill="rgb(228,207,21)" fg:x="94006" fg:w="1024"/><text x="97.9968%" y="511.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1,023 samples, 1.06%)</title><rect x="97.7478%" y="485" width="1.0637%" height="15" fill="rgb(213,211,35)" fg:x="94007" fg:w="1023"/><text x="97.9978%" y="495.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (1,023 samples, 1.06%)</title><rect x="97.7478%" y="469" width="1.0637%" height="15" fill="rgb(209,83,10)" fg:x="94007" fg:w="1023"/><text x="97.9978%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,023 samples, 1.06%)</title><rect x="97.7478%" y="453" width="1.0637%" height="15" fill="rgb(209,164,1)" fg:x="94007" fg:w="1023"/><text x="97.9978%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,023 samples, 1.06%)</title><rect x="97.7478%" y="437" width="1.0637%" height="15" fill="rgb(213,184,43)" fg:x="94007" fg:w="1023"/><text x="97.9978%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,020 samples, 1.06%)</title><rect x="97.7509%" y="421" width="1.0606%" height="15" fill="rgb(231,61,34)" fg:x="94010" fg:w="1020"/><text x="98.0009%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (1,018 samples, 1.06%)</title><rect x="97.7530%" y="405" width="1.0585%" height="15" fill="rgb(235,75,3)" fg:x="94012" fg:w="1018"/><text x="98.0030%" y="415.50"></text></g><g><title>wgpu::SurfaceTexture::present (1,026 samples, 1.07%)</title><rect x="97.7468%" y="565" width="1.0668%" height="15" fill="rgb(220,106,47)" fg:x="94006" fg:w="1026"/><text x="97.9968%" y="575.50"></text></g><g><title>&lt;T as wgpu::context::DynContext&gt;::surface_present (1,026 samples, 1.07%)</title><rect x="97.7468%" y="549" width="1.0668%" height="15" fill="rgb(210,196,33)" fg:x="94006" fg:w="1026"/><text x="97.9968%" y="559.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::surface_present (1,026 samples, 1.07%)</title><rect x="97.7468%" y="533" width="1.0668%" height="15" fill="rgb(229,154,42)" fg:x="94006" fg:w="1026"/><text x="97.9968%" y="543.50"></text></g><g><title>wgpu_core::present::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (1,026 samples, 1.07%)</title><rect x="97.7468%" y="517" width="1.0668%" height="15" fill="rgb(228,114,26)" fg:x="94006" fg:w="1026"/><text x="97.9968%" y="527.50"></text></g><g><title>ggez::graphics::context::GraphicsContext::end_frame (1,424 samples, 1.48%)</title><rect x="97.3350%" y="581" width="1.4807%" height="15" fill="rgb(208,144,1)" fg:x="93610" fg:w="1424"/><text x="97.5850%" y="591.50"></text></g><g><title>ggez::event::run (93,177 samples, 96.88%)</title><rect x="1.9496%" y="709" width="96.8848%" height="15" fill="rgb(239,112,37)" fg:x="1875" fg:w="93177"/><text x="2.1996%" y="719.50">ggez::event::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (93,177 samples, 96.88%)</title><rect x="1.9496%" y="693" width="96.8848%" height="15" fill="rgb(210,96,50)" fg:x="1875" fg:w="93177"/><text x="2.1996%" y="703.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (93,177 samples, 96.88%)</title><rect x="1.9496%" y="677" width="96.8848%" height="15" fill="rgb(222,178,2)" fg:x="1875" fg:w="93177"/><text x="2.1996%" y="687.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (93,177 samples, 96.88%)</title><rect x="1.9496%" y="661" width="96.8848%" height="15" fill="rgb(226,74,18)" fg:x="1875" fg:w="93177"/><text x="2.1996%" y="671.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (93,177 samples, 96.88%)</title><rect x="1.9496%" y="645" width="96.8848%" height="15" fill="rgb(225,67,54)" fg:x="1875" fg:w="93177"/><text x="2.1996%" y="655.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (93,169 samples, 96.88%)</title><rect x="1.9579%" y="629" width="96.8765%" height="15" fill="rgb(251,92,32)" fg:x="1883" fg:w="93169"/><text x="2.2079%" y="639.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration (93,134 samples, 96.84%)</title><rect x="1.9943%" y="613" width="96.8401%" height="15" fill="rgb(228,149,22)" fg:x="1918" fg:w="93134"/><text x="2.2443%" y="623.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return::single_iteration</text></g><g><title>ggez::event::run::{{closure}} (93,134 samples, 96.84%)</title><rect x="1.9943%" y="597" width="96.8401%" height="15" fill="rgb(243,54,13)" fg:x="1918" fg:w="93134"/><text x="2.2443%" y="607.50">ggez::event::run::{{closure}}</text></g><g><title>neuralang::main (93,263 samples, 96.97%)</title><rect x="1.8612%" y="741" width="96.9742%" height="15" fill="rgb(243,180,28)" fg:x="1790" fg:w="93263"/><text x="2.1112%" y="751.50">neuralang::main</text></g><g><title>neuralang::run (93,263 samples, 96.97%)</title><rect x="1.8612%" y="725" width="96.9742%" height="15" fill="rgb(208,167,24)" fg:x="1790" fg:w="93263"/><text x="2.1112%" y="735.50">neuralang::run</text></g><g><title>std::rt::lang_start_internal (16 samples, 0.02%)</title><rect x="98.8365%" y="741" width="0.0166%" height="15" fill="rgb(245,73,45)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="751.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.8365%" y="725" width="0.0166%" height="15" fill="rgb(237,203,48)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="735.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.8365%" y="709" width="0.0166%" height="15" fill="rgb(211,197,16)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="719.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.8365%" y="693" width="0.0166%" height="15" fill="rgb(243,99,51)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="703.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (16 samples, 0.02%)</title><rect x="98.8365%" y="677" width="0.0166%" height="15" fill="rgb(215,123,29)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="687.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.02%)</title><rect x="98.8365%" y="661" width="0.0166%" height="15" fill="rgb(239,186,37)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="671.50"></text></g><g><title>std::panicking::try (16 samples, 0.02%)</title><rect x="98.8365%" y="645" width="0.0166%" height="15" fill="rgb(252,136,39)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="655.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.02%)</title><rect x="98.8365%" y="629" width="0.0166%" height="15" fill="rgb(223,213,32)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (16 samples, 0.02%)</title><rect x="98.8365%" y="613" width="0.0166%" height="15" fill="rgb(233,115,5)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="623.50"></text></g><g><title>std::rt::lang_start::{{closure}} (16 samples, 0.02%)</title><rect x="98.8365%" y="597" width="0.0166%" height="15" fill="rgb(207,226,44)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.02%)</title><rect x="98.8365%" y="581" width="0.0166%" height="15" fill="rgb(208,126,0)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.02%)</title><rect x="98.8365%" y="565" width="0.0166%" height="15" fill="rgb(244,66,21)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="575.50"></text></g><g><title>neuralang::main (16 samples, 0.02%)</title><rect x="98.8365%" y="549" width="0.0166%" height="15" fill="rgb(222,97,12)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="559.50"></text></g><g><title>neuralang::run (16 samples, 0.02%)</title><rect x="98.8365%" y="533" width="0.0166%" height="15" fill="rgb(219,213,19)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="543.50"></text></g><g><title>ggez::event::run (16 samples, 0.02%)</title><rect x="98.8365%" y="517" width="0.0166%" height="15" fill="rgb(252,169,30)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="527.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="98.8365%" y="501" width="0.0166%" height="15" fill="rgb(206,32,51)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="511.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="98.8365%" y="485" width="0.0166%" height="15" fill="rgb(250,172,42)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="495.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="98.8365%" y="469" width="0.0166%" height="15" fill="rgb(209,34,43)" fg:x="95054" fg:w="16"/><text x="99.0865%" y="479.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (15 samples, 0.02%)</title><rect x="98.8375%" y="453" width="0.0156%" height="15" fill="rgb(223,11,35)" fg:x="95055" fg:w="15"/><text x="99.0875%" y="463.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (10 samples, 0.01%)</title><rect x="98.8427%" y="437" width="0.0104%" height="15" fill="rgb(251,219,26)" fg:x="95060" fg:w="10"/><text x="99.0927%" y="447.50"></text></g><g><title>XPending (10 samples, 0.01%)</title><rect x="98.8427%" y="421" width="0.0104%" height="15" fill="rgb(231,119,3)" fg:x="95060" fg:w="10"/><text x="99.0927%" y="431.50"></text></g><g><title>_XEventsQueued (10 samples, 0.01%)</title><rect x="98.8427%" y="405" width="0.0104%" height="15" fill="rgb(216,97,11)" fg:x="95060" fg:w="10"/><text x="99.0927%" y="415.50"></text></g><g><title>[libX11.so.6.4.0] (10 samples, 0.01%)</title><rect x="98.8427%" y="389" width="0.0104%" height="15" fill="rgb(223,59,9)" fg:x="95060" fg:w="10"/><text x="99.0927%" y="399.50"></text></g><g><title>[libVkLayer_MESA_device_select.so] (10 samples, 0.01%)</title><rect x="98.8593%" y="597" width="0.0104%" height="15" fill="rgb(233,93,31)" fg:x="95076" fg:w="10"/><text x="99.1093%" y="607.50"></text></g><g><title>[libvulkan.so.1.3.204] (10 samples, 0.01%)</title><rect x="98.8593%" y="581" width="0.0104%" height="15" fill="rgb(239,81,33)" fg:x="95076" fg:w="10"/><text x="99.1093%" y="591.50"></text></g><g><title>ash::entry::Entry::create_instance (11 samples, 0.01%)</title><rect x="98.8593%" y="645" width="0.0114%" height="15" fill="rgb(213,120,34)" fg:x="95076" fg:w="11"/><text x="99.1093%" y="655.50"></text></g><g><title>vkCreateInstance (11 samples, 0.01%)</title><rect x="98.8593%" y="629" width="0.0114%" height="15" fill="rgb(243,49,53)" fg:x="95076" fg:w="11"/><text x="99.1093%" y="639.50"></text></g><g><title>[libvulkan.so.1.3.204] (11 samples, 0.01%)</title><rect x="98.8593%" y="613" width="0.0114%" height="15" fill="rgb(247,216,33)" fg:x="95076" fg:w="11"/><text x="99.1093%" y="623.50"></text></g><g><title>__GI__dl_catch_exception (13 samples, 0.01%)</title><rect x="98.8708%" y="389" width="0.0135%" height="15" fill="rgb(226,26,14)" fg:x="95087" fg:w="13"/><text x="99.1208%" y="399.50"></text></g><g><title>dl_open_worker_begin (13 samples, 0.01%)</title><rect x="98.8708%" y="373" width="0.0135%" height="15" fill="rgb(215,49,53)" fg:x="95087" fg:w="13"/><text x="99.1208%" y="383.50"></text></g><g><title>_dl_relocate_object (11 samples, 0.01%)</title><rect x="98.8729%" y="357" width="0.0114%" height="15" fill="rgb(245,162,40)" fg:x="95089" fg:w="11"/><text x="99.1229%" y="367.50"></text></g><g><title>wgpu::Instance::new (27 samples, 0.03%)</title><rect x="98.8593%" y="741" width="0.0281%" height="15" fill="rgb(229,68,17)" fg:x="95076" fg:w="27"/><text x="99.1093%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::context::Context&gt;::init (27 samples, 0.03%)</title><rect x="98.8593%" y="725" width="0.0281%" height="15" fill="rgb(213,182,10)" fg:x="95076" fg:w="27"/><text x="99.1093%" y="735.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (27 samples, 0.03%)</title><rect x="98.8593%" y="709" width="0.0281%" height="15" fill="rgb(245,125,30)" fg:x="95076" fg:w="27"/><text x="99.1093%" y="719.50"></text></g><g><title>wgpu_core::instance::Instance::new (27 samples, 0.03%)</title><rect x="98.8593%" y="693" width="0.0281%" height="15" fill="rgb(232,202,2)" fg:x="95076" fg:w="27"/><text x="99.1093%" y="703.50"></text></g><g><title>wgpu_core::instance::Instance::new::init (27 samples, 0.03%)</title><rect x="98.8593%" y="677" width="0.0281%" height="15" fill="rgb(237,140,51)" fg:x="95076" fg:w="27"/><text x="99.1093%" y="687.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::Instance&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Instance&gt;::init (27 samples, 0.03%)</title><rect x="98.8593%" y="661" width="0.0281%" height="15" fill="rgb(236,157,25)" fg:x="95076" fg:w="27"/><text x="99.1093%" y="671.50"></text></g><g><title>wgpu_hal::vulkan::instance::&lt;impl wgpu_hal::vulkan::Instance&gt;::required_extensions (16 samples, 0.02%)</title><rect x="98.8708%" y="645" width="0.0166%" height="15" fill="rgb(219,209,0)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="655.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties (16 samples, 0.02%)</title><rect x="98.8708%" y="629" width="0.0166%" height="15" fill="rgb(240,116,54)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="639.50"></text></g><g><title>ash::prelude::read_into_uninitialized_vector (16 samples, 0.02%)</title><rect x="98.8708%" y="613" width="0.0166%" height="15" fill="rgb(216,10,36)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="623.50"></text></g><g><title>ash::entry::Entry::enumerate_instance_extension_properties::{{closure}} (16 samples, 0.02%)</title><rect x="98.8708%" y="597" width="0.0166%" height="15" fill="rgb(222,72,44)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="607.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (16 samples, 0.02%)</title><rect x="98.8708%" y="581" width="0.0166%" height="15" fill="rgb(232,159,9)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="591.50"></text></g><g><title>[libvulkan.so.1.3.204] (16 samples, 0.02%)</title><rect x="98.8708%" y="565" width="0.0166%" height="15" fill="rgb(210,39,32)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="575.50"></text></g><g><title>[libvulkan.so.1.3.204] (16 samples, 0.02%)</title><rect x="98.8708%" y="549" width="0.0166%" height="15" fill="rgb(216,194,45)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="559.50"></text></g><g><title>___dlopen (16 samples, 0.02%)</title><rect x="98.8708%" y="533" width="0.0166%" height="15" fill="rgb(218,18,35)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="543.50"></text></g><g><title>dlopen_implementation (16 samples, 0.02%)</title><rect x="98.8708%" y="517" width="0.0166%" height="15" fill="rgb(207,83,51)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="527.50"></text></g><g><title>_dlerror_run (16 samples, 0.02%)</title><rect x="98.8708%" y="501" width="0.0166%" height="15" fill="rgb(225,63,43)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="511.50"></text></g><g><title>__GI__dl_catch_error (16 samples, 0.02%)</title><rect x="98.8708%" y="485" width="0.0166%" height="15" fill="rgb(207,57,36)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="495.50"></text></g><g><title>__GI__dl_catch_exception (16 samples, 0.02%)</title><rect x="98.8708%" y="469" width="0.0166%" height="15" fill="rgb(216,99,33)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="479.50"></text></g><g><title>dlopen_doit (16 samples, 0.02%)</title><rect x="98.8708%" y="453" width="0.0166%" height="15" fill="rgb(225,42,16)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="463.50"></text></g><g><title>_dl_open (16 samples, 0.02%)</title><rect x="98.8708%" y="437" width="0.0166%" height="15" fill="rgb(220,201,45)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="447.50"></text></g><g><title>__GI__dl_catch_exception (16 samples, 0.02%)</title><rect x="98.8708%" y="421" width="0.0166%" height="15" fill="rgb(225,33,4)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="431.50"></text></g><g><title>dl_open_worker (16 samples, 0.02%)</title><rect x="98.8708%" y="405" width="0.0166%" height="15" fill="rgb(224,33,50)" fg:x="95087" fg:w="16"/><text x="99.1208%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.9072%" y="405" width="0.0104%" height="15" fill="rgb(246,198,51)" fg:x="95122" fg:w="10"/><text x="99.1572%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (13 samples, 0.01%)</title><rect x="98.9072%" y="421" width="0.0135%" height="15" fill="rgb(205,22,4)" fg:x="95122" fg:w="13"/><text x="99.1572%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (15 samples, 0.02%)</title><rect x="98.9072%" y="437" width="0.0156%" height="15" fill="rgb(206,3,8)" fg:x="95122" fg:w="15"/><text x="99.1572%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.03%)</title><rect x="98.9051%" y="485" width="0.0270%" height="15" fill="rgb(251,23,15)" fg:x="95120" fg:w="26"/><text x="99.1551%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.03%)</title><rect x="98.9051%" y="469" width="0.0270%" height="15" fill="rgb(252,88,28)" fg:x="95120" fg:w="26"/><text x="99.1551%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (26 samples, 0.03%)</title><rect x="98.9051%" y="453" width="0.0270%" height="15" fill="rgb(212,127,14)" fg:x="95120" fg:w="26"/><text x="99.1551%" y="463.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;A&gt;::create_device (30 samples, 0.03%)</title><rect x="98.9041%" y="741" width="0.0312%" height="15" fill="rgb(247,145,37)" fg:x="95119" fg:w="30"/><text x="99.1541%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::adapter::&lt;impl wgpu_hal::Adapter&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Adapter&gt;::open (30 samples, 0.03%)</title><rect x="98.9041%" y="725" width="0.0312%" height="15" fill="rgb(209,117,53)" fg:x="95119" fg:w="30"/><text x="99.1541%" y="735.50"></text></g><g><title>ash::instance::Instance::create_device (30 samples, 0.03%)</title><rect x="98.9041%" y="709" width="0.0312%" height="15" fill="rgb(212,90,42)" fg:x="95119" fg:w="30"/><text x="99.1541%" y="719.50"></text></g><g><title>vkCreateDevice (30 samples, 0.03%)</title><rect x="98.9041%" y="693" width="0.0312%" height="15" fill="rgb(218,164,37)" fg:x="95119" fg:w="30"/><text x="99.1541%" y="703.50"></text></g><g><title>[libvulkan.so.1.3.204] (30 samples, 0.03%)</title><rect x="98.9041%" y="677" width="0.0312%" height="15" fill="rgb(246,65,34)" fg:x="95119" fg:w="30"/><text x="99.1541%" y="687.50"></text></g><g><title>[libvulkan.so.1.3.204] (30 samples, 0.03%)</title><rect x="98.9041%" y="661" width="0.0312%" height="15" fill="rgb(231,100,33)" fg:x="95119" fg:w="30"/><text x="99.1541%" y="671.50"></text></g><g><title>[libvulkan.so.1.3.204] (29 samples, 0.03%)</title><rect x="98.9051%" y="645" width="0.0302%" height="15" fill="rgb(228,126,14)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="655.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="629" width="0.0302%" height="15" fill="rgb(215,173,21)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="613" width="0.0302%" height="15" fill="rgb(210,6,40)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="597" width="0.0302%" height="15" fill="rgb(212,48,18)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="581" width="0.0302%" height="15" fill="rgb(230,214,11)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="565" width="0.0302%" height="15" fill="rgb(254,105,39)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="549" width="0.0302%" height="15" fill="rgb(245,158,5)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="533" width="0.0302%" height="15" fill="rgb(249,208,11)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="517" width="0.0302%" height="15" fill="rgb(210,39,28)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (29 samples, 0.03%)</title><rect x="98.9051%" y="501" width="0.0302%" height="15" fill="rgb(211,56,53)" fg:x="95120" fg:w="29"/><text x="99.1551%" y="511.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::Device&lt;wgpu_hal::vulkan::Api&gt; for wgpu_hal::vulkan::Device&gt;::exit (14 samples, 0.01%)</title><rect x="98.9488%" y="741" width="0.0146%" height="15" fill="rgb(226,201,30)" fg:x="95162" fg:w="14"/><text x="99.1988%" y="751.50"></text></g><g><title>wgpu_hal::vulkan::device::&lt;impl wgpu_hal::vulkan::DeviceShared&gt;::free_resources (11 samples, 0.01%)</title><rect x="98.9519%" y="725" width="0.0114%" height="15" fill="rgb(239,101,34)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="735.50"></text></g><g><title>ash::device::Device::destroy_device (11 samples, 0.01%)</title><rect x="98.9519%" y="709" width="0.0114%" height="15" fill="rgb(226,209,5)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="719.50"></text></g><g><title>vkDestroyDevice (11 samples, 0.01%)</title><rect x="98.9519%" y="693" width="0.0114%" height="15" fill="rgb(250,105,47)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="703.50"></text></g><g><title>[libGLX_nvidia.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.9519%" y="677" width="0.0114%" height="15" fill="rgb(230,72,3)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.9519%" y="661" width="0.0114%" height="15" fill="rgb(232,218,39)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.9519%" y="645" width="0.0114%" height="15" fill="rgb(248,166,6)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.9519%" y="629" width="0.0114%" height="15" fill="rgb(247,89,20)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (11 samples, 0.01%)</title><rect x="98.9519%" y="613" width="0.0114%" height="15" fill="rgb(248,130,54)" fg:x="95165" fg:w="11"/><text x="99.2019%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.9529%" y="597" width="0.0104%" height="15" fill="rgb(234,196,4)" fg:x="95166" fg:w="10"/><text x="99.2029%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.9529%" y="581" width="0.0104%" height="15" fill="rgb(250,143,31)" fg:x="95166" fg:w="10"/><text x="99.2029%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.9529%" y="565" width="0.0104%" height="15" fill="rgb(211,110,34)" fg:x="95166" fg:w="10"/><text x="99.2029%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (10 samples, 0.01%)</title><rect x="98.9529%" y="549" width="0.0104%" height="15" fill="rgb(215,124,48)" fg:x="95166" fg:w="10"/><text x="99.2029%" y="559.50"></text></g><g><title>[unknown] (93,992 samples, 97.73%)</title><rect x="1.2353%" y="757" width="97.7322%" height="15" fill="rgb(216,46,13)" fg:x="1188" fg:w="93992"/><text x="1.4853%" y="767.50">[unknown]</text></g><g><title>__GI___futex_abstimed_wait_cancelable64 (63 samples, 0.07%)</title><rect x="98.9987%" y="629" width="0.0655%" height="15" fill="rgb(205,184,25)" fg:x="95210" fg:w="63"/><text x="99.2487%" y="639.50"></text></g><g><title>__futex_abstimed_wait_common (63 samples, 0.07%)</title><rect x="98.9987%" y="613" width="0.0655%" height="15" fill="rgb(228,1,10)" fg:x="95210" fg:w="63"/><text x="99.2487%" y="623.50"></text></g><g><title>__futex_abstimed_wait_common64 (63 samples, 0.07%)</title><rect x="98.9987%" y="597" width="0.0655%" height="15" fill="rgb(213,116,27)" fg:x="95210" fg:w="63"/><text x="99.2487%" y="607.50"></text></g><g><title>[unknown] (62 samples, 0.06%)</title><rect x="98.9997%" y="581" width="0.0645%" height="15" fill="rgb(241,95,50)" fg:x="95211" fg:w="62"/><text x="99.2497%" y="591.50"></text></g><g><title>[unknown] (58 samples, 0.06%)</title><rect x="99.0039%" y="565" width="0.0603%" height="15" fill="rgb(238,48,32)" fg:x="95215" fg:w="58"/><text x="99.2539%" y="575.50"></text></g><g><title>[unknown] (58 samples, 0.06%)</title><rect x="99.0039%" y="549" width="0.0603%" height="15" fill="rgb(235,113,49)" fg:x="95215" fg:w="58"/><text x="99.2539%" y="559.50"></text></g><g><title>[unknown] (52 samples, 0.05%)</title><rect x="99.0101%" y="533" width="0.0541%" height="15" fill="rgb(205,127,43)" fg:x="95221" fg:w="52"/><text x="99.2601%" y="543.50"></text></g><g><title>[unknown] (52 samples, 0.05%)</title><rect x="99.0101%" y="517" width="0.0541%" height="15" fill="rgb(250,162,2)" fg:x="95221" fg:w="52"/><text x="99.2601%" y="527.50"></text></g><g><title>[unknown] (50 samples, 0.05%)</title><rect x="99.0122%" y="501" width="0.0520%" height="15" fill="rgb(220,13,41)" fg:x="95223" fg:w="50"/><text x="99.2622%" y="511.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="99.0164%" y="485" width="0.0478%" height="15" fill="rgb(249,221,25)" fg:x="95227" fg:w="46"/><text x="99.2664%" y="495.50"></text></g><g><title>[unknown] (46 samples, 0.05%)</title><rect x="99.0164%" y="469" width="0.0478%" height="15" fill="rgb(215,208,19)" fg:x="95227" fg:w="46"/><text x="99.2664%" y="479.50"></text></g><g><title>[unknown] (42 samples, 0.04%)</title><rect x="99.0205%" y="453" width="0.0437%" height="15" fill="rgb(236,175,2)" fg:x="95231" fg:w="42"/><text x="99.2705%" y="463.50"></text></g><g><title>[unknown] (40 samples, 0.04%)</title><rect x="99.0226%" y="437" width="0.0416%" height="15" fill="rgb(241,52,2)" fg:x="95233" fg:w="40"/><text x="99.2726%" y="447.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.0268%" y="421" width="0.0374%" height="15" fill="rgb(248,140,14)" fg:x="95237" fg:w="36"/><text x="99.2768%" y="431.50"></text></g><g><title>[unknown] (30 samples, 0.03%)</title><rect x="99.0330%" y="405" width="0.0312%" height="15" fill="rgb(253,22,42)" fg:x="95243" fg:w="30"/><text x="99.2830%" y="415.50"></text></g><g><title>[unknown] (29 samples, 0.03%)</title><rect x="99.0340%" y="389" width="0.0302%" height="15" fill="rgb(234,61,47)" fg:x="95244" fg:w="29"/><text x="99.2840%" y="399.50"></text></g><g><title>___pthread_cond_timedwait64 (69 samples, 0.07%)</title><rect x="98.9987%" y="661" width="0.0717%" height="15" fill="rgb(208,226,15)" fg:x="95210" fg:w="69"/><text x="99.2487%" y="671.50"></text></g><g><title>__pthread_cond_wait_common (69 samples, 0.07%)</title><rect x="98.9987%" y="645" width="0.0717%" height="15" fill="rgb(217,221,4)" fg:x="95210" fg:w="69"/><text x="99.2487%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (93 samples, 0.10%)</title><rect x="98.9820%" y="677" width="0.0967%" height="15" fill="rgb(212,174,34)" fg:x="95194" fg:w="93"/><text x="99.2320%" y="687.50"></text></g><g><title>[unknown] (44 samples, 0.05%)</title><rect x="99.0787%" y="661" width="0.0458%" height="15" fill="rgb(253,83,4)" fg:x="95287" fg:w="44"/><text x="99.3287%" y="671.50"></text></g><g><title>[unknown] (34 samples, 0.04%)</title><rect x="99.0891%" y="645" width="0.0354%" height="15" fill="rgb(250,195,49)" fg:x="95297" fg:w="34"/><text x="99.3391%" y="655.50"></text></g><g><title>[unknown] (33 samples, 0.03%)</title><rect x="99.0902%" y="629" width="0.0343%" height="15" fill="rgb(241,192,25)" fg:x="95298" fg:w="33"/><text x="99.3402%" y="639.50"></text></g><g><title>[unknown] (27 samples, 0.03%)</title><rect x="99.0964%" y="613" width="0.0281%" height="15" fill="rgb(208,124,10)" fg:x="95304" fg:w="27"/><text x="99.3464%" y="623.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="99.0995%" y="597" width="0.0250%" height="15" fill="rgb(222,33,0)" fg:x="95307" fg:w="24"/><text x="99.3495%" y="607.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="99.1027%" y="581" width="0.0218%" height="15" fill="rgb(234,209,28)" fg:x="95310" fg:w="21"/><text x="99.3527%" y="591.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="99.1047%" y="565" width="0.0198%" height="15" fill="rgb(224,11,23)" fg:x="95312" fg:w="19"/><text x="99.3547%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.1058%" y="549" width="0.0187%" height="15" fill="rgb(232,99,1)" fg:x="95313" fg:w="18"/><text x="99.3558%" y="559.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.1099%" y="533" width="0.0146%" height="15" fill="rgb(237,95,45)" fg:x="95317" fg:w="14"/><text x="99.3599%" y="543.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.1141%" y="517" width="0.0104%" height="15" fill="rgb(208,109,11)" fg:x="95321" fg:w="10"/><text x="99.3641%" y="527.50"></text></g><g><title>__GI___close (45 samples, 0.05%)</title><rect x="99.0787%" y="677" width="0.0468%" height="15" fill="rgb(216,190,48)" fg:x="95287" fg:w="45"/><text x="99.3287%" y="687.50"></text></g><g><title>__GI___libc_read (267 samples, 0.28%)</title><rect x="99.1255%" y="677" width="0.2776%" height="15" fill="rgb(251,171,36)" fg:x="95332" fg:w="267"/><text x="99.3755%" y="687.50"></text></g><g><title>__GI___libc_read (267 samples, 0.28%)</title><rect x="99.1255%" y="661" width="0.2776%" height="15" fill="rgb(230,62,22)" fg:x="95332" fg:w="267"/><text x="99.3755%" y="671.50"></text></g><g><title>[unknown] (267 samples, 0.28%)</title><rect x="99.1255%" y="645" width="0.2776%" height="15" fill="rgb(225,114,35)" fg:x="95332" fg:w="267"/><text x="99.3755%" y="655.50"></text></g><g><title>[unknown] (260 samples, 0.27%)</title><rect x="99.1328%" y="629" width="0.2703%" height="15" fill="rgb(215,118,42)" fg:x="95339" fg:w="260"/><text x="99.3828%" y="639.50"></text></g><g><title>[unknown] (260 samples, 0.27%)</title><rect x="99.1328%" y="613" width="0.2703%" height="15" fill="rgb(243,119,21)" fg:x="95339" fg:w="260"/><text x="99.3828%" y="623.50"></text></g><g><title>[unknown] (259 samples, 0.27%)</title><rect x="99.1339%" y="597" width="0.2693%" height="15" fill="rgb(252,177,53)" fg:x="95340" fg:w="259"/><text x="99.3839%" y="607.50"></text></g><g><title>[unknown] (258 samples, 0.27%)</title><rect x="99.1349%" y="581" width="0.2683%" height="15" fill="rgb(237,209,29)" fg:x="95341" fg:w="258"/><text x="99.3849%" y="591.50"></text></g><g><title>[unknown] (257 samples, 0.27%)</title><rect x="99.1359%" y="565" width="0.2672%" height="15" fill="rgb(212,65,23)" fg:x="95342" fg:w="257"/><text x="99.3859%" y="575.50"></text></g><g><title>[unknown] (257 samples, 0.27%)</title><rect x="99.1359%" y="549" width="0.2672%" height="15" fill="rgb(230,222,46)" fg:x="95342" fg:w="257"/><text x="99.3859%" y="559.50"></text></g><g><title>[unknown] (256 samples, 0.27%)</title><rect x="99.1370%" y="533" width="0.2662%" height="15" fill="rgb(215,135,32)" fg:x="95343" fg:w="256"/><text x="99.3870%" y="543.50"></text></g><g><title>[unknown] (253 samples, 0.26%)</title><rect x="99.1401%" y="517" width="0.2631%" height="15" fill="rgb(246,101,22)" fg:x="95346" fg:w="253"/><text x="99.3901%" y="527.50"></text></g><g><title>[unknown] (208 samples, 0.22%)</title><rect x="99.1869%" y="501" width="0.2163%" height="15" fill="rgb(206,107,13)" fg:x="95391" fg:w="208"/><text x="99.4369%" y="511.50"></text></g><g><title>[unknown] (103 samples, 0.11%)</title><rect x="99.2961%" y="485" width="0.1071%" height="15" fill="rgb(250,100,44)" fg:x="95496" fg:w="103"/><text x="99.5461%" y="495.50"></text></g><g><title>[unknown] (72 samples, 0.07%)</title><rect x="99.3283%" y="469" width="0.0749%" height="15" fill="rgb(231,147,38)" fg:x="95527" fg:w="72"/><text x="99.5783%" y="479.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.3844%" y="453" width="0.0187%" height="15" fill="rgb(229,8,40)" fg:x="95581" fg:w="18"/><text x="99.6344%" y="463.50"></text></g><g><title>[unknown] (14 samples, 0.01%)</title><rect x="99.3886%" y="437" width="0.0146%" height="15" fill="rgb(221,135,30)" fg:x="95585" fg:w="14"/><text x="99.6386%" y="447.50"></text></g><g><title>[unknown] (138 samples, 0.14%)</title><rect x="99.4073%" y="645" width="0.1435%" height="15" fill="rgb(249,193,18)" fg:x="95603" fg:w="138"/><text x="99.6573%" y="655.50"></text></g><g><title>[unknown] (131 samples, 0.14%)</title><rect x="99.4146%" y="629" width="0.1362%" height="15" fill="rgb(209,133,39)" fg:x="95610" fg:w="131"/><text x="99.6646%" y="639.50"></text></g><g><title>[unknown] (131 samples, 0.14%)</title><rect x="99.4146%" y="613" width="0.1362%" height="15" fill="rgb(232,100,14)" fg:x="95610" fg:w="131"/><text x="99.6646%" y="623.50"></text></g><g><title>[unknown] (125 samples, 0.13%)</title><rect x="99.4208%" y="597" width="0.1300%" height="15" fill="rgb(224,185,1)" fg:x="95616" fg:w="125"/><text x="99.6708%" y="607.50"></text></g><g><title>[unknown] (124 samples, 0.13%)</title><rect x="99.4219%" y="581" width="0.1289%" height="15" fill="rgb(223,139,8)" fg:x="95617" fg:w="124"/><text x="99.6719%" y="591.50"></text></g><g><title>[unknown] (114 samples, 0.12%)</title><rect x="99.4323%" y="565" width="0.1185%" height="15" fill="rgb(232,213,38)" fg:x="95627" fg:w="114"/><text x="99.6823%" y="575.50"></text></g><g><title>[unknown] (109 samples, 0.11%)</title><rect x="99.4375%" y="549" width="0.1133%" height="15" fill="rgb(207,94,22)" fg:x="95632" fg:w="109"/><text x="99.6875%" y="559.50"></text></g><g><title>[unknown] (108 samples, 0.11%)</title><rect x="99.4385%" y="533" width="0.1123%" height="15" fill="rgb(219,183,54)" fg:x="95633" fg:w="108"/><text x="99.6885%" y="543.50"></text></g><g><title>[unknown] (99 samples, 0.10%)</title><rect x="99.4479%" y="517" width="0.1029%" height="15" fill="rgb(216,185,54)" fg:x="95642" fg:w="99"/><text x="99.6979%" y="527.50"></text></g><g><title>[unknown] (93 samples, 0.10%)</title><rect x="99.4541%" y="501" width="0.0967%" height="15" fill="rgb(254,217,39)" fg:x="95648" fg:w="93"/><text x="99.7041%" y="511.50"></text></g><g><title>[unknown] (74 samples, 0.08%)</title><rect x="99.4739%" y="485" width="0.0769%" height="15" fill="rgb(240,178,23)" fg:x="95667" fg:w="74"/><text x="99.7239%" y="495.50"></text></g><g><title>[unknown] (68 samples, 0.07%)</title><rect x="99.4801%" y="469" width="0.0707%" height="15" fill="rgb(218,11,47)" fg:x="95673" fg:w="68"/><text x="99.7301%" y="479.50"></text></g><g><title>[unknown] (65 samples, 0.07%)</title><rect x="99.4832%" y="453" width="0.0676%" height="15" fill="rgb(218,51,51)" fg:x="95676" fg:w="65"/><text x="99.7332%" y="463.50"></text></g><g><title>__GI___nanosleep (146 samples, 0.15%)</title><rect x="99.4032%" y="677" width="0.1518%" height="15" fill="rgb(238,126,27)" fg:x="95599" fg:w="146"/><text x="99.6532%" y="687.50"></text></g><g><title>__GI___clock_nanosleep (145 samples, 0.15%)</title><rect x="99.4042%" y="661" width="0.1508%" height="15" fill="rgb(249,202,22)" fg:x="95600" fg:w="145"/><text x="99.6542%" y="671.50"></text></g><g><title>[unknown] (168 samples, 0.17%)</title><rect x="99.5560%" y="661" width="0.1747%" height="15" fill="rgb(254,195,49)" fg:x="95746" fg:w="168"/><text x="99.8060%" y="671.50"></text></g><g><title>[unknown] (163 samples, 0.17%)</title><rect x="99.5612%" y="645" width="0.1695%" height="15" fill="rgb(208,123,14)" fg:x="95751" fg:w="163"/><text x="99.8112%" y="655.50"></text></g><g><title>[unknown] (163 samples, 0.17%)</title><rect x="99.5612%" y="629" width="0.1695%" height="15" fill="rgb(224,200,8)" fg:x="95751" fg:w="163"/><text x="99.8112%" y="639.50"></text></g><g><title>[unknown] (158 samples, 0.16%)</title><rect x="99.5664%" y="613" width="0.1643%" height="15" fill="rgb(217,61,36)" fg:x="95756" fg:w="158"/><text x="99.8164%" y="623.50"></text></g><g><title>[unknown] (157 samples, 0.16%)</title><rect x="99.5674%" y="597" width="0.1632%" height="15" fill="rgb(206,35,45)" fg:x="95757" fg:w="157"/><text x="99.8174%" y="607.50"></text></g><g><title>[unknown] (155 samples, 0.16%)</title><rect x="99.5695%" y="581" width="0.1612%" height="15" fill="rgb(217,65,33)" fg:x="95759" fg:w="155"/><text x="99.8195%" y="591.50"></text></g><g><title>[unknown] (139 samples, 0.14%)</title><rect x="99.5862%" y="565" width="0.1445%" height="15" fill="rgb(222,158,48)" fg:x="95775" fg:w="139"/><text x="99.8362%" y="575.50"></text></g><g><title>[unknown] (122 samples, 0.13%)</title><rect x="99.6038%" y="549" width="0.1269%" height="15" fill="rgb(254,2,54)" fg:x="95792" fg:w="122"/><text x="99.8538%" y="559.50"></text></g><g><title>[unknown] (99 samples, 0.10%)</title><rect x="99.6278%" y="533" width="0.1029%" height="15" fill="rgb(250,143,38)" fg:x="95815" fg:w="99"/><text x="99.8778%" y="543.50"></text></g><g><title>[unknown] (79 samples, 0.08%)</title><rect x="99.6486%" y="517" width="0.0821%" height="15" fill="rgb(248,25,0)" fg:x="95835" fg:w="79"/><text x="99.8986%" y="527.50"></text></g><g><title>[unknown] (43 samples, 0.04%)</title><rect x="99.6860%" y="501" width="0.0447%" height="15" fill="rgb(206,152,27)" fg:x="95871" fg:w="43"/><text x="99.9360%" y="511.50"></text></g><g><title>[unknown] (40 samples, 0.04%)</title><rect x="99.6891%" y="485" width="0.0416%" height="15" fill="rgb(240,77,30)" fg:x="95874" fg:w="40"/><text x="99.9391%" y="495.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.6933%" y="469" width="0.0374%" height="15" fill="rgb(231,5,3)" fg:x="95878" fg:w="36"/><text x="99.9433%" y="479.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.6933%" y="453" width="0.0374%" height="15" fill="rgb(207,226,32)" fg:x="95878" fg:w="36"/><text x="99.9433%" y="463.50"></text></g><g><title>[unknown] (22 samples, 0.02%)</title><rect x="99.7078%" y="437" width="0.0229%" height="15" fill="rgb(222,207,47)" fg:x="95892" fg:w="22"/><text x="99.9578%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.7193%" y="421" width="0.0114%" height="15" fill="rgb(229,115,45)" fg:x="95903" fg:w="11"/><text x="99.9693%" y="431.50"></text></g><g><title>__libc_open64 (170 samples, 0.18%)</title><rect x="99.5550%" y="677" width="0.1768%" height="15" fill="rgb(224,191,6)" fg:x="95745" fg:w="170"/><text x="99.8050%" y="687.50"></text></g><g><title>__sscanf (41 samples, 0.04%)</title><rect x="99.7317%" y="677" width="0.0426%" height="15" fill="rgb(230,227,24)" fg:x="95915" fg:w="41"/><text x="99.9817%" y="687.50"></text></g><g><title>__vfscanf_internal (33 samples, 0.03%)</title><rect x="99.7401%" y="661" width="0.0343%" height="15" fill="rgb(228,80,19)" fg:x="95923" fg:w="33"/><text x="99.9901%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (778 samples, 0.81%)</title><rect x="98.9696%" y="725" width="0.8090%" height="15" fill="rgb(247,229,0)" fg:x="95182" fg:w="778"/><text x="99.2196%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (778 samples, 0.81%)</title><rect x="98.9696%" y="709" width="0.8090%" height="15" fill="rgb(237,194,15)" fg:x="95182" fg:w="778"/><text x="99.2196%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.530.30.02] (774 samples, 0.80%)</title><rect x="98.9737%" y="693" width="0.8048%" height="15" fill="rgb(219,203,20)" fg:x="95186" fg:w="774"/><text x="99.2237%" y="703.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (18 samples, 0.02%)</title><rect x="99.7827%" y="549" width="0.0187%" height="15" fill="rgb(234,128,8)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="559.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (18 samples, 0.02%)</title><rect x="99.7827%" y="533" width="0.0187%" height="15" fill="rgb(248,202,8)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="543.50"></text></g><g><title>rayon_core::registry::main_loop (18 samples, 0.02%)</title><rect x="99.7827%" y="517" width="0.0187%" height="15" fill="rgb(206,104,37)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.02%)</title><rect x="99.7827%" y="501" width="0.0187%" height="15" fill="rgb(223,8,27)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="511.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.02%)</title><rect x="99.7827%" y="485" width="0.0187%" height="15" fill="rgb(216,217,28)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="495.50"></text></g><g><title>rayon_core::sleep::Sleep::no_work_found (18 samples, 0.02%)</title><rect x="99.7827%" y="469" width="0.0187%" height="15" fill="rgb(249,199,1)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="479.50"></text></g><g><title>rayon_core::sleep::Sleep::sleep (18 samples, 0.02%)</title><rect x="99.7827%" y="453" width="0.0187%" height="15" fill="rgb(240,85,17)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="463.50"></text></g><g><title>std::sync::condvar::Condvar::wait (18 samples, 0.02%)</title><rect x="99.7827%" y="437" width="0.0187%" height="15" fill="rgb(206,108,45)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="447.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait (18 samples, 0.02%)</title><rect x="99.7827%" y="421" width="0.0187%" height="15" fill="rgb(245,210,41)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="431.50"></text></g><g><title>std::sys::unix::locks::futex_condvar::Condvar::wait_optional_timeout (18 samples, 0.02%)</title><rect x="99.7827%" y="405" width="0.0187%" height="15" fill="rgb(206,13,37)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="415.50"></text></g><g><title>std::sys::unix::futex::futex_wait (18 samples, 0.02%)</title><rect x="99.7827%" y="389" width="0.0187%" height="15" fill="rgb(250,61,18)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="399.50"></text></g><g><title>syscall (18 samples, 0.02%)</title><rect x="99.7827%" y="373" width="0.0187%" height="15" fill="rgb(235,172,48)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="383.50"></text></g><g><title>[unknown] (18 samples, 0.02%)</title><rect x="99.7827%" y="357" width="0.0187%" height="15" fill="rgb(249,201,17)" fg:x="95964" fg:w="18"/><text x="100.0327%" y="367.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="341" width="0.0177%" height="15" fill="rgb(219,208,6)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="351.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="325" width="0.0177%" height="15" fill="rgb(248,31,23)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="335.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="309" width="0.0177%" height="15" fill="rgb(245,15,42)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="319.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="293" width="0.0177%" height="15" fill="rgb(222,217,39)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="303.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="277" width="0.0177%" height="15" fill="rgb(210,219,27)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="287.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="261" width="0.0177%" height="15" fill="rgb(252,166,36)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="271.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="245" width="0.0177%" height="15" fill="rgb(245,132,34)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="255.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="229" width="0.0177%" height="15" fill="rgb(236,54,3)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="239.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.7837%" y="213" width="0.0177%" height="15" fill="rgb(241,173,43)" fg:x="95965" fg:w="17"/><text x="100.0337%" y="223.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.7848%" y="197" width="0.0166%" height="15" fill="rgb(215,190,9)" fg:x="95966" fg:w="16"/><text x="100.0348%" y="207.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.7848%" y="181" width="0.0166%" height="15" fill="rgb(242,101,16)" fg:x="95966" fg:w="16"/><text x="100.0348%" y="191.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="99.7858%" y="165" width="0.0156%" height="15" fill="rgb(223,190,21)" fg:x="95967" fg:w="15"/><text x="100.0358%" y="175.50"></text></g><g><title>std::thread::sleep (23 samples, 0.02%)</title><rect x="99.8035%" y="517" width="0.0239%" height="15" fill="rgb(215,228,25)" fg:x="95984" fg:w="23"/><text x="100.0535%" y="527.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (23 samples, 0.02%)</title><rect x="99.8035%" y="501" width="0.0239%" height="15" fill="rgb(225,36,22)" fg:x="95984" fg:w="23"/><text x="100.0535%" y="511.50"></text></g><g><title>__GI___nanosleep (23 samples, 0.02%)</title><rect x="99.8035%" y="485" width="0.0239%" height="15" fill="rgb(251,106,46)" fg:x="95984" fg:w="23"/><text x="100.0535%" y="495.50"></text></g><g><title>__GI___clock_nanosleep (23 samples, 0.02%)</title><rect x="99.8035%" y="469" width="0.0239%" height="15" fill="rgb(208,90,1)" fg:x="95984" fg:w="23"/><text x="100.0535%" y="479.50"></text></g><g><title>[unknown] (23 samples, 0.02%)</title><rect x="99.8035%" y="453" width="0.0239%" height="15" fill="rgb(243,10,4)" fg:x="95984" fg:w="23"/><text x="100.0535%" y="463.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="99.8056%" y="437" width="0.0218%" height="15" fill="rgb(212,137,27)" fg:x="95986" fg:w="21"/><text x="100.0556%" y="447.50"></text></g><g><title>[unknown] (21 samples, 0.02%)</title><rect x="99.8056%" y="421" width="0.0218%" height="15" fill="rgb(231,220,49)" fg:x="95986" fg:w="21"/><text x="100.0556%" y="431.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.8066%" y="405" width="0.0208%" height="15" fill="rgb(237,96,20)" fg:x="95987" fg:w="20"/><text x="100.0566%" y="415.50"></text></g><g><title>[unknown] (20 samples, 0.02%)</title><rect x="99.8066%" y="389" width="0.0208%" height="15" fill="rgb(239,229,30)" fg:x="95987" fg:w="20"/><text x="100.0566%" y="399.50"></text></g><g><title>[unknown] (19 samples, 0.02%)</title><rect x="99.8076%" y="373" width="0.0198%" height="15" fill="rgb(219,65,33)" fg:x="95988" fg:w="19"/><text x="100.0576%" y="383.50"></text></g><g><title>[unknown] (17 samples, 0.02%)</title><rect x="99.8097%" y="357" width="0.0177%" height="15" fill="rgb(243,134,7)" fg:x="95990" fg:w="17"/><text x="100.0597%" y="367.50"></text></g><g><title>[unknown] (16 samples, 0.02%)</title><rect x="99.8108%" y="341" width="0.0166%" height="15" fill="rgb(216,177,54)" fg:x="95991" fg:w="16"/><text x="100.0608%" y="351.50"></text></g><g><title>[unknown] (15 samples, 0.02%)</title><rect x="99.8118%" y="325" width="0.0156%" height="15" fill="rgb(211,160,20)" fg:x="95992" fg:w="15"/><text x="100.0618%" y="335.50"></text></g><g><title>[unknown] (13 samples, 0.01%)</title><rect x="99.8139%" y="309" width="0.0135%" height="15" fill="rgb(239,85,39)" fg:x="95994" fg:w="13"/><text x="100.0639%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.01%)</title><rect x="99.8149%" y="293" width="0.0125%" height="15" fill="rgb(232,125,22)" fg:x="95995" fg:w="12"/><text x="100.0649%" y="303.50"></text></g><g><title>[unknown] (11 samples, 0.01%)</title><rect x="99.8160%" y="277" width="0.0114%" height="15" fill="rgb(244,57,34)" fg:x="95996" fg:w="11"/><text x="100.0660%" y="287.50"></text></g><g><title>[unknown] (10 samples, 0.01%)</title><rect x="99.8170%" y="261" width="0.0104%" height="15" fill="rgb(214,203,32)" fg:x="95997" fg:w="10"/><text x="100.0670%" y="271.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (44 samples, 0.05%)</title><rect x="99.7827%" y="709" width="0.0458%" height="15" fill="rgb(207,58,43)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (44 samples, 0.05%)</title><rect x="99.7827%" y="693" width="0.0458%" height="15" fill="rgb(215,193,15)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (44 samples, 0.05%)</title><rect x="99.7827%" y="677" width="0.0458%" height="15" fill="rgb(232,15,44)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="687.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (44 samples, 0.05%)</title><rect x="99.7827%" y="661" width="0.0458%" height="15" fill="rgb(212,3,48)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="671.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.05%)</title><rect x="99.7827%" y="645" width="0.0458%" height="15" fill="rgb(218,128,7)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="655.50"></text></g><g><title>std::panicking::try (44 samples, 0.05%)</title><rect x="99.7827%" y="629" width="0.0458%" height="15" fill="rgb(226,216,39)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="639.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.05%)</title><rect x="99.7827%" y="613" width="0.0458%" height="15" fill="rgb(243,47,51)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="623.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.05%)</title><rect x="99.7827%" y="597" width="0.0458%" height="15" fill="rgb(241,183,40)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="607.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (44 samples, 0.05%)</title><rect x="99.7827%" y="581" width="0.0458%" height="15" fill="rgb(231,217,32)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="591.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (44 samples, 0.05%)</title><rect x="99.7827%" y="565" width="0.0458%" height="15" fill="rgb(229,61,38)" fg:x="95964" fg:w="44"/><text x="100.0327%" y="575.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (26 samples, 0.03%)</title><rect x="99.8014%" y="549" width="0.0270%" height="15" fill="rgb(225,210,5)" fg:x="95982" fg:w="26"/><text x="100.0514%" y="559.50"></text></g><g><title>gilrs::ff::server::run (26 samples, 0.03%)</title><rect x="99.8014%" y="533" width="0.0270%" height="15" fill="rgb(231,79,45)" fg:x="95982" fg:w="26"/><text x="100.0514%" y="543.50"></text></g><g><title>__clone3 (832 samples, 0.87%)</title><rect x="98.9685%" y="757" width="0.8651%" height="15" fill="rgb(224,100,7)" fg:x="95181" fg:w="832"/><text x="99.2185%" y="767.50"></text></g><g><title>start_thread (831 samples, 0.86%)</title><rect x="98.9696%" y="741" width="0.8641%" height="15" fill="rgb(241,198,18)" fg:x="95182" fg:w="831"/><text x="99.2196%" y="751.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (49 samples, 0.05%)</title><rect x="99.7827%" y="725" width="0.0509%" height="15" fill="rgb(252,97,53)" fg:x="95964" fg:w="49"/><text x="100.0327%" y="735.50"></text></g><g><title>ggez::event::run (16 samples, 0.02%)</title><rect x="99.8336%" y="469" width="0.0166%" height="15" fill="rgb(220,88,7)" fg:x="96013" fg:w="16"/><text x="100.0836%" y="479.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="99.8336%" y="453" width="0.0166%" height="15" fill="rgb(213,176,14)" fg:x="96013" fg:w="16"/><text x="100.0836%" y="463.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="99.8336%" y="437" width="0.0166%" height="15" fill="rgb(246,73,7)" fg:x="96013" fg:w="16"/><text x="100.0836%" y="447.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (16 samples, 0.02%)</title><rect x="99.8336%" y="421" width="0.0166%" height="15" fill="rgb(245,64,36)" fg:x="96013" fg:w="16"/><text x="100.0836%" y="431.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (16 samples, 0.02%)</title><rect x="99.8336%" y="405" width="0.0166%" height="15" fill="rgb(245,80,10)" fg:x="96013" fg:w="16"/><text x="100.0836%" y="415.50"></text></g><g><title>__libc_start_main_impl (18 samples, 0.02%)</title><rect x="99.8336%" y="741" width="0.0187%" height="15" fill="rgb(232,107,50)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="751.50"></text></g><g><title>__libc_start_call_main (18 samples, 0.02%)</title><rect x="99.8336%" y="725" width="0.0187%" height="15" fill="rgb(253,3,0)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="735.50"></text></g><g><title>main (18 samples, 0.02%)</title><rect x="99.8336%" y="709" width="0.0187%" height="15" fill="rgb(212,99,53)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="719.50"></text></g><g><title>std::rt::lang_start_internal (18 samples, 0.02%)</title><rect x="99.8336%" y="693" width="0.0187%" height="15" fill="rgb(249,111,54)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="703.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.8336%" y="677" width="0.0187%" height="15" fill="rgb(249,55,30)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="687.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.8336%" y="661" width="0.0187%" height="15" fill="rgb(237,47,42)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="671.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.8336%" y="645" width="0.0187%" height="15" fill="rgb(211,20,18)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="655.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (18 samples, 0.02%)</title><rect x="99.8336%" y="629" width="0.0187%" height="15" fill="rgb(231,203,46)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="639.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.02%)</title><rect x="99.8336%" y="613" width="0.0187%" height="15" fill="rgb(237,142,3)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="623.50"></text></g><g><title>std::panicking::try (18 samples, 0.02%)</title><rect x="99.8336%" y="597" width="0.0187%" height="15" fill="rgb(241,107,1)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="607.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.02%)</title><rect x="99.8336%" y="581" width="0.0187%" height="15" fill="rgb(229,83,13)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18 samples, 0.02%)</title><rect x="99.8336%" y="565" width="0.0187%" height="15" fill="rgb(241,91,40)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="575.50"></text></g><g><title>std::rt::lang_start::{{closure}} (18 samples, 0.02%)</title><rect x="99.8336%" y="549" width="0.0187%" height="15" fill="rgb(225,3,45)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="559.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.02%)</title><rect x="99.8336%" y="533" width="0.0187%" height="15" fill="rgb(244,223,14)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.02%)</title><rect x="99.8336%" y="517" width="0.0187%" height="15" fill="rgb(224,124,37)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="527.50"></text></g><g><title>neuralang::main (18 samples, 0.02%)</title><rect x="99.8336%" y="501" width="0.0187%" height="15" fill="rgb(251,171,30)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="511.50"></text></g><g><title>neuralang::run (18 samples, 0.02%)</title><rect x="99.8336%" y="485" width="0.0187%" height="15" fill="rgb(236,46,54)" fg:x="96013" fg:w="18"/><text x="100.0836%" y="495.50"></text></g><g><title>_start (19 samples, 0.02%)</title><rect x="99.8336%" y="757" width="0.0198%" height="15" fill="rgb(245,213,5)" fg:x="96013" fg:w="19"/><text x="100.0836%" y="767.50"></text></g><g><title>neuralang (95,842 samples, 99.66%)</title><rect x="0.2048%" y="773" width="99.6558%" height="15" fill="rgb(230,144,27)" fg:x="197" fg:w="95842"/><text x="0.4548%" y="783.50">neuralang</text></g><g><title>[libpulse.so.0.24.1] (14 samples, 0.01%)</title><rect x="99.8804%" y="549" width="0.0146%" height="15" fill="rgb(220,86,6)" fg:x="96058" fg:w="14"/><text x="100.1304%" y="559.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (13 samples, 0.01%)</title><rect x="99.8815%" y="533" width="0.0135%" height="15" fill="rgb(240,20,13)" fg:x="96059" fg:w="13"/><text x="100.1315%" y="543.50"></text></g><g><title>[libpulse.so.0.24.1] (18 samples, 0.02%)</title><rect x="99.8773%" y="581" width="0.0187%" height="15" fill="rgb(217,89,34)" fg:x="96055" fg:w="18"/><text x="100.1273%" y="591.50"></text></g><g><title>pa_pdispatch_run (16 samples, 0.02%)</title><rect x="99.8794%" y="565" width="0.0166%" height="15" fill="rgb(229,13,5)" fg:x="96057" fg:w="16"/><text x="100.1294%" y="575.50"></text></g><g><title>[libpulsecommon-15.99.so] (22 samples, 0.02%)</title><rect x="99.8763%" y="613" width="0.0229%" height="15" fill="rgb(244,67,35)" fg:x="96054" fg:w="22"/><text x="100.1263%" y="623.50"></text></g><g><title>[libpulsecommon-15.99.so] (22 samples, 0.02%)</title><rect x="99.8763%" y="597" width="0.0229%" height="15" fill="rgb(221,40,2)" fg:x="96054" fg:w="22"/><text x="100.1263%" y="607.50"></text></g><g><title>[libpulsecommon-15.99.so] (37 samples, 0.04%)</title><rect x="99.8752%" y="629" width="0.0385%" height="15" fill="rgb(237,157,21)" fg:x="96053" fg:w="37"/><text x="100.1252%" y="639.50"></text></g><g><title>[libpulsecommon-15.99.so] (45 samples, 0.05%)</title><rect x="99.8752%" y="645" width="0.0468%" height="15" fill="rgb(222,94,11)" fg:x="96053" fg:w="45"/><text x="100.1252%" y="655.50"></text></g><g><title>pa_mainloop_dispatch (49 samples, 0.05%)</title><rect x="99.8721%" y="661" width="0.0509%" height="15" fill="rgb(249,113,6)" fg:x="96050" fg:w="49"/><text x="100.1221%" y="671.50"></text></g><g><title>__GI___poll (64 samples, 0.07%)</title><rect x="99.9231%" y="629" width="0.0665%" height="15" fill="rgb(238,137,36)" fg:x="96099" fg:w="64"/><text x="100.1731%" y="639.50"></text></g><g><title>[unknown] (63 samples, 0.07%)</title><rect x="99.9241%" y="613" width="0.0655%" height="15" fill="rgb(210,102,26)" fg:x="96100" fg:w="63"/><text x="100.1741%" y="623.50"></text></g><g><title>[unknown] (61 samples, 0.06%)</title><rect x="99.9262%" y="597" width="0.0634%" height="15" fill="rgb(218,30,30)" fg:x="96102" fg:w="61"/><text x="100.1762%" y="607.50"></text></g><g><title>[unknown] (60 samples, 0.06%)</title><rect x="99.9272%" y="581" width="0.0624%" height="15" fill="rgb(214,67,26)" fg:x="96103" fg:w="60"/><text x="100.1772%" y="591.50"></text></g><g><title>[unknown] (59 samples, 0.06%)</title><rect x="99.9283%" y="565" width="0.0613%" height="15" fill="rgb(251,9,53)" fg:x="96104" fg:w="59"/><text x="100.1783%" y="575.50"></text></g><g><title>[unknown] (56 samples, 0.06%)</title><rect x="99.9314%" y="549" width="0.0582%" height="15" fill="rgb(228,204,25)" fg:x="96107" fg:w="56"/><text x="100.1814%" y="559.50"></text></g><g><title>[unknown] (55 samples, 0.06%)</title><rect x="99.9324%" y="533" width="0.0572%" height="15" fill="rgb(207,153,8)" fg:x="96108" fg:w="55"/><text x="100.1824%" y="543.50"></text></g><g><title>[unknown] (49 samples, 0.05%)</title><rect x="99.9387%" y="517" width="0.0509%" height="15" fill="rgb(242,9,16)" fg:x="96114" fg:w="49"/><text x="100.1887%" y="527.50"></text></g><g><title>[unknown] (44 samples, 0.05%)</title><rect x="99.9439%" y="501" width="0.0458%" height="15" fill="rgb(217,211,10)" fg:x="96119" fg:w="44"/><text x="100.1939%" y="511.50"></text></g><g><title>[unknown] (43 samples, 0.04%)</title><rect x="99.9449%" y="485" width="0.0447%" height="15" fill="rgb(219,228,52)" fg:x="96120" fg:w="43"/><text x="100.1949%" y="495.50"></text></g><g><title>[unknown] (42 samples, 0.04%)</title><rect x="99.9459%" y="469" width="0.0437%" height="15" fill="rgb(231,92,29)" fg:x="96121" fg:w="42"/><text x="100.1959%" y="479.50"></text></g><g><title>[unknown] (41 samples, 0.04%)</title><rect x="99.9470%" y="453" width="0.0426%" height="15" fill="rgb(232,8,23)" fg:x="96122" fg:w="41"/><text x="100.1970%" y="463.50"></text></g><g><title>[unknown] (37 samples, 0.04%)</title><rect x="99.9511%" y="437" width="0.0385%" height="15" fill="rgb(216,211,34)" fg:x="96126" fg:w="37"/><text x="100.2011%" y="447.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.9522%" y="421" width="0.0374%" height="15" fill="rgb(236,151,0)" fg:x="96127" fg:w="36"/><text x="100.2022%" y="431.50"></text></g><g><title>[unknown] (36 samples, 0.04%)</title><rect x="99.9522%" y="405" width="0.0374%" height="15" fill="rgb(209,168,3)" fg:x="96127" fg:w="36"/><text x="100.2022%" y="415.50"></text></g><g><title>pa_mainloop_poll (70 samples, 0.07%)</title><rect x="99.9231%" y="661" width="0.0728%" height="15" fill="rgb(208,129,28)" fg:x="96099" fg:w="70"/><text x="100.1731%" y="671.50"></text></g><g><title>[libpulse.so.0.24.1] (70 samples, 0.07%)</title><rect x="99.9231%" y="645" width="0.0728%" height="15" fill="rgb(229,78,22)" fg:x="96099" fg:w="70"/><text x="100.1731%" y="655.50"></text></g><g><title>threaded-ml (128 samples, 0.13%)</title><rect x="99.8659%" y="773" width="0.1331%" height="15" fill="rgb(228,187,13)" fg:x="96044" fg:w="128"/><text x="100.1159%" y="783.50"></text></g><g><title>__clone3 (122 samples, 0.13%)</title><rect x="99.8721%" y="757" width="0.1269%" height="15" fill="rgb(240,119,24)" fg:x="96050" fg:w="122"/><text x="100.1221%" y="767.50"></text></g><g><title>start_thread (122 samples, 0.13%)</title><rect x="99.8721%" y="741" width="0.1269%" height="15" fill="rgb(209,194,42)" fg:x="96050" fg:w="122"/><text x="100.1221%" y="751.50"></text></g><g><title>[libpulsecommon-15.99.so] (122 samples, 0.13%)</title><rect x="99.8721%" y="725" width="0.1269%" height="15" fill="rgb(247,200,46)" fg:x="96050" fg:w="122"/><text x="100.1221%" y="735.50"></text></g><g><title>[libpulse.so.0.24.1] (122 samples, 0.13%)</title><rect x="99.8721%" y="709" width="0.1269%" height="15" fill="rgb(218,76,16)" fg:x="96050" fg:w="122"/><text x="100.1221%" y="719.50"></text></g><g><title>pa_mainloop_run (122 samples, 0.13%)</title><rect x="99.8721%" y="693" width="0.1269%" height="15" fill="rgb(225,21,48)" fg:x="96050" fg:w="122"/><text x="100.1221%" y="703.50"></text></g><g><title>pa_mainloop_iterate (122 samples, 0.13%)</title><rect x="99.8721%" y="677" width="0.1269%" height="15" fill="rgb(239,223,50)" fg:x="96050" fg:w="122"/><text x="100.1221%" y="687.50"></text></g><g><title>all (96,173 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(244,45,21)" fg:x="0" fg:w="96173"/><text x="0.2500%" y="799.50"></text></g></svg></svg>